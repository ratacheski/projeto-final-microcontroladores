

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 07 19:05:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  001920                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _s
    92  001920  0039               	dw	57
    93                           
    94                           ;initializer for _m
    95  001922  003B               	dw	59
    96                           
    97                           	psect	idataBANK0
    98  00190E                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for stoa@F1133
   102  00190E  28                 	db	40
   103  00190F  6E                 	db	110
   104  001910  75                 	db	117
   105  001911  6C                 	db	108
   106  001912  6C                 	db	108
   107  001913  29                 	db	41
   108  001914  00                 	db	0
   109                           
   110                           ;initializer for _contagem
   111  001915  2710               	dw	10000
   112  001917  0000               	dw	0
   113  0000                     _OSCCON	set	4051
   114  0000                     _TRISE	set	3990
   115  0000                     _TRISD	set	3989
   116  0000                     _TMR0L	set	4054
   117  0000                     _TMR0H	set	4055
   118  0000                     _TMR0IE	set	32661
   119  0000                     _GIE	set	32663
   120  0000                     _TMR0ON	set	32431
   121  0000                     _PSA	set	32427
   122  0000                     _T0CS	set	32429
   123  0000                     _T08BIT	set	32430
   124  0000                     _TMR0IF	set	32658
   125  0000                     _LATE1	set	31849
   126  0000                     _LATE0	set	31848
   127  0000                     _LATD7	set	31847
   128  0000                     _LATD6	set	31846
   129  0000                     _LATD5	set	31845
   130  0000                     _LATD4	set	31844
   131                           
   132                           	psect	smallconst
   133  000800                     __psmallconst:
   134                           	callstack 0
   135  000800  00                 	db	0
   136  000801                     STR_5:
   137  000801  20                 	db	32
   138  000802  20                 	db	32
   139  000803  20                 	db	32
   140  000804  20                 	db	32
   141  000805  25                 	db	37
   142  000806  73                 	db	115	;'s'
   143  000807  25                 	db	37
   144  000808  75                 	db	117	;'u'
   145  000809  3A                 	db	58	;':'
   146  00080A  25                 	db	37
   147  00080B  73                 	db	115	;'s'
   148  00080C  25                 	db	37
   149  00080D  75                 	db	117	;'u'
   150  00080E  3A                 	db	58	;':'
   151  00080F  25                 	db	37
   152  000810  73                 	db	115	;'s'
   153  000811  25                 	db	37
   154  000812  75                 	db	117	;'u'
   155  000813  20                 	db	32
   156  000814  20                 	db	32
   157  000815  20                 	db	32
   158  000816  20                 	db	32
   159  000817  00                 	db	0
   160  000818                     STR_6:
   161  000818  20                 	db	32
   162  000819  20                 	db	32
   163  00081A  20                 	db	32
   164  00081B  20                 	db	32
   165  00081C  20                 	db	32
   166  00081D  54                 	db	84	;'T'
   167  00081E  49                 	db	73	;'I'
   168  00081F  4D                 	db	77	;'M'
   169  000820  45                 	db	69	;'E'
   170  000821  52                 	db	82	;'R'
   171  000822  20                 	db	32
   172  000823  20                 	db	32
   173  000824  20                 	db	32
   174  000825  20                 	db	32
   175  000826  20                 	db	32
   176  000827  20                 	db	32
   177  000828  00                 	db	0
   178  000829                     STR_2:
   179  000829  30                 	db	48	;'0'
   180  00082A  00                 	db	0
   181  00082B  00                 	db	0	; dummy byte at the end
   182  0000                     
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186  001628                     __pcinit:
   187                           	callstack 0
   188  001628                     start_initialization:
   189                           	callstack 0
   190  001628                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Initialize objects allocated to BANK0 (11 bytes)
   194                           ; load TBLPTR registers with __pidataBANK0
   195  001628  0E0E               	movlw	low __pidataBANK0
   196  00162A  6EF6               	movwf	tblptrl,c
   197  00162C  0E19               	movlw	high __pidataBANK0
   198  00162E  6EF7               	movwf	tblptrh,c
   199  001630  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   200  001632  6EF8               	movwf	tblptru,c
   201  001634  EE00  F0CE         	lfsr	0,__pdataBANK0
   202  001638  EE10 F00B          	lfsr	1,11
   203  00163C                     copy_data0:
   204  00163C  0009               	tblrd		*+
   205  00163E  CFF5 FFEE          	movff	tablat,postinc0
   206  001642  50E5               	movf	postdec1,w,c
   207  001644  50E1               	movf	fsr1l,w,c
   208  001646  E1FA               	bnz	copy_data0
   209                           
   210                           ; Initialize objects allocated to COMRAM (4 bytes)
   211                           ; load TBLPTR registers with __pidataCOMRAM
   212  001648  0E20               	movlw	low __pidataCOMRAM
   213  00164A  6EF6               	movwf	tblptrl,c
   214  00164C  0E19               	movlw	high __pidataCOMRAM
   215  00164E  6EF7               	movwf	tblptrh,c
   216  001650  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   217  001652  6EF8               	movwf	tblptru,c
   218  001654  EE00  F058         	lfsr	0,__pdataCOMRAM
   219  001658  EE10 F004          	lfsr	1,4
   220  00165C                     copy_data1:
   221  00165C  0009               	tblrd		*+
   222  00165E  CFF5 FFEE          	movff	tablat,postinc0
   223  001662  50E5               	movf	postdec1,w,c
   224  001664  50E1               	movf	fsr1l,w,c
   225  001666  E1FA               	bnz	copy_data1
   226                           
   227                           ; Clear objects allocated to BANK0 (64 bytes)
   228  001668  EE00  F060         	lfsr	0,__pbssBANK0
   229  00166C  0E40               	movlw	64
   230  00166E                     clear_0:
   231  00166E  6AEE               	clrf	postinc0,c
   232  001670  06E8               	decf	wreg,f,c
   233  001672  E1FD               	bnz	clear_0
   234                           
   235                           ; Clear objects allocated to COMRAM (2 bytes)
   236  001674  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   237  001676  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   238  001678                     end_of_initialization:
   239                           	callstack 0
   240  001678                     __end_of__initialization:
   241                           	callstack 0
   242  001678  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   243  00167A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   244  00167C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245  00167E  6EF8               	movwf	tblptru,c
   246  001680  0100               	movlb	0
   247  001682  EF03  F00C         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMRAM
   250  00005C                     __pbssCOMRAM:
   251                           	callstack 0
   252  00005C                     _flags:
   253                           	callstack 0
   254  00005C                     	ds	2
   255                           
   256                           	psect	dataCOMRAM
   257  000058                     __pdataCOMRAM:
   258                           	callstack 0
   259  000058                     _s:
   260                           	callstack 0
   261  000058                     	ds	2
   262  00005A                     _m:
   263                           	callstack 0
   264  00005A                     	ds	2
   265                           
   266                           	psect	bssBANK0
   267  000060                     __pbssBANK0:
   268                           	callstack 0
   269  000060                     _nout:
   270                           	callstack 0
   271  000060                     	ds	2
   272  000062                     _width:
   273                           	callstack 0
   274  000062                     	ds	2
   275  000064                     _prec:
   276                           	callstack 0
   277  000064                     	ds	2
   278  000066                     _s0:
   279                           	callstack 0
   280  000066                     	ds	2
   281  000068                     _m0:
   282                           	callstack 0
   283  000068                     	ds	2
   284  00006A                     _h0:
   285                           	callstack 0
   286  00006A                     	ds	2
   287  00006C                     _counter:
   288                           	callstack 0
   289  00006C                     	ds	2
   290  00006E                     _h:
   291                           	callstack 0
   292  00006E                     	ds	2
   293  000070                     _dbuf:
   294                           	callstack 0
   295  000070                     	ds	32
   296  000090                     _tx_string:
   297                           	callstack 0
   298  000090                     	ds	16
   299                           
   300                           	psect	dataBANK0
   301  0000CE                     __pdataBANK0:
   302                           	callstack 0
   303  0000CE                     stoa@F1133:
   304                           	callstack 0
   305  0000CE                     	ds	7
   306  0000D5                     _contagem:
   307                           	callstack 0
   308  0000D5                     	ds	4
   309                           
   310                           	psect	cstackBANK0
   311  0000A0                     __pcstackBANK0:
   312                           	callstack 0
   313  0000A0                     ?_sprintf:
   314                           	callstack 0
   315  0000A0                     sprintf@s:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x0
   319  0000A0                     	ds	2
   320  0000A2                     sprintf@fmt:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x2
   324  0000A2                     	ds	14
   325  0000B0                     sprintf@ap:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x10
   329  0000B0                     	ds	2
   330  0000B2                     sprintf@f:
   331                           	callstack 0
   332                           
   333                           ; 6 bytes @ 0x12
   334  0000B2                     	ds	6
   335  0000B8                     ??_timer:
   336                           
   337                           ; 1 bytes @ 0x18
   338  0000B8                     	ds	12
   339  0000C4                     ??_setup_tmr0:
   340  0000C4                     Lcd_Port@a:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x24
   344  0000C4                     	ds	1
   345  0000C5                     ??_Lcd_Cmd:
   346  0000C5                     Lcd_Write_Char@temp:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x25
   350  0000C5                     	ds	1
   351  0000C6                     Lcd_Cmd@a:
   352                           	callstack 0
   353  0000C6                     Lcd_Write_Char@y:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x26
   357  0000C6                     	ds	1
   358  0000C7                     ??_Lcd_Init:
   359  0000C7                     Lcd_Set_Cursor@b:
   360                           	callstack 0
   361  0000C7                     Lcd_Write_Char@a:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x27
   365  0000C7                     	ds	1
   366  0000C8                     Lcd_Set_Cursor@a:
   367                           	callstack 0
   368  0000C8                     Lcd_Write_String@a:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x28
   372  0000C8                     	ds	1
   373  0000C9                     Lcd_Set_Cursor@z:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x29
   377  0000C9                     	ds	1
   378  0000CA                     ??_Lcd_Write_String:
   379  0000CA                     Lcd_Set_Cursor@y:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x2A
   383  0000CA                     	ds	1
   384  0000CB                     Lcd_Set_Cursor@temp:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x2B
   388  0000CB                     	ds	1
   389  0000CC                     Lcd_Write_String@i:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x2C
   393  0000CC                     	ds	2
   394  0000CE                     
   395                           ; 1 bytes @ 0x2E
   396                           
   397                           	psect	cstackCOMRAM
   398  000001                     __pcstackCOMRAM:
   399                           	callstack 0
   400  000001                     ?_strlen:
   401                           	callstack 0
   402  000001                     ?___lodiv:
   403                           	callstack 0
   404  000001                     ?___lomod:
   405                           	callstack 0
   406  000001                     i2Lcd_Port@a:
   407                           	callstack 0
   408  000001                     fputc@c:
   409                           	callstack 0
   410  000001                     strlen@s:
   411                           	callstack 0
   412  000001                     ___lodiv@dividend:
   413                           	callstack 0
   414  000001                     ___lomod@dividend:
   415                           	callstack 0
   416                           
   417                           ; 8 bytes @ 0x0
   418  000001                     	ds	1
   419  000002                     ??i2_Lcd_Cmd:
   420  000002                     i2Lcd_Write_Char@temp:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x1
   424  000002                     	ds	1
   425  000003                     i2Lcd_Cmd@a:
   426                           	callstack 0
   427  000003                     i2Lcd_Write_Char@y:
   428                           	callstack 0
   429  000003                     fputc@fp:
   430                           	callstack 0
   431  000003                     strlen@a:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x2
   435  000003                     	ds	1
   436  000004                     i2Lcd_Set_Cursor@b:
   437                           	callstack 0
   438  000004                     i2Lcd_Write_Char@a:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x3
   442  000004                     	ds	1
   443  000005                     ??_fputc:
   444  000005                     i2Lcd_Set_Cursor@a:
   445                           	callstack 0
   446  000005                     i2Lcd_Write_String@a:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x4
   450  000005                     	ds	1
   451  000006                     i2Lcd_Set_Cursor@z:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x5
   455  000006                     	ds	1
   456  000007                     ??i2_Lcd_Write_String:
   457  000007                     i2Lcd_Set_Cursor@y:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x6
   461  000007                     	ds	1
   462  000008                     i2Lcd_Set_Cursor@temp:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x7
   466  000008                     	ds	1
   467  000009                     i2Lcd_Write_String@i:
   468                           	callstack 0
   469  000009                     ___lodiv@divisor:
   470                           	callstack 0
   471  000009                     ___lomod@divisor:
   472                           	callstack 0
   473                           
   474                           ; 8 bytes @ 0x8
   475  000009                     	ds	1
   476  00000A                     ?_stoa:
   477                           	callstack 0
   478  00000A                     stoa@fp:
   479                           	callstack 0
   480  00000A                     fputs@s:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x9
   484  00000A                     	ds	2
   485  00000C                     stoa@s:
   486                           	callstack 0
   487  00000C                     fputs@fp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0xB
   491  00000C                     	ds	2
   492  00000E                     ??_stoa:
   493  00000E                     fputs@c:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xD
   497  00000E                     	ds	1
   498  00000F                     fputs@i:
   499                           	callstack 0
   500  00000F                     stoa@nuls:
   501                           	callstack 0
   502                           
   503                           ; 7 bytes @ 0xE
   504  00000F                     	ds	2
   505  000011                     ?_pad:
   506                           	callstack 0
   507  000011                     ___lomod@counter:
   508                           	callstack 0
   509  000011                     pad@fp:
   510                           	callstack 0
   511  000011                     ___lodiv@quotient:
   512                           	callstack 0
   513                           
   514                           ; 8 bytes @ 0x10
   515  000011                     	ds	2
   516  000013                     pad@buf:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x12
   520  000013                     	ds	2
   521  000015                     pad@p:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x14
   525  000015                     	ds	1
   526  000016                     stoa@i:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x15
   530  000016                     	ds	1
   531  000017                     ??_pad:
   532                           
   533                           ; 1 bytes @ 0x16
   534  000017                     	ds	1
   535  000018                     pad@i:
   536                           	callstack 0
   537  000018                     stoa@w:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x17
   541  000018                     	ds	1
   542  000019                     ___lodiv@counter:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x18
   546  000019                     	ds	1
   547  00001A                     pad@w:
   548                           	callstack 0
   549  00001A                     stoa@cp:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x19
   553  00001A                     	ds	2
   554  00001C                     ?_utoa:
   555                           	callstack 0
   556  00001C                     stoa@p:
   557                           	callstack 0
   558  00001C                     utoa@fp:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1B
   562  00001C                     	ds	2
   563  00001E                     stoa@l:
   564                           	callstack 0
   565  00001E                     utoa@d:
   566                           	callstack 0
   567                           
   568                           ; 8 bytes @ 0x1D
   569  00001E                     	ds	8
   570  000026                     ??_utoa:
   571                           
   572                           ; 1 bytes @ 0x25
   573  000026                     	ds	8
   574  00002E                     utoa@p:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x2D
   578  00002E                     	ds	2
   579  000030                     utoa@w:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x2F
   583  000030                     	ds	2
   584  000032                     utoa@n:
   585                           	callstack 0
   586                           
   587                           ; 8 bytes @ 0x31
   588  000032                     	ds	8
   589  00003A                     utoa@i:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x39
   593  00003A                     	ds	2
   594  00003C                     ?_vfpfcnvrt:
   595                           	callstack 0
   596  00003C                     vfpfcnvrt@fp:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x3B
   600  00003C                     	ds	2
   601  00003E                     vfpfcnvrt@fmt:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x3D
   605  00003E                     	ds	2
   606  000040                     vfpfcnvrt@ap:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x3F
   610  000040                     	ds	2
   611  000042                     ??_vfpfcnvrt:
   612                           
   613                           ; 1 bytes @ 0x41
   614  000042                     	ds	4
   615  000046                     vfpfcnvrt@llu:
   616                           	callstack 0
   617                           
   618                           ; 8 bytes @ 0x45
   619  000046                     	ds	8
   620  00004E                     vfpfcnvrt@cp:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x4D
   624  00004E                     	ds	2
   625  000050                     ?_vfprintf:
   626                           	callstack 0
   627  000050                     vfprintf@fp:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x4F
   631  000050                     	ds	2
   632  000052                     vfprintf@fmt:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x51
   636  000052                     	ds	2
   637  000054                     vfprintf@ap:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x53
   641  000054                     	ds	2
   642  000056                     vfprintf@cfmt:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x55
   646  000056                     	ds	2
   647  000058                     
   648                           ; 1 bytes @ 0x57
   649 ;;
   650 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   651 ;;
   652 ;; *************** function _main *****************
   653 ;; Defined at:
   654 ;;		line 107 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   668 ;;      Params:         0       0       0       0       0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels required when called: 13
   674 ;; This function calls:
   675 ;;		_Lcd_Clear
   676 ;;		_Lcd_Init
   677 ;;		_Lcd_Set_Cursor
   678 ;;		_Lcd_Write_String
   679 ;;		_setup_interruptions
   680 ;;		_setup_tmr0
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text0
   687  001806                     __ptext0:
   688                           	callstack 0
   689  001806                     _main:
   690                           	callstack 18
   691  001806                     
   692                           ;main.c: 109:     TRISD = 0;
   693  001806  0E00               	movlw	0
   694  001808  6E95               	movwf	149,c	;volatile
   695                           
   696                           ;main.c: 110:     TRISE = 0;
   697  00180A  0E00               	movlw	0
   698  00180C  6E96               	movwf	150,c	;volatile
   699                           
   700                           ;main.c: 112:     OSCCON = 0b01100000;
   701  00180E  0E60               	movlw	96
   702  001810  6ED3               	movwf	211,c	;volatile
   703  001812                     
   704                           ;main.c: 113:     setup_interruptions();
   705  001812  EC8D  F00C         	call	_setup_interruptions	;wreg free
   706  001816                     
   707                           ;main.c: 114:     setup_tmr0();
   708  001816  ECE3  F00B         	call	_setup_tmr0	;wreg free
   709  00181A                     
   710                           ;main.c: 115:     Lcd_Init();
   711  00181A  ECDD  F009         	call	_Lcd_Init	;wreg free
   712  00181E                     
   713                           ;main.c: 116:     Lcd_Clear();
   714  00181E  EC80  F00C         	call	_Lcd_Clear	;wreg free
   715  001822                     
   716                           ;main.c: 117:     Lcd_Set_Cursor(1, 1);
   717  001822  0E01               	movlw	1
   718  001824  0100               	movlb	0	; () banked
   719  001826  6FC7               	movwf	Lcd_Set_Cursor@b& (0+255),b
   720  001828  0E01               	movlw	1
   721  00182A  EC19  F00A         	call	_Lcd_Set_Cursor
   722  00182E                     
   723                           ;main.c: 118:     Lcd_Write_String("     TIMER      ");
   724  00182E  0E18               	movlw	low STR_6
   725  001830  0100               	movlb	0	; () banked
   726  001832  6FC8               	movwf	Lcd_Write_String@a& (0+255),b
   727  001834  0E08               	movlw	high STR_6
   728  001836  6FC9               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   729  001838  EC5C  F009         	call	_Lcd_Write_String	;wreg free
   730  00183C                     l129:
   731  00183C  EF1E  F00C         	goto	l129
   732  001840  EF07  F000         	goto	start
   733  001844                     __end_of_main:
   734                           	callstack 0
   735                           
   736 ;; *************** function _setup_tmr0 *****************
   737 ;; Defined at:
   738 ;;		line 93 in file "main.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;		None
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   752 ;;      Params:         0       0       0       0       0       0       0       0       0
   753 ;;      Locals:         0       0       0       0       0       0       0       0       0
   754 ;;      Temps:          0       4       0       0       0       0       0       0       0
   755 ;;      Totals:         0       4       0       0       0       0       0       0       0
   756 ;;Total ram usage:        4 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 10
   759 ;; This function calls:
   760 ;;		Nothing
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text1
   767  0017C6                     __ptext1:
   768                           	callstack 0
   769  0017C6                     _setup_tmr0:
   770                           	callstack 20
   771  0017C6                     
   772                           ;main.c: 94:     T08BIT = 0;
   773  0017C6  9CD5               	bcf	4053,6,c	;volatile
   774                           
   775                           ;main.c: 95:     T0CS = 0;
   776  0017C8  9AD5               	bcf	4053,5,c	;volatile
   777                           
   778                           ;main.c: 96:     PSA = 1;
   779  0017CA  86D5               	bsf	4053,3,c	;volatile
   780  0017CC                     
   781                           ;main.c: 97:     TMR0H = (0xFFFF - contagem) >> 8;
   782  0017CC  0100               	movlb	0	; () banked
   783  0017CE  51D5               	movf	_contagem& (0+255),w,b
   784  0017D0  08FF               	sublw	255
   785  0017D2  6FC4               	movwf	??_setup_tmr0& (0+255),b
   786  0017D4  0EFF               	movlw	255
   787  0017D6  55D6               	subfwb	(_contagem+1)& (0+255),w,b
   788  0017D8  6FC5               	movwf	(??_setup_tmr0+1)& (0+255),b
   789  0017DA  0E00               	movlw	0
   790  0017DC  55D7               	subfwb	(_contagem+2)& (0+255),w,b
   791  0017DE  6FC6               	movwf	(??_setup_tmr0+2)& (0+255),b
   792  0017E0  0E00               	movlw	0
   793  0017E2  55D8               	subfwb	(_contagem+3)& (0+255),w,b
   794  0017E4  6FC7               	movwf	(??_setup_tmr0+3)& (0+255),b
   795  0017E6  C0C5  F0C4         	movff	??_setup_tmr0+1,??_setup_tmr0
   796  0017EA  C0C6  F0C5         	movff	??_setup_tmr0+2,??_setup_tmr0+1
   797  0017EE  C0C7  F0C6         	movff	??_setup_tmr0+3,??_setup_tmr0+2
   798  0017F2  6BC7               	clrf	(??_setup_tmr0+3)& (0+255),b
   799  0017F4  BFC6               	btfsc	(??_setup_tmr0+2)& (0+255),7,b
   800  0017F6  69C7               	setf	(??_setup_tmr0+3)& (0+255),b
   801  0017F8  51C4               	movf	??_setup_tmr0& (0+255),w,b
   802  0017FA  6ED7               	movwf	215,c	;volatile
   803                           
   804                           ;main.c: 98:     TMR0L = ((0xFFFF - contagem) & 0xFF);
   805  0017FC  51D5               	movf	_contagem& (0+255),w,b
   806  0017FE  0AFF               	xorlw	255
   807  001800  6ED6               	movwf	214,c	;volatile
   808  001802                     
   809                           ; BSR set to: 0
   810                           ;main.c: 99:     TMR0ON = 1;
   811  001802  8ED5               	bsf	4053,7,c	;volatile
   812  001804                     
   813                           ; BSR set to: 0
   814  001804  0012               	return		;funcret
   815  001806                     __end_of_setup_tmr0:
   816                           	callstack 0
   817                           
   818 ;; *************** function _setup_interruptions *****************
   819 ;; Defined at:
   820 ;;		line 102 in file "main.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		None
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   834 ;;      Params:         0       0       0       0       0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0       0       0       0       0
   837 ;;      Totals:         0       0       0       0       0       0       0       0       0
   838 ;;Total ram usage:        0 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; Hardware stack levels required when called: 10
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text2
   849  00191A                     __ptext2:
   850                           	callstack 0
   851  00191A                     _setup_interruptions:
   852                           	callstack 20
   853  00191A                     
   854                           ;main.c: 103:     GIE = 1;
   855  00191A  8EF2               	bsf	4082,7,c	;volatile
   856                           
   857                           ;main.c: 104:     TMR0IE = 1;
   858  00191C  8AF2               	bsf	4082,5,c	;volatile
   859  00191E  0012               	return		;funcret
   860  001920                     __end_of_setup_interruptions:
   861                           	callstack 0
   862                           
   863 ;; *************** function _Lcd_Write_String *****************
   864 ;; Defined at:
   865 ;;		line 88 in file "./lcd.h"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  a               2   40[BANK0 ] PTR unsigned char 
   868 ;;		 -> STR_6(17), tx_string(16), 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  i               2   44[BANK0 ] int 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   880 ;;      Params:         0       2       0       0       0       0       0       0       0
   881 ;;      Locals:         0       2       0       0       0       0       0       0       0
   882 ;;      Temps:          0       2       0       0       0       0       0       0       0
   883 ;;      Totals:         0       6       0       0       0       0       0       0       0
   884 ;;Total ram usage:        6 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; Hardware stack levels required when called: 12
   887 ;; This function calls:
   888 ;;		_Lcd_Write_Char
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text3
   895  0012B8                     __ptext3:
   896                           	callstack 0
   897  0012B8                     _Lcd_Write_String:
   898                           	callstack 18
   899  0012B8                     
   900                           ;./lcd.h: 89:     int i;;./lcd.h: 90:     for (i = 0; a[i] != '\0'; i++)
   901  0012B8  0E00               	movlw	0
   902  0012BA  0100               	movlb	0	; () banked
   903  0012BC  6FCD               	movwf	(Lcd_Write_String@i+1)& (0+255),b
   904  0012BE  0E00               	movlw	0
   905  0012C0  6FCC               	movwf	Lcd_Write_String@i& (0+255),b
   906  0012C2  EF7F  F009         	goto	l1819
   907  0012C6                     l1815:
   908                           
   909                           ;./lcd.h: 91:         Lcd_Write_Char(a[i]);
   910  0012C6  0100               	movlb	0	; () banked
   911  0012C8  51CC               	movf	Lcd_Write_String@i& (0+255),w,b
   912  0012CA  25C8               	addwf	Lcd_Write_String@a& (0+255),w,b
   913  0012CC  6FCA               	movwf	??_Lcd_Write_String& (0+255),b
   914  0012CE  51CD               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
   915  0012D0  21C9               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
   916  0012D2  6FCB               	movwf	(??_Lcd_Write_String+1)& (0+255),b
   917  0012D4  C0CA  FFF6         	movff	??_Lcd_Write_String,tblptrl
   918  0012D8  C0CB  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
   919  0012DC  6AF8               	clrf	tblptru,c
   920  0012DE  0E07               	movlw	(high __ramtop+-1)
   921  0012E0  64F7               	cpfsgt	tblptrh,c
   922  0012E2  D003               	bra	u1237
   923  0012E4  0008               	tblrd		*
   924  0012E6  50F5               	movf	tablat,w,c
   925  0012E8  D005               	bra	u1230
   926  0012EA                     u1237:
   927  0012EA  CFF6 FFE1          	movff	tblptrl,fsr1l
   928  0012EE  CFF7 FFE2          	movff	tblptrh,fsr1h
   929  0012F2  50E7               	movf	indf1,w,c
   930  0012F4                     u1230:
   931  0012F4  EC22  F00C         	call	_Lcd_Write_Char
   932  0012F8  0100               	movlb	0	; () banked
   933  0012FA  4BCC               	infsnz	Lcd_Write_String@i& (0+255),f,b
   934  0012FC  2BCD               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
   935  0012FE                     l1819:
   936                           
   937                           ; BSR set to: 0
   938  0012FE  51CC               	movf	Lcd_Write_String@i& (0+255),w,b
   939  001300  25C8               	addwf	Lcd_Write_String@a& (0+255),w,b
   940  001302  6FCA               	movwf	??_Lcd_Write_String& (0+255),b
   941  001304  51CD               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
   942  001306  21C9               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
   943  001308  6FCB               	movwf	(??_Lcd_Write_String+1)& (0+255),b
   944  00130A  C0CA  FFF6         	movff	??_Lcd_Write_String,tblptrl
   945  00130E  C0CB  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
   946  001312  6AF8               	clrf	tblptru,c
   947  001314  0E07               	movlw	(high __ramtop+-1)
   948  001316  64F7               	cpfsgt	tblptrh,c
   949  001318  D003               	bra	u1247
   950  00131A  0008               	tblrd		*
   951  00131C  50F5               	movf	tablat,w,c
   952  00131E  D005               	bra	u1240
   953  001320                     u1247:
   954  001320  CFF6 FFE1          	movff	tblptrl,fsr1l
   955  001324  CFF7 FFE2          	movff	tblptrh,fsr1h
   956  001328  50E7               	movf	indf1,w,c
   957  00132A                     u1240:
   958  00132A  0900               	iorlw	0
   959  00132C  A4D8               	btfss	status,2,c
   960  00132E  EF9B  F009         	goto	u1251
   961  001332  EF9D  F009         	goto	u1250
   962  001336                     u1251:
   963  001336  EF63  F009         	goto	l1815
   964  00133A                     u1250:
   965  00133A  0012               	return		;funcret
   966  00133C                     __end_of_Lcd_Write_String:
   967                           	callstack 0
   968                           
   969 ;; *************** function _Lcd_Write_Char *****************
   970 ;; Defined at:
   971 ;;		line 73 in file "./lcd.h"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  a               1    wreg     unsigned char 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  a               1   39[BANK0 ] unsigned char 
   976 ;;  y               1   38[BANK0 ] unsigned char 
   977 ;;  temp            1   37[BANK0 ] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   987 ;;      Params:         0       0       0       0       0       0       0       0       0
   988 ;;      Locals:         0       3       0       0       0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0       0       0
   990 ;;      Totals:         0       3       0       0       0       0       0       0       0
   991 ;;Total ram usage:        3 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; Hardware stack levels required when called: 11
   994 ;; This function calls:
   995 ;;		_Lcd_Port
   996 ;; This function is called by:
   997 ;;		_Lcd_Write_String
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text4
  1002  001844                     __ptext4:
  1003                           	callstack 0
  1004  001844                     _Lcd_Write_Char:
  1005                           	callstack 18
  1006                           
  1007                           ;incstack = 0
  1008                           ;Lcd_Write_Char@a stored from wreg
  1009  001844  0100               	movlb	0	; () banked
  1010  001846  6FC7               	movwf	Lcd_Write_Char@a& (0+255),b
  1011  001848                     
  1012                           ;./lcd.h: 74:     char temp, y;;./lcd.h: 75:     temp = a & 0x0F;
  1013  001848  0100               	movlb	0	; () banked
  1014  00184A  51C7               	movf	Lcd_Write_Char@a& (0+255),w,b
  1015  00184C  0B0F               	andlw	15
  1016  00184E  6FC5               	movwf	Lcd_Write_Char@temp& (0+255),b
  1017                           
  1018                           ;./lcd.h: 76:     y = a & 0xF0;
  1019  001850  51C7               	movf	Lcd_Write_Char@a& (0+255),w,b
  1020  001852  0BF0               	andlw	240
  1021  001854  6FC6               	movwf	Lcd_Write_Char@y& (0+255),b
  1022  001856                     
  1023                           ; BSR set to: 0
  1024                           ;./lcd.h: 77:     LATE0 = 1;
  1025  001856  808D               	bsf	3981,0,c	;volatile
  1026  001858                     
  1027                           ; BSR set to: 0
  1028                           ;./lcd.h: 78:     Lcd_Port(y >> 4);
  1029  001858  39C6               	swapf	Lcd_Write_Char@y& (0+255),w,b
  1030  00185A  0B0F               	andlw	15
  1031  00185C  ECB4  F00A         	call	_Lcd_Port
  1032  001860                     
  1033                           ;./lcd.h: 79:     LATE1 = 1;
  1034  001860  828D               	bsf	3981,1,c	;volatile
  1035  001862                     
  1036                           ;./lcd.h: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1037  001862  0E0D               	movlw	13
  1038  001864                     u1317:
  1039  001864  2EE8               	decfsz	wreg,f,c
  1040  001866  D7FE               	bra	u1317
  1041  001868  F000               	nop	
  1042  00186A                     
  1043                           ;./lcd.h: 81:     LATE1 = 0;
  1044  00186A  928D               	bcf	3981,1,c	;volatile
  1045  00186C                     
  1046                           ;./lcd.h: 82:     Lcd_Port(temp);
  1047  00186C  0100               	movlb	0	; () banked
  1048  00186E  51C5               	movf	Lcd_Write_Char@temp& (0+255),w,b
  1049  001870  ECB4  F00A         	call	_Lcd_Port
  1050  001874                     
  1051                           ;./lcd.h: 83:     LATE1 = 1;
  1052  001874  828D               	bsf	3981,1,c	;volatile
  1053  001876                     
  1054                           ;./lcd.h: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1055  001876  0E0D               	movlw	13
  1056  001878                     u1327:
  1057  001878  2EE8               	decfsz	wreg,f,c
  1058  00187A  D7FE               	bra	u1327
  1059  00187C  F000               	nop	
  1060  00187E                     
  1061                           ;./lcd.h: 85:     LATE1 = 0;
  1062  00187E  928D               	bcf	3981,1,c	;volatile
  1063  001880  0012               	return		;funcret
  1064  001882                     __end_of_Lcd_Write_Char:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function _Lcd_Set_Cursor *****************
  1068 ;; Defined at:
  1069 ;;		line 38 in file "./lcd.h"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  a               1    wreg     unsigned char 
  1072 ;;  b               1   39[BANK0 ] unsigned char 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  a               1   40[BANK0 ] unsigned char 
  1075 ;;  temp            1   43[BANK0 ] unsigned char 
  1076 ;;  y               1   42[BANK0 ] unsigned char 
  1077 ;;  z               1   41[BANK0 ] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1087 ;;      Params:         0       1       0       0       0       0       0       0       0
  1088 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1090 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1091 ;;Total ram usage:        5 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 12
  1094 ;; This function calls:
  1095 ;;		_Lcd_Cmd
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text5
  1102  001432                     __ptext5:
  1103                           	callstack 0
  1104  001432                     _Lcd_Set_Cursor:
  1105                           	callstack 18
  1106                           
  1107                           ;incstack = 0
  1108                           ;Lcd_Set_Cursor@a stored from wreg
  1109  001432  0100               	movlb	0	; () banked
  1110  001434  6FC8               	movwf	Lcd_Set_Cursor@a& (0+255),b
  1111  001436                     
  1112                           ;./lcd.h: 39:     char temp, z, y;;./lcd.h: 40:     if (a == 1) {
  1113  001436  0100               	movlb	0	; () banked
  1114  001438  05C8               	decf	Lcd_Set_Cursor@a& (0+255),w,b
  1115  00143A  A4D8               	btfss	status,2,c
  1116  00143C  EF22  F00A         	goto	u1211
  1117  001440  EF24  F00A         	goto	u1210
  1118  001444                     u1211:
  1119  001444  EF36  F00A         	goto	l1777
  1120  001448                     u1210:
  1121  001448                     
  1122                           ; BSR set to: 0
  1123                           ;./lcd.h: 41:         temp = 0x80 + b - 1;
  1124  001448  51C7               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  1125  00144A  0F7F               	addlw	127
  1126  00144C  6FCB               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  1127                           
  1128                           ;./lcd.h: 42:         z = temp >> 4;
  1129  00144E  39CB               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  1130  001450  0B0F               	andlw	15
  1131  001452  6FC9               	movwf	Lcd_Set_Cursor@z& (0+255),b
  1132                           
  1133                           ;./lcd.h: 43:         y = temp & 0x0F;
  1134  001454  51CB               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  1135  001456  0B0F               	andlw	15
  1136  001458  6FCA               	movwf	Lcd_Set_Cursor@y& (0+255),b
  1137  00145A                     
  1138                           ; BSR set to: 0
  1139                           ;./lcd.h: 44:         Lcd_Cmd(z);
  1140  00145A  51C9               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  1141  00145C  EC5D  F00C         	call	_Lcd_Cmd
  1142  001460                     
  1143                           ;./lcd.h: 45:         Lcd_Cmd(y);
  1144  001460  0100               	movlb	0	; () banked
  1145  001462  51CA               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  1146  001464  EC5D  F00C         	call	_Lcd_Cmd
  1147                           
  1148                           ;./lcd.h: 46:     } else if (a == 2) {
  1149  001468  EF4F  F00A         	goto	l63
  1150  00146C                     l1777:
  1151                           
  1152                           ; BSR set to: 0
  1153  00146C  0E02               	movlw	2
  1154  00146E  19C8               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  1155  001470  A4D8               	btfss	status,2,c
  1156  001472  EF3D  F00A         	goto	u1221
  1157  001476  EF3F  F00A         	goto	u1220
  1158  00147A                     u1221:
  1159  00147A  EF4F  F00A         	goto	l63
  1160  00147E                     u1220:
  1161  00147E                     
  1162                           ; BSR set to: 0
  1163                           ;./lcd.h: 47:         temp = 0xC0 + b - 1;
  1164  00147E  51C7               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  1165  001480  0FBF               	addlw	191
  1166  001482  6FCB               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  1167                           
  1168                           ;./lcd.h: 48:         z = temp >> 4;
  1169  001484  39CB               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  1170  001486  0B0F               	andlw	15
  1171  001488  6FC9               	movwf	Lcd_Set_Cursor@z& (0+255),b
  1172                           
  1173                           ;./lcd.h: 49:         y = temp & 0x0F;
  1174  00148A  51CB               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  1175  00148C  0B0F               	andlw	15
  1176  00148E  6FCA               	movwf	Lcd_Set_Cursor@y& (0+255),b
  1177  001490                     
  1178                           ; BSR set to: 0
  1179                           ;./lcd.h: 50:         Lcd_Cmd(z);
  1180  001490  51C9               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  1181  001492  EC5D  F00C         	call	_Lcd_Cmd
  1182  001496                     
  1183                           ;./lcd.h: 51:         Lcd_Cmd(y);
  1184  001496  0100               	movlb	0	; () banked
  1185  001498  51CA               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  1186  00149A  EC5D  F00C         	call	_Lcd_Cmd
  1187  00149E                     l63:
  1188  00149E  0012               	return		;funcret
  1189  0014A0                     __end_of_Lcd_Set_Cursor:
  1190                           	callstack 0
  1191                           
  1192 ;; *************** function _Lcd_Init *****************
  1193 ;; Defined at:
  1194 ;;		line 55 in file "./lcd.h"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, status,2, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1208 ;;      Params:         0       0       0       0       0       0       0       0       0
  1209 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1210 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1211 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1212 ;;Total ram usage:        1 bytes
  1213 ;; Hardware stack levels used: 1
  1214 ;; Hardware stack levels required when called: 12
  1215 ;; This function calls:
  1216 ;;		_Lcd_Cmd
  1217 ;;		_Lcd_Port
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text6
  1224  0013BA                     __ptext6:
  1225                           	callstack 0
  1226  0013BA                     _Lcd_Init:
  1227                           	callstack 18
  1228  0013BA                     
  1229                           ;./lcd.h: 56:     Lcd_Port(0x00);
  1230  0013BA  0E00               	movlw	0
  1231  0013BC  ECB4  F00A         	call	_Lcd_Port
  1232  0013C0                     
  1233                           ;./lcd.h: 57:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1234  0013C0  0E1A               	movlw	26
  1235  0013C2  0100               	movlb	0	; () banked
  1236  0013C4  6FC7               	movwf	??_Lcd_Init& (0+255),b
  1237  0013C6  0EF8               	movlw	248
  1238  0013C8                     u1337:
  1239  0013C8  2EE8               	decfsz	wreg,f,c
  1240  0013CA  D7FE               	bra	u1337
  1241  0013CC  2FC7               	decfsz	??_Lcd_Init& (0+255),f,b
  1242  0013CE  D7FC               	bra	u1337
  1243  0013D0  F000               	nop	
  1244  0013D2                     
  1245                           ;./lcd.h: 58:     Lcd_Cmd(0x03);
  1246  0013D2  0E03               	movlw	3
  1247  0013D4  EC5D  F00C         	call	_Lcd_Cmd
  1248  0013D8                     
  1249                           ;./lcd.h: 59:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1250  0013D8  0E07               	movlw	7
  1251  0013DA  0100               	movlb	0	; () banked
  1252  0013DC  6FC7               	movwf	??_Lcd_Init& (0+255),b
  1253  0013DE  0E7D               	movlw	125
  1254  0013E0                     u1347:
  1255  0013E0  2EE8               	decfsz	wreg,f,c
  1256  0013E2  D7FE               	bra	u1347
  1257  0013E4  2FC7               	decfsz	??_Lcd_Init& (0+255),f,b
  1258  0013E6  D7FC               	bra	u1347
  1259  0013E8                     
  1260                           ;./lcd.h: 60:     Lcd_Cmd(0x03);
  1261  0013E8  0E03               	movlw	3
  1262  0013EA  EC5D  F00C         	call	_Lcd_Cmd
  1263  0013EE                     
  1264                           ;./lcd.h: 61:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1265  0013EE  0E0F               	movlw	15
  1266  0013F0  0100               	movlb	0	; () banked
  1267  0013F2  6FC7               	movwf	??_Lcd_Init& (0+255),b
  1268  0013F4  0E47               	movlw	71
  1269  0013F6                     u1357:
  1270  0013F6  2EE8               	decfsz	wreg,f,c
  1271  0013F8  D7FE               	bra	u1357
  1272  0013FA  2FC7               	decfsz	??_Lcd_Init& (0+255),f,b
  1273  0013FC  D7FC               	bra	u1357
  1274  0013FE  D000               	nop2	
  1275  001400                     
  1276                           ;./lcd.h: 62:     Lcd_Cmd(0x03);
  1277  001400  0E03               	movlw	3
  1278  001402  EC5D  F00C         	call	_Lcd_Cmd
  1279  001406                     
  1280                           ;./lcd.h: 64:     Lcd_Cmd(0x02);
  1281  001406  0E02               	movlw	2
  1282  001408  EC5D  F00C         	call	_Lcd_Cmd
  1283  00140C                     
  1284                           ;./lcd.h: 65:     Lcd_Cmd(0x02);
  1285  00140C  0E02               	movlw	2
  1286  00140E  EC5D  F00C         	call	_Lcd_Cmd
  1287  001412                     
  1288                           ;./lcd.h: 66:     Lcd_Cmd(0x08);
  1289  001412  0E08               	movlw	8
  1290  001414  EC5D  F00C         	call	_Lcd_Cmd
  1291  001418                     
  1292                           ;./lcd.h: 67:     Lcd_Cmd(0x00);
  1293  001418  0E00               	movlw	0
  1294  00141A  EC5D  F00C         	call	_Lcd_Cmd
  1295  00141E                     
  1296                           ;./lcd.h: 68:     Lcd_Cmd(0x0C);
  1297  00141E  0E0C               	movlw	12
  1298  001420  EC5D  F00C         	call	_Lcd_Cmd
  1299  001424                     
  1300                           ;./lcd.h: 69:     Lcd_Cmd(0x00);
  1301  001424  0E00               	movlw	0
  1302  001426  EC5D  F00C         	call	_Lcd_Cmd
  1303  00142A                     
  1304                           ;./lcd.h: 70:     Lcd_Cmd(0x06);
  1305  00142A  0E06               	movlw	6
  1306  00142C  EC5D  F00C         	call	_Lcd_Cmd
  1307  001430  0012               	return		;funcret
  1308  001432                     __end_of_Lcd_Init:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _Lcd_Clear *****************
  1312 ;; Defined at:
  1313 ;;		line 33 in file "./lcd.h"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1327 ;;      Params:         0       0       0       0       0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 12
  1334 ;; This function calls:
  1335 ;;		_Lcd_Cmd
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text7
  1342  001900                     __ptext7:
  1343                           	callstack 0
  1344  001900                     _Lcd_Clear:
  1345                           	callstack 18
  1346  001900                     
  1347                           ;./lcd.h: 34:     Lcd_Cmd(0);
  1348  001900  0E00               	movlw	0
  1349  001902  EC5D  F00C         	call	_Lcd_Cmd
  1350                           
  1351                           ;./lcd.h: 35:     Lcd_Cmd(1);
  1352  001906  0E01               	movlw	1
  1353  001908  EC5D  F00C         	call	_Lcd_Cmd
  1354  00190C  0012               	return		;funcret
  1355  00190E                     __end_of_Lcd_Clear:
  1356                           	callstack 0
  1357                           
  1358 ;; *************** function _Lcd_Cmd *****************
  1359 ;; Defined at:
  1360 ;;		line 25 in file "./lcd.h"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  a               1    wreg     unsigned char 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  a               1   38[BANK0 ] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0
  1375 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1376 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1377 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1378 ;;Total ram usage:        2 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 11
  1381 ;; This function calls:
  1382 ;;		_Lcd_Port
  1383 ;; This function is called by:
  1384 ;;		_Lcd_Clear
  1385 ;;		_Lcd_Set_Cursor
  1386 ;;		_Lcd_Init
  1387 ;;		_Lcd_Shift_Right
  1388 ;;		_Lcd_Shift_Left
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text8
  1393  0018BA                     __ptext8:
  1394                           	callstack 0
  1395  0018BA                     _Lcd_Cmd:
  1396                           	callstack 18
  1397                           
  1398                           ;incstack = 0
  1399                           ;Lcd_Cmd@a stored from wreg
  1400  0018BA  0100               	movlb	0	; () banked
  1401  0018BC  6FC6               	movwf	Lcd_Cmd@a& (0+255),b
  1402  0018BE                     
  1403                           ;./lcd.h: 26:     LATE0 = 0;
  1404  0018BE  908D               	bcf	3981,0,c	;volatile
  1405  0018C0                     
  1406                           ;./lcd.h: 27:     Lcd_Port(a);
  1407  0018C0  0100               	movlb	0	; () banked
  1408  0018C2  51C6               	movf	Lcd_Cmd@a& (0+255),w,b
  1409  0018C4  ECB4  F00A         	call	_Lcd_Port
  1410  0018C8                     
  1411                           ;./lcd.h: 28:     LATE1 = 1;
  1412  0018C8  828D               	bsf	3981,1,c	;volatile
  1413  0018CA                     
  1414                           ;./lcd.h: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1415  0018CA  0E06               	movlw	6
  1416  0018CC  0100               	movlb	0	; () banked
  1417  0018CE  6FC5               	movwf	??_Lcd_Cmd& (0+255),b
  1418  0018D0  0E30               	movlw	48
  1419  0018D2                     u1367:
  1420  0018D2  2EE8               	decfsz	wreg,f,c
  1421  0018D4  D7FE               	bra	u1367
  1422  0018D6  2FC5               	decfsz	??_Lcd_Cmd& (0+255),f,b
  1423  0018D8  D7FC               	bra	u1367
  1424  0018DA  F000               	nop	
  1425  0018DC                     
  1426                           ;./lcd.h: 30:     LATE1 = 0;
  1427  0018DC  928D               	bcf	3981,1,c	;volatile
  1428  0018DE  0012               	return		;funcret
  1429  0018E0                     __end_of_Lcd_Cmd:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function _Lcd_Port *****************
  1433 ;; Defined at:
  1434 ;;		line 3 in file "./lcd.h"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  a               1    wreg     unsigned char 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  a               1   36[BANK0 ] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1448 ;;      Params:         0       0       0       0       0       0       0       0       0
  1449 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1451 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1452 ;;Total ram usage:        1 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 10
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_Lcd_Cmd
  1459 ;;		_Lcd_Init
  1460 ;;		_Lcd_Write_Char
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text9
  1465  001568                     __ptext9:
  1466                           	callstack 0
  1467  001568                     _Lcd_Port:
  1468                           	callstack 18
  1469                           
  1470                           ;incstack = 0
  1471                           ;Lcd_Port@a stored from wreg
  1472  001568  0100               	movlb	0	; () banked
  1473  00156A  6FC4               	movwf	Lcd_Port@a& (0+255),b
  1474  00156C                     
  1475                           ;./lcd.h: 4:     if (a & 1)
  1476  00156C  0100               	movlb	0	; () banked
  1477  00156E  A1C4               	btfss	Lcd_Port@a& (0+255),0,b
  1478  001570  EFBC  F00A         	goto	u1091
  1479  001574  EFBE  F00A         	goto	u1090
  1480  001578                     u1091:
  1481  001578  EFC1  F00A         	goto	l43
  1482  00157C                     u1090:
  1483  00157C                     
  1484                           ; BSR set to: 0
  1485                           ;./lcd.h: 5:         LATD4 = 1;
  1486  00157C  888C               	bsf	3980,4,c	;volatile
  1487  00157E  EFC2  F00A         	goto	l1639
  1488  001582                     l43:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;./lcd.h: 7:         LATD4 = 0;
  1492  001582  988C               	bcf	3980,4,c	;volatile
  1493  001584                     l1639:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;./lcd.h: 9:     if (a & 2)
  1497  001584  A3C4               	btfss	Lcd_Port@a& (0+255),1,b
  1498  001586  EFC7  F00A         	goto	u1101
  1499  00158A  EFC9  F00A         	goto	u1100
  1500  00158E                     u1101:
  1501  00158E  EFCC  F00A         	goto	l45
  1502  001592                     u1100:
  1503  001592                     
  1504                           ; BSR set to: 0
  1505                           ;./lcd.h: 10:         LATD5 = 1;
  1506  001592  8A8C               	bsf	3980,5,c	;volatile
  1507  001594  EFCD  F00A         	goto	l1643
  1508  001598                     l45:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;./lcd.h: 12:         LATD5 = 0;
  1512  001598  9A8C               	bcf	3980,5,c	;volatile
  1513  00159A                     l1643:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;./lcd.h: 14:     if (a & 4)
  1517  00159A  A5C4               	btfss	Lcd_Port@a& (0+255),2,b
  1518  00159C  EFD2  F00A         	goto	u1111
  1519  0015A0  EFD4  F00A         	goto	u1110
  1520  0015A4                     u1111:
  1521  0015A4  EFD7  F00A         	goto	l47
  1522  0015A8                     u1110:
  1523  0015A8                     
  1524                           ; BSR set to: 0
  1525                           ;./lcd.h: 15:         LATD6 = 1;
  1526  0015A8  8C8C               	bsf	3980,6,c	;volatile
  1527  0015AA  EFD8  F00A         	goto	l1647
  1528  0015AE                     l47:
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;./lcd.h: 17:         LATD6 = 0;
  1532  0015AE  9C8C               	bcf	3980,6,c	;volatile
  1533  0015B0                     l1647:
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;./lcd.h: 19:     if (a & 8)
  1537  0015B0  A7C4               	btfss	Lcd_Port@a& (0+255),3,b
  1538  0015B2  EFDD  F00A         	goto	u1121
  1539  0015B6  EFDF  F00A         	goto	u1120
  1540  0015BA                     u1121:
  1541  0015BA  EFE2  F00A         	goto	l49
  1542  0015BE                     u1120:
  1543  0015BE                     
  1544                           ; BSR set to: 0
  1545                           ;./lcd.h: 20:         LATD7 = 1;
  1546  0015BE  8E8C               	bsf	3980,7,c	;volatile
  1547  0015C0  EFE3  F00A         	goto	l51
  1548  0015C4                     l49:
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;./lcd.h: 22:         LATD7 = 0;
  1552  0015C4  9E8C               	bcf	3980,7,c	;volatile
  1553  0015C6                     l51:
  1554                           
  1555                           ; BSR set to: 0
  1556  0015C6  0012               	return		;funcret
  1557  0015C8                     __end_of_Lcd_Port:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _timer *****************
  1561 ;; Defined at:
  1562 ;;		line 79 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1578 ;;      Temps:          0      12       0       0       0       0       0       0       0
  1579 ;;      Totals:         0      12       0       0       0       0       0       0       0
  1580 ;;Total ram usage:       12 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 9
  1583 ;; This function calls:
  1584 ;;		_disp_cronometro
  1585 ;; This function is called by:
  1586 ;;		Interrupt level 2
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	intcode
  1591  000008                     __pintcode:
  1592                           	callstack 0
  1593  000008                     _timer:
  1594                           	callstack 18
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;incstack = 0
  1598  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1599  00000A  ED01  F009         	call	int_func,f	;refresh shadow registers
  1600                           
  1601                           	psect	intcode_body
  1602  001202                     __pintcode_body:
  1603                           	callstack 18
  1604  001202                     int_func:
  1605                           	callstack 18
  1606  001202  0006               	pop		; remove dummy address from shadow register refresh
  1607  001204  CFE1 F0BC          	movff	fsr1l,??_timer+4
  1608  001208  CFE2 F0BD          	movff	fsr1h,??_timer+5
  1609  00120C  CFD9 F0BE          	movff	fsr2l,??_timer+6
  1610  001210  CFDA F0BF          	movff	fsr2h,??_timer+7
  1611  001214  CFF6 F0C0          	movff	tblptrl,??_timer+8
  1612  001218  CFF7 F0C1          	movff	tblptrh,??_timer+9
  1613  00121C  CFF8 F0C2          	movff	tblptru,??_timer+10
  1614  001220  CFF5 F0C3          	movff	tablat,??_timer+11
  1615  001224                     
  1616                           ;main.c: 80:     if (TMR0IF) {
  1617  001224  A4F2               	btfss	4082,2,c	;volatile
  1618  001226  EF17  F009         	goto	i2u129_41
  1619  00122A  EF19  F009         	goto	i2u129_40
  1620  00122E                     i2u129_41:
  1621  00122E  EF4A  F009         	goto	i2l118
  1622  001232                     i2u129_40:
  1623  001232                     
  1624                           ;main.c: 81:         TMR0H = (0xFFFF - contagem) >> 8;
  1625  001232  0100               	movlb	0	; () banked
  1626  001234  51D5               	movf	_contagem& (0+255),w,b
  1627  001236  08FF               	sublw	255
  1628  001238  6FB8               	movwf	??_timer& (0+255),b
  1629  00123A  0EFF               	movlw	255
  1630  00123C  55D6               	subfwb	(_contagem+1)& (0+255),w,b
  1631  00123E  6FB9               	movwf	(??_timer+1)& (0+255),b
  1632  001240  0E00               	movlw	0
  1633  001242  55D7               	subfwb	(_contagem+2)& (0+255),w,b
  1634  001244  6FBA               	movwf	(??_timer+2)& (0+255),b
  1635  001246  0E00               	movlw	0
  1636  001248  55D8               	subfwb	(_contagem+3)& (0+255),w,b
  1637  00124A  6FBB               	movwf	(??_timer+3)& (0+255),b
  1638  00124C  C0B9  F0B8         	movff	??_timer+1,??_timer
  1639  001250  C0BA  F0B9         	movff	??_timer+2,??_timer+1
  1640  001254  C0BB  F0BA         	movff	??_timer+3,??_timer+2
  1641  001258  6BBB               	clrf	(??_timer+3)& (0+255),b
  1642  00125A  BFBA               	btfsc	(??_timer+2)& (0+255),7,b
  1643  00125C  69BB               	setf	(??_timer+3)& (0+255),b
  1644  00125E  51B8               	movf	??_timer& (0+255),w,b
  1645  001260  6ED7               	movwf	215,c	;volatile
  1646                           
  1647                           ;main.c: 82:         TMR0L = ((0xFFFF - contagem) & 0xFF);
  1648  001262  51D5               	movf	_contagem& (0+255),w,b
  1649  001264  0AFF               	xorlw	255
  1650  001266  6ED6               	movwf	214,c	;volatile
  1651                           
  1652                           ;main.c: 83:         if (counter == 75) {
  1653  001268  0E4B               	movlw	75
  1654  00126A  196C               	xorwf	_counter& (0+255),w,b
  1655  00126C  116D               	iorwf	(_counter+1)& (0+255),w,b
  1656  00126E  A4D8               	btfss	status,2,c
  1657  001270  EF3C  F009         	goto	i2u130_41
  1658  001274  EF3E  F009         	goto	i2u130_40
  1659  001278                     i2u130_41:
  1660  001278  EF47  F009         	goto	i2l1859
  1661  00127C                     i2u130_40:
  1662  00127C                     
  1663                           ; BSR set to: 0
  1664                           ;main.c: 84:             disp_cronometro();
  1665  00127C  EC60  F007         	call	_disp_cronometro	;wreg free
  1666  001280                     
  1667                           ;main.c: 85:             counter = 0;
  1668  001280  0E00               	movlw	0
  1669  001282  0100               	movlb	0	; () banked
  1670  001284  6F6D               	movwf	(_counter+1)& (0+255),b
  1671  001286  0E00               	movlw	0
  1672  001288  6F6C               	movwf	_counter& (0+255),b
  1673                           
  1674                           ;main.c: 86:         } else {
  1675  00128A  EF49  F009         	goto	i2l1861
  1676  00128E                     i2l1859:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;main.c: 87:             counter++;
  1680  00128E  4B6C               	infsnz	_counter& (0+255),f,b
  1681  001290  2B6D               	incf	(_counter+1)& (0+255),f,b
  1682  001292                     i2l1861:
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;main.c: 89:         TMR0IF = 0;
  1686  001292  94F2               	bcf	4082,2,c	;volatile
  1687  001294                     i2l118:
  1688  001294  C0C3  FFF5         	movff	??_timer+11,tablat
  1689  001298  C0C2  FFF8         	movff	??_timer+10,tblptru
  1690  00129C  C0C1  FFF7         	movff	??_timer+9,tblptrh
  1691  0012A0  C0C0  FFF6         	movff	??_timer+8,tblptrl
  1692  0012A4  C0BF  FFDA         	movff	??_timer+7,fsr2h
  1693  0012A8  C0BE  FFD9         	movff	??_timer+6,fsr2l
  1694  0012AC  C0BD  FFE2         	movff	??_timer+5,fsr1h
  1695  0012B0  C0BC  FFE1         	movff	??_timer+4,fsr1l
  1696  0012B4  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1697  0012B6  0011               	retfie		f
  1698  0012B8                     __end_of_timer:
  1699                           	callstack 0
  1700                           
  1701 ;; *************** function _disp_cronometro *****************
  1702 ;; Defined at:
  1703 ;;		line 62 in file "main.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1717 ;;      Params:         0       0       0       0       0       0       0       0       0
  1718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1720 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 8
  1724 ;; This function calls:
  1725 ;;		_cronometro
  1726 ;;		_sprintf
  1727 ;;		i2_Lcd_Set_Cursor
  1728 ;;		i2_Lcd_Write_String
  1729 ;; This function is called by:
  1730 ;;		_timer
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text11
  1735  000EC0                     __ptext11:
  1736                           	callstack 0
  1737  000EC0                     _disp_cronometro:
  1738                           	callstack 18
  1739  000EC0                     
  1740                           ;main.c: 64:     cronometro();
  1741  000EC0  ECE4  F00A         	call	_cronometro	;wreg free
  1742  000EC4                     
  1743                           ;main.c: 66:     h0 = m0 = s0 = "";
  1744  000EC4  0E28               	movlw	low (STR_6+16)
  1745  000EC6  0100               	movlb	0	; () banked
  1746  000EC8  6F66               	movwf	_s0& (0+255),b
  1747  000ECA  0E08               	movlw	high (STR_6+16)
  1748  000ECC  6F67               	movwf	(_s0+1)& (0+255),b
  1749  000ECE  C066  F068         	movff	_s0,_m0
  1750  000ED2  C067  F069         	movff	_s0+1,_m0+1
  1751  000ED6  C068  F06A         	movff	_m0,_h0
  1752  000EDA  C069  F06B         	movff	_m0+1,_h0+1
  1753  000EDE                     
  1754                           ; BSR set to: 0
  1755                           ;main.c: 67:     if (h < 10)
  1756  000EDE  BF6F               	btfsc	(_h+1)& (0+255),7,b
  1757  000EE0  EF7D  F007         	goto	i2u126_40
  1758  000EE4  516F               	movf	(_h+1)& (0+255),w,b
  1759  000EE6  E107               	bnz	i2u126_41
  1760  000EE8  0E0A               	movlw	10
  1761  000EEA  5D6E               	subwf	_h& (0+255),w,b
  1762  000EEC  B0D8               	btfsc	status,0,c
  1763  000EEE  EF7B  F007         	goto	i2u126_41
  1764  000EF2  EF7D  F007         	goto	i2u126_40
  1765  000EF6                     i2u126_41:
  1766  000EF6  EF81  F007         	goto	i2l107
  1767  000EFA                     i2u126_40:
  1768  000EFA                     
  1769                           ; BSR set to: 0
  1770                           ;main.c: 68:         h0 = "0";
  1771  000EFA  0E29               	movlw	low STR_2
  1772  000EFC  6F6A               	movwf	_h0& (0+255),b
  1773  000EFE  0E08               	movlw	high STR_2
  1774  000F00  6F6B               	movwf	(_h0+1)& (0+255),b
  1775  000F02                     i2l107:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main.c: 69:     if (m < 10)
  1779  000F02  BE5B               	btfsc	(_m+1)^0,7,c
  1780  000F04  EF8F  F007         	goto	i2u127_40
  1781  000F08  505B               	movf	(_m+1)^0,w,c
  1782  000F0A  E107               	bnz	i2u127_41
  1783  000F0C  0E0A               	movlw	10
  1784  000F0E  5C5A               	subwf	_m^0,w,c
  1785  000F10  B0D8               	btfsc	status,0,c
  1786  000F12  EF8D  F007         	goto	i2u127_41
  1787  000F16  EF8F  F007         	goto	i2u127_40
  1788  000F1A                     i2u127_41:
  1789  000F1A  EF93  F007         	goto	i2l108
  1790  000F1E                     i2u127_40:
  1791  000F1E                     
  1792                           ; BSR set to: 0
  1793                           ;main.c: 70:         m0 = "0";
  1794  000F1E  0E29               	movlw	low STR_2
  1795  000F20  6F68               	movwf	_m0& (0+255),b
  1796  000F22  0E08               	movlw	high STR_2
  1797  000F24  6F69               	movwf	(_m0+1)& (0+255),b
  1798  000F26                     i2l108:
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;main.c: 71:     if (s < 10)
  1802  000F26  BE59               	btfsc	(_s+1)^0,7,c
  1803  000F28  EFA1  F007         	goto	i2u128_40
  1804  000F2C  5059               	movf	(_s+1)^0,w,c
  1805  000F2E  E107               	bnz	i2u128_41
  1806  000F30  0E0A               	movlw	10
  1807  000F32  5C58               	subwf	_s^0,w,c
  1808  000F34  B0D8               	btfsc	status,0,c
  1809  000F36  EF9F  F007         	goto	i2u128_41
  1810  000F3A  EFA1  F007         	goto	i2u128_40
  1811  000F3E                     i2u128_41:
  1812  000F3E  EFA5  F007         	goto	i2l1833
  1813  000F42                     i2u128_40:
  1814  000F42                     
  1815                           ; BSR set to: 0
  1816                           ;main.c: 72:         s0 = "0";
  1817  000F42  0E29               	movlw	low STR_2
  1818  000F44  6F66               	movwf	_s0& (0+255),b
  1819  000F46  0E08               	movlw	high STR_2
  1820  000F48  6F67               	movwf	(_s0+1)& (0+255),b
  1821  000F4A                     i2l1833:
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;main.c: 73:     sprintf(tx_string, "    %s%u:%s%u:%s%u    ", h0, h, m0, m, s0, s);
  1825  000F4A  0E90               	movlw	low _tx_string
  1826  000F4C  6FA0               	movwf	sprintf@s& (0+255),b
  1827  000F4E  0E00               	movlw	high _tx_string
  1828  000F50  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1829  000F52  0E01               	movlw	low STR_5
  1830  000F54  6FA2               	movwf	sprintf@fmt& (0+255),b
  1831  000F56  0E08               	movlw	high STR_5
  1832  000F58  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1833  000F5A  C06A  F0A4         	movff	_h0,?_sprintf+4
  1834  000F5E  C06B  F0A5         	movff	_h0+1,?_sprintf+5
  1835  000F62  C06E  F0A6         	movff	_h,?_sprintf+6
  1836  000F66  C06F  F0A7         	movff	_h+1,?_sprintf+7
  1837  000F6A  C068  F0A8         	movff	_m0,?_sprintf+8
  1838  000F6E  C069  F0A9         	movff	_m0+1,?_sprintf+9
  1839  000F72  C05A  F0AA         	movff	_m,?_sprintf+10
  1840  000F76  C05B  F0AB         	movff	_m+1,?_sprintf+11
  1841  000F7A  C066  F0AC         	movff	_s0,?_sprintf+12
  1842  000F7E  C067  F0AD         	movff	_s0+1,?_sprintf+13
  1843  000F82  C058  F0AE         	movff	_s,?_sprintf+14
  1844  000F86  C059  F0AF         	movff	_s+1,?_sprintf+15
  1845  000F8A  EC71  F00B         	call	_sprintf	;wreg free
  1846  000F8E                     
  1847                           ;main.c: 74:     Lcd_Set_Cursor(2, 1);
  1848  000F8E  0E01               	movlw	1
  1849  000F90  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  1850  000F92  0E02               	movlw	2
  1851  000F94  EC50  F00A         	call	i2_Lcd_Set_Cursor
  1852  000F98                     
  1853                           ;main.c: 75:     Lcd_Write_String(tx_string);
  1854  000F98  0E90               	movlw	low _tx_string
  1855  000F9A  6E05               	movwf	i2Lcd_Write_String@a^0,c
  1856  000F9C  0E00               	movlw	high _tx_string
  1857  000F9E  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  1858  000FA0  EC9E  F009         	call	i2_Lcd_Write_String	;wreg free
  1859  000FA4  0012               	return		;funcret
  1860  000FA6                     __end_of_disp_cronometro:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function i2_Lcd_Write_String *****************
  1864 ;; Defined at:
  1865 ;;		line 88 in file "./lcd.h"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  a               2    4[COMRAM] PTR unsigned char 
  1868 ;;		 -> STR_6(17), tx_string(16), 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  i               2    8[COMRAM] int 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1880 ;;      Params:         2       0       0       0       0       0       0       0       0
  1881 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1882 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1883 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1884 ;;Total ram usage:        6 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 2
  1887 ;; This function calls:
  1888 ;;		i2_Lcd_Write_Char
  1889 ;; This function is called by:
  1890 ;;		_disp_cronometro
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text12
  1895  00133C                     __ptext12:
  1896                           	callstack 0
  1897  00133C                     i2_Lcd_Write_String:
  1898                           	callstack 23
  1899  00133C                     
  1900                           ;./lcd.h: 89:     int i;;./lcd.h: 90:     for (i = 0; a[i] != '\0'; i++)
  1901  00133C  0E00               	movlw	0
  1902  00133E  6E0A               	movwf	(i2Lcd_Write_String@i+1)^0,c
  1903  001340  0E00               	movlw	0
  1904  001342  6E09               	movwf	i2Lcd_Write_String@i^0,c
  1905  001344  EFBE  F009         	goto	i2l1765
  1906  001348                     i2l1761:
  1907                           
  1908                           ;./lcd.h: 91:         Lcd_Write_Char(a[i]);
  1909  001348  5009               	movf	i2Lcd_Write_String@i^0,w,c
  1910  00134A  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  1911  00134C  6E07               	movwf	??i2_Lcd_Write_String^0,c
  1912  00134E  500A               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  1913  001350  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  1914  001352  6E08               	movwf	(??i2_Lcd_Write_String+1)^0,c
  1915  001354  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  1916  001358  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  1917  00135C  6AF8               	clrf	tblptru,c
  1918  00135E  0E07               	movlw	(high __ramtop+-1)
  1919  001360  64F7               	cpfsgt	tblptrh,c
  1920  001362  D003               	bra	i2u118_47
  1921  001364  0008               	tblrd		*
  1922  001366  50F5               	movf	tablat,w,c
  1923  001368  D005               	bra	i2u118_40
  1924  00136A                     i2u118_47:
  1925  00136A  CFF6 FFE1          	movff	tblptrl,fsr1l
  1926  00136E  CFF7 FFE2          	movff	tblptrh,fsr1h
  1927  001372  50E7               	movf	indf1,w,c
  1928  001374                     i2u118_40:
  1929  001374  EC41  F00C         	call	i2_Lcd_Write_Char
  1930  001378  4A09               	infsnz	i2Lcd_Write_String@i^0,f,c
  1931  00137A  2A0A               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  1932  00137C                     i2l1765:
  1933  00137C  5009               	movf	i2Lcd_Write_String@i^0,w,c
  1934  00137E  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  1935  001380  6E07               	movwf	??i2_Lcd_Write_String^0,c
  1936  001382  500A               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  1937  001384  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  1938  001386  6E08               	movwf	(??i2_Lcd_Write_String+1)^0,c
  1939  001388  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  1940  00138C  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  1941  001390  6AF8               	clrf	tblptru,c
  1942  001392  0E07               	movlw	(high __ramtop+-1)
  1943  001394  64F7               	cpfsgt	tblptrh,c
  1944  001396  D003               	bra	i2u119_47
  1945  001398  0008               	tblrd		*
  1946  00139A  50F5               	movf	tablat,w,c
  1947  00139C  D005               	bra	i2u119_40
  1948  00139E                     i2u119_47:
  1949  00139E  CFF6 FFE1          	movff	tblptrl,fsr1l
  1950  0013A2  CFF7 FFE2          	movff	tblptrh,fsr1h
  1951  0013A6  50E7               	movf	indf1,w,c
  1952  0013A8                     i2u119_40:
  1953  0013A8  0900               	iorlw	0
  1954  0013AA  A4D8               	btfss	status,2,c
  1955  0013AC  EFDA  F009         	goto	i2u120_41
  1956  0013B0  EFDC  F009         	goto	i2u120_40
  1957  0013B4                     i2u120_41:
  1958  0013B4  EFA4  F009         	goto	i2l1761
  1959  0013B8                     i2u120_40:
  1960  0013B8  0012               	return		;funcret
  1961  0013BA                     __end_ofi2_Lcd_Write_String:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function i2_Lcd_Write_Char *****************
  1965 ;; Defined at:
  1966 ;;		line 73 in file "./lcd.h"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  a               1    wreg     unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  a               1    3[COMRAM] unsigned char 
  1971 ;;  y               1    2[COMRAM] unsigned char 
  1972 ;;  temp            1    1[COMRAM] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0
  1983 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1985 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1986 ;;Total ram usage:        3 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 1
  1989 ;; This function calls:
  1990 ;;		i2_Lcd_Port
  1991 ;; This function is called by:
  1992 ;;		i2_Lcd_Write_String
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text13
  1997  001882                     __ptext13:
  1998                           	callstack 0
  1999  001882                     i2_Lcd_Write_Char:
  2000                           	callstack 23
  2001                           
  2002                           ;incstack = 0
  2003                           ;i2Lcd_Write_Char@a stored from wreg
  2004  001882  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  2005  001884                     
  2006                           ;./lcd.h: 74:     char temp, y;;./lcd.h: 75:     temp = a & 0x0F;
  2007  001884  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  2008  001886  0B0F               	andlw	15
  2009  001888  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  2010                           
  2011                           ;./lcd.h: 76:     y = a & 0xF0;
  2012  00188A  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  2013  00188C  0BF0               	andlw	240
  2014  00188E  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  2015  001890                     
  2016                           ;./lcd.h: 77:     LATE0 = 1;
  2017  001890  808D               	bsf	3981,0,c	;volatile
  2018  001892                     
  2019                           ;./lcd.h: 78:     Lcd_Port(y >> 4);
  2020  001892  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  2021  001894  0B0F               	andlw	15
  2022  001896  EC43  F00B         	call	i2_Lcd_Port
  2023  00189A                     
  2024                           ;./lcd.h: 79:     LATE1 = 1;
  2025  00189A  828D               	bsf	3981,1,c	;volatile
  2026  00189C                     
  2027                           ;./lcd.h: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2028  00189C  0E0D               	movlw	13
  2029  00189E                     i2u137_47:
  2030  00189E  2EE8               	decfsz	wreg,f,c
  2031  0018A0  D7FE               	bra	i2u137_47
  2032  0018A2  F000               	nop	
  2033  0018A4                     
  2034                           ;./lcd.h: 81:     LATE1 = 0;
  2035  0018A4  928D               	bcf	3981,1,c	;volatile
  2036  0018A6                     
  2037                           ;./lcd.h: 82:     Lcd_Port(temp);
  2038  0018A6  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  2039  0018A8  EC43  F00B         	call	i2_Lcd_Port
  2040  0018AC                     
  2041                           ;./lcd.h: 83:     LATE1 = 1;
  2042  0018AC  828D               	bsf	3981,1,c	;volatile
  2043  0018AE                     
  2044                           ;./lcd.h: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2045  0018AE  0E0D               	movlw	13
  2046  0018B0                     i2u138_47:
  2047  0018B0  2EE8               	decfsz	wreg,f,c
  2048  0018B2  D7FE               	bra	i2u138_47
  2049  0018B4  F000               	nop	
  2050  0018B6                     
  2051                           ;./lcd.h: 85:     LATE1 = 0;
  2052  0018B6  928D               	bcf	3981,1,c	;volatile
  2053  0018B8  0012               	return		;funcret
  2054  0018BA                     __end_ofi2_Lcd_Write_Char:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function i2_Lcd_Set_Cursor *****************
  2058 ;; Defined at:
  2059 ;;		line 38 in file "./lcd.h"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  a               1    wreg     unsigned char 
  2062 ;;  b               1    3[COMRAM] unsigned char 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  a               1    4[COMRAM] unsigned char 
  2065 ;;  temp            1    7[COMRAM] unsigned char 
  2066 ;;  y               1    6[COMRAM] unsigned char 
  2067 ;;  z               1    5[COMRAM] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2077 ;;      Params:         1       0       0       0       0       0       0       0       0
  2078 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2080 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2081 ;;Total ram usage:        5 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 2
  2084 ;; This function calls:
  2085 ;;		i2_Lcd_Cmd
  2086 ;; This function is called by:
  2087 ;;		_disp_cronometro
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text14
  2092  0014A0                     __ptext14:
  2093                           	callstack 0
  2094  0014A0                     i2_Lcd_Set_Cursor:
  2095                           	callstack 23
  2096                           
  2097                           ;incstack = 0
  2098                           ;i2Lcd_Set_Cursor@a stored from wreg
  2099  0014A0  6E05               	movwf	i2Lcd_Set_Cursor@a^0,c
  2100  0014A2                     
  2101                           ;./lcd.h: 39:     char temp, z, y;;./lcd.h: 40:     if (a == 1) {
  2102  0014A2  0405               	decf	i2Lcd_Set_Cursor@a^0,w,c
  2103  0014A4  A4D8               	btfss	status,2,c
  2104  0014A6  EF57  F00A         	goto	i2u116_41
  2105  0014AA  EF59  F00A         	goto	i2u116_40
  2106  0014AE                     i2u116_41:
  2107  0014AE  EF6A  F00A         	goto	i2l1751
  2108  0014B2                     i2u116_40:
  2109  0014B2                     
  2110                           ;./lcd.h: 41:         temp = 0x80 + b - 1;
  2111  0014B2  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  2112  0014B4  0F7F               	addlw	127
  2113  0014B6  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  2114                           
  2115                           ;./lcd.h: 42:         z = temp >> 4;
  2116  0014B8  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  2117  0014BA  0B0F               	andlw	15
  2118  0014BC  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  2119                           
  2120                           ;./lcd.h: 43:         y = temp & 0x0F;
  2121  0014BE  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  2122  0014C0  0B0F               	andlw	15
  2123  0014C2  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  2124  0014C4                     
  2125                           ;./lcd.h: 44:         Lcd_Cmd(z);
  2126  0014C4  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  2127  0014C6  EC70  F00C         	call	i2_Lcd_Cmd
  2128  0014CA                     
  2129                           ;./lcd.h: 45:         Lcd_Cmd(y);
  2130  0014CA  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  2131  0014CC  EC70  F00C         	call	i2_Lcd_Cmd
  2132                           
  2133                           ;./lcd.h: 46:     } else if (a == 2) {
  2134  0014D0  EF82  F00A         	goto	i2l63
  2135  0014D4                     i2l1751:
  2136  0014D4  0E02               	movlw	2
  2137  0014D6  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  2138  0014D8  A4D8               	btfss	status,2,c
  2139  0014DA  EF71  F00A         	goto	i2u117_41
  2140  0014DE  EF73  F00A         	goto	i2u117_40
  2141  0014E2                     i2u117_41:
  2142  0014E2  EF82  F00A         	goto	i2l63
  2143  0014E6                     i2u117_40:
  2144  0014E6                     
  2145                           ;./lcd.h: 47:         temp = 0xC0 + b - 1;
  2146  0014E6  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  2147  0014E8  0FBF               	addlw	191
  2148  0014EA  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  2149                           
  2150                           ;./lcd.h: 48:         z = temp >> 4;
  2151  0014EC  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  2152  0014EE  0B0F               	andlw	15
  2153  0014F0  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  2154                           
  2155                           ;./lcd.h: 49:         y = temp & 0x0F;
  2156  0014F2  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  2157  0014F4  0B0F               	andlw	15
  2158  0014F6  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  2159  0014F8                     
  2160                           ;./lcd.h: 50:         Lcd_Cmd(z);
  2161  0014F8  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  2162  0014FA  EC70  F00C         	call	i2_Lcd_Cmd
  2163  0014FE                     
  2164                           ;./lcd.h: 51:         Lcd_Cmd(y);
  2165  0014FE  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  2166  001500  EC70  F00C         	call	i2_Lcd_Cmd
  2167  001504                     i2l63:
  2168  001504  0012               	return		;funcret
  2169  001506                     __end_ofi2_Lcd_Set_Cursor:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function i2_Lcd_Cmd *****************
  2173 ;; Defined at:
  2174 ;;		line 25 in file "./lcd.h"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  a               1    wreg     unsigned char 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  a               1    2[COMRAM] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0
  2189 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2190 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2191 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2192 ;;Total ram usage:        2 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 1
  2195 ;; This function calls:
  2196 ;;		i2_Lcd_Port
  2197 ;; This function is called by:
  2198 ;;		i2_Lcd_Set_Cursor
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text15
  2203  0018E0                     __ptext15:
  2204                           	callstack 0
  2205  0018E0                     i2_Lcd_Cmd:
  2206                           	callstack 23
  2207                           
  2208                           ;incstack = 0
  2209                           ;i2Lcd_Cmd@a stored from wreg
  2210  0018E0  6E03               	movwf	i2Lcd_Cmd@a^0,c
  2211  0018E2                     
  2212                           ;./lcd.h: 26:     LATE0 = 0;
  2213  0018E2  908D               	bcf	3981,0,c	;volatile
  2214  0018E4                     
  2215                           ;./lcd.h: 27:     Lcd_Port(a);
  2216  0018E4  5003               	movf	i2Lcd_Cmd@a^0,w,c
  2217  0018E6  EC43  F00B         	call	i2_Lcd_Port
  2218  0018EA                     
  2219                           ;./lcd.h: 28:     LATE1 = 1;
  2220  0018EA  828D               	bsf	3981,1,c	;volatile
  2221  0018EC                     
  2222                           ;./lcd.h: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2223  0018EC  0E06               	movlw	6
  2224  0018EE  6E02               	movwf	??i2_Lcd_Cmd^0,c
  2225  0018F0  0E30               	movlw	48
  2226  0018F2                     i2u139_47:
  2227  0018F2  2EE8               	decfsz	wreg,f,c
  2228  0018F4  D7FE               	bra	i2u139_47
  2229  0018F6  2E02               	decfsz	??i2_Lcd_Cmd^0,f,c
  2230  0018F8  D7FC               	bra	i2u139_47
  2231  0018FA  D000               	nop2	
  2232  0018FC                     
  2233                           ;./lcd.h: 30:     LATE1 = 0;
  2234  0018FC  928D               	bcf	3981,1,c	;volatile
  2235  0018FE  0012               	return		;funcret
  2236  001900                     __end_ofi2_Lcd_Cmd:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function i2_Lcd_Port *****************
  2240 ;; Defined at:
  2241 ;;		line 3 in file "./lcd.h"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  a               1    wreg     unsigned char 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  a               1    0[COMRAM] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2255 ;;      Params:         0       0       0       0       0       0       0       0       0
  2256 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2258 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2259 ;;Total ram usage:        1 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		i2_Lcd_Cmd
  2265 ;;		i2_Lcd_Write_Char
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text16
  2270  001686                     __ptext16:
  2271                           	callstack 0
  2272  001686                     i2_Lcd_Port:
  2273                           	callstack 23
  2274                           
  2275                           ;incstack = 0
  2276                           ;i2Lcd_Port@a stored from wreg
  2277  001686  6E01               	movwf	i2Lcd_Port@a^0,c
  2278  001688                     
  2279                           ;./lcd.h: 4:     if (a & 1)
  2280  001688  A001               	btfss	i2Lcd_Port@a^0,0,c
  2281  00168A  EF49  F00B         	goto	i2u105_41
  2282  00168E  EF4B  F00B         	goto	i2u105_40
  2283  001692                     i2u105_41:
  2284  001692  EF4E  F00B         	goto	i2l43
  2285  001696                     i2u105_40:
  2286  001696                     
  2287                           ;./lcd.h: 5:         LATD4 = 1;
  2288  001696  888C               	bsf	3980,4,c	;volatile
  2289  001698  EF4F  F00B         	goto	i2l1623
  2290  00169C                     i2l43:
  2291                           
  2292                           ;./lcd.h: 7:         LATD4 = 0;
  2293  00169C  988C               	bcf	3980,4,c	;volatile
  2294  00169E                     i2l1623:
  2295                           
  2296                           ;./lcd.h: 9:     if (a & 2)
  2297  00169E  A201               	btfss	i2Lcd_Port@a^0,1,c
  2298  0016A0  EF54  F00B         	goto	i2u106_41
  2299  0016A4  EF56  F00B         	goto	i2u106_40
  2300  0016A8                     i2u106_41:
  2301  0016A8  EF59  F00B         	goto	i2l45
  2302  0016AC                     i2u106_40:
  2303  0016AC                     
  2304                           ;./lcd.h: 10:         LATD5 = 1;
  2305  0016AC  8A8C               	bsf	3980,5,c	;volatile
  2306  0016AE  EF5A  F00B         	goto	i2l1627
  2307  0016B2                     i2l45:
  2308                           
  2309                           ;./lcd.h: 12:         LATD5 = 0;
  2310  0016B2  9A8C               	bcf	3980,5,c	;volatile
  2311  0016B4                     i2l1627:
  2312                           
  2313                           ;./lcd.h: 14:     if (a & 4)
  2314  0016B4  A401               	btfss	i2Lcd_Port@a^0,2,c
  2315  0016B6  EF5F  F00B         	goto	i2u107_41
  2316  0016BA  EF61  F00B         	goto	i2u107_40
  2317  0016BE                     i2u107_41:
  2318  0016BE  EF64  F00B         	goto	i2l47
  2319  0016C2                     i2u107_40:
  2320  0016C2                     
  2321                           ;./lcd.h: 15:         LATD6 = 1;
  2322  0016C2  8C8C               	bsf	3980,6,c	;volatile
  2323  0016C4  EF65  F00B         	goto	i2l1631
  2324  0016C8                     i2l47:
  2325                           
  2326                           ;./lcd.h: 17:         LATD6 = 0;
  2327  0016C8  9C8C               	bcf	3980,6,c	;volatile
  2328  0016CA                     i2l1631:
  2329                           
  2330                           ;./lcd.h: 19:     if (a & 8)
  2331  0016CA  A601               	btfss	i2Lcd_Port@a^0,3,c
  2332  0016CC  EF6A  F00B         	goto	i2u108_41
  2333  0016D0  EF6C  F00B         	goto	i2u108_40
  2334  0016D4                     i2u108_41:
  2335  0016D4  EF6F  F00B         	goto	i2l49
  2336  0016D8                     i2u108_40:
  2337  0016D8                     
  2338                           ;./lcd.h: 20:         LATD7 = 1;
  2339  0016D8  8E8C               	bsf	3980,7,c	;volatile
  2340  0016DA  EF70  F00B         	goto	i2l51
  2341  0016DE                     i2l49:
  2342                           
  2343                           ;./lcd.h: 22:         LATD7 = 0;
  2344  0016DE  9E8C               	bcf	3980,7,c	;volatile
  2345  0016E0                     i2l51:
  2346  0016E0  0012               	return		;funcret
  2347  0016E2                     __end_ofi2_Lcd_Port:
  2348                           	callstack 0
  2349                           
  2350 ;; *************** function _sprintf *****************
  2351 ;; Defined at:
  2352 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2355 ;;		 -> tx_string(16), 
  2356 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2357 ;;		 -> STR_5(23), 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  f               6   18[BANK0 ] struct _IO_FILE
  2360 ;;  ap              2   16[BANK0 ] PTR void [1]
  2361 ;;		 -> ?_sprintf(2), 
  2362 ;;  ret             2    0        int 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2    0[BANK0 ] int 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2372 ;;      Params:         0      16       0       0       0       0       0       0       0
  2373 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         0      24       0       0       0       0       0       0       0
  2376 ;;Total ram usage:       24 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 7
  2379 ;; This function calls:
  2380 ;;		_vfprintf
  2381 ;; This function is called by:
  2382 ;;		_disp_cronometro
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text17
  2387  0016E2                     __ptext17:
  2388                           	callstack 0
  2389  0016E2                     _sprintf:
  2390                           	callstack 18
  2391  0016E2  0EA4               	movlw	low (?_sprintf+4)
  2392  0016E4  0100               	movlb	0	; () banked
  2393  0016E6  6FB0               	movwf	sprintf@ap& (0+255),b
  2394  0016E8  0E00               	movlw	high (?_sprintf+4)
  2395  0016EA  6FB1               	movwf	(sprintf@ap+1)& (0+255),b
  2396  0016EC  C0A0  F0B2         	movff	sprintf@s,sprintf@f
  2397  0016F0  C0A1  F0B3         	movff	sprintf@s+1,sprintf@f+1
  2398  0016F4                     
  2399                           ; BSR set to: 0
  2400  0016F4  0E00               	movlw	0
  2401  0016F6  6FB5               	movwf	(sprintf@f+3)& (0+255),b
  2402  0016F8  0E00               	movlw	0
  2403  0016FA  6FB4               	movwf	(sprintf@f+2)& (0+255),b
  2404  0016FC                     
  2405                           ; BSR set to: 0
  2406  0016FC  0E00               	movlw	0
  2407  0016FE  6FB7               	movwf	(sprintf@f+5)& (0+255),b
  2408  001700  0E00               	movlw	0
  2409  001702  6FB6               	movwf	(sprintf@f+4)& (0+255),b
  2410  001704                     
  2411                           ; BSR set to: 0
  2412  001704  0EB2               	movlw	low sprintf@f
  2413  001706  6E50               	movwf	vfprintf@fp^0,c
  2414  001708  0E00               	movlw	high sprintf@f
  2415  00170A  6E51               	movwf	(vfprintf@fp+1)^0,c
  2416  00170C  C0A2  F052         	movff	sprintf@fmt,vfprintf@fmt
  2417  001710  C0A3  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2418  001714  0EB0               	movlw	low sprintf@ap
  2419  001716  6E54               	movwf	vfprintf@ap^0,c
  2420  001718  0E00               	movlw	high sprintf@ap
  2421  00171A  6E55               	movwf	(vfprintf@ap+1)^0,c
  2422  00171C  EC83  F00A         	call	_vfprintf	;wreg free
  2423  001720  0100               	movlb	0	; () banked
  2424  001722  51B4               	movf	(sprintf@f+2)& (0+255),w,b
  2425  001724  25A0               	addwf	sprintf@s& (0+255),w,b
  2426  001726  6ED9               	movwf	fsr2l,c
  2427  001728  51B5               	movf	(sprintf@f+3)& (0+255),w,b
  2428  00172A  21A1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2429  00172C  6EDA               	movwf	fsr2h,c
  2430  00172E  0E00               	movlw	0
  2431  001730  6EDF               	movwf	indf2,c
  2432  001732                     
  2433                           ; BSR set to: 0
  2434  001732  0012               	return		;funcret
  2435  001734                     __end_of_sprintf:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _vfprintf *****************
  2439 ;; Defined at:
  2440 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2443 ;;		 -> sprintf@f(6), 
  2444 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2445 ;;		 -> STR_5(23), 
  2446 ;;  ap              2   83[COMRAM] PTR PTR void 
  2447 ;;		 -> sprintf@ap(2), 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2450 ;;		 -> STR_5(23), 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  2   79[COMRAM] int 
  2453 ;; Registers used:
  2454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2460 ;;      Params:         6       0       0       0       0       0       0       0       0
  2461 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2463 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2464 ;;Total ram usage:        8 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; Hardware stack levels required when called: 6
  2467 ;; This function calls:
  2468 ;;		_vfpfcnvrt
  2469 ;; This function is called by:
  2470 ;;		_sprintf
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text18
  2475  001506                     __ptext18:
  2476                           	callstack 0
  2477  001506                     _vfprintf:
  2478                           	callstack 18
  2479  001506                     
  2480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2481  001506  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2482  00150A  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2483  00150E                     
  2484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2485  00150E  0E00               	movlw	0
  2486  001510  0100               	movlb	0	; () banked
  2487  001512  6F61               	movwf	(_nout+1)& (0+255),b
  2488  001514  0E00               	movlw	0
  2489  001516  6F60               	movwf	_nout& (0+255),b
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2492  001518  EFA1  F00A         	goto	i2l1657
  2493  00151C                     i2l1655:
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2497  00151C  C050  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2498  001520  C051  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2499  001524  0E56               	movlw	low vfprintf@cfmt
  2500  001526  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  2501  001528  0E00               	movlw	high vfprintf@cfmt
  2502  00152A  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2503  00152C  C054  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  2504  001530  C055  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2505  001534  EC16  F004         	call	_vfpfcnvrt	;wreg free
  2506  001538  503C               	movf	?_vfpfcnvrt^0,w,c
  2507  00153A  0100               	movlb	0	; () banked
  2508  00153C  2760               	addwf	_nout& (0+255),f,b
  2509  00153E  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
  2510  001540  2361               	addwfc	(_nout+1)& (0+255),f,b
  2511  001542                     i2l1657:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2515  001542  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2516  001546  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2517  00154A                     	if	0	;tblptru may be non-zero
  2518  00154A                     	endif
  2519  00154A                     	if	0	;tblptru may be non-zero
  2520  00154A                     	endif
  2521  00154A  0008               	tblrd		*
  2522  00154C  50F5               	movf	tablat,w,c
  2523  00154E  0900               	iorlw	0
  2524  001550  A4D8               	btfss	status,2,c
  2525  001552  EFAD  F00A         	goto	i2u113_41
  2526  001556  EFAF  F00A         	goto	i2u113_40
  2527  00155A                     i2u113_41:
  2528  00155A  EF8E  F00A         	goto	i2l1655
  2529  00155E                     i2u113_40:
  2530  00155E                     
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2533  00155E  C060  F050         	movff	_nout,?_vfprintf
  2534  001562  C061  F051         	movff	_nout+1,?_vfprintf+1
  2535  001566                     
  2536                           ; BSR set to: 0
  2537  001566  0012               	return		;funcret
  2538  001568                     __end_of_vfprintf:
  2539                           	callstack 0
  2540                           
  2541 ;; *************** function _vfpfcnvrt *****************
  2542 ;; Defined at:
  2543 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  2546 ;;		 -> sprintf@f(6), 
  2547 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  2548 ;;		 -> vfprintf@cfmt(2), 
  2549 ;;  ap              2   63[COMRAM] PTR PTR void 
  2550 ;;		 -> sprintf@ap(2), 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  llu             8   69[COMRAM] unsigned long long 
  2553 ;;  ll              8    0        long long 
  2554 ;;  f               4    0        long long 
  2555 ;;  vp              3    0        PTR void 
  2556 ;;  ct              3    0        unsigned char [3]
  2557 ;;  cp              2   77[COMRAM] PTR unsigned char 
  2558 ;;		 -> NULL(0), ?_sprintf(2), STR_4(2), STR_3(2), 
  2559 ;;		 -> STR_2(2), STR_1(1), 
  2560 ;;  i               2    0        int 
  2561 ;;  done            2    0        int 
  2562 ;;  c               1    0        unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  2   59[COMRAM] int 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2572 ;;      Params:         6       0       0       0       0       0       0       0       0
  2573 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2574 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2575 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2576 ;;Total ram usage:       20 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 5
  2579 ;; This function calls:
  2580 ;;		_fputc
  2581 ;;		_stoa
  2582 ;;		_utoa
  2583 ;; This function is called by:
  2584 ;;		_vfprintf
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text19
  2589  00082C                     __ptext19:
  2590                           	callstack 0
  2591  00082C                     _vfpfcnvrt:
  2592                           	callstack 18
  2593  00082C                     
  2594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2595  00082C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2596  000830  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2597  000834  CFDE FFF6          	movff	postinc2,tblptrl
  2598  000838  CFDD FFF7          	movff	postdec2,tblptrh
  2599  00083C                     	if	0	;tblptru may be non-zero
  2600  00083C                     	endif
  2601  00083C                     	if	0	;tblptru may be non-zero
  2602  00083C                     	endif
  2603  00083C  0008               	tblrd		*
  2604  00083E  50F5               	movf	tablat,w,c
  2605  000840  0A25               	xorlw	37
  2606  000842  A4D8               	btfss	status,2,c
  2607  000844  EF26  F004         	goto	i2u101_41
  2608  000848  EF28  F004         	goto	i2u101_40
  2609  00084C                     i2u101_41:
  2610  00084C  EF00  F005         	goto	i2l1611
  2611  000850                     i2u101_40:
  2612  000850                     
  2613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2614  000850  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2615  000854  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2616  000858  2ADE               	incf	postinc2,f,c
  2617  00085A  0E00               	movlw	0
  2618  00085C  22DD               	addwfc	postdec2,f,c
  2619  00085E                     
  2620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2621  00085E  0E00               	movlw	0
  2622  000860  0100               	movlb	0	; () banked
  2623  000862  6F63               	movwf	(_width+1)& (0+255),b
  2624  000864  0E00               	movlw	0
  2625  000866  6F62               	movwf	_width& (0+255),b
  2626  000868  C062  F05C         	movff	_width,_flags
  2627  00086C  C063  F05D         	movff	_width+1,_flags+1
  2628  000870                     
  2629                           ; BSR set to: 0
  2630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2631  000870  6964               	setf	_prec& (0+255),b
  2632  000872  6965               	setf	(_prec+1)& (0+255),b
  2633  000874                     
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  2636  000874  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2637  000878  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2638  00087C  CFDE FFF6          	movff	postinc2,tblptrl
  2639  000880  CFDD FFF7          	movff	postdec2,tblptrh
  2640  000884                     	if	0	;tblptru may be non-zero
  2641  000884                     	endif
  2642  000884                     	if	0	;tblptru may be non-zero
  2643  000884                     	endif
  2644  000884  0008               	tblrd		*
  2645  000886  50F5               	movf	tablat,w,c
  2646  000888  0A73               	xorlw	115
  2647  00088A  A4D8               	btfss	status,2,c
  2648  00088C  EF4A  F004         	goto	i2u102_41
  2649  000890  EF4C  F004         	goto	i2u102_40
  2650  000894                     i2u102_41:
  2651  000894  EF77  F004         	goto	i2l1587
  2652  000898                     i2u102_40:
  2653  000898                     
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  2656  000898  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2657  00089C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2658  0008A0  2ADE               	incf	postinc2,f,c
  2659  0008A2  0E00               	movlw	0
  2660  0008A4  22DD               	addwfc	postdec2,f,c
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2663  0008A6  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2664  0008AA  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2665  0008AE  CFDF F042          	movff	indf2,??_vfpfcnvrt
  2666  0008B2  0E02               	movlw	2
  2667  0008B4  26DE               	addwf	postinc2,f,c
  2668  0008B6  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  2669  0008BA  0E00               	movlw	0
  2670  0008BC  22DD               	addwfc	postdec2,f,c
  2671  0008BE  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2672  0008C2  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2673  0008C6  CFDE F04E          	movff	postinc2,vfpfcnvrt@cp
  2674  0008CA  CFDD F04F          	movff	postdec2,vfpfcnvrt@cp+1
  2675  0008CE                     
  2676                           ; BSR set to: 0
  2677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  2678  0008CE  C03C  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  2679  0008D2  C03D  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2680  0008D6  C04E  F00C         	movff	vfpfcnvrt@cp,stoa@s
  2681  0008DA  C04F  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2682  0008DE  EC1C  F006         	call	_stoa	;wreg free
  2683  0008E2  C00A  F03C         	movff	?_stoa,?_vfpfcnvrt
  2684  0008E6  C00B  F03D         	movff	?_stoa+1,?_vfpfcnvrt+1
  2685  0008EA  EF1B  F005         	goto	i2l886
  2686  0008EE                     i2l1587:
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2690  0008EE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2691  0008F2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2692  0008F6  CFDE FFF6          	movff	postinc2,tblptrl
  2693  0008FA  CFDD FFF7          	movff	postdec2,tblptrh
  2694  0008FE                     	if	0	;tblptru may be non-zero
  2695  0008FE                     	endif
  2696  0008FE                     	if	0	;tblptru may be non-zero
  2697  0008FE                     	endif
  2698  0008FE  0008               	tblrd		*
  2699  000900  50F5               	movf	tablat,w,c
  2700  000902  0A75               	xorlw	117
  2701  000904  A4D8               	btfss	status,2,c
  2702  000906  EF87  F004         	goto	i2u103_41
  2703  00090A  EF89  F004         	goto	i2u103_40
  2704  00090E                     i2u103_41:
  2705  00090E  EFCA  F004         	goto	i2l1595
  2706  000912                     i2u103_40:
  2707  000912                     
  2708                           ; BSR set to: 0
  2709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2710  000912  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2711  000916  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2712  00091A  2ADE               	incf	postinc2,f,c
  2713  00091C  0E00               	movlw	0
  2714  00091E  22DD               	addwfc	postdec2,f,c
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2717  000920  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2718  000924  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2719  000928  CFDF F042          	movff	indf2,??_vfpfcnvrt
  2720  00092C  0E02               	movlw	2
  2721  00092E  26DE               	addwf	postinc2,f,c
  2722  000930  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  2723  000934  0E00               	movlw	0
  2724  000936  22DD               	addwfc	postdec2,f,c
  2725  000938  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2726  00093C  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2727  000940  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  2728  000944  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  2729  000948  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2730  00094C  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2731  000950  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  2732  000952  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  2733  000954  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  2734  000956  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  2735  000958  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  2736  00095A  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  2737  00095C                     
  2738                           ; BSR set to: 0
  2739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2740  00095C  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2741  000960  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2742  000964  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  2743  000968  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2744  00096C  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2745  000970  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2746  000974  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2747  000978  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2748  00097C  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2749  000980  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2750  000984  EC1C  F005         	call	_utoa	;wreg free
  2751  000988  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  2752  00098C  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  2753  000990  EF1B  F005         	goto	i2l886
  2754  000994                     i2l1595:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2758  000994  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2759  000998  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2760  00099C  CFDE FFF6          	movff	postinc2,tblptrl
  2761  0009A0  CFDD FFF7          	movff	postdec2,tblptrh
  2762  0009A4                     	if	0	;tblptru may be non-zero
  2763  0009A4                     	endif
  2764  0009A4                     	if	0	;tblptru may be non-zero
  2765  0009A4                     	endif
  2766  0009A4  0008               	tblrd		*
  2767  0009A6  50F5               	movf	tablat,w,c
  2768  0009A8  0A25               	xorlw	37
  2769  0009AA  A4D8               	btfss	status,2,c
  2770  0009AC  EFDA  F004         	goto	i2u104_41
  2771  0009B0  EFDC  F004         	goto	i2u104_40
  2772  0009B4                     i2u104_41:
  2773  0009B4  EFF3  F004         	goto	i2l1605
  2774  0009B8                     i2u104_40:
  2775  0009B8                     
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2778  0009B8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2779  0009BC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2780  0009C0  2ADE               	incf	postinc2,f,c
  2781  0009C2  0E00               	movlw	0
  2782  0009C4  22DD               	addwfc	postdec2,f,c
  2783  0009C6                     
  2784                           ; BSR set to: 0
  2785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2786  0009C6  0E00               	movlw	0
  2787  0009C8  6E02               	movwf	(fputc@c+1)^0,c
  2788  0009CA  0E25               	movlw	37
  2789  0009CC  6E01               	movwf	fputc@c^0,c
  2790  0009CE  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2791  0009D2  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2792  0009D6  EC3B  F008         	call	_fputc	;wreg free
  2793  0009DA                     i2l1601:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2796  0009DA  0E00               	movlw	0
  2797  0009DC  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  2798  0009DE  0E01               	movlw	1
  2799  0009E0  6E3C               	movwf	?_vfpfcnvrt^0,c
  2800  0009E2  EF1B  F005         	goto	i2l886
  2801  0009E6                     i2l1605:
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2805  0009E6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2806  0009EA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2807  0009EE  2ADE               	incf	postinc2,f,c
  2808  0009F0  0E00               	movlw	0
  2809  0009F2  22DD               	addwfc	postdec2,f,c
  2810  0009F4                     
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2813  0009F4  0E00               	movlw	0
  2814  0009F6  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  2815  0009F8  0E00               	movlw	0
  2816  0009FA  6E3C               	movwf	?_vfpfcnvrt^0,c
  2817  0009FC  EF1B  F005         	goto	i2l886
  2818  000A00                     i2l1611:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2821  000A00  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2822  000A04  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2823  000A08  CFDE FFF6          	movff	postinc2,tblptrl
  2824  000A0C  CFDD FFF7          	movff	postdec2,tblptrh
  2825  000A10                     	if	0	;tblptru may be non-zero
  2826  000A10                     	endif
  2827  000A10                     	if	0	;tblptru may be non-zero
  2828  000A10                     	endif
  2829  000A10  0008               	tblrd		*
  2830  000A12  50F5               	movf	tablat,w,c
  2831  000A14  6E01               	movwf	fputc@c^0,c
  2832  000A16  6A02               	clrf	(fputc@c+1)^0,c
  2833  000A18  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2834  000A1C  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2835  000A20  EC3B  F008         	call	_fputc	;wreg free
  2836  000A24                     
  2837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2838  000A24  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2839  000A28  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2840  000A2C  2ADE               	incf	postinc2,f,c
  2841  000A2E  0E00               	movlw	0
  2842  000A30  22DD               	addwfc	postdec2,f,c
  2843  000A32  EFED  F004         	goto	i2l1601
  2844  000A36                     i2l886:
  2845  000A36  0012               	return		;funcret
  2846  000A38                     __end_of_vfpfcnvrt:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function _utoa *****************
  2850 ;; Defined at:
  2851 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2854 ;;		 -> sprintf@f(6), 
  2855 ;;  d               8   29[COMRAM] unsigned long long 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  n               8   49[COMRAM] unsigned long long 
  2858 ;;  i               2   57[COMRAM] int 
  2859 ;;  w               2   47[COMRAM] int 
  2860 ;;  p               2   45[COMRAM] int 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  2   27[COMRAM] int 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2870 ;;      Params:        10       0       0       0       0       0       0       0       0
  2871 ;;      Locals:        14       0       0       0       0       0       0       0       0
  2872 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2873 ;;      Totals:        32       0       0       0       0       0       0       0       0
  2874 ;;Total ram usage:       32 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 4
  2877 ;; This function calls:
  2878 ;;		___lodiv
  2879 ;;		___lomod
  2880 ;;		_pad
  2881 ;; This function is called by:
  2882 ;;		_vfpfcnvrt
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text20
  2887  000A38                     __ptext20:
  2888                           	callstack 0
  2889  000A38                     _utoa:
  2890                           	callstack 18
  2891  000A38                     
  2892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2893  000A38  0100               	movlb	0	; () banked
  2894  000A3A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2895  000A3C  EF22  F005         	goto	i2u94_41
  2896  000A40  EF24  F005         	goto	i2u94_40
  2897  000A44                     i2u94_41:
  2898  000A44  EF25  F005         	goto	i2l1539
  2899  000A48                     i2u94_40:
  2900  000A48                     
  2901                           ; BSR set to: 0
  2902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2903  000A48  925C               	bcf	_flags^0,1,c
  2904  000A4A                     i2l1539:
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2908  000A4A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2909  000A4C  EF32  F005         	goto	i2u95_40
  2910  000A50  5165               	movf	(_prec+1)& (0+255),w,b
  2911  000A52  E106               	bnz	i2u95_41
  2912  000A54  0564               	decf	_prec& (0+255),w,b
  2913  000A56  B0D8               	btfsc	status,0,c
  2914  000A58  EF30  F005         	goto	i2u95_41
  2915  000A5C  EF32  F005         	goto	i2u95_40
  2916  000A60                     i2u95_41:
  2917  000A60  EF38  F005         	goto	i2l871
  2918  000A64                     i2u95_40:
  2919  000A64                     
  2920                           ; BSR set to: 0
  2921  000A64  0E00               	movlw	0
  2922  000A66  6E2F               	movwf	(utoa@p+1)^0,c
  2923  000A68  0E01               	movlw	1
  2924  000A6A  6E2E               	movwf	utoa@p^0,c
  2925  000A6C  EF3C  F005         	goto	i2l873
  2926  000A70                     i2l871:
  2927                           
  2928                           ; BSR set to: 0
  2929  000A70  C064  F02E         	movff	_prec,utoa@p
  2930  000A74  C065  F02F         	movff	_prec+1,utoa@p+1
  2931  000A78                     i2l873:
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2935  000A78  C062  F030         	movff	_width,utoa@w
  2936  000A7C  C063  F031         	movff	_width+1,utoa@w+1
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2939  000A80  C01E  F032         	movff	utoa@d,utoa@n
  2940  000A84  C01F  F033         	movff	utoa@d+1,utoa@n+1
  2941  000A88  C020  F034         	movff	utoa@d+2,utoa@n+2
  2942  000A8C  C021  F035         	movff	utoa@d+3,utoa@n+3
  2943  000A90  C022  F036         	movff	utoa@d+4,utoa@n+4
  2944  000A94  C023  F037         	movff	utoa@d+5,utoa@n+5
  2945  000A98  C024  F038         	movff	utoa@d+6,utoa@n+6
  2946  000A9C  C025  F039         	movff	utoa@d+7,utoa@n+7
  2947  000AA0                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2950  000AA0  0E00               	movlw	0
  2951  000AA2  6E3B               	movwf	(utoa@i+1)^0,c
  2952  000AA4  0E1F               	movlw	31
  2953  000AA6  6E3A               	movwf	utoa@i^0,c
  2954  000AA8                     
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2957  000AA8  0E00               	movlw	0
  2958  000AAA  6F8F               	movwf	(_dbuf+31)& (0+255),b
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2961  000AAC  EFCE  F005         	goto	i2l1557
  2962  000AB0                     i2l1547:
  2963                           
  2964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  2965  000AB0  063A               	decf	utoa@i^0,f,c
  2966  000AB2  A0D8               	btfss	status,0,c
  2967  000AB4  063B               	decf	(utoa@i+1)^0,f,c
  2968  000AB6                     
  2969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2970  000AB6  0E70               	movlw	low _dbuf
  2971  000AB8  243A               	addwf	utoa@i^0,w,c
  2972  000ABA  6ED9               	movwf	fsr2l,c
  2973  000ABC  0E00               	movlw	high _dbuf
  2974  000ABE  203B               	addwfc	(utoa@i+1)^0,w,c
  2975  000AC0  6EDA               	movwf	fsr2h,c
  2976  000AC2  C032  F001         	movff	utoa@n,___lomod@dividend
  2977  000AC6  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  2978  000ACA  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  2979  000ACE  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  2980  000AD2  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  2981  000AD6  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  2982  000ADA  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  2983  000ADE  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  2984  000AE2  0E0A               	movlw	10
  2985  000AE4  6E09               	movwf	___lomod@divisor^0,c
  2986  000AE6  0E00               	movlw	0
  2987  000AE8  6E0A               	movwf	(___lomod@divisor+1)^0,c
  2988  000AEA  0E00               	movlw	0
  2989  000AEC  6E0B               	movwf	(___lomod@divisor+2)^0,c
  2990  000AEE  0E00               	movlw	0
  2991  000AF0  6E0C               	movwf	(___lomod@divisor+3)^0,c
  2992  000AF2  0E00               	movlw	0
  2993  000AF4  6E0D               	movwf	(___lomod@divisor+4)^0,c
  2994  000AF6  0E00               	movlw	0
  2995  000AF8  6E0E               	movwf	(___lomod@divisor+5)^0,c
  2996  000AFA  0E00               	movlw	0
  2997  000AFC  6E0F               	movwf	(___lomod@divisor+6)^0,c
  2998  000AFE  0E00               	movlw	0
  2999  000B00  6E10               	movwf	(___lomod@divisor+7)^0,c
  3000  000B02  ECD3  F007         	call	___lomod	;wreg free
  3001  000B06  C001  F026         	movff	?___lomod,??_utoa
  3002  000B0A  C002  F027         	movff	?___lomod+1,??_utoa+1
  3003  000B0E  C003  F028         	movff	?___lomod+2,??_utoa+2
  3004  000B12  C004  F029         	movff	?___lomod+3,??_utoa+3
  3005  000B16  C005  F02A         	movff	?___lomod+4,??_utoa+4
  3006  000B1A  C006  F02B         	movff	?___lomod+5,??_utoa+5
  3007  000B1E  C007  F02C         	movff	?___lomod+6,??_utoa+6
  3008  000B22  C008  F02D         	movff	?___lomod+7,??_utoa+7
  3009  000B26  5026               	movf	??_utoa^0,w,c
  3010  000B28  0F30               	addlw	48
  3011  000B2A  6EDF               	movwf	indf2,c
  3012  000B2C                     
  3013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  3014  000B2C  062E               	decf	utoa@p^0,f,c
  3015  000B2E  A0D8               	btfss	status,0,c
  3016  000B30  062F               	decf	(utoa@p+1)^0,f,c
  3017  000B32                     
  3018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  3019  000B32  0630               	decf	utoa@w^0,f,c
  3020  000B34  A0D8               	btfss	status,0,c
  3021  000B36  0631               	decf	(utoa@w+1)^0,f,c
  3022  000B38                     
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  3024  000B38  C032  F001         	movff	utoa@n,___lodiv@dividend
  3025  000B3C  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  3026  000B40  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  3027  000B44  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  3028  000B48  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  3029  000B4C  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  3030  000B50  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  3031  000B54  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  3032  000B58  0E0A               	movlw	10
  3033  000B5A  6E09               	movwf	___lodiv@divisor^0,c
  3034  000B5C  0E00               	movlw	0
  3035  000B5E  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  3036  000B60  0E00               	movlw	0
  3037  000B62  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  3038  000B64  0E00               	movlw	0
  3039  000B66  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  3040  000B68  0E00               	movlw	0
  3041  000B6A  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  3042  000B6C  0E00               	movlw	0
  3043  000B6E  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  3044  000B70  0E00               	movlw	0
  3045  000B72  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  3046  000B74  0E00               	movlw	0
  3047  000B76  6E10               	movwf	(___lodiv@divisor+7)^0,c
  3048  000B78  ECE8  F006         	call	___lodiv	;wreg free
  3049  000B7C  C001  F032         	movff	?___lodiv,utoa@n
  3050  000B80  C002  F033         	movff	?___lodiv+1,utoa@n+1
  3051  000B84  C003  F034         	movff	?___lodiv+2,utoa@n+2
  3052  000B88  C004  F035         	movff	?___lodiv+3,utoa@n+3
  3053  000B8C  C005  F036         	movff	?___lodiv+4,utoa@n+4
  3054  000B90  C006  F037         	movff	?___lodiv+5,utoa@n+5
  3055  000B94  C007  F038         	movff	?___lodiv+6,utoa@n+6
  3056  000B98  C008  F039         	movff	?___lodiv+7,utoa@n+7
  3057  000B9C                     i2l1557:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3060  000B9C  503A               	movf	utoa@i^0,w,c
  3061  000B9E  103B               	iorwf	(utoa@i+1)^0,w,c
  3062  000BA0  B4D8               	btfsc	status,2,c
  3063  000BA2  EFD5  F005         	goto	i2u96_41
  3064  000BA6  EFD7  F005         	goto	i2u96_40
  3065  000BAA                     i2u96_41:
  3066  000BAA  EF07  F006         	goto	i2l1567
  3067  000BAE                     i2u96_40:
  3068  000BAE  5032               	movf	utoa@n^0,w,c
  3069  000BB0  1033               	iorwf	(utoa@n+1)^0,w,c
  3070  000BB2  1034               	iorwf	(utoa@n+2)^0,w,c
  3071  000BB4  1035               	iorwf	(utoa@n+3)^0,w,c
  3072  000BB6  1036               	iorwf	(utoa@n+4)^0,w,c
  3073  000BB8  1037               	iorwf	(utoa@n+5)^0,w,c
  3074  000BBA  1038               	iorwf	(utoa@n+6)^0,w,c
  3075  000BBC  1039               	iorwf	(utoa@n+7)^0,w,c
  3076  000BBE  A4D8               	btfss	status,2,c
  3077  000BC0  EFE4  F005         	goto	i2u97_41
  3078  000BC4  EFE6  F005         	goto	i2u97_40
  3079  000BC8                     i2u97_41:
  3080  000BC8  EF58  F005         	goto	i2l1547
  3081  000BCC                     i2u97_40:
  3082  000BCC  BE2F               	btfsc	(utoa@p+1)^0,7,c
  3083  000BCE  EFF3  F005         	goto	i2u98_40
  3084  000BD2  502F               	movf	(utoa@p+1)^0,w,c
  3085  000BD4  E106               	bnz	i2u98_41
  3086  000BD6  042E               	decf	utoa@p^0,w,c
  3087  000BD8  B0D8               	btfsc	status,0,c
  3088  000BDA  EFF1  F005         	goto	i2u98_41
  3089  000BDE  EFF3  F005         	goto	i2u98_40
  3090  000BE2                     i2u98_41:
  3091  000BE2  EF58  F005         	goto	i2l1547
  3092  000BE6                     i2u98_40:
  3093  000BE6  BE31               	btfsc	(utoa@w+1)^0,7,c
  3094  000BE8  EFFE  F005         	goto	i2u99_41
  3095  000BEC  5031               	movf	(utoa@w+1)^0,w,c
  3096  000BEE  E108               	bnz	i2u99_40
  3097  000BF0  0430               	decf	utoa@w^0,w,c
  3098  000BF2  A0D8               	btfss	status,0,c
  3099  000BF4  EFFE  F005         	goto	i2u99_41
  3100  000BF8  EF00  F006         	goto	i2u99_40
  3101  000BFC                     i2u99_41:
  3102  000BFC  EF07  F006         	goto	i2l1567
  3103  000C00                     i2u99_40:
  3104  000C00  B25C               	btfsc	_flags^0,1,c
  3105  000C02  EF05  F006         	goto	i2u100_41
  3106  000C06  EF07  F006         	goto	i2u100_40
  3107  000C0A                     i2u100_41:
  3108  000C0A  EF58  F005         	goto	i2l1547
  3109  000C0E                     i2u100_40:
  3110  000C0E                     i2l1567:
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  3113  000C0E  C01C  F011         	movff	utoa@fp,pad@fp
  3114  000C12  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  3115  000C16  0E70               	movlw	low _dbuf
  3116  000C18  243A               	addwf	utoa@i^0,w,c
  3117  000C1A  6E13               	movwf	pad@buf^0,c
  3118  000C1C  0E00               	movlw	high _dbuf
  3119  000C1E  203B               	addwfc	(utoa@i+1)^0,w,c
  3120  000C20  6E14               	movwf	(pad@buf+1)^0,c
  3121  000C22  C030  F015         	movff	utoa@w,pad@p
  3122  000C26  C031  F016         	movff	utoa@w+1,pad@p+1
  3123  000C2A  ECA0  F008         	call	_pad	;wreg free
  3124  000C2E  C011  F01C         	movff	?_pad,?_utoa
  3125  000C32  C012  F01D         	movff	?_pad+1,?_utoa+1
  3126  000C36  0012               	return		;funcret
  3127  000C38                     __end_of_utoa:
  3128                           	callstack 0
  3129                           
  3130 ;; *************** function _pad *****************
  3131 ;; Defined at:
  3132 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3135 ;;		 -> sprintf@f(6), 
  3136 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3137 ;;		 -> dbuf(32), 
  3138 ;;  p               2   20[COMRAM] int 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  w               2   25[COMRAM] int 
  3141 ;;  i               2   23[COMRAM] int 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  2   16[COMRAM] int 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3151 ;;      Params:         6       0       0       0       0       0       0       0       0
  3152 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3153 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3154 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3155 ;;Total ram usage:       11 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 3
  3158 ;; This function calls:
  3159 ;;		_fputc
  3160 ;;		_fputs
  3161 ;;		_strlen
  3162 ;; This function is called by:
  3163 ;;		_utoa
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text21
  3168  001140                     __ptext21:
  3169                           	callstack 0
  3170  001140                     _pad:
  3171                           	callstack 18
  3172  001140                     
  3173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3174  001140  A05C               	btfss	_flags^0,0,c
  3175  001142  EFA5  F008         	goto	i2u80_41
  3176  001146  EFA7  F008         	goto	i2u80_40
  3177  00114A                     i2u80_41:
  3178  00114A  EFB1  F008         	goto	i2l1475
  3179  00114E                     i2u80_40:
  3180  00114E                     
  3181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3182  00114E  C013  F00A         	movff	pad@buf,fputs@s
  3183  001152  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3184  001156  C011  F00C         	movff	pad@fp,fputs@fp
  3185  00115A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3186  00115E  ECC1  F00B         	call	_fputs	;wreg free
  3187  001162                     i2l1475:
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3190  001162  BE16               	btfsc	(pad@p+1)^0,7,c
  3191  001164  EFB6  F008         	goto	i2u81_41
  3192  001168  EFB8  F008         	goto	i2u81_40
  3193  00116C                     i2u81_41:
  3194  00116C  EFBE  F008         	goto	i2l1479
  3195  001170                     i2u81_40:
  3196  001170  C015  F01A         	movff	pad@p,pad@w
  3197  001174  C016  F01B         	movff	pad@p+1,pad@w+1
  3198  001178  EFC2  F008         	goto	i2l838
  3199  00117C                     i2l1479:
  3200  00117C  0E00               	movlw	0
  3201  00117E  6E1B               	movwf	(pad@w+1)^0,c
  3202  001180  0E00               	movlw	0
  3203  001182  6E1A               	movwf	pad@w^0,c
  3204  001184                     i2l838:
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3207  001184  0E00               	movlw	0
  3208  001186  6E19               	movwf	(pad@i+1)^0,c
  3209  001188  0E00               	movlw	0
  3210  00118A  6E18               	movwf	pad@i^0,c
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3213  00118C  EFD4  F008         	goto	i2l1485
  3214  001190                     i2l1481:
  3215                           
  3216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3217  001190  0E00               	movlw	0
  3218  001192  6E02               	movwf	(fputc@c+1)^0,c
  3219  001194  0E20               	movlw	32
  3220  001196  6E01               	movwf	fputc@c^0,c
  3221  001198  C011  F003         	movff	pad@fp,fputc@fp
  3222  00119C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3223  0011A0  EC3B  F008         	call	_fputc	;wreg free
  3224  0011A4                     
  3225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3226  0011A4  4A18               	infsnz	pad@i^0,f,c
  3227  0011A6  2A19               	incf	(pad@i+1)^0,f,c
  3228  0011A8                     i2l1485:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3231  0011A8  501A               	movf	pad@w^0,w,c
  3232  0011AA  5C18               	subwf	pad@i^0,w,c
  3233  0011AC  5019               	movf	(pad@i+1)^0,w,c
  3234  0011AE  0A80               	xorlw	128
  3235  0011B0  6E17               	movwf	??_pad^0,c
  3236  0011B2  501B               	movf	(pad@w+1)^0,w,c
  3237  0011B4  0A80               	xorlw	128
  3238  0011B6  5817               	subwfb	??_pad^0,w,c
  3239  0011B8  A0D8               	btfss	status,0,c
  3240  0011BA  EFE1  F008         	goto	i2u82_41
  3241  0011BE  EFE3  F008         	goto	i2u82_40
  3242  0011C2                     i2u82_41:
  3243  0011C2  EFC8  F008         	goto	i2l1481
  3244  0011C6                     i2u82_40:
  3245  0011C6                     
  3246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3247  0011C6  B05C               	btfsc	_flags^0,0,c
  3248  0011C8  EFE8  F008         	goto	i2u83_41
  3249  0011CC  EFEA  F008         	goto	i2u83_40
  3250  0011D0                     i2u83_41:
  3251  0011D0  EFF4  F008         	goto	i2l1489
  3252  0011D4                     i2u83_40:
  3253  0011D4                     
  3254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3255  0011D4  C013  F00A         	movff	pad@buf,fputs@s
  3256  0011D8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3257  0011DC  C011  F00C         	movff	pad@fp,fputs@fp
  3258  0011E0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3259  0011E4  ECC1  F00B         	call	_fputs	;wreg free
  3260  0011E8                     i2l1489:
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3263  0011E8  C013  F001         	movff	pad@buf,strlen@s
  3264  0011EC  C014  F002         	movff	pad@buf+1,strlen@s+1
  3265  0011F0  EC9A  F00B         	call	_strlen	;wreg free
  3266  0011F4  501A               	movf	pad@w^0,w,c
  3267  0011F6  2401               	addwf	?_strlen^0,w,c
  3268  0011F8  6E11               	movwf	?_pad^0,c
  3269  0011FA  501B               	movf	(pad@w+1)^0,w,c
  3270  0011FC  2002               	addwfc	(?_strlen+1)^0,w,c
  3271  0011FE  6E12               	movwf	(?_pad+1)^0,c
  3272  001200  0012               	return		;funcret
  3273  001202                     __end_of_pad:
  3274                           	callstack 0
  3275                           
  3276 ;; *************** function _fputs *****************
  3277 ;; Defined at:
  3278 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3281 ;;		 -> dbuf(32), 
  3282 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3283 ;;		 -> sprintf@f(6), 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  i               2   14[COMRAM] int 
  3286 ;;  c               1   13[COMRAM] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  2    9[COMRAM] int 
  3289 ;; Registers used:
  3290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3296 ;;      Params:         4       0       0       0       0       0       0       0       0
  3297 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3299 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3300 ;;Total ram usage:        7 bytes
  3301 ;; Hardware stack levels used: 1
  3302 ;; Hardware stack levels required when called: 2
  3303 ;; This function calls:
  3304 ;;		_fputc
  3305 ;; This function is called by:
  3306 ;;		_pad
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text22
  3311  001782                     __ptext22:
  3312                           	callstack 0
  3313  001782                     _fputs:
  3314                           	callstack 18
  3315  001782  0E00               	movlw	0
  3316  001784  6E10               	movwf	(fputs@i+1)^0,c
  3317  001786  0E00               	movlw	0
  3318  001788  6E0F               	movwf	fputs@i^0,c
  3319  00178A  EFD2  F00B         	goto	i2l1421
  3320  00178E                     i2l1417:
  3321  00178E  C00E  F001         	movff	fputs@c,fputc@c
  3322  001792  6A02               	clrf	(fputc@c+1)^0,c
  3323  001794  C00C  F003         	movff	fputs@fp,fputc@fp
  3324  001798  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3325  00179C  EC3B  F008         	call	_fputc	;wreg free
  3326  0017A0  4A0F               	infsnz	fputs@i^0,f,c
  3327  0017A2  2A10               	incf	(fputs@i+1)^0,f,c
  3328  0017A4                     i2l1421:
  3329  0017A4  500F               	movf	fputs@i^0,w,c
  3330  0017A6  240A               	addwf	fputs@s^0,w,c
  3331  0017A8  6ED9               	movwf	fsr2l,c
  3332  0017AA  5010               	movf	(fputs@i+1)^0,w,c
  3333  0017AC  200B               	addwfc	(fputs@s+1)^0,w,c
  3334  0017AE  6EDA               	movwf	fsr2h,c
  3335  0017B0  50DF               	movf	indf2,w,c
  3336  0017B2  6E0E               	movwf	fputs@c^0,c
  3337  0017B4  500E               	movf	fputs@c^0,w,c
  3338  0017B6  A4D8               	btfss	status,2,c
  3339  0017B8  EFE0  F00B         	goto	i2u70_41
  3340  0017BC  EFE2  F00B         	goto	i2u70_40
  3341  0017C0                     i2u70_41:
  3342  0017C0  EFC7  F00B         	goto	i2l1417
  3343  0017C4                     i2u70_40:
  3344  0017C4  0012               	return		;funcret
  3345  0017C6                     __end_of_fputs:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function ___lomod *****************
  3349 ;; Defined at:
  3350 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  dividend        8    0[COMRAM] unsigned long long 
  3353 ;;  divisor         8    8[COMRAM] unsigned long long 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  counter         1   16[COMRAM] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  8    0[COMRAM] unsigned long long 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3365 ;;      Params:        16       0       0       0       0       0       0       0       0
  3366 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3368 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3369 ;;Total ram usage:       17 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_utoa
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text23
  3379  000FA6                     __ptext23:
  3380                           	callstack 0
  3381  000FA6                     ___lomod:
  3382                           	callstack 21
  3383  000FA6  5009               	movf	___lomod@divisor^0,w,c
  3384  000FA8  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  3385  000FAA  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  3386  000FAC  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  3387  000FAE  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  3388  000FB0  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  3389  000FB2  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  3390  000FB4  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  3391  000FB6  B4D8               	btfsc	status,2,c
  3392  000FB8  EFE0  F007         	goto	i2u77_41
  3393  000FBC  EFE2  F007         	goto	i2u77_40
  3394  000FC0                     i2u77_41:
  3395  000FC0  EF2A  F008         	goto	i2l583
  3396  000FC4                     i2u77_40:
  3397  000FC4  0E01               	movlw	1
  3398  000FC6  6E11               	movwf	___lomod@counter^0,c
  3399  000FC8  EFF0  F007         	goto	i2l1461
  3400  000FCC                     i2l1459:
  3401  000FCC  90D8               	bcf	status,0,c
  3402  000FCE  3609               	rlcf	___lomod@divisor^0,f,c
  3403  000FD0  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  3404  000FD2  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  3405  000FD4  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  3406  000FD6  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  3407  000FD8  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  3408  000FDA  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  3409  000FDC  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  3410  000FDE  2A11               	incf	___lomod@counter^0,f,c
  3411  000FE0                     i2l1461:
  3412  000FE0  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  3413  000FE2  EFF5  F007         	goto	i2u78_41
  3414  000FE6  EFF7  F007         	goto	i2u78_40
  3415  000FEA                     i2u78_41:
  3416  000FEA  EFE6  F007         	goto	i2l1459
  3417  000FEE                     i2u78_40:
  3418  000FEE                     i2l1463:
  3419  000FEE  5009               	movf	___lomod@divisor^0,w,c
  3420  000FF0  5C01               	subwf	___lomod@dividend^0,w,c
  3421  000FF2  500A               	movf	(___lomod@divisor+1)^0,w,c
  3422  000FF4  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  3423  000FF6  500B               	movf	(___lomod@divisor+2)^0,w,c
  3424  000FF8  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  3425  000FFA  500C               	movf	(___lomod@divisor+3)^0,w,c
  3426  000FFC  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  3427  000FFE  500D               	movf	(___lomod@divisor+4)^0,w,c
  3428  001000  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  3429  001002  500E               	movf	(___lomod@divisor+5)^0,w,c
  3430  001004  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  3431  001006  500F               	movf	(___lomod@divisor+6)^0,w,c
  3432  001008  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  3433  00100A  5010               	movf	(___lomod@divisor+7)^0,w,c
  3434  00100C  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  3435  00100E  A0D8               	btfss	status,0,c
  3436  001010  EF0C  F008         	goto	i2u79_41
  3437  001014  EF0E  F008         	goto	i2u79_40
  3438  001018                     i2u79_41:
  3439  001018  EF1E  F008         	goto	i2l1467
  3440  00101C                     i2u79_40:
  3441  00101C  5009               	movf	___lomod@divisor^0,w,c
  3442  00101E  5E01               	subwf	___lomod@dividend^0,f,c
  3443  001020  500A               	movf	(___lomod@divisor+1)^0,w,c
  3444  001022  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  3445  001024  500B               	movf	(___lomod@divisor+2)^0,w,c
  3446  001026  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  3447  001028  500C               	movf	(___lomod@divisor+3)^0,w,c
  3448  00102A  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  3449  00102C  500D               	movf	(___lomod@divisor+4)^0,w,c
  3450  00102E  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  3451  001030  500E               	movf	(___lomod@divisor+5)^0,w,c
  3452  001032  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  3453  001034  500F               	movf	(___lomod@divisor+6)^0,w,c
  3454  001036  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  3455  001038  5010               	movf	(___lomod@divisor+7)^0,w,c
  3456  00103A  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  3457  00103C                     i2l1467:
  3458  00103C  90D8               	bcf	status,0,c
  3459  00103E  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  3460  001040  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  3461  001042  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  3462  001044  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  3463  001046  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  3464  001048  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  3465  00104A  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  3466  00104C  3209               	rrcf	___lomod@divisor^0,f,c
  3467  00104E  2E11               	decfsz	___lomod@counter^0,f,c
  3468  001050  EFF7  F007         	goto	i2l1463
  3469  001054                     i2l583:
  3470  001054  C001  F001         	movff	___lomod@dividend,?___lomod
  3471  001058  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  3472  00105C  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  3473  001060  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  3474  001064  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  3475  001068  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  3476  00106C  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  3477  001070  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  3478  001074  0012               	return		;funcret
  3479  001076                     __end_of___lomod:
  3480                           	callstack 0
  3481                           
  3482 ;; *************** function ___lodiv *****************
  3483 ;; Defined at:
  3484 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  dividend        8    0[COMRAM] unsigned long long 
  3487 ;;  divisor         8    8[COMRAM] unsigned long long 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  quotient        8   16[COMRAM] unsigned long long 
  3490 ;;  counter         1   24[COMRAM] unsigned char 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  8    0[COMRAM] unsigned long long 
  3493 ;; Registers used:
  3494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3500 ;;      Params:        16       0       0       0       0       0       0       0       0
  3501 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3503 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3504 ;;Total ram usage:       25 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_utoa
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text24
  3514  000DD0                     __ptext24:
  3515                           	callstack 0
  3516  000DD0                     ___lodiv:
  3517                           	callstack 21
  3518  000DD0  EE20  F011         	lfsr	2,___lodiv@quotient
  3519  000DD4  0E07               	movlw	7
  3520  000DD6                     i2u73_41:
  3521  000DD6  6ADE               	clrf	postinc2,c
  3522  000DD8  06E8               	decf	wreg,f,c
  3523  000DDA  E2FD               	bc	i2u73_41
  3524  000DDC  5009               	movf	___lodiv@divisor^0,w,c
  3525  000DDE  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  3526  000DE0  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  3527  000DE2  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  3528  000DE4  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  3529  000DE6  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  3530  000DE8  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  3531  000DEA  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  3532  000DEC  B4D8               	btfsc	status,2,c
  3533  000DEE  EFFB  F006         	goto	i2u74_41
  3534  000DF2  EFFD  F006         	goto	i2u74_40
  3535  000DF6                     i2u74_41:
  3536  000DF6  EF4F  F007         	goto	i2l573
  3537  000DFA                     i2u74_40:
  3538  000DFA  0E01               	movlw	1
  3539  000DFC  6E19               	movwf	___lodiv@counter^0,c
  3540  000DFE  EF0B  F007         	goto	i2l1441
  3541  000E02                     i2l1439:
  3542  000E02  90D8               	bcf	status,0,c
  3543  000E04  3609               	rlcf	___lodiv@divisor^0,f,c
  3544  000E06  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  3545  000E08  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  3546  000E0A  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  3547  000E0C  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  3548  000E0E  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  3549  000E10  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  3550  000E12  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  3551  000E14  2A19               	incf	___lodiv@counter^0,f,c
  3552  000E16                     i2l1441:
  3553  000E16  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  3554  000E18  EF10  F007         	goto	i2u75_41
  3555  000E1C  EF12  F007         	goto	i2u75_40
  3556  000E20                     i2u75_41:
  3557  000E20  EF01  F007         	goto	i2l1439
  3558  000E24                     i2u75_40:
  3559  000E24                     i2l1443:
  3560  000E24  90D8               	bcf	status,0,c
  3561  000E26  3611               	rlcf	___lodiv@quotient^0,f,c
  3562  000E28  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  3563  000E2A  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  3564  000E2C  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  3565  000E2E  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  3566  000E30  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  3567  000E32  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  3568  000E34  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  3569  000E36  5009               	movf	___lodiv@divisor^0,w,c
  3570  000E38  5C01               	subwf	___lodiv@dividend^0,w,c
  3571  000E3A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  3572  000E3C  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  3573  000E3E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  3574  000E40  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  3575  000E42  500C               	movf	(___lodiv@divisor+3)^0,w,c
  3576  000E44  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  3577  000E46  500D               	movf	(___lodiv@divisor+4)^0,w,c
  3578  000E48  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  3579  000E4A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  3580  000E4C  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  3581  000E4E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  3582  000E50  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  3583  000E52  5010               	movf	(___lodiv@divisor+7)^0,w,c
  3584  000E54  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  3585  000E56  A0D8               	btfss	status,0,c
  3586  000E58  EF30  F007         	goto	i2u76_41
  3587  000E5C  EF32  F007         	goto	i2u76_40
  3588  000E60                     i2u76_41:
  3589  000E60  EF43  F007         	goto	i2l1451
  3590  000E64                     i2u76_40:
  3591  000E64  5009               	movf	___lodiv@divisor^0,w,c
  3592  000E66  5E01               	subwf	___lodiv@dividend^0,f,c
  3593  000E68  500A               	movf	(___lodiv@divisor+1)^0,w,c
  3594  000E6A  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  3595  000E6C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  3596  000E6E  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  3597  000E70  500C               	movf	(___lodiv@divisor+3)^0,w,c
  3598  000E72  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  3599  000E74  500D               	movf	(___lodiv@divisor+4)^0,w,c
  3600  000E76  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  3601  000E78  500E               	movf	(___lodiv@divisor+5)^0,w,c
  3602  000E7A  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  3603  000E7C  500F               	movf	(___lodiv@divisor+6)^0,w,c
  3604  000E7E  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  3605  000E80  5010               	movf	(___lodiv@divisor+7)^0,w,c
  3606  000E82  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  3607  000E84  8011               	bsf	___lodiv@quotient^0,0,c
  3608  000E86                     i2l1451:
  3609  000E86  90D8               	bcf	status,0,c
  3610  000E88  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  3611  000E8A  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  3612  000E8C  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  3613  000E8E  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  3614  000E90  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  3615  000E92  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  3616  000E94  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  3617  000E96  3209               	rrcf	___lodiv@divisor^0,f,c
  3618  000E98  2E19               	decfsz	___lodiv@counter^0,f,c
  3619  000E9A  EF12  F007         	goto	i2l1443
  3620  000E9E                     i2l573:
  3621  000E9E  C011  F001         	movff	___lodiv@quotient,?___lodiv
  3622  000EA2  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  3623  000EA6  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  3624  000EAA  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  3625  000EAE  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  3626  000EB2  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  3627  000EB6  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  3628  000EBA  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  3629  000EBE  0012               	return		;funcret
  3630  000EC0                     __end_of___lodiv:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _stoa *****************
  3634 ;; Defined at:
  3635 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  3638 ;;		 -> sprintf@f(6), 
  3639 ;;  s               2   11[COMRAM] PTR unsigned char 
  3640 ;;		 -> NULL(0), ?_sprintf(2), STR_4(2), STR_3(2), 
  3641 ;;		 -> STR_2(2), STR_1(1), 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  nuls            7   14[COMRAM] unsigned char [7]
  3644 ;;  l               2   29[COMRAM] int 
  3645 ;;  p               2   27[COMRAM] int 
  3646 ;;  cp              2   25[COMRAM] PTR unsigned char 
  3647 ;;		 -> NULL(0), stoa@nuls(7), ?_sprintf(2), STR_4(2), 
  3648 ;;		 -> STR_3(2), STR_2(2), STR_1(1), 
  3649 ;;  w               2   23[COMRAM] int 
  3650 ;;  i               2   21[COMRAM] int 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  2    9[COMRAM] int 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3660 ;;      Params:         4       0       0       0       0       0       0       0       0
  3661 ;;      Locals:        17       0       0       0       0       0       0       0       0
  3662 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3663 ;;      Totals:        22       0       0       0       0       0       0       0       0
  3664 ;;Total ram usage:       22 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; Hardware stack levels required when called: 2
  3667 ;; This function calls:
  3668 ;;		_fputc
  3669 ;;		_strlen
  3670 ;; This function is called by:
  3671 ;;		_vfpfcnvrt
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text25
  3676  000C38                     __ptext25:
  3677                           	callstack 0
  3678  000C38                     _stoa:
  3679                           	callstack 20
  3680  000C38                     
  3681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  3682  000C38  EE20  F0CE         	lfsr	2,stoa@F1133
  3683  000C3C  EE10  F00F         	lfsr	1,stoa@nuls
  3684  000C40  0E06               	movlw	6
  3685  000C42                     i2u84_41:
  3686  000C42  CFDB FFE3          	movff	plusw2,plusw1
  3687  000C46  06E8               	decf	wreg,f,c
  3688  000C48  E2FC               	bc	i2u84_41
  3689  000C4A                     
  3690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  3691  000C4A  C00C  F01A         	movff	stoa@s,stoa@cp
  3692  000C4E  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  3693  000C52                     
  3694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  3695  000C52  501A               	movf	stoa@cp^0,w,c
  3696  000C54  101B               	iorwf	(stoa@cp+1)^0,w,c
  3697  000C56  A4D8               	btfss	status,2,c
  3698  000C58  EF30  F006         	goto	i2u85_41
  3699  000C5C  EF32  F006         	goto	i2u85_40
  3700  000C60                     i2u85_41:
  3701  000C60  EF36  F006         	goto	i2l1501
  3702  000C64                     i2u85_40:
  3703  000C64                     
  3704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  3705  000C64  0E0F               	movlw	low stoa@nuls
  3706  000C66  6E1A               	movwf	stoa@cp^0,c
  3707  000C68  0E00               	movlw	high stoa@nuls
  3708  000C6A  6E1B               	movwf	(stoa@cp+1)^0,c
  3709  000C6C                     i2l1501:
  3710                           
  3711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  3712  000C6C  C01A  F001         	movff	stoa@cp,strlen@s
  3713  000C70  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  3714  000C74  EC9A  F00B         	call	_strlen	;wreg free
  3715  000C78  C001  F01E         	movff	?_strlen,stoa@l
  3716  000C7C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  3717  000C80                     
  3718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  3719  000C80  C064  F01C         	movff	_prec,stoa@p
  3720  000C84  C065  F01D         	movff	_prec+1,stoa@p+1
  3721  000C88                     
  3722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  3723  000C88  BE1D               	btfsc	(stoa@p+1)^0,7,c
  3724  000C8A  EF49  F006         	goto	i2u86_41
  3725  000C8E  EF4B  F006         	goto	i2u86_40
  3726  000C92                     i2u86_41:
  3727  000C92  EF60  F006         	goto	i2l852
  3728  000C96                     i2u86_40:
  3729  000C96  501E               	movf	stoa@l^0,w,c
  3730  000C98  5C1C               	subwf	stoa@p^0,w,c
  3731  000C9A  501D               	movf	(stoa@p+1)^0,w,c
  3732  000C9C  0A80               	xorlw	128
  3733  000C9E  6E0E               	movwf	??_stoa^0,c
  3734  000CA0  501F               	movf	(stoa@l+1)^0,w,c
  3735  000CA2  0A80               	xorlw	128
  3736  000CA4  580E               	subwfb	??_stoa^0,w,c
  3737  000CA6  A0D8               	btfss	status,0,c
  3738  000CA8  EF58  F006         	goto	i2u87_41
  3739  000CAC  EF5A  F006         	goto	i2u87_40
  3740  000CB0                     i2u87_41:
  3741  000CB0  EF5C  F006         	goto	i2l850
  3742  000CB4                     i2u87_40:
  3743  000CB4  EF60  F006         	goto	i2l852
  3744  000CB8                     i2l850:
  3745  000CB8  C01C  F01E         	movff	stoa@p,stoa@l
  3746  000CBC  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  3747  000CC0                     i2l852:
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  3750  000CC0  C01E  F01C         	movff	stoa@l,stoa@p
  3751  000CC4  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  3754  000CC8  C062  F018         	movff	_width,stoa@w
  3755  000CCC  C063  F019         	movff	_width+1,stoa@w+1
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  3758  000CD0  B05C               	btfsc	_flags^0,0,c
  3759  000CD2  EF6D  F006         	goto	i2u88_41
  3760  000CD6  EF6F  F006         	goto	i2u88_40
  3761  000CDA                     i2u88_41:
  3762  000CDA  EF8C  F006         	goto	i2l1517
  3763  000CDE                     i2u88_40:
  3764  000CDE  EF7D  F006         	goto	i2l1515
  3765  000CE2                     i2l1511:
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  3768  000CE2  0E00               	movlw	0
  3769  000CE4  6E02               	movwf	(fputc@c+1)^0,c
  3770  000CE6  0E20               	movlw	32
  3771  000CE8  6E01               	movwf	fputc@c^0,c
  3772  000CEA  C00A  F003         	movff	stoa@fp,fputc@fp
  3773  000CEE  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  3774  000CF2  EC3B  F008         	call	_fputc	;wreg free
  3775  000CF6                     
  3776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  3777  000CF6  4A1E               	infsnz	stoa@l^0,f,c
  3778  000CF8  2A1F               	incf	(stoa@l+1)^0,f,c
  3779  000CFA                     i2l1515:
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  3782  000CFA  5018               	movf	stoa@w^0,w,c
  3783  000CFC  5C1E               	subwf	stoa@l^0,w,c
  3784  000CFE  501F               	movf	(stoa@l+1)^0,w,c
  3785  000D00  0A80               	xorlw	128
  3786  000D02  6E0E               	movwf	??_stoa^0,c
  3787  000D04  5019               	movf	(stoa@w+1)^0,w,c
  3788  000D06  0A80               	xorlw	128
  3789  000D08  580E               	subwfb	??_stoa^0,w,c
  3790  000D0A  A0D8               	btfss	status,0,c
  3791  000D0C  EF8A  F006         	goto	i2u89_41
  3792  000D10  EF8C  F006         	goto	i2u89_40
  3793  000D14                     i2u89_41:
  3794  000D14  EF71  F006         	goto	i2l1511
  3795  000D18                     i2u89_40:
  3796  000D18                     i2l1517:
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  3799  000D18  0E00               	movlw	0
  3800  000D1A  6E17               	movwf	(stoa@i+1)^0,c
  3801  000D1C  0E00               	movlw	0
  3802  000D1E  6E16               	movwf	stoa@i^0,c
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  3805  000D20  EFB0  F006         	goto	i2l1525
  3806  000D24                     i2l1519:
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  3809  000D24  C01A  FFF6         	movff	stoa@cp,tblptrl
  3810  000D28  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  3811  000D2C  6AF8               	clrf	tblptru,c
  3812  000D2E  0E07               	movlw	(high __ramtop+-1)
  3813  000D30  64F7               	cpfsgt	tblptrh,c
  3814  000D32  D003               	bra	i2u90_47
  3815  000D34  0008               	tblrd		*
  3816  000D36  50F5               	movf	tablat,w,c
  3817  000D38  D005               	bra	i2u90_40
  3818  000D3A                     i2u90_47:
  3819  000D3A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3820  000D3E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3821  000D42  50E7               	movf	indf1,w,c
  3822  000D44                     i2u90_40:
  3823  000D44  6E0E               	movwf	??_stoa^0,c
  3824  000D46  500E               	movf	??_stoa^0,w,c
  3825  000D48  6E01               	movwf	fputc@c^0,c
  3826  000D4A  6A02               	clrf	(fputc@c+1)^0,c
  3827  000D4C  C00A  F003         	movff	stoa@fp,fputc@fp
  3828  000D50  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  3829  000D54  EC3B  F008         	call	_fputc	;wreg free
  3830  000D58                     
  3831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  3832  000D58  4A1A               	infsnz	stoa@cp^0,f,c
  3833  000D5A  2A1B               	incf	(stoa@cp+1)^0,f,c
  3834  000D5C                     
  3835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  3836  000D5C  4A16               	infsnz	stoa@i^0,f,c
  3837  000D5E  2A17               	incf	(stoa@i+1)^0,f,c
  3838  000D60                     i2l1525:
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  3841  000D60  501C               	movf	stoa@p^0,w,c
  3842  000D62  5C16               	subwf	stoa@i^0,w,c
  3843  000D64  5017               	movf	(stoa@i+1)^0,w,c
  3844  000D66  0A80               	xorlw	128
  3845  000D68  6E0E               	movwf	??_stoa^0,c
  3846  000D6A  501D               	movf	(stoa@p+1)^0,w,c
  3847  000D6C  0A80               	xorlw	128
  3848  000D6E  580E               	subwfb	??_stoa^0,w,c
  3849  000D70  A0D8               	btfss	status,0,c
  3850  000D72  EFBD  F006         	goto	i2u91_41
  3851  000D76  EFBF  F006         	goto	i2u91_40
  3852  000D7A                     i2u91_41:
  3853  000D7A  EF92  F006         	goto	i2l1519
  3854  000D7E                     i2u91_40:
  3855  000D7E                     
  3856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  3857  000D7E  A05C               	btfss	_flags^0,0,c
  3858  000D80  EFC4  F006         	goto	i2u92_41
  3859  000D84  EFC6  F006         	goto	i2u92_40
  3860  000D88                     i2u92_41:
  3861  000D88  EFE3  F006         	goto	i2l862
  3862  000D8C                     i2u92_40:
  3863  000D8C  EFD4  F006         	goto	i2l1533
  3864  000D90                     i2l1529:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  3867  000D90  0E00               	movlw	0
  3868  000D92  6E02               	movwf	(fputc@c+1)^0,c
  3869  000D94  0E20               	movlw	32
  3870  000D96  6E01               	movwf	fputc@c^0,c
  3871  000D98  C00A  F003         	movff	stoa@fp,fputc@fp
  3872  000D9C  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  3873  000DA0  EC3B  F008         	call	_fputc	;wreg free
  3874  000DA4                     
  3875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  3876  000DA4  4A1E               	infsnz	stoa@l^0,f,c
  3877  000DA6  2A1F               	incf	(stoa@l+1)^0,f,c
  3878  000DA8                     i2l1533:
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  3881  000DA8  5018               	movf	stoa@w^0,w,c
  3882  000DAA  5C1E               	subwf	stoa@l^0,w,c
  3883  000DAC  501F               	movf	(stoa@l+1)^0,w,c
  3884  000DAE  0A80               	xorlw	128
  3885  000DB0  6E0E               	movwf	??_stoa^0,c
  3886  000DB2  5019               	movf	(stoa@w+1)^0,w,c
  3887  000DB4  0A80               	xorlw	128
  3888  000DB6  580E               	subwfb	??_stoa^0,w,c
  3889  000DB8  A0D8               	btfss	status,0,c
  3890  000DBA  EFE1  F006         	goto	i2u93_41
  3891  000DBE  EFE3  F006         	goto	i2u93_40
  3892  000DC2                     i2u93_41:
  3893  000DC2  EFC8  F006         	goto	i2l1529
  3894  000DC6                     i2u93_40:
  3895  000DC6                     i2l862:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  3898  000DC6  C01E  F00A         	movff	stoa@l,?_stoa
  3899  000DCA  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  3900  000DCE  0012               	return		;funcret
  3901  000DD0                     __end_of_stoa:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _strlen *****************
  3905 ;; Defined at:
  3906 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3909 ;;		 -> dbuf(32), NULL(0), stoa@nuls(7), ?_sprintf(2), 
  3910 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(1), 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3913 ;;		 -> dbuf(32), NULL(0), stoa@nuls(7), ?_sprintf(2), 
  3914 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(1), 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  2    0[COMRAM] unsigned int 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3924 ;;      Params:         2       0       0       0       0       0       0       0       0
  3925 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3927 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3928 ;;Total ram usage:        4 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_pad
  3934 ;;		_stoa
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text26
  3939  001734                     __ptext26:
  3940                           	callstack 0
  3941  001734                     _strlen:
  3942                           	callstack 20
  3943  001734  C001  F003         	movff	strlen@s,strlen@a
  3944  001738  C002  F004         	movff	strlen@s+1,strlen@a+1
  3945  00173C  EFA2  F00B         	goto	i2l1427
  3946  001740                     i2l1425:
  3947  001740  4A01               	infsnz	strlen@s^0,f,c
  3948  001742  2A02               	incf	(strlen@s+1)^0,f,c
  3949  001744                     i2l1427:
  3950  001744  C001  FFF6         	movff	strlen@s,tblptrl
  3951  001748  C002  FFF7         	movff	strlen@s+1,tblptrh
  3952  00174C  6AF8               	clrf	tblptru,c
  3953  00174E  0E07               	movlw	(high __ramtop+-1)
  3954  001750  64F7               	cpfsgt	tblptrh,c
  3955  001752  D003               	bra	i2u71_47
  3956  001754  0008               	tblrd		*
  3957  001756  50F5               	movf	tablat,w,c
  3958  001758  D005               	bra	i2u71_40
  3959  00175A                     i2u71_47:
  3960  00175A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3961  00175E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3962  001762  50E7               	movf	indf1,w,c
  3963  001764                     i2u71_40:
  3964  001764  0900               	iorlw	0
  3965  001766  A4D8               	btfss	status,2,c
  3966  001768  EFB8  F00B         	goto	i2u72_41
  3967  00176C  EFBA  F00B         	goto	i2u72_40
  3968  001770                     i2u72_41:
  3969  001770  EFA0  F00B         	goto	i2l1425
  3970  001774                     i2u72_40:
  3971  001774  5003               	movf	strlen@a^0,w,c
  3972  001776  5C01               	subwf	strlen@s^0,w,c
  3973  001778  6E01               	movwf	?_strlen^0,c
  3974  00177A  5004               	movf	(strlen@a+1)^0,w,c
  3975  00177C  5802               	subwfb	(strlen@s+1)^0,w,c
  3976  00177E  6E02               	movwf	(?_strlen+1)^0,c
  3977  001780  0012               	return		;funcret
  3978  001782                     __end_of_strlen:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _fputc *****************
  3982 ;; Defined at:
  3983 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  c               2    0[COMRAM] int 
  3986 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3987 ;;		 -> sprintf@f(6), 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  2    0[COMRAM] int 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3999 ;;      Params:         4       0       0       0       0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4001 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4002 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4003 ;;Total ram usage:        9 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 1
  4006 ;; This function calls:
  4007 ;;		_putch
  4008 ;; This function is called by:
  4009 ;;		_pad
  4010 ;;		_stoa
  4011 ;;		_vfpfcnvrt
  4012 ;;		_fputs
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text27
  4017  001076                     __ptext27:
  4018                           	callstack 0
  4019  001076                     _fputc:
  4020                           	callstack 18
  4021  001076  5003               	movf	fputc@fp^0,w,c
  4022  001078  1004               	iorwf	(fputc@fp+1)^0,w,c
  4023  00107A  B4D8               	btfsc	status,2,c
  4024  00107C  EF42  F008         	goto	i2u66_41
  4025  001080  EF44  F008         	goto	i2u66_40
  4026  001084                     i2u66_41:
  4027  001084  EF4D  F008         	goto	i2l1405
  4028  001088                     i2u66_40:
  4029  001088  5003               	movf	fputc@fp^0,w,c
  4030  00108A  1004               	iorwf	(fputc@fp+1)^0,w,c
  4031  00108C  A4D8               	btfss	status,2,c
  4032  00108E  EF4B  F008         	goto	i2u67_41
  4033  001092  EF4D  F008         	goto	i2u67_40
  4034  001096                     i2u67_41:
  4035  001096  EF52  F008         	goto	i2l1407
  4036  00109A                     i2u67_40:
  4037  00109A                     i2l1405:
  4038  00109A  5001               	movf	fputc@c^0,w,c
  4039  00109C  EC92  F00C         	call	_putch
  4040  0010A0  EF9F  F008         	goto	i2l906
  4041  0010A4                     i2l1407:
  4042  0010A4  EE20 F004          	lfsr	2,4
  4043  0010A8  5003               	movf	fputc@fp^0,w,c
  4044  0010AA  26D9               	addwf	fsr2l,f,c
  4045  0010AC  5004               	movf	(fputc@fp+1)^0,w,c
  4046  0010AE  22DA               	addwfc	fsr2h,f,c
  4047  0010B0  50DE               	movf	postinc2,w,c
  4048  0010B2  10DE               	iorwf	postinc2,w,c
  4049  0010B4  B4D8               	btfsc	status,2,c
  4050  0010B6  EF5F  F008         	goto	i2u68_41
  4051  0010BA  EF61  F008         	goto	i2u68_40
  4052  0010BE                     i2u68_41:
  4053  0010BE  EF7C  F008         	goto	i2l1411
  4054  0010C2                     i2u68_40:
  4055  0010C2  EE20 F004          	lfsr	2,4
  4056  0010C6  5003               	movf	fputc@fp^0,w,c
  4057  0010C8  26D9               	addwf	fsr2l,f,c
  4058  0010CA  5004               	movf	(fputc@fp+1)^0,w,c
  4059  0010CC  22DA               	addwfc	fsr2h,f,c
  4060  0010CE  EE10 F002          	lfsr	1,2
  4061  0010D2  5003               	movf	fputc@fp^0,w,c
  4062  0010D4  26E1               	addwf	fsr1l,f,c
  4063  0010D6  5004               	movf	(fputc@fp+1)^0,w,c
  4064  0010D8  22E2               	addwfc	fsr1h,f,c
  4065  0010DA  50DE               	movf	postinc2,w,c
  4066  0010DC  5CE6               	subwf	postinc1,w,c
  4067  0010DE  50E6               	movf	postinc1,w,c
  4068  0010E0  0A80               	xorlw	128
  4069  0010E2  6E09               	movwf	(??_fputc+4)^0,c
  4070  0010E4  50DE               	movf	postinc2,w,c
  4071  0010E6  0A80               	xorlw	128
  4072  0010E8  5809               	subwfb	(??_fputc+4)^0,w,c
  4073  0010EA  B0D8               	btfsc	status,0,c
  4074  0010EC  EF7A  F008         	goto	i2u69_41
  4075  0010F0  EF7C  F008         	goto	i2u69_40
  4076  0010F4                     i2u69_41:
  4077  0010F4  EF9F  F008         	goto	i2l906
  4078  0010F8                     i2u69_40:
  4079  0010F8                     i2l1411:
  4080  0010F8  EE20 F002          	lfsr	2,2
  4081  0010FC  5003               	movf	fputc@fp^0,w,c
  4082  0010FE  26D9               	addwf	fsr2l,f,c
  4083  001100  5004               	movf	(fputc@fp+1)^0,w,c
  4084  001102  22DA               	addwfc	fsr2h,f,c
  4085  001104  CFDE F005          	movff	postinc2,??_fputc
  4086  001108  CFDD F006          	movff	postdec2,??_fputc+1
  4087  00110C  C003  FFD9         	movff	fputc@fp,fsr2l
  4088  001110  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4089  001114  CFDE F007          	movff	postinc2,??_fputc+2
  4090  001118  CFDD F008          	movff	postdec2,??_fputc+3
  4091  00111C  5005               	movf	??_fputc^0,w,c
  4092  00111E  2407               	addwf	(??_fputc+2)^0,w,c
  4093  001120  6ED9               	movwf	fsr2l,c
  4094  001122  5006               	movf	(??_fputc+1)^0,w,c
  4095  001124  2008               	addwfc	(??_fputc+3)^0,w,c
  4096  001126  6EDA               	movwf	fsr2h,c
  4097  001128  C001  FFDF         	movff	fputc@c,indf2
  4098  00112C  EE20 F002          	lfsr	2,2
  4099  001130  5003               	movf	fputc@fp^0,w,c
  4100  001132  26D9               	addwf	fsr2l,f,c
  4101  001134  5004               	movf	(fputc@fp+1)^0,w,c
  4102  001136  22DA               	addwfc	fsr2h,f,c
  4103  001138  2ADE               	incf	postinc2,f,c
  4104  00113A  0E00               	movlw	0
  4105  00113C  22DD               	addwfc	postdec2,f,c
  4106  00113E                     i2l906:
  4107  00113E  0012               	return		;funcret
  4108  001140                     __end_of_fputc:
  4109                           	callstack 0
  4110                           
  4111 ;; *************** function _putch *****************
  4112 ;; Defined at:
  4113 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  c               1    wreg     unsigned char 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  c               1    0[COMRAM] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4127 ;;      Params:         0       0       0       0       0       0       0       0       0
  4128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4130 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4131 ;;Total ram usage:        0 bytes
  4132 ;; Hardware stack levels used: 1
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_fputc
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text28
  4141  001924                     __ptext28:
  4142                           	callstack 0
  4143  001924                     _putch:
  4144                           	callstack 18
  4145  001924  0012               	return		;funcret
  4146  001926                     __end_of_putch:
  4147                           	callstack 0
  4148                           
  4149 ;; *************** function _cronometro *****************
  4150 ;; Defined at:
  4151 ;;		line 50 in file "main.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;		None
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4165 ;;      Params:         0       0       0       0       0       0       0       0       0
  4166 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4168 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4169 ;;Total ram usage:        0 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_disp_cronometro
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text29
  4179  0015C8                     __ptext29:
  4180                           	callstack 0
  4181  0015C8                     _cronometro:
  4182                           	callstack 25
  4183  0015C8                     
  4184                           ;main.c: 51:     s = s + 1;
  4185  0015C8  0E01               	movlw	1
  4186  0015CA  2458               	addwf	_s^0,w,c
  4187  0015CC  6E58               	movwf	_s^0,c
  4188  0015CE  0E00               	movlw	0
  4189  0015D0  2059               	addwfc	(_s+1)^0,w,c
  4190  0015D2  6E59               	movwf	(_s+1)^0,c
  4191                           
  4192                           ;main.c: 52:     if (s == 60) {
  4193  0015D4  0E3C               	movlw	60
  4194  0015D6  1858               	xorwf	_s^0,w,c
  4195  0015D8  1059               	iorwf	(_s+1)^0,w,c
  4196  0015DA  A4D8               	btfss	status,2,c
  4197  0015DC  EFF2  F00A         	goto	i2u114_41
  4198  0015E0  EFF4  F00A         	goto	i2u114_40
  4199  0015E4                     i2u114_41:
  4200  0015E4  EFFE  F00A         	goto	i2l1725
  4201  0015E8                     i2u114_40:
  4202  0015E8                     
  4203                           ;main.c: 53:         s = 0;
  4204  0015E8  0E00               	movlw	0
  4205  0015EA  6E59               	movwf	(_s+1)^0,c
  4206  0015EC  0E00               	movlw	0
  4207  0015EE  6E58               	movwf	_s^0,c
  4208  0015F0                     
  4209                           ;main.c: 54:         m = m + 1;
  4210  0015F0  0E01               	movlw	1
  4211  0015F2  245A               	addwf	_m^0,w,c
  4212  0015F4  6E5A               	movwf	_m^0,c
  4213  0015F6  0E00               	movlw	0
  4214  0015F8  205B               	addwfc	(_m+1)^0,w,c
  4215  0015FA  6E5B               	movwf	(_m+1)^0,c
  4216  0015FC                     i2l1725:
  4217                           
  4218                           ;main.c: 56:     if (m == 60) {
  4219  0015FC  0E3C               	movlw	60
  4220  0015FE  185A               	xorwf	_m^0,w,c
  4221  001600  105B               	iorwf	(_m+1)^0,w,c
  4222  001602  A4D8               	btfss	status,2,c
  4223  001604  EF06  F00B         	goto	i2u115_41
  4224  001608  EF08  F00B         	goto	i2u115_40
  4225  00160C                     i2u115_41:
  4226  00160C  EF13  F00B         	goto	i2l104
  4227  001610                     i2u115_40:
  4228  001610                     
  4229                           ;main.c: 57:         m = 0;
  4230  001610  0E00               	movlw	0
  4231  001612  6E5B               	movwf	(_m+1)^0,c
  4232  001614  0E00               	movlw	0
  4233  001616  6E5A               	movwf	_m^0,c
  4234  001618                     
  4235                           ;main.c: 58:         h = h + 1;
  4236  001618  0E01               	movlw	1
  4237  00161A  0100               	movlb	0	; () banked
  4238  00161C  256E               	addwf	_h& (0+255),w,b
  4239  00161E  6F6E               	movwf	_h& (0+255),b
  4240  001620  0E00               	movlw	0
  4241  001622  216F               	addwfc	(_h+1)& (0+255),w,b
  4242  001624  6F6F               	movwf	(_h+1)& (0+255),b
  4243  001626                     i2l104:
  4244  001626  0012               	return		;funcret
  4245  001628                     __end_of_cronometro:
  4246                           	callstack 0
  4247                           
  4248                           	psect	rparam
  4249  0000                     
  4250                           	psect	temp
  4251  00005E                     btemp:
  4252                           	callstack 0
  4253  00005E                     	ds	1
  4254  0000                     int$flags	set	btemp
  4255  0000                     wtemp8	set	btemp+1
  4256  0000                     ttemp5	set	btemp+1
  4257  0000                     ttemp6	set	btemp+4
  4258  0000                     ttemp7	set	btemp+8
  4259                           
  4260                           	psect	idloc
  4261                           
  4262                           ;Config register IDLOC0 @ 0x200000
  4263                           ;	unspecified, using default values
  4264  200000                     	org	2097152
  4265  200000  FF                 	db	255
  4266                           
  4267                           ;Config register IDLOC1 @ 0x200001
  4268                           ;	unspecified, using default values
  4269  200001                     	org	2097153
  4270  200001  FF                 	db	255
  4271                           
  4272                           ;Config register IDLOC2 @ 0x200002
  4273                           ;	unspecified, using default values
  4274  200002                     	org	2097154
  4275  200002  FF                 	db	255
  4276                           
  4277                           ;Config register IDLOC3 @ 0x200003
  4278                           ;	unspecified, using default values
  4279  200003                     	org	2097155
  4280  200003  FF                 	db	255
  4281                           
  4282                           ;Config register IDLOC4 @ 0x200004
  4283                           ;	unspecified, using default values
  4284  200004                     	org	2097156
  4285  200004  FF                 	db	255
  4286                           
  4287                           ;Config register IDLOC5 @ 0x200005
  4288                           ;	unspecified, using default values
  4289  200005                     	org	2097157
  4290  200005  FF                 	db	255
  4291                           
  4292                           ;Config register IDLOC6 @ 0x200006
  4293                           ;	unspecified, using default values
  4294  200006                     	org	2097158
  4295  200006  FF                 	db	255
  4296                           
  4297                           ;Config register IDLOC7 @ 0x200007
  4298                           ;	unspecified, using default values
  4299  200007                     	org	2097159
  4300  200007  FF                 	db	255
  4301                           
  4302                           	psect	config
  4303                           
  4304                           ;Config register CONFIG1L @ 0x300000
  4305                           ;	unspecified, using default values
  4306                           ;	PLL Prescaler Selection bits
  4307                           ;	PLLDIV = 0x0, unprogrammed default
  4308                           ;	System Clock Postscaler Selection bits
  4309                           ;	CPUDIV = 0x0, unprogrammed default
  4310                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4311                           ;	USBDIV = 0x0, unprogrammed default
  4312  300000                     	org	3145728
  4313  300000  00                 	db	0
  4314                           
  4315                           ;Config register CONFIG1H @ 0x300001
  4316                           ;	Oscillator Selection bits
  4317                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4318                           ;	Fail-Safe Clock Monitor Enable bit
  4319                           ;	FCMEN = 0x0, unprogrammed default
  4320                           ;	Internal/External Oscillator Switchover bit
  4321                           ;	IESO = 0x0, unprogrammed default
  4322  300001                     	org	3145729
  4323  300001  09                 	db	9
  4324                           
  4325                           ;Config register CONFIG2L @ 0x300002
  4326                           ;	unspecified, using default values
  4327                           ;	Power-up Timer Enable bit
  4328                           ;	PWRT = 0x1, unprogrammed default
  4329                           ;	Brown-out Reset Enable bits
  4330                           ;	BOR = 0x3, unprogrammed default
  4331                           ;	Brown-out Reset Voltage bits
  4332                           ;	BORV = 0x3, unprogrammed default
  4333                           ;	USB Voltage Regulator Enable bit
  4334                           ;	VREGEN = 0x0, unprogrammed default
  4335  300002                     	org	3145730
  4336  300002  1F                 	db	31
  4337                           
  4338                           ;Config register CONFIG2H @ 0x300003
  4339                           ;	Watchdog Timer Enable bit
  4340                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4341                           ;	Watchdog Timer Postscale Select bits
  4342                           ;	WDTPS = 0xF, unprogrammed default
  4343  300003                     	org	3145731
  4344  300003  1E                 	db	30
  4345                           
  4346                           ; Padding undefined space
  4347  300004                     	org	3145732
  4348  300004  FF                 	db	255
  4349                           
  4350                           ;Config register CONFIG3H @ 0x300005
  4351                           ;	CCP2 MUX bit
  4352                           ;	CCP2MX = 0x1, unprogrammed default
  4353                           ;	PORTB A/D Enable bit
  4354                           ;	PBADEN = 0x1, unprogrammed default
  4355                           ;	Low-Power Timer 1 Oscillator Enable bit
  4356                           ;	LPT1OSC = 0x0, unprogrammed default
  4357                           ;	MCLR Pin Enable bit
  4358                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4359  300005                     	org	3145733
  4360  300005  03                 	db	3
  4361                           
  4362                           ;Config register CONFIG4L @ 0x300006
  4363                           ;	unspecified, using default values
  4364                           ;	Stack Full/Underflow Reset Enable bit
  4365                           ;	STVREN = 0x1, unprogrammed default
  4366                           ;	Single-Supply ICSP Enable bit
  4367                           ;	LVP = 0x1, unprogrammed default
  4368                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4369                           ;	ICPRT = 0x0, unprogrammed default
  4370                           ;	Extended Instruction Set Enable bit
  4371                           ;	XINST = 0x0, unprogrammed default
  4372                           ;	Background Debugger Enable bit
  4373                           ;	DEBUG = 0x1, unprogrammed default
  4374  300006                     	org	3145734
  4375  300006  85                 	db	133
  4376                           
  4377                           ; Padding undefined space
  4378  300007                     	org	3145735
  4379  300007  FF                 	db	255
  4380                           
  4381                           ;Config register CONFIG5L @ 0x300008
  4382                           ;	unspecified, using default values
  4383                           ;	Code Protection bit
  4384                           ;	CP0 = 0x1, unprogrammed default
  4385                           ;	Code Protection bit
  4386                           ;	CP1 = 0x1, unprogrammed default
  4387                           ;	Code Protection bit
  4388                           ;	CP2 = 0x1, unprogrammed default
  4389                           ;	Code Protection bit
  4390                           ;	CP3 = 0x1, unprogrammed default
  4391  300008                     	org	3145736
  4392  300008  0F                 	db	15
  4393                           
  4394                           ;Config register CONFIG5H @ 0x300009
  4395                           ;	unspecified, using default values
  4396                           ;	Boot Block Code Protection bit
  4397                           ;	CPB = 0x1, unprogrammed default
  4398                           ;	Data EEPROM Code Protection bit
  4399                           ;	CPD = 0x1, unprogrammed default
  4400  300009                     	org	3145737
  4401  300009  C0                 	db	192
  4402                           
  4403                           ;Config register CONFIG6L @ 0x30000A
  4404                           ;	unspecified, using default values
  4405                           ;	Write Protection bit
  4406                           ;	WRT0 = 0x1, unprogrammed default
  4407                           ;	Write Protection bit
  4408                           ;	WRT1 = 0x1, unprogrammed default
  4409                           ;	Write Protection bit
  4410                           ;	WRT2 = 0x1, unprogrammed default
  4411                           ;	Write Protection bit
  4412                           ;	WRT3 = 0x1, unprogrammed default
  4413  30000A                     	org	3145738
  4414  30000A  0F                 	db	15
  4415                           
  4416                           ;Config register CONFIG6H @ 0x30000B
  4417                           ;	unspecified, using default values
  4418                           ;	Configuration Register Write Protection bit
  4419                           ;	WRTC = 0x1, unprogrammed default
  4420                           ;	Boot Block Write Protection bit
  4421                           ;	WRTB = 0x1, unprogrammed default
  4422                           ;	Data EEPROM Write Protection bit
  4423                           ;	WRTD = 0x1, unprogrammed default
  4424  30000B                     	org	3145739
  4425  30000B  E0                 	db	224
  4426                           
  4427                           ;Config register CONFIG7L @ 0x30000C
  4428                           ;	unspecified, using default values
  4429                           ;	Table Read Protection bit
  4430                           ;	EBTR0 = 0x1, unprogrammed default
  4431                           ;	Table Read Protection bit
  4432                           ;	EBTR1 = 0x1, unprogrammed default
  4433                           ;	Table Read Protection bit
  4434                           ;	EBTR2 = 0x1, unprogrammed default
  4435                           ;	Table Read Protection bit
  4436                           ;	EBTR3 = 0x1, unprogrammed default
  4437  30000C                     	org	3145740
  4438  30000C  0F                 	db	15
  4439                           
  4440                           ;Config register CONFIG7H @ 0x30000D
  4441                           ;	unspecified, using default values
  4442                           ;	Boot Block Table Read Protection bit
  4443                           ;	EBTRB = 0x1, unprogrammed default
  4444  30000D                     	org	3145741
  4445  30000D  40                 	db	64
  4446                           tosu	equ	0xFFF
  4447                           tosh	equ	0xFFE
  4448                           tosl	equ	0xFFD
  4449                           stkptr	equ	0xFFC
  4450                           pclatu	equ	0xFFB
  4451                           pclath	equ	0xFFA
  4452                           pcl	equ	0xFF9
  4453                           tblptru	equ	0xFF8
  4454                           tblptrh	equ	0xFF7
  4455                           tblptrl	equ	0xFF6
  4456                           tablat	equ	0xFF5
  4457                           prodh	equ	0xFF4
  4458                           prodl	equ	0xFF3
  4459                           indf0	equ	0xFEF
  4460                           postinc0	equ	0xFEE
  4461                           postdec0	equ	0xFED
  4462                           preinc0	equ	0xFEC
  4463                           plusw0	equ	0xFEB
  4464                           fsr0h	equ	0xFEA
  4465                           fsr0l	equ	0xFE9
  4466                           wreg	equ	0xFE8
  4467                           indf1	equ	0xFE7
  4468                           postinc1	equ	0xFE6
  4469                           postdec1	equ	0xFE5
  4470                           preinc1	equ	0xFE4
  4471                           plusw1	equ	0xFE3
  4472                           fsr1h	equ	0xFE2
  4473                           fsr1l	equ	0xFE1
  4474                           bsr	equ	0xFE0
  4475                           indf2	equ	0xFDF
  4476                           postinc2	equ	0xFDE
  4477                           postdec2	equ	0xFDD
  4478                           preinc2	equ	0xFDC
  4479                           plusw2	equ	0xFDB
  4480                           fsr2h	equ	0xFDA
  4481                           fsr2l	equ	0xFD9
  4482                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    0
    Data        15
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      93
    BANK0           160     46     121
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), NULL(NULL[0]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), NULL(NULL[0]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[1]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> tx_string(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_5(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_5(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), ?_sprintf(BANK0[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), ?_sprintf(BANK0[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> NULL(NULL[0]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[1]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_5(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> tx_string(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S552_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> tx_string(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> tx_string(BANK0[16]), 

    s0	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), STR_4(CODE[2]), STR_1(CODE[1]), 

    m0	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), STR_4(CODE[2]), STR_3(CODE[2]), STR_1(CODE[1]), 

    h0	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[1]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), tx_string(BANK0[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer in COMRAM

    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _stoa->_fputc

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer in BANK0

    _disp_cronometro->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1208
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                _setup_interruptions
                         _setup_tmr0
 ---------------------------------------------------------------------------------
 (1) _setup_tmr0                                           4     4      0       0
                                             36 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup_interruptions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     394
                                             40 BANK0      6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                             37 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     506
                                             39 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                             39 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                             37 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer                                               12    12      0   10233
                                             24 BANK0     12    12      0
                    _disp_cronometro
 ---------------------------------------------------------------------------------
 (5) _disp_cronometro                                      0     0      0   10233
                         _cronometro
                            _sprintf
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (6) i2_Lcd_Write_String                                   6     4      2     294
                                              4 COMRAM     6     4      2
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) i2_Lcd_Write_Char                                     3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) i2_Lcd_Set_Cursor                                     5     4      1     406
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i2_Lcd_Cmd                                            2     2      0     110
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i2_Lcd_Port                                           1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             26    10     16    9533
                                              0 BANK0     24     8     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             8     2      6    9180
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           43    37      6    8824
                                             59 COMRAM    20    14      6
                              _fputc
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (9) _utoa                                                32    22     10    4747
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (10) _pad                                                11     5      6    3697
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _fputs                                               7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) ___lomod                                            17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (10) ___lodiv                                            25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (9) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _strlen                                              4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _fputc                                               9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (13) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _cronometro                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup_interruptions
   _setup_tmr0

 _timer (ROOT)
   _disp_cronometro
     _cronometro
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
     i2_Lcd_Set_Cursor
       i2_Lcd_Cmd
         i2_Lcd_Port
     i2_Lcd_Write_String
       i2_Lcd_Write_Char
         i2_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D6      20        0.0%
DATA                 0      0      D6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 07 19:05:41 2021

                           _h 006E                             _m 005A                             _s 0058  
                          l51 15C6                            l43 1582                            l45 1598  
                          l54 18DE                            l47 15AE                            l63 149E  
                          l49 15C4                            l57 190C                            l66 1430  
                          l75 133A                            l69 1880                            _h0 006A  
                          _m0 0068                            _s0 0066                           l121 1804  
                         l130 183C                           l124 191E     __size_ofi2_Lcd_Write_Char 0038  
                         l129 183C                           _GIE 007F97                           _PSA 007EAB  
                         _pad 1140                           wreg 000FE8                          l1701 1856  
                        l1711 186C                          l1703 1858                          l1641 1592  
                        l1801 140C                          l1713 1874                          l1705 1860  
                        l1643 159A                          l1635 156C                          l1811 142A  
                        l1803 1412                          l1715 1876                          l1707 1862  
                        l1645 15A8                          l1637 157C                          l1805 1418  
                        l1717 187E                          l1709 186A                          l1813 12B8  
                        l1647 15B0                          l1639 1584                          l1807 141E  
                        l1815 12C6                          l1649 15BE                          l1809 1424  
                        l1817 12F8                          l1841 17CC                          l1691 18C0  
                        l1771 1448                          l1819 12FE                          l1843 1802  
                        l1693 18C8                          l1781 1490                          l1773 145A  
                        l1845 191A                          l1695 18CA                          l1767 1900  
                        l1791 13D8                          l1783 1496                          l1775 1460  
                        l1839 17C6                          l1871 181E                          l1863 1806  
                        l1697 18DC                          l1689 18BE                          l1793 13E8  
                        l1785 13BA                          l1777 146C                          l1769 1436  
                        l1873 1822                          l1865 1812                          l1795 13EE  
                        l1787 13C0                          l1779 147E                          l1699 1848  
                        l1875 182E                          l1867 1816                          l1797 1400  
                        l1789 13D2                          l1869 181A                          ?_pad 0011  
                        l1799 1406                          STR_1 0828                          STR_2 0829  
                        STR_3 0829                          STR_4 0829                          STR_5 0801  
                        STR_6 0818                          _T0CS 007EAD                          u1100 1592  
                        u1101 158E                          u1110 15A8                          u1111 15A4  
                        u1120 15BE                          u1121 15BA                          u1210 1448  
                        u1211 1444                          u1220 147E                          u1221 147A  
                        u1230 12F4                          u1240 132A                          u1090 157C  
                        u1250 133A                          u1091 1578                          u1251 1336  
                        u1317 1864                          u1237 12EA                          u1327 1878  
                        u1247 1320                          u1337 13C8                          u1347 13E0  
                        u1357 13F6                          u1367 18D2                          i2l51 16E0  
                        i2l43 169C                          i2l45 16B2                          i2l54 18FE  
                        i2l47 16C8                          i2l63 1504                          i2l49 16DE  
                        i2l75 13B8                          i2l69 18B8             ?_Lcd_Write_String 00C8  
                        _dbuf 0070                          _main 1806                          _prec 0064  
                        _nout 0060                          pad@i 0018                          pad@p 0015  
                        fsr1h 000FE2                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          pad@w 001A  
                        fsr2l 000FD9                          _stoa 0C38                          btemp 005E  
                        _utoa 0A38                          start 000E            ??_Lcd_Write_String 00CA  
             __end_of_Lcd_Cmd 18E0                  ___param_bank 000000                         ??_pad 0017  
                       ?_main 0001                         ?_stoa 000A                         ?_utoa 001C  
             __end_of___lodiv 0EC0                         _LATE0 007C68                         _LATE1 007C69  
                       _LATD4 007C64                         _LATD5 007C65                         _LATD6 007C66  
                       _LATD7 007C67               __end_of___lomod 1076                         i2l110 0FA4  
                       i2l104 1626                         i2l107 0F02                         i2l108 0F26  
                       i2l118 1294                         i2l580 0EBE                         i2l573 0E9E  
                       i2l813 1732                         i2l590 1074                         i2l583 1054  
                       i2l841 11C6                         i2l906 113E                         i2l850 0CB8  
                       i2l914 17C4                         i2l923 1780                         i2l843 1200  
                       i2l852 0CC0                         i2l917 1924                         i2l861 0D7E  
                       i2l862 0DC6                         i2l838 1184                         i2l871 0A70  
                       i2l881 0C36                         i2l873 0A78                         i2l866 0DCE  
                       i2l893 155E                         i2l886 0A36                         i2l894 1566  
                vfpfcnvrt@fmt 003E                         _TMR0H 000FD7                  vfpfcnvrt@llu 0046  
                       _TMR0L 000FD6       __size_of_Lcd_Set_Cursor 006E                         _TRISD 000F95  
                       _TRISE 000F96            __size_ofi2_Lcd_Cmd 0020                   ?i2_Lcd_Port 0001  
                       _flags 005C                         _fputc 1076                         _fputs 1782  
                       _timer 0008                         pad@fp 0011                         _width 0062  
                       _putch 1924                         tablat 000FF5                         plusw1 000FE3  
                       plusw2 000FDB                         stoa@i 0016                         stoa@l 001E  
                       stoa@p 001C                         stoa@s 000C                         stoa@w 0018  
                       ttemp5 005F                         ttemp6 0062                         ttemp7 0066  
                       utoa@d 001E                         utoa@i 003A                         utoa@n 0032  
                       utoa@p 002E                         utoa@w 0030                         status 000FD8  
                       wtemp8 005F               __end_of_sprintf 1734              ___lodiv@dividend 0001  
            i2_Lcd_Set_Cursor 14A0              __end_of_Lcd_Init 1432              __end_of_Lcd_Port 15C8  
             __initialization 1628                  __end_of_main 1844                  __end_of_stoa 0DD0  
                __end_of_utoa 0C38                        ??_main 00CE                        ??_stoa 000E  
                      ??_utoa 0026            __size_of_Lcd_Clear 000E                 __activetblptr 000002  
            ___lodiv@quotient 0011                        ?_fputc 0001                        ?_fputs 000A  
                      _T08BIT 007EAE                        ?_timer 0001  __size_of_setup_interruptions 0006  
                      ?_putch 0001                        i2l1401 1076                        i2l1411 10F8  
                      i2l1403 1088                        i2l1405 109A                        i2l1501 0C6C  
                      i2l1421 17A4                        i2l1407 10A4                        i2l1423 1734  
                      i2l1511 0CE2                        i2l1503 0C80                        i2l1415 1782  
                      i2l1409 10C2                        i2l1425 1740                        i2l1521 0D58  
                      i2l1513 0CF6                        i2l1505 0C88                        i2l1441 0E16  
                      i2l1433 0DD0                        i2l1417 178E                        i2l1601 09DA  
                      i2l1427 1744                        i2l1531 0DA4                        i2l1523 0D5C  
                      i2l1515 0CFA                        i2l1507 0C96                        i2l1451 0E86  
                      i2l1443 0E24                        i2l1435 0DDC                        i2l1419 17A0  
                      i2l1611 0A00                        i2l1429 1774                        i2l1533 0DA8  
                      i2l1525 0D60                        i2l1517 0D18                        i2l1453 0E98  
                      i2l1445 0E36                        i2l1437 0DFA                        i2l1461 0FE0  
                      i2l1541 0A64                        i2l1613 0A24                        i2l1605 09E6  
                      i2l1621 1696                        i2l1519 0D24                        i2l1447 0E64  
                      i2l1439 0E02                        i2l1463 0FEE                        i2l1455 0FA6  
                      i2l1471 1140                        i2l1551 0B2C                        i2l1543 0AA0  
                      i2l1535 0A38                        i2l1607 09F4                        i2l1631 16CA  
                      i2l1623 169E                        i2l1721 15E8                        i2l1529 0D90  
                      i2l1449 0E84                        i2l1465 101C                        i2l1457 0FC4  
                      i2l1481 1190                        i2l1473 114E                        i2l1561 0BCC  
                      i2l1553 0B32                        i2l1545 0AA8                        i2l1537 0A48  
                      i2l1633 16D8                        i2l1625 16AC                        i2l1723 15F0  
                      i2l1467 103C                        i2l1459 0FCC                        i2l1483 11A4  
                      i2l1475 1162                        i2l1563 0BE6                        i2l1555 0B38  
                      i2l1547 0AB0                        i2l1539 0A4A                        i2l1571 082C  
                      i2l1651 1506                        i2l1731 16E2                        i2l1627 16B4  
                      i2l1619 1688                        i2l1725 15FC                        i2l1493 0C38  
                      i2l1469 104E                        i2l1485 11A8                        i2l1477 1170  
                      i2l1565 0C00                        i2l1549 0AB6                        i2l1557 0B9C  
                      i2l1581 0898                        i2l1573 0850                        i2l1653 150E  
                      i2l1733 16F4                        i2l1629 16C2                        i2l1661 18E4  
                      i2l1821 0EC0                        i2l1727 1610                        i2l1719 15C8  
                      i2l1495 0C4A                        i2l1487 11D4                        i2l1479 117C  
                      i2l1559 0BAE                        i2l1567 0C0E                        i2l1591 095C  
                      i2l1583 08CE                        i2l1575 085E                        i2l1655 151C  
                      i2l1735 16FC                        i2l1663 18EA                        i2l1751 14D4  
                      i2l1743 14A2                        i2l1671 1890                        i2l1831 0F42  
                      i2l1823 0EC4                        i2l1729 1618                        i2l1497 0C52  
                      i2l1489 11E8                        i2l1577 0870                        i2l1657 1542  
                      i2l1737 1704                        i2l1665 18EC                        i2l1753 14E6  
                      i2l1745 14B2                        i2l1681 18A6                        i2l1673 1892  
                      i2l1761 1348                        i2l1833 0F4A                        i2l1825 0EDE  
                      i2l1499 0C64                        i2l1595 0994                        i2l1587 08EE  
                      i2l1579 0874                        i2l1739 1720                        i2l1667 18FC  
                      i2l1659 18E2                        i2l1755 14F8                        i2l1747 14C4  
                      i2l1683 18AC                        i2l1675 189A                        i2l1763 1378  
                      i2l1835 0F8E                        i2l1827 0EFA                        i2l1851 1224  
                      i2l1597 09B8                        i2l1589 0912                        i2l1757 14FE  
                      i2l1749 14CA                        i2l1685 18AE                        i2l1677 189C  
                      i2l1669 1884                        i2l1765 137C                        i2l1837 0F98  
                      i2l1829 0F1E                        i2l1861 1292                        i2l1853 1232  
                      i2l1599 09C6                        i2l1687 18B6                        i2l1679 18A4  
                      i2l1759 133C                        i2l1855 127C                        i2l1857 1280  
                      i2l1859 128E                        _OSCCON 000FD3                     ??_Lcd_Cmd 00C5  
                      _TMR0IE 007F95                        _TMR0IF 007F92                        _TMR0ON 007EAF  
     __size_of_Lcd_Write_Char 003E                  vfprintf@cfmt 0056             __end_ofi2_Lcd_Cmd 1900  
                   ??___lodiv 0011                     ??___lomod 0011           __size_ofi2_Lcd_Port 005C  
         i2Lcd_Write_String@a 0005           i2Lcd_Write_String@i 0009                        clear_0 166E  
                      isa$std 000001                        pad@buf 0013              i2_Lcd_Write_Char 1882  
                      _strlen 1734                        fputc@c 0001                        fputs@c 000E  
                      fputs@i 000F                  __pdataCOMRAM 0058                        fputs@s 000A  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        stoa@cp 001A                        stoa@fp 000A  
                      putch@c 0001              __end_of_vfprintf 1568                        utoa@fp 001C  
                   ??_sprintf 0058               Lcd_Set_Cursor@a 00C8               Lcd_Set_Cursor@b 00C7  
             Lcd_Set_Cursor@y 00CA               Lcd_Set_Cursor@z 00C9                    __accesstop 0060  
     __end_of__initialization 1678             __end_of_Lcd_Clear 190E                 ___rparam_used 000001  
              __pcstackCOMRAM 0001                  __pidataBANK0 190E                 __end_of_fputc 1140  
               __end_of_fputs 17C6                 __end_of_timer 12B8                 __end_of_putch 1926  
 __size_ofi2_Lcd_Write_String 007E             i2Lcd_Write_Char@a 0004             i2Lcd_Write_Char@y 0003  
              _Lcd_Set_Cursor 1432                     ?_Lcd_Init 0001                     ?_Lcd_Port 0001  
                     ??_fputc 0005                       ??_fputs 000E                       ??_timer 00B8  
        i2Lcd_Write_Char@temp 0002                       ??_putch 0001                    __pbssBANK0 0060  
    __size_of_disp_cronometro 00E6          i2Lcd_Set_Cursor@temp 0008     __size_of_Lcd_Write_String 0084  
      __end_of_Lcd_Set_Cursor 14A0                       ?_strlen 0001      __end_ofi2_Lcd_Set_Cursor 1506  
          __size_of_vfpfcnvrt 020C                       i2u70_40 17C4                       i2u70_41 17C0  
                     i2u71_40 1764                       i2u71_47 175A                       i2u72_40 1774  
                     i2u80_40 114E                       i2u72_41 1770                       i2u80_41 114A  
                     i2u81_40 1170                       i2u73_41 0DD6                       i2u81_41 116C  
                     i2u66_40 1088                       i2u90_40 0D44                       i2u74_40 0DFA  
                     i2u82_40 11C6                       i2u66_41 1084                       i2u74_41 0DF6  
                     i2u82_41 11C2                       i2u90_47 0D3A                       i2u67_40 109A  
                     i2u91_40 0D7E                       i2u75_40 0E24                       i2u83_40 11D4  
                     i2u67_41 1096                       i2u91_41 0D7A                       i2u75_41 0E20  
                     i2u83_41 11D0                       i2u68_40 10C2                       i2u92_40 0D8C  
                     i2u76_40 0E64                       i2u68_41 10BE                       i2u92_41 0D88  
                     i2u84_41 0C42                       i2u76_41 0E60                       i2u69_40 10F8  
                     i2u93_40 0DC6                       i2u85_40 0C64                       i2u77_40 0FC4  
                  ??_Lcd_Init 00C7                       i2u69_41 10F4                       i2u93_41 0DC2  
                     i2u85_41 0C60                       i2u77_41 0FC0                       i2u86_40 0C96  
                     i2u78_40 0FEE                       i2u94_40 0A48                       i2u86_41 0C92  
                     i2u78_41 0FEA                       i2u94_41 0A44                       i2u87_40 0CB4  
                     i2u79_40 101C                       i2u95_40 0A64                       i2u87_41 0CB0  
                     i2u79_41 1018                       i2u95_41 0A60                       i2u88_40 0CDE  
                     i2u96_40 0BAE                       i2u88_41 0CDA                       i2u96_41 0BAA  
                     i2u89_40 0D18                       i2u97_40 0BCC                       i2u89_41 0D14  
                     i2u97_41 0BC8                       i2u98_40 0BE6                       i2u98_41 0BE2  
                     i2u99_40 0C00                       i2u99_41 0BFC                  ??i2_Lcd_Port 0001  
                  ??_Lcd_Port 00C4              ___lomod@dividend 0001                _Lcd_Write_Char 1844  
                     _Lcd_Cmd 18BA                    _cronometro 15C8                       __Hparam 0000  
                     __Lparam 0000                       ___lodiv 0DD0                       ___lomod 0FA6  
         _setup_interruptions 191A                     ?_vfprintf 0050                  __psmallconst 0800  
          __end_ofi2_Lcd_Port 16E2                       __pcinit 1628                       __ramtop 0800  
             ?_Lcd_Set_Cursor 00C7                       __ptext0 1806                       __ptext1 17C6  
                     __ptext2 191A                       __ptext3 12B8                       __ptext4 1844  
                     __ptext5 1432                       __ptext6 13BA                       __ptext7 1900  
                     __ptext8 18BA                       __ptext9 1568               __size_of_strlen 004E  
                     _counter 006C                  __size_of_pad 00C2                       _sprintf 16E2  
        ?_setup_interruptions 0001        __end_of_Lcd_Write_Char 1882                __pintcode_body 1202  
        end_of_initialization 1678                       fputc@fp 0003                 __Lmediumconst 0000  
                     int_func 1202                       fputs@fp 000C      __end_ofi2_Lcd_Write_Char 18BA  
           __end_of_vfpfcnvrt 0A38                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                   Lcd_Port@a 00C4                    ??_vfprintf 0056                       strlen@a 0003  
                     strlen@s 0001                     i2_Lcd_Cmd 18E0                    _setup_tmr0 17C6  
           ??_disp_cronometro 0058         ??_setup_interruptions 00C4               ?_Lcd_Write_Char 0001  
           Lcd_Write_String@a 00C8             Lcd_Write_String@i 00CC                   ?_cronometro 0001  
                   _Lcd_Clear 1900                   vfpfcnvrt@ap 0040                   vfpfcnvrt@cp 004E  
                 vfpfcnvrt@fp 003C              _Lcd_Write_String 12B8                 __pidataCOMRAM 1920  
                  ?i2_Lcd_Cmd 0001                __end_of_strlen 1782           start_initialization 1628  
             ___lodiv@divisor 0009               ___lodiv@counter 0019                   __end_of_pad 1202  
           __size_of_Lcd_Init 0078             __size_of_Lcd_Port 0060                   vfprintf@fmt 0052  
                  ?_Lcd_Clear 0001    __end_ofi2_Lcd_Write_String 13BA                   __pdataBANK0 00CE  
             Lcd_Write_Char@a 00C7               Lcd_Write_Char@y 00C6                      ??_strlen 0003  
                 ?_setup_tmr0 0001                   __pbssCOMRAM 005C                 __pcstackBANK0 00A0  
           ?i2_Lcd_Set_Cursor 0004           __size_of_cronometro 0060            ??i2_Lcd_Set_Cursor 0005  
                    ?_Lcd_Cmd 0001              ??_Lcd_Set_Cursor 00C8                     __pintcode 0008  
                    ?___lodiv 0001                      ?___lomod 0001                   ??i2_Lcd_Cmd 0002  
           __size_of_vfprintf 0062               ___lomod@divisor 0009                   __smallconst 0800  
             ___lomod@counter 0011                      ?_sprintf 00A0                __size_of_fputc 00CA  
              __size_of_fputs 0044                __size_of_timer 12B0                __size_of_putch 0002  
           ?i2_Lcd_Write_Char 0001           __size_of_setup_tmr0 0040                      i2u100_40 0C0E  
                    i2u100_41 0C0A                      i2u101_40 0850                      i2u101_41 084C  
                    i2u102_40 0898                      i2u102_41 0894                      i2u103_40 0912  
                    i2u103_41 090E                      i2u104_40 09B8                      i2u120_40 13B8  
                    i2u104_41 09B4                      i2u120_41 13B4                      i2u113_40 155E  
                    i2u105_40 1696                      i2u113_41 155A                      i2u105_41 1692  
                    i2u114_40 15E8                      i2u106_40 16AC                      i2u130_40 127C  
                    i2u114_41 15E4                      i2u106_41 16A8                      i2u130_41 1278  
                    i2u115_40 1610                      i2u107_40 16C2                      i2u115_41 160C  
                    i2u107_41 16BE                      i2u108_40 16D8                      i2u116_40 14B2  
                    i2u108_41 16D4                      i2u116_41 14AE                      i2u117_40 14E6  
                    i2u117_41 14E2                      i2u118_40 1374                      i2u126_40 0EFA  
                    i2u126_41 0EF6                      i2u118_47 136A                      i2u119_40 13A8  
                    i2u127_40 0F1E                      i2u127_41 0F1A                      i2u119_47 139E  
                    i2u128_40 0F42                      i2u128_41 0F3E                      i2u129_40 1232  
                    i2u129_41 122E                      i2u137_47 189E                      Lcd_Cmd@a 00C6  
                    i2u138_47 18B0                      i2u139_47 18F2            ??i2_Lcd_Write_Char 0002  
                 ??_Lcd_Clear 00C7               _disp_cronometro 0EC0                     _vfpfcnvrt 082C  
            ??_Lcd_Write_Char 00C5                      _Lcd_Init 13BA                     _tx_string 0090  
                    _Lcd_Port 1568                     copy_data0 163C                     copy_data1 165C  
    __end_of_Lcd_Write_String 133C              __size_of_Lcd_Cmd 0026                  ??_cronometro 0001  
                    __Hrparam 0000                    vfprintf@ap 0054                      __Lrparam 0000  
                  vfprintf@fp 0050              __size_of___lodiv 00F0              __size_of___lomod 00D0  
                  ?_vfpfcnvrt 003C   __end_of_setup_interruptions 1920                    sprintf@fmt 00A2  
          __end_of_cronometro 1628                      __ptext11 0EC0                      __ptext20 0A38  
                    __ptext12 133C                      __ptext21 1140                      __ptext13 1882  
                    __ptext22 1782                      __ptext14 14A0                      __ptext23 0FA6  
                    __ptext15 18E0                      __ptext24 0DD0                      __ptext16 1686  
                    __ptext25 0C38                      __ptext17 16E2                      __ptext26 1734  
                    __ptext18 1506                      __ptext27 1076                      __ptext19 082C  
                    __ptext28 1924                      __ptext29 15C8                      _contagem 00D5  
            __size_of_sprintf 0052                 __size_of_main 003E       __end_of_disp_cronometro 0FA6  
               __size_of_stoa 0198                 __size_of_utoa 0200                     stoa@F1133 00CE  
                    isa$xinst 000000                      int$flags 005E                   i2Lcd_Port@a 0001  
                    _vfprintf 1506                  ??_setup_tmr0 00C4            i2_Lcd_Write_String 133C  
          Lcd_Write_Char@temp 00C5                      intlevel2 0000                     sprintf@ap 00B0  
         ?i2_Lcd_Write_String 0005             i2Lcd_Set_Cursor@a 0005             i2Lcd_Set_Cursor@b 0004  
           i2Lcd_Set_Cursor@y 0007             i2Lcd_Set_Cursor@z 0006     __size_ofi2_Lcd_Set_Cursor 0066  
                  i2Lcd_Cmd@a 0003            __end_of_setup_tmr0 1806          ??i2_Lcd_Write_String 0007  
                 ??_vfpfcnvrt 0042                      stoa@nuls 000F            Lcd_Set_Cursor@temp 00CB  
                    sprintf@f 00B2                      sprintf@s 00A0                    i2_Lcd_Port 1686  
            ?_disp_cronometro 0001  
