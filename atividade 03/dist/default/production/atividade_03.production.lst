

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 06 13:27:36 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4550 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK0
   100  002362                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for stoa@F1133
   104  002362  28                 	db	40
   105  002363  6E                 	db	110
   106  002364  75                 	db	117
   107  002365  6C                 	db	108
   108  002366  6C                 	db	108
   109  002367  29                 	db	41
   110  002368  00                 	db	0
   111  0000                     _TRISCbits	set	3988
   112  0000                     _OSCCON	set	4051
   113  0000                     _TRISE	set	3990
   114  0000                     _TRISD	set	3989
   115  0000                     _SPBRG	set	4015
   116  0000                     _BAUDCON	set	4024
   117  0000                     _TXREG	set	4013
   118  0000                     _RCIE	set	31981
   119  0000                     _PEIE	set	32662
   120  0000                     _GIE	set	32663
   121  0000                     _CREN	set	32092
   122  0000                     _SPEN	set	32095
   123  0000                     _BRGH	set	32098
   124  0000                     _SYNC	set	32100
   125  0000                     _TXEN	set	32101
   126  0000                     _TXIF	set	31988
   127  0000                     _LATE1	set	31849
   128  0000                     _LATE0	set	31848
   129  0000                     _LATD7	set	31847
   130  0000                     _LATD6	set	31846
   131  0000                     _LATD5	set	31845
   132  0000                     _LATD4	set	31844
   133                           
   134                           	psect	smallconst
   135  000800                     __psmallconst:
   136                           	callstack 0
   137  000800  00                 	db	0
   138  000801                     STR_5:
   139  000801  25                 	db	37
   140  000802  73                 	db	115	;'s'
   141  000803  25                 	db	37
   142  000804  75                 	db	117	;'u'
   143  000805  3A                 	db	58	;':'
   144  000806  25                 	db	37
   145  000807  73                 	db	115	;'s'
   146  000808  25                 	db	37
   147  000809  75                 	db	117	;'u'
   148  00080A  3A                 	db	58	;':'
   149  00080B  25                 	db	37
   150  00080C  73                 	db	115	;'s'
   151  00080D  25                 	db	37
   152  00080E  75                 	db	117	;'u'
   153  00080F  0D                 	db	13
   154  000810  00                 	db	0
   155  000811                     STR_6:
   156  000811  25                 	db	37
   157  000812  75                 	db	117	;'u'
   158  000813  3A                 	db	58	;':'
   159  000814  25                 	db	37
   160  000815  75                 	db	117	;'u'
   161  000816  3A                 	db	58	;':'
   162  000817  25                 	db	37
   163  000818  75                 	db	117	;'u'
   164  000819  0D                 	db	13
   165  00081A  00                 	db	0
   166  00081B                     STR_7:
   167  00081B  20                 	db	32
   168  00081C  54                 	db	84	;'T'
   169  00081D  49                 	db	73	;'I'
   170  00081E  4D                 	db	77	;'M'
   171  00081F  45                 	db	69	;'E'
   172  000820  52                 	db	82	;'R'
   173  000821  20                 	db	32
   174  000822  00                 	db	0
   175  000823                     STR_2:
   176  000823  30                 	db	48	;'0'
   177  000824  00                 	db	0
   178  000825  00                 	db	0	; dummy byte at the end
   179  0000                     
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183  002214                     __pcinit:
   184                           	callstack 0
   185  002214                     start_initialization:
   186                           	callstack 0
   187  002214                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Initialize objects allocated to BANK0 (7 bytes)
   191                           ; load TBLPTR registers with __pidataBANK0
   192  002214  0E62               	movlw	low __pidataBANK0
   193  002216  6EF6               	movwf	tblptrl,c
   194  002218  0E23               	movlw	high __pidataBANK0
   195  00221A  6EF7               	movwf	tblptrh,c
   196  00221C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   197  00221E  6EF8               	movwf	tblptru,c
   198  002220  EE00  F0DF         	lfsr	0,__pdataBANK0
   199  002224  EE10 F007          	lfsr	1,7
   200  002228                     copy_data0:
   201  002228  0009               	tblrd		*+
   202  00222A  CFF5 FFEE          	movff	tablat,postinc0
   203  00222E  50E5               	movf	postdec1,w,c
   204  002230  50E1               	movf	fsr1l,w,c
   205  002232  E1FA               	bnz	copy_data0
   206                           
   207                           ; Clear objects allocated to BANK1 (62 bytes)
   208  002234  EE01  F000         	lfsr	0,__pbssBANK1
   209  002238  0E3E               	movlw	62
   210  00223A                     clear_0:
   211  00223A  6AEE               	clrf	postinc0,c
   212  00223C  06E8               	decf	wreg,f,c
   213  00223E  E1FD               	bnz	clear_0
   214                           
   215                           ; Clear objects allocated to BANK0 (20 bytes)
   216  002240  EE00  F0CB         	lfsr	0,__pbssBANK0
   217  002244  0E14               	movlw	20
   218  002246                     clear_1:
   219  002246  6AEE               	clrf	postinc0,c
   220  002248  06E8               	decf	wreg,f,c
   221  00224A  E1FD               	bnz	clear_1
   222  00224C                     end_of_initialization:
   223                           	callstack 0
   224  00224C                     __end_of__initialization:
   225                           	callstack 0
   226  00224C  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   227  00224E  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   228  002250  0E00               	movlw	low (__Lmediumconst shr (0+16))
   229  002252  6EF8               	movwf	tblptru,c
   230  002254  0100               	movlb	0
   231  002256  EFE8  F00F         	goto	_main	;jump to C main() function
   232                           
   233                           	psect	bssBANK0
   234  0000CB                     __pbssBANK0:
   235                           	callstack 0
   236  0000CB                     _nout:
   237                           	callstack 0
   238  0000CB                     	ds	2
   239  0000CD                     _width:
   240                           	callstack 0
   241  0000CD                     	ds	2
   242  0000CF                     _prec:
   243                           	callstack 0
   244  0000CF                     	ds	2
   245  0000D1                     _flags:
   246                           	callstack 0
   247  0000D1                     	ds	2
   248  0000D3                     _s0:
   249                           	callstack 0
   250  0000D3                     	ds	2
   251  0000D5                     _m0:
   252                           	callstack 0
   253  0000D5                     	ds	2
   254  0000D7                     _h0:
   255                           	callstack 0
   256  0000D7                     	ds	2
   257  0000D9                     _s:
   258                           	callstack 0
   259  0000D9                     	ds	2
   260  0000DB                     _m:
   261                           	callstack 0
   262  0000DB                     	ds	2
   263  0000DD                     _h:
   264                           	callstack 0
   265  0000DD                     	ds	2
   266                           
   267                           	psect	dataBANK0
   268  0000DF                     __pdataBANK0:
   269                           	callstack 0
   270  0000DF                     stoa@F1133:
   271                           	callstack 0
   272  0000DF                     	ds	7
   273                           
   274                           	psect	bssBANK1
   275  000100                     __pbssBANK1:
   276                           	callstack 0
   277  000100                     _dbuf:
   278                           	callstack 0
   279  000100                     	ds	32
   280  000120                     _tx_string:
   281                           	callstack 0
   282  000120                     	ds	30
   283                           
   284                           	psect	cstackBANK1
   285  00013E                     __pcstackBANK1:
   286                           	callstack 0
   287  00013E                     ?_vfprintf:
   288                           	callstack 0
   289  00013E                     vfprintf@fp:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x0
   293  00013E                     	ds	2
   294  000140                     vfprintf@fmt:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x2
   298  000140                     	ds	2
   299  000142                     vfprintf@ap:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x4
   303  000142                     	ds	2
   304  000144                     ?_sprintf:
   305                           	callstack 0
   306  000144                     sprintf@s:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x6
   310  000144                     	ds	2
   311  000146                     sprintf@fmt:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x8
   315  000146                     	ds	14
   316  000154                     sprintf@ap:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x16
   320  000154                     	ds	2
   321  000156                     sprintf@f:
   322                           	callstack 0
   323                           
   324                           ; 6 bytes @ 0x18
   325  000156                     	ds	6
   326  00015C                     ??_main:
   327                           
   328                           ; 1 bytes @ 0x1E
   329  00015C                     	ds	1
   330                           
   331                           	psect	cstackBANK0
   332  000060                     __pcstackBANK0:
   333                           	callstack 0
   334  000060                     ?i2_sprintf:
   335                           	callstack 0
   336  000060                     i2sprintf@s:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x0
   340  000060                     	ds	2
   341  000062                     i2sprintf@fmt:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  000062                     	ds	8
   346  00006A                     i2sprintf@ap:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xA
   350  00006A                     	ds	2
   351  00006C                     i2sprintf@f:
   352                           	callstack 0
   353                           
   354                           ; 6 bytes @ 0xC
   355  00006C                     	ds	6
   356  000072                     ??_RS232:
   357                           
   358                           ; 1 bytes @ 0x12
   359  000072                     	ds	8
   360  00007A                     ?_strlen:
   361                           	callstack 0
   362  00007A                     ?___lodiv:
   363                           	callstack 0
   364  00007A                     ?___lomod:
   365                           	callstack 0
   366  00007A                     Lcd_Port@a:
   367                           	callstack 0
   368  00007A                     fputc@c:
   369                           	callstack 0
   370  00007A                     strlen@s:
   371                           	callstack 0
   372  00007A                     ___lodiv@dividend:
   373                           	callstack 0
   374  00007A                     ___lomod@dividend:
   375                           	callstack 0
   376                           
   377                           ; 8 bytes @ 0x1A
   378  00007A                     	ds	1
   379  00007B                     Lcd_Cmd@a:
   380                           	callstack 0
   381  00007B                     Lcd_Write_Char@temp:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x1B
   385  00007B                     	ds	1
   386  00007C                     ??_Lcd_Init:
   387  00007C                     Lcd_Set_Cursor@b:
   388                           	callstack 0
   389  00007C                     Lcd_Write_Char@y:
   390                           	callstack 0
   391  00007C                     fputc@fp:
   392                           	callstack 0
   393  00007C                     strlen@a:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x1C
   397  00007C                     	ds	1
   398  00007D                     Lcd_Set_Cursor@a:
   399                           	callstack 0
   400  00007D                     Lcd_Write_Char@a:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x1D
   404  00007D                     	ds	1
   405  00007E                     ??_fputc:
   406  00007E                     Lcd_Set_Cursor@z:
   407                           	callstack 0
   408  00007E                     Lcd_Write_String@a:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x1E
   412  00007E                     	ds	1
   413  00007F                     Lcd_Set_Cursor@y:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x1F
   417  00007F                     	ds	1
   418  000080                     ??_Lcd_Write_String:
   419  000080                     Lcd_Set_Cursor@temp:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x20
   423  000080                     	ds	2
   424  000082                     Lcd_Write_String@i:
   425                           	callstack 0
   426  000082                     ___lodiv@divisor:
   427                           	callstack 0
   428  000082                     ___lomod@divisor:
   429                           	callstack 0
   430                           
   431                           ; 8 bytes @ 0x22
   432  000082                     	ds	1
   433  000083                     ?_stoa:
   434                           	callstack 0
   435  000083                     stoa@fp:
   436                           	callstack 0
   437  000083                     fputs@s:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x23
   441  000083                     	ds	2
   442  000085                     stoa@s:
   443                           	callstack 0
   444  000085                     fputs@fp:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x25
   448  000085                     	ds	2
   449  000087                     ??_stoa:
   450  000087                     fputs@c:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x27
   454  000087                     	ds	1
   455  000088                     fputs@i:
   456                           	callstack 0
   457  000088                     stoa@nuls:
   458                           	callstack 0
   459                           
   460                           ; 7 bytes @ 0x28
   461  000088                     	ds	2
   462  00008A                     ?_pad:
   463                           	callstack 0
   464  00008A                     ___lomod@counter:
   465                           	callstack 0
   466  00008A                     pad@fp:
   467                           	callstack 0
   468  00008A                     ___lodiv@quotient:
   469                           	callstack 0
   470                           
   471                           ; 8 bytes @ 0x2A
   472  00008A                     	ds	2
   473  00008C                     pad@buf:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x2C
   477  00008C                     	ds	2
   478  00008E                     pad@p:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x2E
   482  00008E                     	ds	1
   483  00008F                     stoa@i:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x2F
   487  00008F                     	ds	1
   488  000090                     ??_pad:
   489                           
   490                           ; 1 bytes @ 0x30
   491  000090                     	ds	1
   492  000091                     pad@i:
   493                           	callstack 0
   494  000091                     stoa@w:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x31
   498  000091                     	ds	1
   499  000092                     ___lodiv@counter:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x32
   503  000092                     	ds	1
   504  000093                     pad@w:
   505                           	callstack 0
   506  000093                     stoa@cp:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x33
   510  000093                     	ds	2
   511  000095                     ?_utoa:
   512                           	callstack 0
   513  000095                     stoa@p:
   514                           	callstack 0
   515  000095                     utoa@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x35
   519  000095                     	ds	2
   520  000097                     stoa@l:
   521                           	callstack 0
   522  000097                     utoa@d:
   523                           	callstack 0
   524                           
   525                           ; 8 bytes @ 0x37
   526  000097                     	ds	8
   527  00009F                     ??_utoa:
   528                           
   529                           ; 1 bytes @ 0x3F
   530  00009F                     	ds	8
   531  0000A7                     utoa@p:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x47
   535  0000A7                     	ds	2
   536  0000A9                     utoa@w:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x49
   540  0000A9                     	ds	2
   541  0000AB                     utoa@n:
   542                           	callstack 0
   543                           
   544                           ; 8 bytes @ 0x4B
   545  0000AB                     	ds	8
   546  0000B3                     utoa@i:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x53
   550  0000B3                     	ds	2
   551  0000B5                     ?_vfpfcnvrt:
   552                           	callstack 0
   553  0000B5                     vfpfcnvrt@fp:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x55
   557  0000B5                     	ds	2
   558  0000B7                     vfpfcnvrt@fmt:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x57
   562  0000B7                     	ds	2
   563  0000B9                     vfpfcnvrt@ap:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x59
   567  0000B9                     	ds	2
   568  0000BB                     ??_vfpfcnvrt:
   569                           
   570                           ; 1 bytes @ 0x5B
   571  0000BB                     	ds	4
   572  0000BF                     vfpfcnvrt@llu:
   573                           	callstack 0
   574                           
   575                           ; 8 bytes @ 0x5F
   576  0000BF                     	ds	8
   577  0000C7                     vfpfcnvrt@cp:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x67
   581  0000C7                     	ds	2
   582  0000C9                     vfprintf@cfmt:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x69
   586  0000C9                     	ds	2
   587  0000CB                     
   588                           ; 1 bytes @ 0x6B
   589                           
   590                           	psect	cstackCOMRAM
   591  000001                     __pcstackCOMRAM:
   592                           	callstack 0
   593  000001                     ?i2_strlen:
   594                           	callstack 0
   595  000001                     ?i2___lodiv:
   596                           	callstack 0
   597  000001                     ?i2___lomod:
   598                           	callstack 0
   599  000001                     i2Lcd_Port@a:
   600                           	callstack 0
   601  000001                     i2fputc@c:
   602                           	callstack 0
   603  000001                     i2strlen@s:
   604                           	callstack 0
   605  000001                     i2___lodiv@dividend:
   606                           	callstack 0
   607  000001                     i2___lomod@dividend:
   608                           	callstack 0
   609                           
   610                           ; 8 bytes @ 0x0
   611  000001                     	ds	1
   612  000002                     i2Lcd_Cmd@a:
   613                           	callstack 0
   614  000002                     i2Lcd_Write_Char@temp:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x1
   618  000002                     	ds	1
   619  000003                     i2Lcd_Set_Cursor@b:
   620                           	callstack 0
   621  000003                     i2Lcd_Write_Char@y:
   622                           	callstack 0
   623  000003                     i2fputc@fp:
   624                           	callstack 0
   625  000003                     i2strlen@a:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x2
   629  000003                     	ds	1
   630  000004                     i2Lcd_Set_Cursor@a:
   631                           	callstack 0
   632  000004                     i2Lcd_Write_Char@a:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x3
   636  000004                     	ds	1
   637  000005                     ??i2_fputc:
   638  000005                     i2Lcd_Set_Cursor@z:
   639                           	callstack 0
   640  000005                     i2Lcd_Write_String@a:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x4
   644  000005                     	ds	1
   645  000006                     i2Lcd_Set_Cursor@y:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x5
   649  000006                     	ds	1
   650  000007                     ??i2_Lcd_Write_String:
   651  000007                     i2Lcd_Set_Cursor@temp:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x6
   655  000007                     	ds	2
   656  000009                     i2Lcd_Write_String@i:
   657                           	callstack 0
   658  000009                     i2___lodiv@divisor:
   659                           	callstack 0
   660  000009                     i2___lomod@divisor:
   661                           	callstack 0
   662                           
   663                           ; 8 bytes @ 0x8
   664  000009                     	ds	1
   665  00000A                     ?i2_stoa:
   666                           	callstack 0
   667  00000A                     i2stoa@fp:
   668                           	callstack 0
   669  00000A                     i2fputs@s:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x9
   673  00000A                     	ds	2
   674  00000C                     i2stoa@s:
   675                           	callstack 0
   676  00000C                     i2fputs@fp:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0xB
   680  00000C                     	ds	2
   681  00000E                     ??i2_stoa:
   682  00000E                     i2fputs@c:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0xD
   686  00000E                     	ds	1
   687  00000F                     i2fputs@i:
   688                           	callstack 0
   689  00000F                     i2stoa@nuls:
   690                           	callstack 0
   691                           
   692                           ; 7 bytes @ 0xE
   693  00000F                     	ds	2
   694  000011                     ?i2_pad:
   695                           	callstack 0
   696  000011                     i2___lomod@counter:
   697                           	callstack 0
   698  000011                     i2pad@fp:
   699                           	callstack 0
   700  000011                     i2___lodiv@quotient:
   701                           	callstack 0
   702                           
   703                           ; 8 bytes @ 0x10
   704  000011                     	ds	2
   705  000013                     i2pad@buf:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x12
   709  000013                     	ds	2
   710  000015                     i2pad@p:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x14
   714  000015                     	ds	1
   715  000016                     i2stoa@i:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x15
   719  000016                     	ds	1
   720  000017                     ??i2_pad:
   721                           
   722                           ; 1 bytes @ 0x16
   723  000017                     	ds	1
   724  000018                     i2pad@i:
   725                           	callstack 0
   726  000018                     i2stoa@w:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x17
   730  000018                     	ds	1
   731  000019                     i2___lodiv@counter:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x18
   735  000019                     	ds	1
   736  00001A                     i2pad@w:
   737                           	callstack 0
   738  00001A                     i2stoa@cp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x19
   742  00001A                     	ds	2
   743  00001C                     ?i2_utoa:
   744                           	callstack 0
   745  00001C                     i2stoa@p:
   746                           	callstack 0
   747  00001C                     i2utoa@fp:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x1B
   751  00001C                     	ds	2
   752  00001E                     i2stoa@l:
   753                           	callstack 0
   754  00001E                     i2utoa@d:
   755                           	callstack 0
   756                           
   757                           ; 8 bytes @ 0x1D
   758  00001E                     	ds	8
   759  000026                     ??i2_utoa:
   760                           
   761                           ; 1 bytes @ 0x25
   762  000026                     	ds	8
   763  00002E                     i2utoa@p:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x2D
   767  00002E                     	ds	2
   768  000030                     i2utoa@w:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x2F
   772  000030                     	ds	2
   773  000032                     i2utoa@n:
   774                           	callstack 0
   775                           
   776                           ; 8 bytes @ 0x31
   777  000032                     	ds	8
   778  00003A                     i2utoa@i:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x39
   782  00003A                     	ds	2
   783  00003C                     ?i2_vfpfcnvrt:
   784                           	callstack 0
   785  00003C                     i2vfpfcnvrt@fp:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x3B
   789  00003C                     	ds	2
   790  00003E                     i2vfpfcnvrt@fmt:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x3D
   794  00003E                     	ds	2
   795  000040                     i2vfpfcnvrt@ap:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x3F
   799  000040                     	ds	2
   800  000042                     ??i2_vfpfcnvrt:
   801                           
   802                           ; 1 bytes @ 0x41
   803  000042                     	ds	4
   804  000046                     i2vfpfcnvrt@llu:
   805                           	callstack 0
   806                           
   807                           ; 8 bytes @ 0x45
   808  000046                     	ds	8
   809  00004E                     i2vfpfcnvrt@cp:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x4D
   813  00004E                     	ds	2
   814  000050                     ?i2_vfprintf:
   815                           	callstack 0
   816  000050                     i2vfprintf@fp:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x4F
   820  000050                     	ds	2
   821  000052                     i2vfprintf@fmt:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x51
   825  000052                     	ds	2
   826  000054                     i2vfprintf@ap:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x53
   830  000054                     	ds	2
   831  000056                     i2vfprintf@cfmt:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x55
   835  000056                     	ds	2
   836  000058                     
   837                           ; 1 bytes @ 0x57
   838 ;;
   839 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   840 ;;
   841 ;; *************** function _main *****************
   842 ;; Defined at:
   843 ;;		line 131 in file "main.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   857 ;;      Params:         0       0       0       0       0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0       0       0
   859 ;;      Temps:          0       0       1       0       0       0       0       0       0
   860 ;;      Totals:         0       0       1       0       0       0       0       0       0
   861 ;;Total ram usage:        1 bytes
   862 ;; Hardware stack levels required when called: 18
   863 ;; This function calls:
   864 ;;		_Lcd_Clear
   865 ;;		_Lcd_Init
   866 ;;		_Lcd_Set_Cursor
   867 ;;		_Lcd_Write_String
   868 ;;		_disp_cronometro
   869 ;;		_setup_Interruptions
   870 ;;		_setup_RS232
   871 ;; This function is called by:
   872 ;;		Startup code after reset
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text0
   877  001FD0                     __ptext0:
   878                           	callstack 0
   879  001FD0                     _main:
   880                           	callstack 13
   881  001FD0                     
   882                           ;main.c: 133:     TRISD = 0;
   883  001FD0  0E00               	movlw	0
   884  001FD2  6E95               	movwf	149,c	;volatile
   885                           
   886                           ;main.c: 134:     TRISE = 0;
   887  001FD4  0E00               	movlw	0
   888  001FD6  6E96               	movwf	150,c	;volatile
   889                           
   890                           ;main.c: 136:     OSCCON = 0b01100000;
   891  001FD8  0E60               	movlw	96
   892  001FDA  6ED3               	movwf	211,c	;volatile
   893  001FDC                     
   894                           ;main.c: 137:     TRISCbits.RC6 = 1;
   895  001FDC  8C94               	bsf	148,6,c	;volatile
   896  001FDE                     
   897                           ;main.c: 138:     TRISCbits.RC7 = 1;
   898  001FDE  8E94               	bsf	148,7,c	;volatile
   899  001FE0                     
   900                           ;main.c: 140:     setup_RS232();
   901  001FE0  EC9C  F011         	call	_setup_RS232	;wreg free
   902                           
   903                           ;main.c: 141:     setup_Interruptions();
   904  001FE4  ECAD  F011         	call	_setup_Interruptions	;wreg free
   905  001FE8                     
   906                           ;main.c: 143:     Lcd_Init();
   907  001FE8  EC90  F00E         	call	_Lcd_Init	;wreg free
   908  001FEC                     
   909                           ;main.c: 144:     Lcd_Clear();
   910  001FEC  ECA6  F011         	call	_Lcd_Clear	;wreg free
   911  001FF0                     
   912                           ;main.c: 145:     Lcd_Set_Cursor(1, 1);
   913  001FF0  0E01               	movlw	1
   914  001FF2  0100               	movlb	0	; () banked
   915  001FF4  6F7C               	movwf	Lcd_Set_Cursor@b& (0+255),b
   916  001FF6  0E01               	movlw	1
   917  001FF8  EC59  F00E         	call	_Lcd_Set_Cursor
   918  001FFC                     
   919                           ;main.c: 146:     Lcd_Write_String(" TIMER ");
   920  001FFC  0E1B               	movlw	low STR_7
   921  001FFE  0100               	movlb	0	; () banked
   922  002000  6F7E               	movwf	Lcd_Write_String@a& (0+255),b
   923  002002  0E08               	movlw	high STR_7
   924  002004  6F7F               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   925  002006  ECD8  F00D         	call	_Lcd_Write_String	;wreg free
   926  00200A                     
   927                           ;main.c: 147:     _delay((unsigned long)((1000)*(400000/4000.0)));
   928  00200A  0E82               	movlw	130
   929  00200C  0101               	movlb	1	; () banked
   930  00200E  6F5C               	movwf	??_main& (0+255),b
   931  002010  0EDD               	movlw	221
   932  002012                     u2187:
   933  002012  2EE8               	decfsz	wreg,f,c
   934  002014  D7FE               	bra	u2187
   935  002016  2F5C               	decfsz	??_main& (0+255),f,b
   936  002018  D7FC               	bra	u2187
   937  00201A  D000               	nop2	
   938  00201C                     
   939                           ;main.c: 149:     Lcd_Clear();
   940  00201C  ECA6  F011         	call	_Lcd_Clear	;wreg free
   941  002020                     l2478:
   942                           
   943                           ;main.c: 153:       disp_cronometro();
   944  002020  ECB7  F00A         	call	_disp_cronometro	;wreg free
   945  002024  EF10  F010         	goto	l2478
   946  002028  EF07  F000         	goto	start
   947  00202C                     __end_of_main:
   948                           	callstack 0
   949                           
   950 ;; *************** function _setup_RS232 *****************
   951 ;; Defined at:
   952 ;;		line 115 in file "main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, status,2
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   966 ;;      Params:         0       0       0       0       0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0
   969 ;;      Totals:         0       0       0       0       0       0       0       0       0
   970 ;;Total ram usage:        0 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 9
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text1
   981  002338                     __ptext1:
   982                           	callstack 0
   983  002338                     _setup_RS232:
   984                           	callstack 21
   985  002338                     
   986                           ;main.c: 116:     TXEN = 1;
   987  002338  8AAC               	bsf	4012,5,c	;volatile
   988                           
   989                           ;main.c: 117:     SYNC = 0;
   990  00233A  98AC               	bcf	4012,4,c	;volatile
   991                           
   992                           ;main.c: 118:     BRGH = 1;
   993  00233C  84AC               	bsf	4012,2,c	;volatile
   994                           
   995                           ;main.c: 119:     SPEN = 1;
   996  00233E  8EAB               	bsf	4011,7,c	;volatile
   997                           
   998                           ;main.c: 120:     CREN = 1;
   999  002340  88AB               	bsf	4011,4,c	;volatile
  1000  002342                     
  1001                           ;main.c: 121:     BAUDCON = 0x00;
  1002  002342  0E00               	movlw	0
  1003  002344  6EB8               	movwf	184,c	;volatile
  1004                           
  1005                           ;main.c: 122:     SPBRG = 25;
  1006  002346  0E19               	movlw	25
  1007  002348  6EAF               	movwf	175,c	;volatile
  1008  00234A  0012               	return		;funcret
  1009  00234C                     __end_of_setup_RS232:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _setup_Interruptions *****************
  1013 ;; Defined at:
  1014 ;;		line 125 in file "main.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		None
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1028 ;;      Params:         0       0       0       0       0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1031 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; Hardware stack levels required when called: 9
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text2
  1043  00235A                     __ptext2:
  1044                           	callstack 0
  1045  00235A                     _setup_Interruptions:
  1046                           	callstack 21
  1047  00235A                     
  1048                           ;main.c: 126:     GIE = 1;
  1049  00235A  8EF2               	bsf	4082,7,c	;volatile
  1050                           
  1051                           ;main.c: 127:     PEIE = 1;
  1052  00235C  8CF2               	bsf	4082,6,c	;volatile
  1053                           
  1054                           ;main.c: 128:     RCIE = 1;
  1055  00235E  8A9D               	bsf	3997,5,c	;volatile
  1056  002360  0012               	return		;funcret
  1057  002362                     __end_of_setup_Interruptions:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _disp_cronometro *****************
  1061 ;; Defined at:
  1062 ;;		line 82 in file "main.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1076 ;;      Params:         0       0       0       0       0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1079 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1080 ;;Total ram usage:        0 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; Hardware stack levels required when called: 17
  1083 ;; This function calls:
  1084 ;;		_Lcd_Set_Cursor
  1085 ;;		_Lcd_Write_String
  1086 ;;		_cronometro
  1087 ;;		_sprintf
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text3
  1094  00156E                     __ptext3:
  1095                           	callstack 0
  1096  00156E                     _disp_cronometro:
  1097                           	callstack 13
  1098  00156E                     
  1099                           ;main.c: 84:    cronometro();
  1100  00156E  EC58  F00F         	call	_cronometro	;wreg free
  1101  001572                     
  1102                           ;main.c: 86:    h0 = m0 = s0 = "";
  1103  001572  0E1A               	movlw	low (STR_6+9)
  1104  001574  0100               	movlb	0	; () banked
  1105  001576  6FD3               	movwf	_s0& (0+255),b
  1106  001578  0E08               	movlw	high (STR_6+9)
  1107  00157A  6FD4               	movwf	(_s0+1)& (0+255),b
  1108  00157C  C0D3  F0D5         	movff	_s0,_m0
  1109  001580  C0D4  F0D6         	movff	_s0+1,_m0+1
  1110  001584  C0D5  F0D7         	movff	_m0,_h0
  1111  001588  C0D6  F0D8         	movff	_m0+1,_h0+1
  1112  00158C                     
  1113                           ; BSR set to: 0
  1114                           ;main.c: 88:    if (h < 10)
  1115  00158C  BFDE               	btfsc	(_h+1)& (0+255),7,b
  1116  00158E  EFD4  F00A         	goto	u2150
  1117  001592  51DE               	movf	(_h+1)& (0+255),w,b
  1118  001594  E107               	bnz	u2151
  1119  001596  0E0A               	movlw	10
  1120  001598  5DDD               	subwf	_h& (0+255),w,b
  1121  00159A  B0D8               	btfsc	status,0,c
  1122  00159C  EFD2  F00A         	goto	u2151
  1123  0015A0  EFD4  F00A         	goto	u2150
  1124  0015A4                     u2151:
  1125  0015A4  EFD8  F00A         	goto	l125
  1126  0015A8                     u2150:
  1127  0015A8                     
  1128                           ; BSR set to: 0
  1129                           ;main.c: 89:        h0 = "0";
  1130  0015A8  0E23               	movlw	low STR_2
  1131  0015AA  6FD7               	movwf	_h0& (0+255),b
  1132  0015AC  0E08               	movlw	high STR_2
  1133  0015AE  6FD8               	movwf	(_h0+1)& (0+255),b
  1134  0015B0                     l125:
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;main.c: 91:    if (m < 10)
  1138  0015B0  BFDC               	btfsc	(_m+1)& (0+255),7,b
  1139  0015B2  EFE6  F00A         	goto	u2160
  1140  0015B6  51DC               	movf	(_m+1)& (0+255),w,b
  1141  0015B8  E107               	bnz	u2161
  1142  0015BA  0E0A               	movlw	10
  1143  0015BC  5DDB               	subwf	_m& (0+255),w,b
  1144  0015BE  B0D8               	btfsc	status,0,c
  1145  0015C0  EFE4  F00A         	goto	u2161
  1146  0015C4  EFE6  F00A         	goto	u2160
  1147  0015C8                     u2161:
  1148  0015C8  EFEA  F00A         	goto	l126
  1149  0015CC                     u2160:
  1150  0015CC                     
  1151                           ; BSR set to: 0
  1152                           ;main.c: 92:        m0 = "0";
  1153  0015CC  0E23               	movlw	low STR_2
  1154  0015CE  6FD5               	movwf	_m0& (0+255),b
  1155  0015D0  0E08               	movlw	high STR_2
  1156  0015D2  6FD6               	movwf	(_m0+1)& (0+255),b
  1157  0015D4                     l126:
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;main.c: 94:    if (s < 10)
  1161  0015D4  BFDA               	btfsc	(_s+1)& (0+255),7,b
  1162  0015D6  EFF8  F00A         	goto	u2170
  1163  0015DA  51DA               	movf	(_s+1)& (0+255),w,b
  1164  0015DC  E107               	bnz	u2171
  1165  0015DE  0E0A               	movlw	10
  1166  0015E0  5DD9               	subwf	_s& (0+255),w,b
  1167  0015E2  B0D8               	btfsc	status,0,c
  1168  0015E4  EFF6  F00A         	goto	u2171
  1169  0015E8  EFF8  F00A         	goto	u2170
  1170  0015EC                     u2171:
  1171  0015EC  EFFC  F00A         	goto	l2452
  1172  0015F0                     u2170:
  1173  0015F0                     
  1174                           ; BSR set to: 0
  1175                           ;main.c: 95:        s0 = "0";
  1176  0015F0  0E23               	movlw	low STR_2
  1177  0015F2  6FD3               	movwf	_s0& (0+255),b
  1178  0015F4  0E08               	movlw	high STR_2
  1179  0015F6  6FD4               	movwf	(_s0+1)& (0+255),b
  1180  0015F8                     l2452:
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;main.c: 97:     sprintf(tx_string, "%s%u:%s%u:%s%u\r", h0, h, m0, m, s0, s);
  1184  0015F8  0E20               	movlw	low _tx_string
  1185  0015FA  0101               	movlb	1	; () banked
  1186  0015FC  6F44               	movwf	sprintf@s& (0+255),b
  1187  0015FE  0E01               	movlw	high _tx_string
  1188  001600  6F45               	movwf	(sprintf@s+1)& (0+255),b
  1189  001602  0E01               	movlw	low STR_5
  1190  001604  6F46               	movwf	sprintf@fmt& (0+255),b
  1191  001606  0E08               	movlw	high STR_5
  1192  001608  6F47               	movwf	(sprintf@fmt+1)& (0+255),b
  1193  00160A  C0D7  F148         	movff	_h0,?_sprintf+4
  1194  00160E  C0D8  F149         	movff	_h0+1,?_sprintf+5
  1195  001612  C0DD  F14A         	movff	_h,?_sprintf+6
  1196  001616  C0DE  F14B         	movff	_h+1,?_sprintf+7
  1197  00161A  C0D5  F14C         	movff	_m0,?_sprintf+8
  1198  00161E  C0D6  F14D         	movff	_m0+1,?_sprintf+9
  1199  001622  C0DB  F14E         	movff	_m,?_sprintf+10
  1200  001626  C0DC  F14F         	movff	_m+1,?_sprintf+11
  1201  00162A  C0D3  F150         	movff	_s0,?_sprintf+12
  1202  00162E  C0D4  F151         	movff	_s0+1,?_sprintf+13
  1203  001632  C0D9  F152         	movff	_s,?_sprintf+14
  1204  001636  C0DA  F153         	movff	_s+1,?_sprintf+15
  1205  00163A  EC44  F010         	call	_sprintf	;wreg free
  1206  00163E                     
  1207                           ;main.c: 99:     Lcd_Set_Cursor(1, 1);
  1208  00163E  0E01               	movlw	1
  1209  001640  0100               	movlb	0	; () banked
  1210  001642  6F7C               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1211  001644  0E01               	movlw	1
  1212  001646  EC59  F00E         	call	_Lcd_Set_Cursor
  1213  00164A                     
  1214                           ;main.c: 100:     Lcd_Write_String(tx_string);
  1215  00164A  0E20               	movlw	low _tx_string
  1216  00164C  0100               	movlb	0	; () banked
  1217  00164E  6F7E               	movwf	Lcd_Write_String@a& (0+255),b
  1218  001650  0E01               	movlw	high _tx_string
  1219  001652  6F7F               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1220  001654  ECD8  F00D         	call	_Lcd_Write_String	;wreg free
  1221  001658  0012               	return		;funcret
  1222  00165A                     __end_of_disp_cronometro:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function _sprintf *****************
  1226 ;; Defined at:
  1227 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  s               2    6[BANK1 ] PTR unsigned char 
  1230 ;;		 -> tx_string(30), 
  1231 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  1232 ;;		 -> STR_6(10), STR_5(16), 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  f               6   24[BANK1 ] struct _IO_FILE
  1235 ;;  ap              2   22[BANK1 ] PTR void [1]
  1236 ;;		 -> ?_sprintf(2), 
  1237 ;;  ret             2    0        int 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  2    6[BANK1 ] int 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1247 ;;      Params:         0       0      16       0       0       0       0       0       0
  1248 ;;      Locals:         0       0       8       0       0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1250 ;;      Totals:         0       0      24       0       0       0       0       0       0
  1251 ;;Total ram usage:       24 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; Hardware stack levels required when called: 16
  1254 ;; This function calls:
  1255 ;;		_vfprintf
  1256 ;; This function is called by:
  1257 ;;		_disp_cronometro
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text4
  1262  002088                     __ptext4:
  1263                           	callstack 0
  1264  002088                     _sprintf:
  1265                           	callstack 13
  1266  002088  0E48               	movlw	low (?_sprintf+4)
  1267  00208A  0101               	movlb	1	; () banked
  1268  00208C  6F54               	movwf	sprintf@ap& (0+255),b
  1269  00208E  0E01               	movlw	high (?_sprintf+4)
  1270  002090  6F55               	movwf	(sprintf@ap+1)& (0+255),b
  1271  002092  C144  F156         	movff	sprintf@s,sprintf@f
  1272  002096  C145  F157         	movff	sprintf@s+1,sprintf@f+1
  1273  00209A                     
  1274                           ; BSR set to: 1
  1275  00209A  0E00               	movlw	0
  1276  00209C  6F59               	movwf	(sprintf@f+3)& (0+255),b
  1277  00209E  0E00               	movlw	0
  1278  0020A0  6F58               	movwf	(sprintf@f+2)& (0+255),b
  1279  0020A2                     
  1280                           ; BSR set to: 1
  1281  0020A2  0E00               	movlw	0
  1282  0020A4  6F5B               	movwf	(sprintf@f+5)& (0+255),b
  1283  0020A6  0E00               	movlw	0
  1284  0020A8  6F5A               	movwf	(sprintf@f+4)& (0+255),b
  1285  0020AA                     
  1286                           ; BSR set to: 1
  1287  0020AA  0E56               	movlw	low sprintf@f
  1288  0020AC  6F3E               	movwf	vfprintf@fp& (0+255),b
  1289  0020AE  0E01               	movlw	high sprintf@f
  1290  0020B0  6F3F               	movwf	(vfprintf@fp+1)& (0+255),b
  1291  0020B2  C146  F140         	movff	sprintf@fmt,vfprintf@fmt
  1292  0020B6  C147  F141         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1293  0020BA  0E54               	movlw	low sprintf@ap
  1294  0020BC  6F42               	movwf	vfprintf@ap& (0+255),b
  1295  0020BE  0E01               	movlw	high sprintf@ap
  1296  0020C0  6F43               	movwf	(vfprintf@ap+1)& (0+255),b
  1297  0020C2  ECF6  F00E         	call	_vfprintf	;wreg free
  1298  0020C6  0101               	movlb	1	; () banked
  1299  0020C8  5158               	movf	(sprintf@f+2)& (0+255),w,b
  1300  0020CA  2544               	addwf	sprintf@s& (0+255),w,b
  1301  0020CC  6ED9               	movwf	fsr2l,c
  1302  0020CE  5159               	movf	(sprintf@f+3)& (0+255),w,b
  1303  0020D0  2145               	addwfc	(sprintf@s+1)& (0+255),w,b
  1304  0020D2  6EDA               	movwf	fsr2h,c
  1305  0020D4  0E00               	movlw	0
  1306  0020D6  6EDF               	movwf	indf2,c
  1307  0020D8                     
  1308                           ; BSR set to: 1
  1309  0020D8  0012               	return		;funcret
  1310  0020DA                     __end_of_sprintf:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function _vfprintf *****************
  1314 ;; Defined at:
  1315 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  1318 ;;		 -> sprintf@f(6), 
  1319 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  1320 ;;		 -> STR_6(10), STR_5(16), 
  1321 ;;  ap              2    4[BANK1 ] PTR PTR void 
  1322 ;;		 -> sprintf@ap(2), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  cfmt            2  105[BANK0 ] PTR unsigned char 
  1325 ;;		 -> STR_6(10), STR_5(16), 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  2    0[BANK1 ] int 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1335 ;;      Params:         0       0       6       0       0       0       0       0       0
  1336 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1338 ;;      Totals:         0       2       6       0       0       0       0       0       0
  1339 ;;Total ram usage:        8 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 15
  1342 ;; This function calls:
  1343 ;;		_vfpfcnvrt
  1344 ;; This function is called by:
  1345 ;;		_sprintf
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text5
  1350  001DEC                     __ptext5:
  1351                           	callstack 0
  1352  001DEC                     _vfprintf:
  1353                           	callstack 13
  1354  001DEC                     
  1355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1356  001DEC  C140  F0C9         	movff	vfprintf@fmt,vfprintf@cfmt
  1357  001DF0  C141  F0CA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1358  001DF4                     
  1359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1360  001DF4  0E00               	movlw	0
  1361  001DF6  0100               	movlb	0	; () banked
  1362  001DF8  6FCC               	movwf	(_nout+1)& (0+255),b
  1363  001DFA  0E00               	movlw	0
  1364  001DFC  6FCB               	movwf	_nout& (0+255),b
  1365                           
  1366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1367  001DFE  EF14  F00F         	goto	l2426
  1368  001E02                     l2424:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1372  001E02  C13E  F0B5         	movff	vfprintf@fp,vfpfcnvrt@fp
  1373  001E06  C13F  F0B6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1374  001E0A  0EC9               	movlw	low vfprintf@cfmt
  1375  001E0C  6FB7               	movwf	vfpfcnvrt@fmt& (0+255),b
  1376  001E0E  0E00               	movlw	high vfprintf@cfmt
  1377  001E10  6FB8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1378  001E12  C142  F0B9         	movff	vfprintf@ap,vfpfcnvrt@ap
  1379  001E16  C143  F0BA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1380  001E1A  EC13  F004         	call	_vfpfcnvrt	;wreg free
  1381  001E1E  0100               	movlb	0	; () banked
  1382  001E20  51B5               	movf	?_vfpfcnvrt& (0+255),w,b
  1383  001E22  27CB               	addwf	_nout& (0+255),f,b
  1384  001E24  51B6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1385  001E26  23CC               	addwfc	(_nout+1)& (0+255),f,b
  1386  001E28                     l2426:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1390  001E28  C0C9  FFF6         	movff	vfprintf@cfmt,tblptrl
  1391  001E2C  C0CA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1392  001E30                     	if	0	;tblptru may be non-zero
  1393  001E30                     	endif
  1394  001E30                     	if	0	;tblptru may be non-zero
  1395  001E30                     	endif
  1396  001E30  0008               	tblrd		*
  1397  001E32  50F5               	movf	tablat,w,c
  1398  001E34  0900               	iorlw	0
  1399  001E36  A4D8               	btfss	status,2,c
  1400  001E38  EF20  F00F         	goto	u2141
  1401  001E3C  EF22  F00F         	goto	u2140
  1402  001E40                     u2141:
  1403  001E40  EF01  F00F         	goto	l2424
  1404  001E44                     u2140:
  1405  001E44                     
  1406                           ; BSR set to: 0
  1407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1408  001E44  C0CB  F13E         	movff	_nout,?_vfprintf
  1409  001E48  C0CC  F13F         	movff	_nout+1,?_vfprintf+1
  1410  001E4C                     
  1411                           ; BSR set to: 0
  1412  001E4C  0012               	return		;funcret
  1413  001E4E                     __end_of_vfprintf:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function _vfpfcnvrt *****************
  1417 ;; Defined at:
  1418 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  fp              2   85[BANK0 ] PTR struct _IO_FILE
  1421 ;;		 -> sprintf@f(6), 
  1422 ;;  fmt             2   87[BANK0 ] PTR PTR unsigned char 
  1423 ;;		 -> vfprintf@cfmt(2), 
  1424 ;;  ap              2   89[BANK0 ] PTR PTR void 
  1425 ;;		 -> sprintf@ap(2), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  llu             8   95[BANK0 ] unsigned long long 
  1428 ;;  ll              8    0        long long 
  1429 ;;  f               4    0        long long 
  1430 ;;  vp              3    0        PTR void 
  1431 ;;  ct              3    0        unsigned char [3]
  1432 ;;  cp              2  103[BANK0 ] PTR unsigned char 
  1433 ;;		 -> NULL(0), ?_sprintf(2), STR_4(2), STR_3(2), 
  1434 ;;		 -> STR_2(2), STR_1(1), 
  1435 ;;  i               2    0        int 
  1436 ;;  done            2    0        int 
  1437 ;;  c               1    0        unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  2   85[BANK0 ] int 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1447 ;;      Params:         0       6       0       0       0       0       0       0       0
  1448 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1449 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1450 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1451 ;;Total ram usage:       20 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 14
  1454 ;; This function calls:
  1455 ;;		_fputc
  1456 ;;		_stoa
  1457 ;;		_utoa
  1458 ;; This function is called by:
  1459 ;;		_vfprintf
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text6
  1464  000826                     __ptext6:
  1465                           	callstack 0
  1466  000826                     _vfpfcnvrt:
  1467                           	callstack 13
  1468  000826                     
  1469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1470  000826  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1471  00082A  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1472  00082E  CFDE FFF6          	movff	postinc2,tblptrl
  1473  000832  CFDD FFF7          	movff	postdec2,tblptrh
  1474  000836                     	if	0	;tblptru may be non-zero
  1475  000836                     	endif
  1476  000836                     	if	0	;tblptru may be non-zero
  1477  000836                     	endif
  1478  000836  0008               	tblrd		*
  1479  000838  50F5               	movf	tablat,w,c
  1480  00083A  0A25               	xorlw	37
  1481  00083C  A4D8               	btfss	status,2,c
  1482  00083E  EF23  F004         	goto	u1651
  1483  000842  EF25  F004         	goto	u1650
  1484  000846                     u1651:
  1485  000846  EFFE  F004         	goto	l2000
  1486  00084A                     u1650:
  1487  00084A                     
  1488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1489  00084A  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1490  00084E  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1491  000852  2ADE               	incf	postinc2,f,c
  1492  000854  0E00               	movlw	0
  1493  000856  22DD               	addwfc	postdec2,f,c
  1494  000858                     
  1495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1496  000858  0E00               	movlw	0
  1497  00085A  0100               	movlb	0	; () banked
  1498  00085C  6FCE               	movwf	(_width+1)& (0+255),b
  1499  00085E  0E00               	movlw	0
  1500  000860  6FCD               	movwf	_width& (0+255),b
  1501  000862  C0CD  F0D1         	movff	_width,_flags
  1502  000866  C0CE  F0D2         	movff	_width+1,_flags+1
  1503  00086A                     
  1504                           ; BSR set to: 0
  1505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1506  00086A  69CF               	setf	_prec& (0+255),b
  1507  00086C  69D0               	setf	(_prec+1)& (0+255),b
  1508  00086E                     
  1509                           ; BSR set to: 0
  1510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  1511  00086E  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1512  000872  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1513  000876  CFDE FFF6          	movff	postinc2,tblptrl
  1514  00087A  CFDD FFF7          	movff	postdec2,tblptrh
  1515  00087E                     	if	0	;tblptru may be non-zero
  1516  00087E                     	endif
  1517  00087E                     	if	0	;tblptru may be non-zero
  1518  00087E                     	endif
  1519  00087E  0008               	tblrd		*
  1520  000880  50F5               	movf	tablat,w,c
  1521  000882  0A73               	xorlw	115
  1522  000884  A4D8               	btfss	status,2,c
  1523  000886  EF47  F004         	goto	u1661
  1524  00088A  EF49  F004         	goto	u1660
  1525  00088E                     u1661:
  1526  00088E  EF74  F004         	goto	l1976
  1527  000892                     u1660:
  1528  000892                     
  1529                           ; BSR set to: 0
  1530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  1531  000892  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1532  000896  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1533  00089A  2ADE               	incf	postinc2,f,c
  1534  00089C  0E00               	movlw	0
  1535  00089E  22DD               	addwfc	postdec2,f,c
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  1538  0008A0  C0B9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1539  0008A4  C0BA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1540  0008A8  CFDF F0BB          	movff	indf2,??_vfpfcnvrt
  1541  0008AC  0E02               	movlw	2
  1542  0008AE  26DE               	addwf	postinc2,f,c
  1543  0008B0  CFDF F0BC          	movff	indf2,??_vfpfcnvrt+1
  1544  0008B4  0E00               	movlw	0
  1545  0008B6  22DD               	addwfc	postdec2,f,c
  1546  0008B8  C0BB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1547  0008BC  C0BC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1548  0008C0  CFDE F0C7          	movff	postinc2,vfpfcnvrt@cp
  1549  0008C4  CFDD F0C8          	movff	postdec2,vfpfcnvrt@cp+1
  1550  0008C8                     
  1551                           ; BSR set to: 0
  1552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  1553  0008C8  C0B5  F083         	movff	vfpfcnvrt@fp,stoa@fp
  1554  0008CC  C0B6  F084         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  1555  0008D0  C0C7  F085         	movff	vfpfcnvrt@cp,stoa@s
  1556  0008D4  C0C8  F086         	movff	vfpfcnvrt@cp+1,stoa@s+1
  1557  0008D8  EC26  F008         	call	_stoa	;wreg free
  1558  0008DC  C083  F0B5         	movff	?_stoa,?_vfpfcnvrt
  1559  0008E0  C084  F0B6         	movff	?_stoa+1,?_vfpfcnvrt+1
  1560  0008E4  EF1A  F005         	goto	l901
  1561  0008E8                     l1976:
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  1565  0008E8  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1566  0008EC  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1567  0008F0  CFDE FFF6          	movff	postinc2,tblptrl
  1568  0008F4  CFDD FFF7          	movff	postdec2,tblptrh
  1569  0008F8                     	if	0	;tblptru may be non-zero
  1570  0008F8                     	endif
  1571  0008F8                     	if	0	;tblptru may be non-zero
  1572  0008F8                     	endif
  1573  0008F8  0008               	tblrd		*
  1574  0008FA  50F5               	movf	tablat,w,c
  1575  0008FC  0A75               	xorlw	117
  1576  0008FE  A4D8               	btfss	status,2,c
  1577  000900  EF84  F004         	goto	u1671
  1578  000904  EF86  F004         	goto	u1670
  1579  000908                     u1671:
  1580  000908  EFC7  F004         	goto	l1984
  1581  00090C                     u1670:
  1582  00090C                     
  1583                           ; BSR set to: 0
  1584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  1585  00090C  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1586  000910  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1587  000914  2ADE               	incf	postinc2,f,c
  1588  000916  0E00               	movlw	0
  1589  000918  22DD               	addwfc	postdec2,f,c
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1592  00091A  C0B9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1593  00091E  C0BA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1594  000922  CFDF F0BB          	movff	indf2,??_vfpfcnvrt
  1595  000926  0E02               	movlw	2
  1596  000928  26DE               	addwf	postinc2,f,c
  1597  00092A  CFDF F0BC          	movff	indf2,??_vfpfcnvrt+1
  1598  00092E  0E00               	movlw	0
  1599  000930  22DD               	addwfc	postdec2,f,c
  1600  000932  C0BB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1601  000936  C0BC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1602  00093A  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt+2
  1603  00093E  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+3
  1604  000942  C0BD  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1605  000946  C0BE  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1606  00094A  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1607  00094C  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1608  00094E  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1609  000950  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1610  000952  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1611  000954  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1612  000956                     
  1613                           ; BSR set to: 0
  1614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  1615  000956  C0B5  F095         	movff	vfpfcnvrt@fp,utoa@fp
  1616  00095A  C0B6  F096         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1617  00095E  C0BF  F097         	movff	vfpfcnvrt@llu,utoa@d
  1618  000962  C0C0  F098         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1619  000966  C0C1  F099         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1620  00096A  C0C2  F09A         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1621  00096E  C0C3  F09B         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1622  000972  C0C4  F09C         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1623  000976  C0C5  F09D         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1624  00097A  C0C6  F09E         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1625  00097E  EC21  F006         	call	_utoa	;wreg free
  1626  000982  C095  F0B5         	movff	?_utoa,?_vfpfcnvrt
  1627  000986  C096  F0B6         	movff	?_utoa+1,?_vfpfcnvrt+1
  1628  00098A  EF1A  F005         	goto	l901
  1629  00098E                     l1984:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1633  00098E  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1634  000992  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1635  000996  CFDE FFF6          	movff	postinc2,tblptrl
  1636  00099A  CFDD FFF7          	movff	postdec2,tblptrh
  1637  00099E                     	if	0	;tblptru may be non-zero
  1638  00099E                     	endif
  1639  00099E                     	if	0	;tblptru may be non-zero
  1640  00099E                     	endif
  1641  00099E  0008               	tblrd		*
  1642  0009A0  50F5               	movf	tablat,w,c
  1643  0009A2  0A25               	xorlw	37
  1644  0009A4  A4D8               	btfss	status,2,c
  1645  0009A6  EFD7  F004         	goto	u1681
  1646  0009AA  EFD9  F004         	goto	u1680
  1647  0009AE                     u1681:
  1648  0009AE  EFF1  F004         	goto	l1994
  1649  0009B2                     u1680:
  1650  0009B2                     
  1651                           ; BSR set to: 0
  1652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1653  0009B2  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1654  0009B6  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1655  0009BA  2ADE               	incf	postinc2,f,c
  1656  0009BC  0E00               	movlw	0
  1657  0009BE  22DD               	addwfc	postdec2,f,c
  1658  0009C0                     
  1659                           ; BSR set to: 0
  1660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1661  0009C0  0E00               	movlw	0
  1662  0009C2  6F7B               	movwf	(fputc@c+1)& (0+255),b
  1663  0009C4  0E25               	movlw	37
  1664  0009C6  6F7A               	movwf	fputc@c& (0+255),b
  1665  0009C8  C0B5  F07C         	movff	vfpfcnvrt@fp,fputc@fp
  1666  0009CC  C0B6  F07D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1667  0009D0  ECFE  F00B         	call	_fputc	;wreg free
  1668  0009D4                     l1990:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1671  0009D4  0E00               	movlw	0
  1672  0009D6  0100               	movlb	0	; () banked
  1673  0009D8  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1674  0009DA  0E01               	movlw	1
  1675  0009DC  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  1676  0009DE  EF1A  F005         	goto	l901
  1677  0009E2                     l1994:
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1681  0009E2  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1682  0009E6  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1683  0009EA  2ADE               	incf	postinc2,f,c
  1684  0009EC  0E00               	movlw	0
  1685  0009EE  22DD               	addwfc	postdec2,f,c
  1686  0009F0                     
  1687                           ; BSR set to: 0
  1688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1689  0009F0  0E00               	movlw	0
  1690  0009F2  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1691  0009F4  0E00               	movlw	0
  1692  0009F6  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  1693  0009F8  EF1A  F005         	goto	l901
  1694  0009FC                     l2000:
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1697  0009FC  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1698  000A00  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1699  000A04  CFDE FFF6          	movff	postinc2,tblptrl
  1700  000A08  CFDD FFF7          	movff	postdec2,tblptrh
  1701  000A0C                     	if	0	;tblptru may be non-zero
  1702  000A0C                     	endif
  1703  000A0C                     	if	0	;tblptru may be non-zero
  1704  000A0C                     	endif
  1705  000A0C  0008               	tblrd		*
  1706  000A0E  50F5               	movf	tablat,w,c
  1707  000A10  0100               	movlb	0	; () banked
  1708  000A12  6F7A               	movwf	fputc@c& (0+255),b
  1709  000A14  6B7B               	clrf	(fputc@c+1)& (0+255),b
  1710  000A16  C0B5  F07C         	movff	vfpfcnvrt@fp,fputc@fp
  1711  000A1A  C0B6  F07D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1712  000A1E  ECFE  F00B         	call	_fputc	;wreg free
  1713  000A22                     
  1714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1715  000A22  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1716  000A26  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1717  000A2A  2ADE               	incf	postinc2,f,c
  1718  000A2C  0E00               	movlw	0
  1719  000A2E  22DD               	addwfc	postdec2,f,c
  1720  000A30  EFEA  F004         	goto	l1990
  1721  000A34                     l901:
  1722  000A34  0012               	return		;funcret
  1723  000A36                     __end_of_vfpfcnvrt:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _utoa *****************
  1727 ;; Defined at:
  1728 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  1731 ;;		 -> sprintf@f(6), 
  1732 ;;  d               8   55[BANK0 ] unsigned long long 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  n               8   75[BANK0 ] unsigned long long 
  1735 ;;  i               2   83[BANK0 ] int 
  1736 ;;  w               2   73[BANK0 ] int 
  1737 ;;  p               2   71[BANK0 ] int 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2   53[BANK0 ] int 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1747 ;;      Params:         0      10       0       0       0       0       0       0       0
  1748 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1749 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1750 ;;      Totals:         0      32       0       0       0       0       0       0       0
  1751 ;;Total ram usage:       32 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 13
  1754 ;; This function calls:
  1755 ;;		___lodiv
  1756 ;;		___lomod
  1757 ;;		_pad
  1758 ;; This function is called by:
  1759 ;;		_vfpfcnvrt
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text7
  1764  000C42                     __ptext7:
  1765                           	callstack 0
  1766  000C42                     _utoa:
  1767                           	callstack 13
  1768  000C42                     
  1769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  1770  000C42  0100               	movlb	0	; () banked
  1771  000C44  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  1772  000C46  EF27  F006         	goto	u1431
  1773  000C4A  EF29  F006         	goto	u1430
  1774  000C4E                     u1431:
  1775  000C4E  EF2A  F006         	goto	l1852
  1776  000C52                     u1430:
  1777  000C52                     
  1778                           ; BSR set to: 0
  1779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  1780  000C52  93D1               	bcf	_flags& (0+255),1,b
  1781  000C54                     l1852:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  1785  000C54  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  1786  000C56  EF37  F006         	goto	u1440
  1787  000C5A  51D0               	movf	(_prec+1)& (0+255),w,b
  1788  000C5C  E106               	bnz	u1441
  1789  000C5E  05CF               	decf	_prec& (0+255),w,b
  1790  000C60  B0D8               	btfsc	status,0,c
  1791  000C62  EF35  F006         	goto	u1441
  1792  000C66  EF37  F006         	goto	u1440
  1793  000C6A                     u1441:
  1794  000C6A  EF3D  F006         	goto	l886
  1795  000C6E                     u1440:
  1796  000C6E                     
  1797                           ; BSR set to: 0
  1798  000C6E  0E00               	movlw	0
  1799  000C70  6FA8               	movwf	(utoa@p+1)& (0+255),b
  1800  000C72  0E01               	movlw	1
  1801  000C74  6FA7               	movwf	utoa@p& (0+255),b
  1802  000C76  EF41  F006         	goto	l888
  1803  000C7A                     l886:
  1804                           
  1805                           ; BSR set to: 0
  1806  000C7A  C0CF  F0A7         	movff	_prec,utoa@p
  1807  000C7E  C0D0  F0A8         	movff	_prec+1,utoa@p+1
  1808  000C82                     l888:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  1812  000C82  C0CD  F0A9         	movff	_width,utoa@w
  1813  000C86  C0CE  F0AA         	movff	_width+1,utoa@w+1
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  1816  000C8A  C097  F0AB         	movff	utoa@d,utoa@n
  1817  000C8E  C098  F0AC         	movff	utoa@d+1,utoa@n+1
  1818  000C92  C099  F0AD         	movff	utoa@d+2,utoa@n+2
  1819  000C96  C09A  F0AE         	movff	utoa@d+3,utoa@n+3
  1820  000C9A  C09B  F0AF         	movff	utoa@d+4,utoa@n+4
  1821  000C9E  C09C  F0B0         	movff	utoa@d+5,utoa@n+5
  1822  000CA2  C09D  F0B1         	movff	utoa@d+6,utoa@n+6
  1823  000CA6  C09E  F0B2         	movff	utoa@d+7,utoa@n+7
  1824  000CAA                     
  1825                           ; BSR set to: 0
  1826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  1827  000CAA  0E00               	movlw	0
  1828  000CAC  6FB4               	movwf	(utoa@i+1)& (0+255),b
  1829  000CAE  0E1F               	movlw	31
  1830  000CB0  6FB3               	movwf	utoa@i& (0+255),b
  1831  000CB2                     
  1832                           ; BSR set to: 0
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  1834  000CB2  0E00               	movlw	0
  1835  000CB4  0101               	movlb	1	; () banked
  1836  000CB6  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1839  000CB8  EFD5  F006         	goto	l1870
  1840  000CBC                     l1860:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  1844  000CBC  07B3               	decf	utoa@i& (0+255),f,b
  1845  000CBE  A0D8               	btfss	status,0,c
  1846  000CC0  07B4               	decf	(utoa@i+1)& (0+255),f,b
  1847  000CC2                     
  1848                           ; BSR set to: 0
  1849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  1850  000CC2  0E00               	movlw	low _dbuf
  1851  000CC4  25B3               	addwf	utoa@i& (0+255),w,b
  1852  000CC6  6ED9               	movwf	fsr2l,c
  1853  000CC8  0E01               	movlw	high _dbuf
  1854  000CCA  21B4               	addwfc	(utoa@i+1)& (0+255),w,b
  1855  000CCC  6EDA               	movwf	fsr2h,c
  1856  000CCE  C0AB  F07A         	movff	utoa@n,___lomod@dividend
  1857  000CD2  C0AC  F07B         	movff	utoa@n+1,___lomod@dividend+1
  1858  000CD6  C0AD  F07C         	movff	utoa@n+2,___lomod@dividend+2
  1859  000CDA  C0AE  F07D         	movff	utoa@n+3,___lomod@dividend+3
  1860  000CDE  C0AF  F07E         	movff	utoa@n+4,___lomod@dividend+4
  1861  000CE2  C0B0  F07F         	movff	utoa@n+5,___lomod@dividend+5
  1862  000CE6  C0B1  F080         	movff	utoa@n+6,___lomod@dividend+6
  1863  000CEA  C0B2  F081         	movff	utoa@n+7,___lomod@dividend+7
  1864  000CEE  0E0A               	movlw	10
  1865  000CF0  6F82               	movwf	___lomod@divisor& (0+255),b
  1866  000CF2  0E00               	movlw	0
  1867  000CF4  6F83               	movwf	(___lomod@divisor+1)& (0+255),b
  1868  000CF6  0E00               	movlw	0
  1869  000CF8  6F84               	movwf	(___lomod@divisor+2)& (0+255),b
  1870  000CFA  0E00               	movlw	0
  1871  000CFC  6F85               	movwf	(___lomod@divisor+3)& (0+255),b
  1872  000CFE  0E00               	movlw	0
  1873  000D00  6F86               	movwf	(___lomod@divisor+4)& (0+255),b
  1874  000D02  0E00               	movlw	0
  1875  000D04  6F87               	movwf	(___lomod@divisor+5)& (0+255),b
  1876  000D06  0E00               	movlw	0
  1877  000D08  6F88               	movwf	(___lomod@divisor+6)& (0+255),b
  1878  000D0A  0E00               	movlw	0
  1879  000D0C  6F89               	movwf	(___lomod@divisor+7)& (0+255),b
  1880  000D0E  EC2D  F00B         	call	___lomod	;wreg free
  1881  000D12  C07A  F09F         	movff	?___lomod,??_utoa
  1882  000D16  C07B  F0A0         	movff	?___lomod+1,??_utoa+1
  1883  000D1A  C07C  F0A1         	movff	?___lomod+2,??_utoa+2
  1884  000D1E  C07D  F0A2         	movff	?___lomod+3,??_utoa+3
  1885  000D22  C07E  F0A3         	movff	?___lomod+4,??_utoa+4
  1886  000D26  C07F  F0A4         	movff	?___lomod+5,??_utoa+5
  1887  000D2A  C080  F0A5         	movff	?___lomod+6,??_utoa+6
  1888  000D2E  C081  F0A6         	movff	?___lomod+7,??_utoa+7
  1889  000D32  0100               	movlb	0	; () banked
  1890  000D34  519F               	movf	??_utoa& (0+255),w,b
  1891  000D36  0F30               	addlw	48
  1892  000D38  6EDF               	movwf	indf2,c
  1893  000D3A                     
  1894                           ; BSR set to: 0
  1895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  1896  000D3A  07A7               	decf	utoa@p& (0+255),f,b
  1897  000D3C  A0D8               	btfss	status,0,c
  1898  000D3E  07A8               	decf	(utoa@p+1)& (0+255),f,b
  1899  000D40                     
  1900                           ; BSR set to: 0
  1901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  1902  000D40  07A9               	decf	utoa@w& (0+255),f,b
  1903  000D42  A0D8               	btfss	status,0,c
  1904  000D44  07AA               	decf	(utoa@w+1)& (0+255),f,b
  1905  000D46                     
  1906                           ; BSR set to: 0
  1907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  1908  000D46  C0AB  F07A         	movff	utoa@n,___lodiv@dividend
  1909  000D4A  C0AC  F07B         	movff	utoa@n+1,___lodiv@dividend+1
  1910  000D4E  C0AD  F07C         	movff	utoa@n+2,___lodiv@dividend+2
  1911  000D52  C0AE  F07D         	movff	utoa@n+3,___lodiv@dividend+3
  1912  000D56  C0AF  F07E         	movff	utoa@n+4,___lodiv@dividend+4
  1913  000D5A  C0B0  F07F         	movff	utoa@n+5,___lodiv@dividend+5
  1914  000D5E  C0B1  F080         	movff	utoa@n+6,___lodiv@dividend+6
  1915  000D62  C0B2  F081         	movff	utoa@n+7,___lodiv@dividend+7
  1916  000D66  0E0A               	movlw	10
  1917  000D68  6F82               	movwf	___lodiv@divisor& (0+255),b
  1918  000D6A  0E00               	movlw	0
  1919  000D6C  6F83               	movwf	(___lodiv@divisor+1)& (0+255),b
  1920  000D6E  0E00               	movlw	0
  1921  000D70  6F84               	movwf	(___lodiv@divisor+2)& (0+255),b
  1922  000D72  0E00               	movlw	0
  1923  000D74  6F85               	movwf	(___lodiv@divisor+3)& (0+255),b
  1924  000D76  0E00               	movlw	0
  1925  000D78  6F86               	movwf	(___lodiv@divisor+4)& (0+255),b
  1926  000D7A  0E00               	movlw	0
  1927  000D7C  6F87               	movwf	(___lodiv@divisor+5)& (0+255),b
  1928  000D7E  0E00               	movlw	0
  1929  000D80  6F88               	movwf	(___lodiv@divisor+6)& (0+255),b
  1930  000D82  0E00               	movlw	0
  1931  000D84  6F89               	movwf	(___lodiv@divisor+7)& (0+255),b
  1932  000D86  ECC6  F009         	call	___lodiv	;wreg free
  1933  000D8A  C07A  F0AB         	movff	?___lodiv,utoa@n
  1934  000D8E  C07B  F0AC         	movff	?___lodiv+1,utoa@n+1
  1935  000D92  C07C  F0AD         	movff	?___lodiv+2,utoa@n+2
  1936  000D96  C07D  F0AE         	movff	?___lodiv+3,utoa@n+3
  1937  000D9A  C07E  F0AF         	movff	?___lodiv+4,utoa@n+4
  1938  000D9E  C07F  F0B0         	movff	?___lodiv+5,utoa@n+5
  1939  000DA2  C080  F0B1         	movff	?___lodiv+6,utoa@n+6
  1940  000DA6  C081  F0B2         	movff	?___lodiv+7,utoa@n+7
  1941  000DAA                     l1870:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1944  000DAA  0100               	movlb	0	; () banked
  1945  000DAC  51B3               	movf	utoa@i& (0+255),w,b
  1946  000DAE  11B4               	iorwf	(utoa@i+1)& (0+255),w,b
  1947  000DB0  B4D8               	btfsc	status,2,c
  1948  000DB2  EFDD  F006         	goto	u1451
  1949  000DB6  EFDF  F006         	goto	u1450
  1950  000DBA                     u1451:
  1951  000DBA  EF0F  F007         	goto	l1880
  1952  000DBE                     u1450:
  1953  000DBE                     
  1954                           ; BSR set to: 0
  1955  000DBE  51AB               	movf	utoa@n& (0+255),w,b
  1956  000DC0  11AC               	iorwf	(utoa@n+1)& (0+255),w,b
  1957  000DC2  11AD               	iorwf	(utoa@n+2)& (0+255),w,b
  1958  000DC4  11AE               	iorwf	(utoa@n+3)& (0+255),w,b
  1959  000DC6  11AF               	iorwf	(utoa@n+4)& (0+255),w,b
  1960  000DC8  11B0               	iorwf	(utoa@n+5)& (0+255),w,b
  1961  000DCA  11B1               	iorwf	(utoa@n+6)& (0+255),w,b
  1962  000DCC  11B2               	iorwf	(utoa@n+7)& (0+255),w,b
  1963  000DCE  A4D8               	btfss	status,2,c
  1964  000DD0  EFEC  F006         	goto	u1461
  1965  000DD4  EFEE  F006         	goto	u1460
  1966  000DD8                     u1461:
  1967  000DD8  EF5E  F006         	goto	l1860
  1968  000DDC                     u1460:
  1969  000DDC                     
  1970                           ; BSR set to: 0
  1971  000DDC  BFA8               	btfsc	(utoa@p+1)& (0+255),7,b
  1972  000DDE  EFFB  F006         	goto	u1470
  1973  000DE2  51A8               	movf	(utoa@p+1)& (0+255),w,b
  1974  000DE4  E106               	bnz	u1471
  1975  000DE6  05A7               	decf	utoa@p& (0+255),w,b
  1976  000DE8  B0D8               	btfsc	status,0,c
  1977  000DEA  EFF9  F006         	goto	u1471
  1978  000DEE  EFFB  F006         	goto	u1470
  1979  000DF2                     u1471:
  1980  000DF2  EF5E  F006         	goto	l1860
  1981  000DF6                     u1470:
  1982  000DF6                     
  1983                           ; BSR set to: 0
  1984  000DF6  BFAA               	btfsc	(utoa@w+1)& (0+255),7,b
  1985  000DF8  EF06  F007         	goto	u1481
  1986  000DFC  51AA               	movf	(utoa@w+1)& (0+255),w,b
  1987  000DFE  E108               	bnz	u1480
  1988  000E00  05A9               	decf	utoa@w& (0+255),w,b
  1989  000E02  A0D8               	btfss	status,0,c
  1990  000E04  EF06  F007         	goto	u1481
  1991  000E08  EF08  F007         	goto	u1480
  1992  000E0C                     u1481:
  1993  000E0C  EF0F  F007         	goto	l1880
  1994  000E10                     u1480:
  1995  000E10                     
  1996                           ; BSR set to: 0
  1997  000E10  B3D1               	btfsc	_flags& (0+255),1,b
  1998  000E12  EF0D  F007         	goto	u1491
  1999  000E16  EF0F  F007         	goto	u1490
  2000  000E1A                     u1491:
  2001  000E1A  EF5E  F006         	goto	l1860
  2002  000E1E                     u1490:
  2003  000E1E                     l1880:
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2007  000E1E  C095  F08A         	movff	utoa@fp,pad@fp
  2008  000E22  C096  F08B         	movff	utoa@fp+1,pad@fp+1
  2009  000E26  0E00               	movlw	low _dbuf
  2010  000E28  25B3               	addwf	utoa@i& (0+255),w,b
  2011  000E2A  6F8C               	movwf	pad@buf& (0+255),b
  2012  000E2C  0E01               	movlw	high _dbuf
  2013  000E2E  21B4               	addwfc	(utoa@i+1)& (0+255),w,b
  2014  000E30  6F8D               	movwf	(pad@buf+1)& (0+255),b
  2015  000E32  C0A9  F08E         	movff	utoa@w,pad@p
  2016  000E36  C0AA  F08F         	movff	utoa@w+1,pad@p+1
  2017  000E3A  EC64  F00C         	call	_pad	;wreg free
  2018  000E3E  C08A  F095         	movff	?_pad,?_utoa
  2019  000E42  C08B  F096         	movff	?_pad+1,?_utoa+1
  2020  000E46  0012               	return		;funcret
  2021  000E48                     __end_of_utoa:
  2022                           	callstack 0
  2023                           
  2024 ;; *************** function _pad *****************
  2025 ;; Defined at:
  2026 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
  2029 ;;		 -> sprintf@f(6), 
  2030 ;;  buf             2   44[BANK0 ] PTR unsigned char 
  2031 ;;		 -> dbuf(32), 
  2032 ;;  p               2   46[BANK0 ] int 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  w               2   51[BANK0 ] int 
  2035 ;;  i               2   49[BANK0 ] int 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2   42[BANK0 ] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2045 ;;      Params:         0       6       0       0       0       0       0       0       0
  2046 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2047 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2048 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2049 ;;Total ram usage:       11 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 12
  2052 ;; This function calls:
  2053 ;;		_fputc
  2054 ;;		_fputs
  2055 ;;		_strlen
  2056 ;; This function is called by:
  2057 ;;		_utoa
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text8
  2062  0018C8                     __ptext8:
  2063                           	callstack 0
  2064  0018C8                     _pad:
  2065                           	callstack 13
  2066  0018C8                     
  2067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2068  0018C8  0100               	movlb	0	; () banked
  2069  0018CA  A1D1               	btfss	_flags& (0+255),0,b
  2070  0018CC  EF6A  F00C         	goto	u1261
  2071  0018D0  EF6C  F00C         	goto	u1260
  2072  0018D4                     u1261:
  2073  0018D4  EF76  F00C         	goto	l1770
  2074  0018D8                     u1260:
  2075  0018D8                     
  2076                           ; BSR set to: 0
  2077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2078  0018D8  C08C  F083         	movff	pad@buf,fputs@s
  2079  0018DC  C08D  F084         	movff	pad@buf+1,fputs@s+1
  2080  0018E0  C08A  F085         	movff	pad@fp,fputs@fp
  2081  0018E4  C08B  F086         	movff	pad@fp+1,fputs@fp+1
  2082  0018E8  ECE6  F010         	call	_fputs	;wreg free
  2083  0018EC                     l1770:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2086  0018EC  0100               	movlb	0	; () banked
  2087  0018EE  BF8F               	btfsc	(pad@p+1)& (0+255),7,b
  2088  0018F0  EF7C  F00C         	goto	u1271
  2089  0018F4  EF7E  F00C         	goto	u1270
  2090  0018F8                     u1271:
  2091  0018F8  EF84  F00C         	goto	l1774
  2092  0018FC                     u1270:
  2093  0018FC                     
  2094                           ; BSR set to: 0
  2095  0018FC  C08E  F093         	movff	pad@p,pad@w
  2096  001900  C08F  F094         	movff	pad@p+1,pad@w+1
  2097  001904  EF88  F00C         	goto	l853
  2098  001908                     l1774:
  2099                           
  2100                           ; BSR set to: 0
  2101  001908  0E00               	movlw	0
  2102  00190A  6F94               	movwf	(pad@w+1)& (0+255),b
  2103  00190C  0E00               	movlw	0
  2104  00190E  6F93               	movwf	pad@w& (0+255),b
  2105  001910                     l853:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2109  001910  0E00               	movlw	0
  2110  001912  6F92               	movwf	(pad@i+1)& (0+255),b
  2111  001914  0E00               	movlw	0
  2112  001916  6F91               	movwf	pad@i& (0+255),b
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2115  001918  EF9B  F00C         	goto	l1780
  2116  00191C                     l1776:
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2120  00191C  0E00               	movlw	0
  2121  00191E  6F7B               	movwf	(fputc@c+1)& (0+255),b
  2122  001920  0E20               	movlw	32
  2123  001922  6F7A               	movwf	fputc@c& (0+255),b
  2124  001924  C08A  F07C         	movff	pad@fp,fputc@fp
  2125  001928  C08B  F07D         	movff	pad@fp+1,fputc@fp+1
  2126  00192C  ECFE  F00B         	call	_fputc	;wreg free
  2127  001930                     
  2128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2129  001930  0100               	movlb	0	; () banked
  2130  001932  4B91               	infsnz	pad@i& (0+255),f,b
  2131  001934  2B92               	incf	(pad@i+1)& (0+255),f,b
  2132  001936                     l1780:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2136  001936  5193               	movf	pad@w& (0+255),w,b
  2137  001938  5D91               	subwf	pad@i& (0+255),w,b
  2138  00193A  5192               	movf	(pad@i+1)& (0+255),w,b
  2139  00193C  0A80               	xorlw	128
  2140  00193E  6F90               	movwf	??_pad& (0+255),b
  2141  001940  5194               	movf	(pad@w+1)& (0+255),w,b
  2142  001942  0A80               	xorlw	128
  2143  001944  5990               	subwfb	??_pad& (0+255),w,b
  2144  001946  A0D8               	btfss	status,0,c
  2145  001948  EFA8  F00C         	goto	u1281
  2146  00194C  EFAA  F00C         	goto	u1280
  2147  001950                     u1281:
  2148  001950  EF8E  F00C         	goto	l1776
  2149  001954                     u1280:
  2150  001954                     
  2151                           ; BSR set to: 0
  2152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2153  001954  B1D1               	btfsc	_flags& (0+255),0,b
  2154  001956  EFAF  F00C         	goto	u1291
  2155  00195A  EFB1  F00C         	goto	u1290
  2156  00195E                     u1291:
  2157  00195E  EFBB  F00C         	goto	l1784
  2158  001962                     u1290:
  2159  001962                     
  2160                           ; BSR set to: 0
  2161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2162  001962  C08C  F083         	movff	pad@buf,fputs@s
  2163  001966  C08D  F084         	movff	pad@buf+1,fputs@s+1
  2164  00196A  C08A  F085         	movff	pad@fp,fputs@fp
  2165  00196E  C08B  F086         	movff	pad@fp+1,fputs@fp+1
  2166  001972  ECE6  F010         	call	_fputs	;wreg free
  2167  001976                     l1784:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2170  001976  C08C  F07A         	movff	pad@buf,strlen@s
  2171  00197A  C08D  F07B         	movff	pad@buf+1,strlen@s+1
  2172  00197E  EC6D  F010         	call	_strlen	;wreg free
  2173  001982  0100               	movlb	0	; () banked
  2174  001984  5193               	movf	pad@w& (0+255),w,b
  2175  001986  257A               	addwf	?_strlen& (0+255),w,b
  2176  001988  6F8A               	movwf	?_pad& (0+255),b
  2177  00198A  5194               	movf	(pad@w+1)& (0+255),w,b
  2178  00198C  217B               	addwfc	(?_strlen+1)& (0+255),w,b
  2179  00198E  6F8B               	movwf	(?_pad+1)& (0+255),b
  2180  001990                     
  2181                           ; BSR set to: 0
  2182  001990  0012               	return		;funcret
  2183  001992                     __end_of_pad:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _fputs *****************
  2187 ;; Defined at:
  2188 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  s               2   35[BANK0 ] PTR const unsigned char 
  2191 ;;		 -> dbuf(32), 
  2192 ;;  fp              2   37[BANK0 ] PTR struct _IO_FILE
  2193 ;;		 -> sprintf@f(6), 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  i               2   40[BANK0 ] int 
  2196 ;;  c               1   39[BANK0 ] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  2   35[BANK0 ] int 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2206 ;;      Params:         0       4       0       0       0       0       0       0       0
  2207 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2209 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2210 ;;Total ram usage:        7 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 11
  2213 ;; This function calls:
  2214 ;;		_fputc
  2215 ;; This function is called by:
  2216 ;;		_pad
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text9
  2221  0021CC                     __ptext9:
  2222                           	callstack 0
  2223  0021CC                     _fputs:
  2224                           	callstack 13
  2225  0021CC  0E00               	movlw	0
  2226  0021CE  0100               	movlb	0	; () banked
  2227  0021D0  6F89               	movwf	(fputs@i+1)& (0+255),b
  2228  0021D2  0E00               	movlw	0
  2229  0021D4  6F88               	movwf	fputs@i& (0+255),b
  2230  0021D6  EFF9  F010         	goto	l1712
  2231  0021DA                     l1708:
  2232                           
  2233                           ; BSR set to: 0
  2234  0021DA  C087  F07A         	movff	fputs@c,fputc@c
  2235  0021DE  6B7B               	clrf	(fputc@c+1)& (0+255),b
  2236  0021E0  C085  F07C         	movff	fputs@fp,fputc@fp
  2237  0021E4  C086  F07D         	movff	fputs@fp+1,fputc@fp+1
  2238  0021E8  ECFE  F00B         	call	_fputc	;wreg free
  2239  0021EC  0100               	movlb	0	; () banked
  2240  0021EE  4B88               	infsnz	fputs@i& (0+255),f,b
  2241  0021F0  2B89               	incf	(fputs@i+1)& (0+255),f,b
  2242  0021F2                     l1712:
  2243                           
  2244                           ; BSR set to: 0
  2245  0021F2  5188               	movf	fputs@i& (0+255),w,b
  2246  0021F4  2583               	addwf	fputs@s& (0+255),w,b
  2247  0021F6  6ED9               	movwf	fsr2l,c
  2248  0021F8  5189               	movf	(fputs@i+1)& (0+255),w,b
  2249  0021FA  2184               	addwfc	(fputs@s+1)& (0+255),w,b
  2250  0021FC  6EDA               	movwf	fsr2h,c
  2251  0021FE  50DF               	movf	indf2,w,c
  2252  002200  6F87               	movwf	fputs@c& (0+255),b
  2253  002202  5187               	movf	fputs@c& (0+255),w,b
  2254  002204  A4D8               	btfss	status,2,c
  2255  002206  EF07  F011         	goto	u1141
  2256  00220A  EF09  F011         	goto	u1140
  2257  00220E                     u1141:
  2258  00220E  EFED  F010         	goto	l1708
  2259  002212                     u1140:
  2260  002212                     
  2261                           ; BSR set to: 0
  2262  002212  0012               	return		;funcret
  2263  002214                     __end_of_fputs:
  2264                           	callstack 0
  2265                           
  2266 ;; *************** function ___lomod *****************
  2267 ;; Defined at:
  2268 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  dividend        8   26[BANK0 ] unsigned long long 
  2271 ;;  divisor         8   34[BANK0 ] unsigned long long 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  counter         1   42[BANK0 ] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  8   26[BANK0 ] unsigned long long 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2283 ;;      Params:         0      16       0       0       0       0       0       0       0
  2284 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2286 ;;      Totals:         0      17       0       0       0       0       0       0       0
  2287 ;;Total ram usage:       17 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 9
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_utoa
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text10
  2298  00165A                     __ptext10:
  2299                           	callstack 0
  2300  00165A                     ___lomod:
  2301                           	callstack 16
  2302  00165A  0100               	movlb	0	; () banked
  2303  00165C  5182               	movf	___lomod@divisor& (0+255),w,b
  2304  00165E  1183               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  2305  001660  1184               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  2306  001662  1185               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  2307  001664  1186               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  2308  001666  1187               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  2309  001668  1188               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  2310  00166A  1189               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  2311  00166C  B4D8               	btfsc	status,2,c
  2312  00166E  EF3B  F00B         	goto	u1231
  2313  001672  EF3D  F00B         	goto	u1230
  2314  001676                     u1231:
  2315  001676  EF85  F00B         	goto	l598
  2316  00167A                     u1230:
  2317  00167A                     
  2318                           ; BSR set to: 0
  2319  00167A  0E01               	movlw	1
  2320  00167C  6F8A               	movwf	___lomod@counter& (0+255),b
  2321  00167E  EF4B  F00B         	goto	l1756
  2322  001682                     l1754:
  2323                           
  2324                           ; BSR set to: 0
  2325  001682  90D8               	bcf	status,0,c
  2326  001684  3782               	rlcf	___lomod@divisor& (0+255),f,b
  2327  001686  3783               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  2328  001688  3784               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  2329  00168A  3785               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  2330  00168C  3786               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  2331  00168E  3787               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  2332  001690  3788               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  2333  001692  3789               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  2334  001694  2B8A               	incf	___lomod@counter& (0+255),f,b
  2335  001696                     l1756:
  2336                           
  2337                           ; BSR set to: 0
  2338  001696  AF89               	btfss	(___lomod@divisor+7)& (0+255),7,b
  2339  001698  EF50  F00B         	goto	u1241
  2340  00169C  EF52  F00B         	goto	u1240
  2341  0016A0                     u1241:
  2342  0016A0  EF41  F00B         	goto	l1754
  2343  0016A4                     u1240:
  2344  0016A4                     l1758:
  2345                           
  2346                           ; BSR set to: 0
  2347  0016A4  5182               	movf	___lomod@divisor& (0+255),w,b
  2348  0016A6  5D7A               	subwf	___lomod@dividend& (0+255),w,b
  2349  0016A8  5183               	movf	(___lomod@divisor+1)& (0+255),w,b
  2350  0016AA  597B               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  2351  0016AC  5184               	movf	(___lomod@divisor+2)& (0+255),w,b
  2352  0016AE  597C               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  2353  0016B0  5185               	movf	(___lomod@divisor+3)& (0+255),w,b
  2354  0016B2  597D               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  2355  0016B4  5186               	movf	(___lomod@divisor+4)& (0+255),w,b
  2356  0016B6  597E               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  2357  0016B8  5187               	movf	(___lomod@divisor+5)& (0+255),w,b
  2358  0016BA  597F               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  2359  0016BC  5188               	movf	(___lomod@divisor+6)& (0+255),w,b
  2360  0016BE  5980               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  2361  0016C0  5189               	movf	(___lomod@divisor+7)& (0+255),w,b
  2362  0016C2  5981               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  2363  0016C4  A0D8               	btfss	status,0,c
  2364  0016C6  EF67  F00B         	goto	u1251
  2365  0016CA  EF69  F00B         	goto	u1250
  2366  0016CE                     u1251:
  2367  0016CE  EF79  F00B         	goto	l1762
  2368  0016D2                     u1250:
  2369  0016D2                     
  2370                           ; BSR set to: 0
  2371  0016D2  5182               	movf	___lomod@divisor& (0+255),w,b
  2372  0016D4  5F7A               	subwf	___lomod@dividend& (0+255),f,b
  2373  0016D6  5183               	movf	(___lomod@divisor+1)& (0+255),w,b
  2374  0016D8  5B7B               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  2375  0016DA  5184               	movf	(___lomod@divisor+2)& (0+255),w,b
  2376  0016DC  5B7C               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  2377  0016DE  5185               	movf	(___lomod@divisor+3)& (0+255),w,b
  2378  0016E0  5B7D               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  2379  0016E2  5186               	movf	(___lomod@divisor+4)& (0+255),w,b
  2380  0016E4  5B7E               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  2381  0016E6  5187               	movf	(___lomod@divisor+5)& (0+255),w,b
  2382  0016E8  5B7F               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  2383  0016EA  5188               	movf	(___lomod@divisor+6)& (0+255),w,b
  2384  0016EC  5B80               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  2385  0016EE  5189               	movf	(___lomod@divisor+7)& (0+255),w,b
  2386  0016F0  5B81               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  2387  0016F2                     l1762:
  2388                           
  2389                           ; BSR set to: 0
  2390  0016F2  90D8               	bcf	status,0,c
  2391  0016F4  3389               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  2392  0016F6  3388               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  2393  0016F8  3387               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  2394  0016FA  3386               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  2395  0016FC  3385               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  2396  0016FE  3384               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  2397  001700  3383               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  2398  001702  3382               	rrcf	___lomod@divisor& (0+255),f,b
  2399  001704                     
  2400                           ; BSR set to: 0
  2401  001704  2F8A               	decfsz	___lomod@counter& (0+255),f,b
  2402  001706  EF52  F00B         	goto	l1758
  2403  00170A                     l598:
  2404                           
  2405                           ; BSR set to: 0
  2406  00170A  C07A  F07A         	movff	___lomod@dividend,?___lomod
  2407  00170E  C07B  F07B         	movff	___lomod@dividend+1,?___lomod+1
  2408  001712  C07C  F07C         	movff	___lomod@dividend+2,?___lomod+2
  2409  001716  C07D  F07D         	movff	___lomod@dividend+3,?___lomod+3
  2410  00171A  C07E  F07E         	movff	___lomod@dividend+4,?___lomod+4
  2411  00171E  C07F  F07F         	movff	___lomod@dividend+5,?___lomod+5
  2412  001722  C080  F080         	movff	___lomod@dividend+6,?___lomod+6
  2413  001726  C081  F081         	movff	___lomod@dividend+7,?___lomod+7
  2414  00172A                     
  2415                           ; BSR set to: 0
  2416  00172A  0012               	return		;funcret
  2417  00172C                     __end_of___lomod:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function ___lodiv *****************
  2421 ;; Defined at:
  2422 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  dividend        8   26[BANK0 ] unsigned long long 
  2425 ;;  divisor         8   34[BANK0 ] unsigned long long 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  quotient        8   42[BANK0 ] unsigned long long 
  2428 ;;  counter         1   50[BANK0 ] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  8   26[BANK0 ] unsigned long long 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2438 ;;      Params:         0      16       0       0       0       0       0       0       0
  2439 ;;      Locals:         0       9       0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2441 ;;      Totals:         0      25       0       0       0       0       0       0       0
  2442 ;;Total ram usage:       25 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 9
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_utoa
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text11
  2453  00138C                     __ptext11:
  2454                           	callstack 0
  2455  00138C                     ___lodiv:
  2456                           	callstack 16
  2457  00138C  EE20  F08A         	lfsr	2,___lodiv@quotient
  2458  001390  0E07               	movlw	7
  2459  001392                     u1191:
  2460  001392  6ADE               	clrf	postinc2,c
  2461  001394  06E8               	decf	wreg,f,c
  2462  001396  E2FD               	bc	u1191
  2463  001398  0100               	movlb	0	; () banked
  2464  00139A  5182               	movf	___lodiv@divisor& (0+255),w,b
  2465  00139C  1183               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  2466  00139E  1184               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  2467  0013A0  1185               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  2468  0013A2  1186               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  2469  0013A4  1187               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  2470  0013A6  1188               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  2471  0013A8  1189               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  2472  0013AA  B4D8               	btfsc	status,2,c
  2473  0013AC  EFDA  F009         	goto	u1201
  2474  0013B0  EFDC  F009         	goto	u1200
  2475  0013B4                     u1201:
  2476  0013B4  EF2E  F00A         	goto	l588
  2477  0013B8                     u1200:
  2478  0013B8                     
  2479                           ; BSR set to: 0
  2480  0013B8  0E01               	movlw	1
  2481  0013BA  6F92               	movwf	___lodiv@counter& (0+255),b
  2482  0013BC  EFEA  F009         	goto	l1736
  2483  0013C0                     l1734:
  2484                           
  2485                           ; BSR set to: 0
  2486  0013C0  90D8               	bcf	status,0,c
  2487  0013C2  3782               	rlcf	___lodiv@divisor& (0+255),f,b
  2488  0013C4  3783               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  2489  0013C6  3784               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  2490  0013C8  3785               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  2491  0013CA  3786               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  2492  0013CC  3787               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  2493  0013CE  3788               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  2494  0013D0  3789               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  2495  0013D2  2B92               	incf	___lodiv@counter& (0+255),f,b
  2496  0013D4                     l1736:
  2497                           
  2498                           ; BSR set to: 0
  2499  0013D4  AF89               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  2500  0013D6  EFEF  F009         	goto	u1211
  2501  0013DA  EFF1  F009         	goto	u1210
  2502  0013DE                     u1211:
  2503  0013DE  EFE0  F009         	goto	l1734
  2504  0013E2                     u1210:
  2505  0013E2                     l1738:
  2506                           
  2507                           ; BSR set to: 0
  2508  0013E2  90D8               	bcf	status,0,c
  2509  0013E4  378A               	rlcf	___lodiv@quotient& (0+255),f,b
  2510  0013E6  378B               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  2511  0013E8  378C               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  2512  0013EA  378D               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  2513  0013EC  378E               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  2514  0013EE  378F               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  2515  0013F0  3790               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  2516  0013F2  3791               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  2517  0013F4                     
  2518                           ; BSR set to: 0
  2519  0013F4  5182               	movf	___lodiv@divisor& (0+255),w,b
  2520  0013F6  5D7A               	subwf	___lodiv@dividend& (0+255),w,b
  2521  0013F8  5183               	movf	(___lodiv@divisor+1)& (0+255),w,b
  2522  0013FA  597B               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  2523  0013FC  5184               	movf	(___lodiv@divisor+2)& (0+255),w,b
  2524  0013FE  597C               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  2525  001400  5185               	movf	(___lodiv@divisor+3)& (0+255),w,b
  2526  001402  597D               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  2527  001404  5186               	movf	(___lodiv@divisor+4)& (0+255),w,b
  2528  001406  597E               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  2529  001408  5187               	movf	(___lodiv@divisor+5)& (0+255),w,b
  2530  00140A  597F               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  2531  00140C  5188               	movf	(___lodiv@divisor+6)& (0+255),w,b
  2532  00140E  5980               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  2533  001410  5189               	movf	(___lodiv@divisor+7)& (0+255),w,b
  2534  001412  5981               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  2535  001414  A0D8               	btfss	status,0,c
  2536  001416  EF0F  F00A         	goto	u1221
  2537  00141A  EF11  F00A         	goto	u1220
  2538  00141E                     u1221:
  2539  00141E  EF22  F00A         	goto	l1746
  2540  001422                     u1220:
  2541  001422                     
  2542                           ; BSR set to: 0
  2543  001422  5182               	movf	___lodiv@divisor& (0+255),w,b
  2544  001424  5F7A               	subwf	___lodiv@dividend& (0+255),f,b
  2545  001426  5183               	movf	(___lodiv@divisor+1)& (0+255),w,b
  2546  001428  5B7B               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  2547  00142A  5184               	movf	(___lodiv@divisor+2)& (0+255),w,b
  2548  00142C  5B7C               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  2549  00142E  5185               	movf	(___lodiv@divisor+3)& (0+255),w,b
  2550  001430  5B7D               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  2551  001432  5186               	movf	(___lodiv@divisor+4)& (0+255),w,b
  2552  001434  5B7E               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  2553  001436  5187               	movf	(___lodiv@divisor+5)& (0+255),w,b
  2554  001438  5B7F               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  2555  00143A  5188               	movf	(___lodiv@divisor+6)& (0+255),w,b
  2556  00143C  5B80               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  2557  00143E  5189               	movf	(___lodiv@divisor+7)& (0+255),w,b
  2558  001440  5B81               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  2559  001442                     
  2560                           ; BSR set to: 0
  2561  001442  818A               	bsf	___lodiv@quotient& (0+255),0,b
  2562  001444                     l1746:
  2563                           
  2564                           ; BSR set to: 0
  2565  001444  90D8               	bcf	status,0,c
  2566  001446  3389               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  2567  001448  3388               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  2568  00144A  3387               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  2569  00144C  3386               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  2570  00144E  3385               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  2571  001450  3384               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  2572  001452  3383               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  2573  001454  3382               	rrcf	___lodiv@divisor& (0+255),f,b
  2574  001456                     
  2575                           ; BSR set to: 0
  2576  001456  2F92               	decfsz	___lodiv@counter& (0+255),f,b
  2577  001458  EFF1  F009         	goto	l1738
  2578  00145C                     l588:
  2579                           
  2580                           ; BSR set to: 0
  2581  00145C  C08A  F07A         	movff	___lodiv@quotient,?___lodiv
  2582  001460  C08B  F07B         	movff	___lodiv@quotient+1,?___lodiv+1
  2583  001464  C08C  F07C         	movff	___lodiv@quotient+2,?___lodiv+2
  2584  001468  C08D  F07D         	movff	___lodiv@quotient+3,?___lodiv+3
  2585  00146C  C08E  F07E         	movff	___lodiv@quotient+4,?___lodiv+4
  2586  001470  C08F  F07F         	movff	___lodiv@quotient+5,?___lodiv+5
  2587  001474  C090  F080         	movff	___lodiv@quotient+6,?___lodiv+6
  2588  001478  C091  F081         	movff	___lodiv@quotient+7,?___lodiv+7
  2589  00147C                     
  2590                           ; BSR set to: 0
  2591  00147C  0012               	return		;funcret
  2592  00147E                     __end_of___lodiv:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _stoa *****************
  2596 ;; Defined at:
  2597 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  2600 ;;		 -> sprintf@f(6), 
  2601 ;;  s               2   37[BANK0 ] PTR unsigned char 
  2602 ;;		 -> NULL(0), ?_sprintf(2), STR_4(2), STR_3(2), 
  2603 ;;		 -> STR_2(2), STR_1(1), 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  nuls            7   40[BANK0 ] unsigned char [7]
  2606 ;;  l               2   55[BANK0 ] int 
  2607 ;;  p               2   53[BANK0 ] int 
  2608 ;;  cp              2   51[BANK0 ] PTR unsigned char 
  2609 ;;		 -> NULL(0), stoa@nuls(7), ?_sprintf(2), STR_4(2), 
  2610 ;;		 -> STR_3(2), STR_2(2), STR_1(1), 
  2611 ;;  w               2   49[BANK0 ] int 
  2612 ;;  i               2   47[BANK0 ] int 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2   35[BANK0 ] int 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2622 ;;      Params:         0       4       0       0       0       0       0       0       0
  2623 ;;      Locals:         0      17       0       0       0       0       0       0       0
  2624 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2625 ;;      Totals:         0      22       0       0       0       0       0       0       0
  2626 ;;Total ram usage:       22 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 11
  2629 ;; This function calls:
  2630 ;;		_fputc
  2631 ;;		_strlen
  2632 ;; This function is called by:
  2633 ;;		_vfpfcnvrt
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text12
  2638  00104C                     __ptext12:
  2639                           	callstack 0
  2640  00104C                     _stoa:
  2641                           	callstack 15
  2642  00104C                     
  2643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  2644  00104C  EE20  F0DF         	lfsr	2,stoa@F1133
  2645  001050  EE10  F088         	lfsr	1,stoa@nuls
  2646  001054  0E06               	movlw	6
  2647  001056                     u1331:
  2648  001056  CFDB FFE3          	movff	plusw2,plusw1
  2649  00105A  06E8               	decf	wreg,f,c
  2650  00105C  E2FC               	bc	u1331
  2651  00105E                     
  2652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  2653  00105E  C085  F093         	movff	stoa@s,stoa@cp
  2654  001062  C086  F094         	movff	stoa@s+1,stoa@cp+1
  2655  001066                     
  2656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  2657  001066  0100               	movlb	0	; () banked
  2658  001068  5193               	movf	stoa@cp& (0+255),w,b
  2659  00106A  1194               	iorwf	(stoa@cp+1)& (0+255),w,b
  2660  00106C  A4D8               	btfss	status,2,c
  2661  00106E  EF3B  F008         	goto	u1341
  2662  001072  EF3D  F008         	goto	u1340
  2663  001076                     u1341:
  2664  001076  EF41  F008         	goto	l1814
  2665  00107A                     u1340:
  2666  00107A                     
  2667                           ; BSR set to: 0
  2668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  2669  00107A  0E88               	movlw	low stoa@nuls
  2670  00107C  6F93               	movwf	stoa@cp& (0+255),b
  2671  00107E  0E00               	movlw	high stoa@nuls
  2672  001080  6F94               	movwf	(stoa@cp+1)& (0+255),b
  2673  001082                     l1814:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  2677  001082  C093  F07A         	movff	stoa@cp,strlen@s
  2678  001086  C094  F07B         	movff	stoa@cp+1,strlen@s+1
  2679  00108A  EC6D  F010         	call	_strlen	;wreg free
  2680  00108E  C07A  F097         	movff	?_strlen,stoa@l
  2681  001092  C07B  F098         	movff	?_strlen+1,stoa@l+1
  2682  001096                     
  2683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  2684  001096  C0CF  F095         	movff	_prec,stoa@p
  2685  00109A  C0D0  F096         	movff	_prec+1,stoa@p+1
  2686  00109E                     
  2687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  2688  00109E  0100               	movlb	0	; () banked
  2689  0010A0  BF96               	btfsc	(stoa@p+1)& (0+255),7,b
  2690  0010A2  EF55  F008         	goto	u1351
  2691  0010A6  EF57  F008         	goto	u1350
  2692  0010AA                     u1351:
  2693  0010AA  EF6C  F008         	goto	l867
  2694  0010AE                     u1350:
  2695  0010AE                     
  2696                           ; BSR set to: 0
  2697  0010AE  5197               	movf	stoa@l& (0+255),w,b
  2698  0010B0  5D95               	subwf	stoa@p& (0+255),w,b
  2699  0010B2  5196               	movf	(stoa@p+1)& (0+255),w,b
  2700  0010B4  0A80               	xorlw	128
  2701  0010B6  6F87               	movwf	??_stoa& (0+255),b
  2702  0010B8  5198               	movf	(stoa@l+1)& (0+255),w,b
  2703  0010BA  0A80               	xorlw	128
  2704  0010BC  5987               	subwfb	??_stoa& (0+255),w,b
  2705  0010BE  A0D8               	btfss	status,0,c
  2706  0010C0  EF64  F008         	goto	u1361
  2707  0010C4  EF66  F008         	goto	u1360
  2708  0010C8                     u1361:
  2709  0010C8  EF68  F008         	goto	l865
  2710  0010CC                     u1360:
  2711  0010CC  EF6C  F008         	goto	l867
  2712  0010D0                     l865:
  2713                           
  2714                           ; BSR set to: 0
  2715  0010D0  C095  F097         	movff	stoa@p,stoa@l
  2716  0010D4  C096  F098         	movff	stoa@p+1,stoa@l+1
  2717  0010D8                     l867:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  2721  0010D8  C097  F095         	movff	stoa@l,stoa@p
  2722  0010DC  C098  F096         	movff	stoa@l+1,stoa@p+1
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  2725  0010E0  C0CD  F091         	movff	_width,stoa@w
  2726  0010E4  C0CE  F092         	movff	_width+1,stoa@w+1
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  2729  0010E8  B1D1               	btfsc	_flags& (0+255),0,b
  2730  0010EA  EF79  F008         	goto	u1371
  2731  0010EE  EF7B  F008         	goto	u1370
  2732  0010F2                     u1371:
  2733  0010F2  EF99  F008         	goto	l1830
  2734  0010F6                     u1370:
  2735  0010F6  EF8A  F008         	goto	l1828
  2736  0010FA                     l1824:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  2740  0010FA  0E00               	movlw	0
  2741  0010FC  6F7B               	movwf	(fputc@c+1)& (0+255),b
  2742  0010FE  0E20               	movlw	32
  2743  001100  6F7A               	movwf	fputc@c& (0+255),b
  2744  001102  C083  F07C         	movff	stoa@fp,fputc@fp
  2745  001106  C084  F07D         	movff	stoa@fp+1,fputc@fp+1
  2746  00110A  ECFE  F00B         	call	_fputc	;wreg free
  2747  00110E                     
  2748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  2749  00110E  0100               	movlb	0	; () banked
  2750  001110  4B97               	infsnz	stoa@l& (0+255),f,b
  2751  001112  2B98               	incf	(stoa@l+1)& (0+255),f,b
  2752  001114                     l1828:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  2756  001114  5191               	movf	stoa@w& (0+255),w,b
  2757  001116  5D97               	subwf	stoa@l& (0+255),w,b
  2758  001118  5198               	movf	(stoa@l+1)& (0+255),w,b
  2759  00111A  0A80               	xorlw	128
  2760  00111C  6F87               	movwf	??_stoa& (0+255),b
  2761  00111E  5192               	movf	(stoa@w+1)& (0+255),w,b
  2762  001120  0A80               	xorlw	128
  2763  001122  5987               	subwfb	??_stoa& (0+255),w,b
  2764  001124  A0D8               	btfss	status,0,c
  2765  001126  EF97  F008         	goto	u1381
  2766  00112A  EF99  F008         	goto	u1380
  2767  00112E                     u1381:
  2768  00112E  EF7D  F008         	goto	l1824
  2769  001132                     u1380:
  2770  001132                     l1830:
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  2774  001132  0E00               	movlw	0
  2775  001134  6F90               	movwf	(stoa@i+1)& (0+255),b
  2776  001136  0E00               	movlw	0
  2777  001138  6F8F               	movwf	stoa@i& (0+255),b
  2778                           
  2779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  2780  00113A  EFBF  F008         	goto	l1838
  2781  00113E                     l1832:
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  2785  00113E  C093  FFF6         	movff	stoa@cp,tblptrl
  2786  001142  C094  FFF7         	movff	stoa@cp+1,tblptrh
  2787  001146  6AF8               	clrf	tblptru,c
  2788  001148  0E07               	movlw	(high __ramtop+-1)
  2789  00114A  64F7               	cpfsgt	tblptrh,c
  2790  00114C  D003               	bra	u1397
  2791  00114E  0008               	tblrd		*
  2792  001150  50F5               	movf	tablat,w,c
  2793  001152  D005               	bra	u1390
  2794  001154                     u1397:
  2795  001154  CFF6 FFE1          	movff	tblptrl,fsr1l
  2796  001158  CFF7 FFE2          	movff	tblptrh,fsr1h
  2797  00115C  50E7               	movf	indf1,w,c
  2798  00115E                     u1390:
  2799  00115E  0100               	movlb	0	; () banked
  2800  001160  6F87               	movwf	??_stoa& (0+255),b
  2801  001162  5187               	movf	??_stoa& (0+255),w,b
  2802  001164  6F7A               	movwf	fputc@c& (0+255),b
  2803  001166  6B7B               	clrf	(fputc@c+1)& (0+255),b
  2804  001168  C083  F07C         	movff	stoa@fp,fputc@fp
  2805  00116C  C084  F07D         	movff	stoa@fp+1,fputc@fp+1
  2806  001170  ECFE  F00B         	call	_fputc	;wreg free
  2807  001174                     
  2808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  2809  001174  0100               	movlb	0	; () banked
  2810  001176  4B93               	infsnz	stoa@cp& (0+255),f,b
  2811  001178  2B94               	incf	(stoa@cp+1)& (0+255),f,b
  2812  00117A                     
  2813                           ; BSR set to: 0
  2814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  2815  00117A  4B8F               	infsnz	stoa@i& (0+255),f,b
  2816  00117C  2B90               	incf	(stoa@i+1)& (0+255),f,b
  2817  00117E                     l1838:
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  2821  00117E  5195               	movf	stoa@p& (0+255),w,b
  2822  001180  5D8F               	subwf	stoa@i& (0+255),w,b
  2823  001182  5190               	movf	(stoa@i+1)& (0+255),w,b
  2824  001184  0A80               	xorlw	128
  2825  001186  6F87               	movwf	??_stoa& (0+255),b
  2826  001188  5196               	movf	(stoa@p+1)& (0+255),w,b
  2827  00118A  0A80               	xorlw	128
  2828  00118C  5987               	subwfb	??_stoa& (0+255),w,b
  2829  00118E  A0D8               	btfss	status,0,c
  2830  001190  EFCC  F008         	goto	u1401
  2831  001194  EFCE  F008         	goto	u1400
  2832  001198                     u1401:
  2833  001198  EF9F  F008         	goto	l1832
  2834  00119C                     u1400:
  2835  00119C                     
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  2838  00119C  A1D1               	btfss	_flags& (0+255),0,b
  2839  00119E  EFD3  F008         	goto	u1411
  2840  0011A2  EFD5  F008         	goto	u1410
  2841  0011A6                     u1411:
  2842  0011A6  EFF3  F008         	goto	l877
  2843  0011AA                     u1410:
  2844  0011AA  EFE4  F008         	goto	l1846
  2845  0011AE                     l1842:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  2849  0011AE  0E00               	movlw	0
  2850  0011B0  6F7B               	movwf	(fputc@c+1)& (0+255),b
  2851  0011B2  0E20               	movlw	32
  2852  0011B4  6F7A               	movwf	fputc@c& (0+255),b
  2853  0011B6  C083  F07C         	movff	stoa@fp,fputc@fp
  2854  0011BA  C084  F07D         	movff	stoa@fp+1,fputc@fp+1
  2855  0011BE  ECFE  F00B         	call	_fputc	;wreg free
  2856  0011C2                     
  2857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  2858  0011C2  0100               	movlb	0	; () banked
  2859  0011C4  4B97               	infsnz	stoa@l& (0+255),f,b
  2860  0011C6  2B98               	incf	(stoa@l+1)& (0+255),f,b
  2861  0011C8                     l1846:
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  2865  0011C8  5191               	movf	stoa@w& (0+255),w,b
  2866  0011CA  5D97               	subwf	stoa@l& (0+255),w,b
  2867  0011CC  5198               	movf	(stoa@l+1)& (0+255),w,b
  2868  0011CE  0A80               	xorlw	128
  2869  0011D0  6F87               	movwf	??_stoa& (0+255),b
  2870  0011D2  5192               	movf	(stoa@w+1)& (0+255),w,b
  2871  0011D4  0A80               	xorlw	128
  2872  0011D6  5987               	subwfb	??_stoa& (0+255),w,b
  2873  0011D8  A0D8               	btfss	status,0,c
  2874  0011DA  EFF1  F008         	goto	u1421
  2875  0011DE  EFF3  F008         	goto	u1420
  2876  0011E2                     u1421:
  2877  0011E2  EFD7  F008         	goto	l1842
  2878  0011E6                     u1420:
  2879  0011E6                     l877:
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  2883  0011E6  C097  F083         	movff	stoa@l,?_stoa
  2884  0011EA  C098  F084         	movff	stoa@l+1,?_stoa+1
  2885  0011EE                     
  2886                           ; BSR set to: 0
  2887  0011EE  0012               	return		;funcret
  2888  0011F0                     __end_of_stoa:
  2889                           	callstack 0
  2890                           
  2891 ;; *************** function _strlen *****************
  2892 ;; Defined at:
  2893 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  s               2   26[BANK0 ] PTR const unsigned char 
  2896 ;;		 -> dbuf(32), NULL(0), stoa@nuls(7), ?_sprintf(2), 
  2897 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(1), 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  a               2   28[BANK0 ] PTR const unsigned char 
  2900 ;;		 -> dbuf(32), NULL(0), stoa@nuls(7), ?_sprintf(2), 
  2901 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(1), 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  2   26[BANK0 ] unsigned int 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2911 ;;      Params:         0       2       0       0       0       0       0       0       0
  2912 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2914 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2915 ;;Total ram usage:        4 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 9
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_pad
  2922 ;;		_stoa
  2923 ;;		_serial_sendString
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text13
  2928  0020DA                     __ptext13:
  2929                           	callstack 0
  2930  0020DA                     _strlen:
  2931                           	callstack 15
  2932  0020DA  C07A  F07C         	movff	strlen@s,strlen@a
  2933  0020DE  C07B  F07D         	movff	strlen@s+1,strlen@a+1
  2934  0020E2  EF76  F010         	goto	l1700
  2935  0020E6                     l1698:
  2936  0020E6  0100               	movlb	0	; () banked
  2937  0020E8  4B7A               	infsnz	strlen@s& (0+255),f,b
  2938  0020EA  2B7B               	incf	(strlen@s+1)& (0+255),f,b
  2939  0020EC                     l1700:
  2940  0020EC  C07A  FFF6         	movff	strlen@s,tblptrl
  2941  0020F0  C07B  FFF7         	movff	strlen@s+1,tblptrh
  2942  0020F4  6AF8               	clrf	tblptru,c
  2943  0020F6  0E07               	movlw	(high __ramtop+-1)
  2944  0020F8  64F7               	cpfsgt	tblptrh,c
  2945  0020FA  D003               	bra	u1127
  2946  0020FC  0008               	tblrd		*
  2947  0020FE  50F5               	movf	tablat,w,c
  2948  002100  D005               	bra	u1120
  2949  002102                     u1127:
  2950  002102  CFF6 FFE1          	movff	tblptrl,fsr1l
  2951  002106  CFF7 FFE2          	movff	tblptrh,fsr1h
  2952  00210A  50E7               	movf	indf1,w,c
  2953  00210C                     u1120:
  2954  00210C  0900               	iorlw	0
  2955  00210E  A4D8               	btfss	status,2,c
  2956  002110  EF8C  F010         	goto	u1131
  2957  002114  EF8E  F010         	goto	u1130
  2958  002118                     u1131:
  2959  002118  EF73  F010         	goto	l1698
  2960  00211C                     u1130:
  2961  00211C  0100               	movlb	0	; () banked
  2962  00211E  517C               	movf	strlen@a& (0+255),w,b
  2963  002120  5D7A               	subwf	strlen@s& (0+255),w,b
  2964  002122  6F7A               	movwf	?_strlen& (0+255),b
  2965  002124  517D               	movf	(strlen@a+1)& (0+255),w,b
  2966  002126  597B               	subwfb	(strlen@s+1)& (0+255),w,b
  2967  002128  6F7B               	movwf	(?_strlen+1)& (0+255),b
  2968  00212A                     
  2969                           ; BSR set to: 0
  2970  00212A  0012               	return		;funcret
  2971  00212C                     __end_of_strlen:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _fputc *****************
  2975 ;; Defined at:
  2976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  c               2   26[BANK0 ] int 
  2979 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  2980 ;;		 -> sprintf@f(6), 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  2   26[BANK0 ] int 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2992 ;;      Params:         0       4       0       0       0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2994 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2995 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2996 ;;Total ram usage:        9 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 10
  2999 ;; This function calls:
  3000 ;;		_putch
  3001 ;; This function is called by:
  3002 ;;		_pad
  3003 ;;		_stoa
  3004 ;;		_vfpfcnvrt
  3005 ;;		_fputs
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text14
  3010  0017FC                     __ptext14:
  3011                           	callstack 0
  3012  0017FC                     _fputc:
  3013                           	callstack 13
  3014  0017FC  0100               	movlb	0	; () banked
  3015  0017FE  517C               	movf	fputc@fp& (0+255),w,b
  3016  001800  117D               	iorwf	(fputc@fp+1)& (0+255),w,b
  3017  001802  B4D8               	btfsc	status,2,c
  3018  001804  EF06  F00C         	goto	u1081
  3019  001808  EF08  F00C         	goto	u1080
  3020  00180C                     u1081:
  3021  00180C  EF11  F00C         	goto	l1686
  3022  001810                     u1080:
  3023  001810                     
  3024                           ; BSR set to: 0
  3025  001810  517C               	movf	fputc@fp& (0+255),w,b
  3026  001812  117D               	iorwf	(fputc@fp+1)& (0+255),w,b
  3027  001814  A4D8               	btfss	status,2,c
  3028  001816  EF0F  F00C         	goto	u1091
  3029  00181A  EF11  F00C         	goto	u1090
  3030  00181E                     u1091:
  3031  00181E  EF16  F00C         	goto	l1688
  3032  001822                     u1090:
  3033  001822                     l1686:
  3034                           
  3035                           ; BSR set to: 0
  3036  001822  517A               	movf	fputc@c& (0+255),w,b
  3037  001824  ECB5  F011         	call	_putch
  3038  001828  EF63  F00C         	goto	l921
  3039  00182C                     l1688:
  3040                           
  3041                           ; BSR set to: 0
  3042  00182C  EE20 F004          	lfsr	2,4
  3043  001830  517C               	movf	fputc@fp& (0+255),w,b
  3044  001832  26D9               	addwf	fsr2l,f,c
  3045  001834  517D               	movf	(fputc@fp+1)& (0+255),w,b
  3046  001836  22DA               	addwfc	fsr2h,f,c
  3047  001838  50DE               	movf	postinc2,w,c
  3048  00183A  10DE               	iorwf	postinc2,w,c
  3049  00183C  B4D8               	btfsc	status,2,c
  3050  00183E  EF23  F00C         	goto	u1101
  3051  001842  EF25  F00C         	goto	u1100
  3052  001846                     u1101:
  3053  001846  EF40  F00C         	goto	l1692
  3054  00184A                     u1100:
  3055  00184A                     
  3056                           ; BSR set to: 0
  3057  00184A  EE20 F004          	lfsr	2,4
  3058  00184E  517C               	movf	fputc@fp& (0+255),w,b
  3059  001850  26D9               	addwf	fsr2l,f,c
  3060  001852  517D               	movf	(fputc@fp+1)& (0+255),w,b
  3061  001854  22DA               	addwfc	fsr2h,f,c
  3062  001856  EE10 F002          	lfsr	1,2
  3063  00185A  517C               	movf	fputc@fp& (0+255),w,b
  3064  00185C  26E1               	addwf	fsr1l,f,c
  3065  00185E  517D               	movf	(fputc@fp+1)& (0+255),w,b
  3066  001860  22E2               	addwfc	fsr1h,f,c
  3067  001862  50DE               	movf	postinc2,w,c
  3068  001864  5CE6               	subwf	postinc1,w,c
  3069  001866  50E6               	movf	postinc1,w,c
  3070  001868  0A80               	xorlw	128
  3071  00186A  6F82               	movwf	(??_fputc+4)& (0+255),b
  3072  00186C  50DE               	movf	postinc2,w,c
  3073  00186E  0A80               	xorlw	128
  3074  001870  5982               	subwfb	(??_fputc+4)& (0+255),w,b
  3075  001872  B0D8               	btfsc	status,0,c
  3076  001874  EF3E  F00C         	goto	u1111
  3077  001878  EF40  F00C         	goto	u1110
  3078  00187C                     u1111:
  3079  00187C  EF63  F00C         	goto	l921
  3080  001880                     u1110:
  3081  001880                     l1692:
  3082                           
  3083                           ; BSR set to: 0
  3084  001880  EE20 F002          	lfsr	2,2
  3085  001884  517C               	movf	fputc@fp& (0+255),w,b
  3086  001886  26D9               	addwf	fsr2l,f,c
  3087  001888  517D               	movf	(fputc@fp+1)& (0+255),w,b
  3088  00188A  22DA               	addwfc	fsr2h,f,c
  3089  00188C  CFDE F07E          	movff	postinc2,??_fputc
  3090  001890  CFDD F07F          	movff	postdec2,??_fputc+1
  3091  001894  C07C  FFD9         	movff	fputc@fp,fsr2l
  3092  001898  C07D  FFDA         	movff	fputc@fp+1,fsr2h
  3093  00189C  CFDE F080          	movff	postinc2,??_fputc+2
  3094  0018A0  CFDD F081          	movff	postdec2,??_fputc+3
  3095  0018A4  517E               	movf	??_fputc& (0+255),w,b
  3096  0018A6  2580               	addwf	(??_fputc+2)& (0+255),w,b
  3097  0018A8  6ED9               	movwf	fsr2l,c
  3098  0018AA  517F               	movf	(??_fputc+1)& (0+255),w,b
  3099  0018AC  2181               	addwfc	(??_fputc+3)& (0+255),w,b
  3100  0018AE  6EDA               	movwf	fsr2h,c
  3101  0018B0  C07A  FFDF         	movff	fputc@c,indf2
  3102  0018B4  EE20 F002          	lfsr	2,2
  3103  0018B8  517C               	movf	fputc@fp& (0+255),w,b
  3104  0018BA  26D9               	addwf	fsr2l,f,c
  3105  0018BC  517D               	movf	(fputc@fp+1)& (0+255),w,b
  3106  0018BE  22DA               	addwfc	fsr2h,f,c
  3107  0018C0  2ADE               	incf	postinc2,f,c
  3108  0018C2  0E00               	movlw	0
  3109  0018C4  22DD               	addwfc	postdec2,f,c
  3110  0018C6                     l921:
  3111  0018C6  0012               	return		;funcret
  3112  0018C8                     __end_of_fputc:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _putch *****************
  3116 ;; Defined at:
  3117 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  c               1    wreg     unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  c               1    0[COMRAM] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 9
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_fputc
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text15
  3146  00236A                     __ptext15:
  3147                           	callstack 0
  3148  00236A                     _putch:
  3149                           	callstack 13
  3150  00236A  0012               	return		;funcret
  3151  00236C                     __end_of_putch:
  3152                           	callstack 0
  3153                           
  3154 ;; *************** function _cronometro *****************
  3155 ;; Defined at:
  3156 ;;		line 66 in file "main.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3170 ;;      Params:         0       0       0       0       0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3173 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3174 ;;Total ram usage:        0 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; Hardware stack levels required when called: 9
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_disp_cronometro
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text16
  3185  001EB0                     __ptext16:
  3186                           	callstack 0
  3187  001EB0                     _cronometro:
  3188                           	callstack 20
  3189  001EB0                     
  3190                           ;main.c: 68:     s = s+1;
  3191  001EB0  0E01               	movlw	1
  3192  001EB2  0100               	movlb	0	; () banked
  3193  001EB4  25D9               	addwf	_s& (0+255),w,b
  3194  001EB6  6FD9               	movwf	_s& (0+255),b
  3195  001EB8  0E00               	movlw	0
  3196  001EBA  21DA               	addwfc	(_s+1)& (0+255),w,b
  3197  001EBC  6FDA               	movwf	(_s+1)& (0+255),b
  3198                           
  3199                           ;main.c: 70:     if (s == 60 ){
  3200  001EBE  0E3C               	movlw	60
  3201  001EC0  19D9               	xorwf	_s& (0+255),w,b
  3202  001EC2  11DA               	iorwf	(_s+1)& (0+255),w,b
  3203  001EC4  A4D8               	btfss	status,2,c
  3204  001EC6  EF67  F00F         	goto	u2001
  3205  001ECA  EF69  F00F         	goto	u2000
  3206  001ECE                     u2001:
  3207  001ECE  EF73  F00F         	goto	l2218
  3208  001ED2                     u2000:
  3209  001ED2                     
  3210                           ; BSR set to: 0
  3211                           ;main.c: 71:         s = 0;
  3212  001ED2  0E00               	movlw	0
  3213  001ED4  6FDA               	movwf	(_s+1)& (0+255),b
  3214  001ED6  0E00               	movlw	0
  3215  001ED8  6FD9               	movwf	_s& (0+255),b
  3216  001EDA                     
  3217                           ; BSR set to: 0
  3218                           ;main.c: 72:         m = m + 1;
  3219  001EDA  0E01               	movlw	1
  3220  001EDC  25DB               	addwf	_m& (0+255),w,b
  3221  001EDE  6FDB               	movwf	_m& (0+255),b
  3222  001EE0  0E00               	movlw	0
  3223  001EE2  21DC               	addwfc	(_m+1)& (0+255),w,b
  3224  001EE4  6FDC               	movwf	(_m+1)& (0+255),b
  3225  001EE6                     l2218:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;main.c: 75:       if (m == 60){
  3229  001EE6  0E3C               	movlw	60
  3230  001EE8  19DB               	xorwf	_m& (0+255),w,b
  3231  001EEA  11DC               	iorwf	(_m+1)& (0+255),w,b
  3232  001EEC  A4D8               	btfss	status,2,c
  3233  001EEE  EF7B  F00F         	goto	u2011
  3234  001EF2  EF7D  F00F         	goto	u2010
  3235  001EF6                     u2011:
  3236  001EF6  EF87  F00F         	goto	l122
  3237  001EFA                     u2010:
  3238  001EFA                     
  3239                           ; BSR set to: 0
  3240                           ;main.c: 76:           m = 0;
  3241  001EFA  0E00               	movlw	0
  3242  001EFC  6FDC               	movwf	(_m+1)& (0+255),b
  3243  001EFE  0E00               	movlw	0
  3244  001F00  6FDB               	movwf	_m& (0+255),b
  3245  001F02                     
  3246                           ; BSR set to: 0
  3247                           ;main.c: 77:           h = h + 1;
  3248  001F02  0E01               	movlw	1
  3249  001F04  25DD               	addwf	_h& (0+255),w,b
  3250  001F06  6FDD               	movwf	_h& (0+255),b
  3251  001F08  0E00               	movlw	0
  3252  001F0A  21DE               	addwfc	(_h+1)& (0+255),w,b
  3253  001F0C  6FDE               	movwf	(_h+1)& (0+255),b
  3254  001F0E                     l122:
  3255                           
  3256                           ; BSR set to: 0
  3257  001F0E  0012               	return		;funcret
  3258  001F10                     __end_of_cronometro:
  3259                           	callstack 0
  3260                           
  3261 ;; *************** function _Lcd_Write_String *****************
  3262 ;; Defined at:
  3263 ;;		line 88 in file "./lcd.h"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  a               2   30[BANK0 ] PTR unsigned char 
  3266 ;;		 -> STR_7(8), tx_string(30), 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  i               2   34[BANK0 ] int 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3278 ;;      Params:         0       2       0       0       0       0       0       0       0
  3279 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3280 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3281 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3282 ;;Total ram usage:        6 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 11
  3285 ;; This function calls:
  3286 ;;		_Lcd_Write_Char
  3287 ;; This function is called by:
  3288 ;;		_disp_cronometro
  3289 ;;		_main
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text17
  3294  001BB0                     __ptext17:
  3295                           	callstack 0
  3296  001BB0                     _Lcd_Write_String:
  3297                           	callstack 18
  3298  001BB0                     
  3299                           ;./lcd.h: 89:     int i;;./lcd.h: 90:     for (i = 0; a[i] != '\0'; i++)
  3300  001BB0  0E00               	movlw	0
  3301  001BB2  0100               	movlb	0	; () banked
  3302  001BB4  6F83               	movwf	(Lcd_Write_String@i+1)& (0+255),b
  3303  001BB6  0E00               	movlw	0
  3304  001BB8  6F82               	movwf	Lcd_Write_String@i& (0+255),b
  3305  001BBA  EFFB  F00D         	goto	l2210
  3306  001BBE                     l2206:
  3307                           
  3308                           ;./lcd.h: 91:         Lcd_Write_Char(a[i]);
  3309  001BBE  0100               	movlb	0	; () banked
  3310  001BC0  5182               	movf	Lcd_Write_String@i& (0+255),w,b
  3311  001BC2  257E               	addwf	Lcd_Write_String@a& (0+255),w,b
  3312  001BC4  6F80               	movwf	??_Lcd_Write_String& (0+255),b
  3313  001BC6  5183               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  3314  001BC8  217F               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  3315  001BCA  6F81               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  3316  001BCC  C080  FFF6         	movff	??_Lcd_Write_String,tblptrl
  3317  001BD0  C081  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  3318  001BD4  6AF8               	clrf	tblptru,c
  3319  001BD6  0E07               	movlw	(high __ramtop+-1)
  3320  001BD8  64F7               	cpfsgt	tblptrh,c
  3321  001BDA  D003               	bra	u1977
  3322  001BDC  0008               	tblrd		*
  3323  001BDE  50F5               	movf	tablat,w,c
  3324  001BE0  D005               	bra	u1970
  3325  001BE2                     u1977:
  3326  001BE2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3327  001BE6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3328  001BEA  50E7               	movf	indf1,w,c
  3329  001BEC                     u1970:
  3330  001BEC  EC4F  F011         	call	_Lcd_Write_Char
  3331  001BF0  0100               	movlb	0	; () banked
  3332  001BF2  4B82               	infsnz	Lcd_Write_String@i& (0+255),f,b
  3333  001BF4  2B83               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
  3334  001BF6                     l2210:
  3335                           
  3336                           ; BSR set to: 0
  3337  001BF6  5182               	movf	Lcd_Write_String@i& (0+255),w,b
  3338  001BF8  257E               	addwf	Lcd_Write_String@a& (0+255),w,b
  3339  001BFA  6F80               	movwf	??_Lcd_Write_String& (0+255),b
  3340  001BFC  5183               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  3341  001BFE  217F               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  3342  001C00  6F81               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  3343  001C02  C080  FFF6         	movff	??_Lcd_Write_String,tblptrl
  3344  001C06  C081  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  3345  001C0A  6AF8               	clrf	tblptru,c
  3346  001C0C  0E07               	movlw	(high __ramtop+-1)
  3347  001C0E  64F7               	cpfsgt	tblptrh,c
  3348  001C10  D003               	bra	u1987
  3349  001C12  0008               	tblrd		*
  3350  001C14  50F5               	movf	tablat,w,c
  3351  001C16  D005               	bra	u1980
  3352  001C18                     u1987:
  3353  001C18  CFF6 FFE1          	movff	tblptrl,fsr1l
  3354  001C1C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3355  001C20  50E7               	movf	indf1,w,c
  3356  001C22                     u1980:
  3357  001C22  0900               	iorlw	0
  3358  001C24  A4D8               	btfss	status,2,c
  3359  001C26  EF17  F00E         	goto	u1991
  3360  001C2A  EF19  F00E         	goto	u1990
  3361  001C2E                     u1991:
  3362  001C2E  EFDF  F00D         	goto	l2206
  3363  001C32                     u1990:
  3364  001C32  0012               	return		;funcret
  3365  001C34                     __end_of_Lcd_Write_String:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _Lcd_Write_Char *****************
  3369 ;; Defined at:
  3370 ;;		line 73 in file "./lcd.h"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  a               1    wreg     unsigned char 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  a               1   29[BANK0 ] unsigned char 
  3375 ;;  y               1   28[BANK0 ] unsigned char 
  3376 ;;  temp            1   27[BANK0 ] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0
  3387 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3389 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3390 ;;Total ram usage:        3 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 10
  3393 ;; This function calls:
  3394 ;;		_Lcd_Port
  3395 ;; This function is called by:
  3396 ;;		_Lcd_Write_String
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text18
  3401  00229E                     __ptext18:
  3402                           	callstack 0
  3403  00229E                     _Lcd_Write_Char:
  3404                           	callstack 18
  3405                           
  3406                           ;incstack = 0
  3407                           ;Lcd_Write_Char@a stored from wreg
  3408  00229E  0100               	movlb	0	; () banked
  3409  0022A0  6F7D               	movwf	Lcd_Write_Char@a& (0+255),b
  3410  0022A2                     
  3411                           ;./lcd.h: 74:     char temp, y;;./lcd.h: 75:     temp = a & 0x0F;
  3412  0022A2  0100               	movlb	0	; () banked
  3413  0022A4  517D               	movf	Lcd_Write_Char@a& (0+255),w,b
  3414  0022A6  0B0F               	andlw	15
  3415  0022A8  6F7B               	movwf	Lcd_Write_Char@temp& (0+255),b
  3416                           
  3417                           ;./lcd.h: 76:     y = a & 0xF0;
  3418  0022AA  517D               	movf	Lcd_Write_Char@a& (0+255),w,b
  3419  0022AC  0BF0               	andlw	240
  3420  0022AE  6F7C               	movwf	Lcd_Write_Char@y& (0+255),b
  3421  0022B0                     
  3422                           ; BSR set to: 0
  3423                           ;./lcd.h: 77:     LATE0 = 1;
  3424  0022B0  808D               	bsf	3981,0,c	;volatile
  3425  0022B2                     
  3426                           ; BSR set to: 0
  3427                           ;./lcd.h: 78:     Lcd_Port(y >> 4);
  3428  0022B2  397C               	swapf	Lcd_Write_Char@y& (0+255),w,b
  3429  0022B4  0B0F               	andlw	15
  3430  0022B6  EC88  F00F         	call	_Lcd_Port
  3431  0022BA                     
  3432                           ;./lcd.h: 79:     LATE1 = 1;
  3433  0022BA  828D               	bsf	3981,1,c	;volatile
  3434  0022BC                     
  3435                           ;./lcd.h: 80:     _delay((unsigned long)((40)*(400000/4000000.0)));
  3436  0022BC  D000               	nop2		;2 cycle nop
  3437  0022BE  D000               	nop2		;2 cycle nop
  3438  0022C0                     
  3439                           ;./lcd.h: 81:     LATE1 = 0;
  3440  0022C0  928D               	bcf	3981,1,c	;volatile
  3441  0022C2                     
  3442                           ;./lcd.h: 82:     Lcd_Port(temp);
  3443  0022C2  0100               	movlb	0	; () banked
  3444  0022C4  517B               	movf	Lcd_Write_Char@temp& (0+255),w,b
  3445  0022C6  EC88  F00F         	call	_Lcd_Port
  3446  0022CA                     
  3447                           ;./lcd.h: 83:     LATE1 = 1;
  3448  0022CA  828D               	bsf	3981,1,c	;volatile
  3449  0022CC                     
  3450                           ;./lcd.h: 84:     _delay((unsigned long)((40)*(400000/4000000.0)));
  3451  0022CC  D000               	nop2		;2 cycle nop
  3452  0022CE  D000               	nop2		;2 cycle nop
  3453  0022D0                     
  3454                           ;./lcd.h: 85:     LATE1 = 0;
  3455  0022D0  928D               	bcf	3981,1,c	;volatile
  3456  0022D2  0012               	return		;funcret
  3457  0022D4                     __end_of_Lcd_Write_Char:
  3458                           	callstack 0
  3459                           
  3460 ;; *************** function _Lcd_Set_Cursor *****************
  3461 ;; Defined at:
  3462 ;;		line 38 in file "./lcd.h"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  a               1    wreg     unsigned char 
  3465 ;;  b               1   28[BANK0 ] unsigned char 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  a               1   29[BANK0 ] unsigned char 
  3468 ;;  temp            1   32[BANK0 ] unsigned char 
  3469 ;;  y               1   31[BANK0 ] unsigned char 
  3470 ;;  z               1   30[BANK0 ] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3480 ;;      Params:         0       1       0       0       0       0       0       0       0
  3481 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3483 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3484 ;;Total ram usage:        5 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; Hardware stack levels required when called: 11
  3487 ;; This function calls:
  3488 ;;		_Lcd_Cmd
  3489 ;; This function is called by:
  3490 ;;		_disp_cronometro
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text19
  3496  001CB2                     __ptext19:
  3497                           	callstack 0
  3498  001CB2                     _Lcd_Set_Cursor:
  3499                           	callstack 18
  3500                           
  3501                           ;incstack = 0
  3502                           ;Lcd_Set_Cursor@a stored from wreg
  3503  001CB2  0100               	movlb	0	; () banked
  3504  001CB4  6F7D               	movwf	Lcd_Set_Cursor@a& (0+255),b
  3505  001CB6                     
  3506                           ;./lcd.h: 39:     char temp, z, y;;./lcd.h: 40:     if (a == 1) {
  3507  001CB6  0100               	movlb	0	; () banked
  3508  001CB8  057D               	decf	Lcd_Set_Cursor@a& (0+255),w,b
  3509  001CBA  A4D8               	btfss	status,2,c
  3510  001CBC  EF62  F00E         	goto	u1951
  3511  001CC0  EF64  F00E         	goto	u1950
  3512  001CC4                     u1951:
  3513  001CC4  EF76  F00E         	goto	l2196
  3514  001CC8                     u1950:
  3515  001CC8                     
  3516                           ; BSR set to: 0
  3517                           ;./lcd.h: 41:         temp = 0x80 + b - 1;
  3518  001CC8  517C               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  3519  001CCA  0F7F               	addlw	127
  3520  001CCC  6F80               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  3521                           
  3522                           ;./lcd.h: 42:         z = temp >> 4;
  3523  001CCE  3980               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  3524  001CD0  0B0F               	andlw	15
  3525  001CD2  6F7E               	movwf	Lcd_Set_Cursor@z& (0+255),b
  3526                           
  3527                           ;./lcd.h: 43:         y = temp & 0x0F;
  3528  001CD4  5180               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  3529  001CD6  0B0F               	andlw	15
  3530  001CD8  6F7F               	movwf	Lcd_Set_Cursor@y& (0+255),b
  3531  001CDA                     
  3532                           ; BSR set to: 0
  3533                           ;./lcd.h: 44:         Lcd_Cmd(z);
  3534  001CDA  517E               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  3535  001CDC  EC82  F011         	call	_Lcd_Cmd
  3536  001CE0                     
  3537                           ;./lcd.h: 45:         Lcd_Cmd(y);
  3538  001CE0  0100               	movlb	0	; () banked
  3539  001CE2  517F               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  3540  001CE4  EC82  F011         	call	_Lcd_Cmd
  3541                           
  3542                           ;./lcd.h: 46:     } else if (a == 2) {
  3543  001CE8  EF8F  F00E         	goto	l73
  3544  001CEC                     l2196:
  3545                           
  3546                           ; BSR set to: 0
  3547  001CEC  0E02               	movlw	2
  3548  001CEE  197D               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  3549  001CF0  A4D8               	btfss	status,2,c
  3550  001CF2  EF7D  F00E         	goto	u1961
  3551  001CF6  EF7F  F00E         	goto	u1960
  3552  001CFA                     u1961:
  3553  001CFA  EF8F  F00E         	goto	l73
  3554  001CFE                     u1960:
  3555  001CFE                     
  3556                           ; BSR set to: 0
  3557                           ;./lcd.h: 47:         temp = 0xC0 + b - 1;
  3558  001CFE  517C               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  3559  001D00  0FBF               	addlw	191
  3560  001D02  6F80               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  3561                           
  3562                           ;./lcd.h: 48:         z = temp >> 4;
  3563  001D04  3980               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  3564  001D06  0B0F               	andlw	15
  3565  001D08  6F7E               	movwf	Lcd_Set_Cursor@z& (0+255),b
  3566                           
  3567                           ;./lcd.h: 49:         y = temp & 0x0F;
  3568  001D0A  5180               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  3569  001D0C  0B0F               	andlw	15
  3570  001D0E  6F7F               	movwf	Lcd_Set_Cursor@y& (0+255),b
  3571  001D10                     
  3572                           ; BSR set to: 0
  3573                           ;./lcd.h: 50:         Lcd_Cmd(z);
  3574  001D10  517E               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  3575  001D12  EC82  F011         	call	_Lcd_Cmd
  3576  001D16                     
  3577                           ;./lcd.h: 51:         Lcd_Cmd(y);
  3578  001D16  0100               	movlb	0	; () banked
  3579  001D18  517F               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  3580  001D1A  EC82  F011         	call	_Lcd_Cmd
  3581  001D1E                     l73:
  3582  001D1E  0012               	return		;funcret
  3583  001D20                     __end_of_Lcd_Set_Cursor:
  3584                           	callstack 0
  3585                           
  3586 ;; *************** function _Lcd_Init *****************
  3587 ;; Defined at:
  3588 ;;		line 55 in file "./lcd.h"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3604 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3605 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3606 ;;Total ram usage:        1 bytes
  3607 ;; Hardware stack levels used: 1
  3608 ;; Hardware stack levels required when called: 11
  3609 ;; This function calls:
  3610 ;;		_Lcd_Cmd
  3611 ;;		_Lcd_Port
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text20
  3618  001D20                     __ptext20:
  3619                           	callstack 0
  3620  001D20                     _Lcd_Init:
  3621                           	callstack 19
  3622  001D20                     
  3623                           ;./lcd.h: 56:     Lcd_Port(0x00);
  3624  001D20  0E00               	movlw	0
  3625  001D22  EC88  F00F         	call	_Lcd_Port
  3626  001D26                     
  3627                           ;./lcd.h: 57:     _delay((unsigned long)((20)*(400000/4000.0)));
  3628  001D26  0E03               	movlw	3
  3629  001D28  0100               	movlb	0	; () banked
  3630  001D2A  6F7C               	movwf	??_Lcd_Init& (0+255),b
  3631  001D2C  0E97               	movlw	151
  3632  001D2E                     u2197:
  3633  001D2E  2EE8               	decfsz	wreg,f,c
  3634  001D30  D7FE               	bra	u2197
  3635  001D32  2F7C               	decfsz	??_Lcd_Init& (0+255),f,b
  3636  001D34  D7FC               	bra	u2197
  3637  001D36  D000               	nop2	
  3638  001D38                     
  3639                           ;./lcd.h: 58:     Lcd_Cmd(0x03);
  3640  001D38  0E03               	movlw	3
  3641  001D3A  EC82  F011         	call	_Lcd_Cmd
  3642  001D3E                     
  3643                           ;./lcd.h: 59:     _delay((unsigned long)((5)*(400000/4000.0)));
  3644  001D3E  0EA6               	movlw	166
  3645  001D40                     u2207:
  3646  001D40  2EE8               	decfsz	wreg,f,c
  3647  001D42  D7FE               	bra	u2207
  3648  001D44  D000               	nop2	
  3649  001D46                     
  3650                           ;./lcd.h: 60:     Lcd_Cmd(0x03);
  3651  001D46  0E03               	movlw	3
  3652  001D48  EC82  F011         	call	_Lcd_Cmd
  3653  001D4C                     
  3654                           ;./lcd.h: 61:     _delay((unsigned long)((11)*(400000/4000.0)));
  3655  001D4C  0EDC               	movlw	220
  3656  001D4E                     u2217:
  3657  001D4E  D000               	nop2	
  3658  001D50  2EE8               	decfsz	wreg,f,c
  3659  001D52  D7FD               	bra	u2217
  3660  001D54                     
  3661                           ;./lcd.h: 62:     Lcd_Cmd(0x03);
  3662  001D54  0E03               	movlw	3
  3663  001D56  EC82  F011         	call	_Lcd_Cmd
  3664  001D5A                     
  3665                           ;./lcd.h: 64:     Lcd_Cmd(0x02);
  3666  001D5A  0E02               	movlw	2
  3667  001D5C  EC82  F011         	call	_Lcd_Cmd
  3668  001D60                     
  3669                           ;./lcd.h: 65:     Lcd_Cmd(0x02);
  3670  001D60  0E02               	movlw	2
  3671  001D62  EC82  F011         	call	_Lcd_Cmd
  3672  001D66                     
  3673                           ;./lcd.h: 66:     Lcd_Cmd(0x08);
  3674  001D66  0E08               	movlw	8
  3675  001D68  EC82  F011         	call	_Lcd_Cmd
  3676  001D6C                     
  3677                           ;./lcd.h: 67:     Lcd_Cmd(0x00);
  3678  001D6C  0E00               	movlw	0
  3679  001D6E  EC82  F011         	call	_Lcd_Cmd
  3680  001D72                     
  3681                           ;./lcd.h: 68:     Lcd_Cmd(0x0C);
  3682  001D72  0E0C               	movlw	12
  3683  001D74  EC82  F011         	call	_Lcd_Cmd
  3684  001D78                     
  3685                           ;./lcd.h: 69:     Lcd_Cmd(0x00);
  3686  001D78  0E00               	movlw	0
  3687  001D7A  EC82  F011         	call	_Lcd_Cmd
  3688  001D7E                     
  3689                           ;./lcd.h: 70:     Lcd_Cmd(0x06);
  3690  001D7E  0E06               	movlw	6
  3691  001D80  EC82  F011         	call	_Lcd_Cmd
  3692  001D84  0012               	return		;funcret
  3693  001D86                     __end_of_Lcd_Init:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function _Lcd_Clear *****************
  3697 ;; Defined at:
  3698 ;;		line 33 in file "./lcd.h"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3712 ;;      Params:         0       0       0       0       0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3715 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; Hardware stack levels required when called: 11
  3719 ;; This function calls:
  3720 ;;		_Lcd_Cmd
  3721 ;; This function is called by:
  3722 ;;		_main
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text21
  3727  00234C                     __ptext21:
  3728                           	callstack 0
  3729  00234C                     _Lcd_Clear:
  3730                           	callstack 19
  3731  00234C                     
  3732                           ;./lcd.h: 34:     Lcd_Cmd(0);
  3733  00234C  0E00               	movlw	0
  3734  00234E  EC82  F011         	call	_Lcd_Cmd
  3735                           
  3736                           ;./lcd.h: 35:     Lcd_Cmd(1);
  3737  002352  0E01               	movlw	1
  3738  002354  EC82  F011         	call	_Lcd_Cmd
  3739  002358  0012               	return		;funcret
  3740  00235A                     __end_of_Lcd_Clear:
  3741                           	callstack 0
  3742                           
  3743 ;; *************** function _Lcd_Cmd *****************
  3744 ;; Defined at:
  3745 ;;		line 25 in file "./lcd.h"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  a               1    wreg     unsigned char 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  a               1   27[BANK0 ] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3759 ;;      Params:         0       0       0       0       0       0       0       0       0
  3760 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3762 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3763 ;;Total ram usage:        1 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; Hardware stack levels required when called: 10
  3766 ;; This function calls:
  3767 ;;		_Lcd_Port
  3768 ;; This function is called by:
  3769 ;;		_Lcd_Clear
  3770 ;;		_Lcd_Set_Cursor
  3771 ;;		_Lcd_Init
  3772 ;;		_Lcd_Shift_Right
  3773 ;;		_Lcd_Shift_Left
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text22
  3778  002304                     __ptext22:
  3779                           	callstack 0
  3780  002304                     _Lcd_Cmd:
  3781                           	callstack 18
  3782                           
  3783                           ;incstack = 0
  3784                           ;Lcd_Cmd@a stored from wreg
  3785  002304  0100               	movlb	0	; () banked
  3786  002306  6F7B               	movwf	Lcd_Cmd@a& (0+255),b
  3787  002308                     
  3788                           ;./lcd.h: 26:     LATE0 = 0;
  3789  002308  908D               	bcf	3981,0,c	;volatile
  3790  00230A                     
  3791                           ;./lcd.h: 27:     Lcd_Port(a);
  3792  00230A  0100               	movlb	0	; () banked
  3793  00230C  517B               	movf	Lcd_Cmd@a& (0+255),w,b
  3794  00230E  EC88  F00F         	call	_Lcd_Port
  3795  002312                     
  3796                           ;./lcd.h: 28:     LATE1 = 1;
  3797  002312  828D               	bsf	3981,1,c	;volatile
  3798  002314                     
  3799                           ;./lcd.h: 29:     _delay((unsigned long)((4)*(400000/4000.0)));
  3800  002314  0E85               	movlw	133
  3801  002316                     u2227:
  3802  002316  2EE8               	decfsz	wreg,f,c
  3803  002318  D7FE               	bra	u2227
  3804  00231A  F000               	nop	
  3805  00231C                     
  3806                           ;./lcd.h: 30:     LATE1 = 0;
  3807  00231C  928D               	bcf	3981,1,c	;volatile
  3808  00231E  0012               	return		;funcret
  3809  002320                     __end_of_Lcd_Cmd:
  3810                           	callstack 0
  3811                           
  3812 ;; *************** function _Lcd_Port *****************
  3813 ;; Defined at:
  3814 ;;		line 3 in file "./lcd.h"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  a               1    wreg     unsigned char 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  a               1   26[BANK0 ] unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3828 ;;      Params:         0       0       0       0       0       0       0       0       0
  3829 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3831 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3832 ;;Total ram usage:        1 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 9
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_Lcd_Cmd
  3839 ;;		_Lcd_Init
  3840 ;;		_Lcd_Write_Char
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text23
  3845  001F10                     __ptext23:
  3846                           	callstack 0
  3847  001F10                     _Lcd_Port:
  3848                           	callstack 18
  3849                           
  3850                           ;incstack = 0
  3851                           ;Lcd_Port@a stored from wreg
  3852  001F10  0100               	movlb	0	; () banked
  3853  001F12  6F7A               	movwf	Lcd_Port@a& (0+255),b
  3854  001F14                     
  3855                           ;./lcd.h: 4:     if (a & 1)
  3856  001F14  0100               	movlb	0	; () banked
  3857  001F16  A17A               	btfss	Lcd_Port@a& (0+255),0,b
  3858  001F18  EF90  F00F         	goto	u1611
  3859  001F1C  EF92  F00F         	goto	u1610
  3860  001F20                     u1611:
  3861  001F20  EF95  F00F         	goto	l53
  3862  001F24                     u1610:
  3863  001F24                     
  3864                           ; BSR set to: 0
  3865                           ;./lcd.h: 5:         LATD4 = 1;
  3866  001F24  888C               	bsf	3980,4,c	;volatile
  3867  001F26  EF96  F00F         	goto	l1948
  3868  001F2A                     l53:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;./lcd.h: 7:         LATD4 = 0;
  3872  001F2A  988C               	bcf	3980,4,c	;volatile
  3873  001F2C                     l1948:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;./lcd.h: 9:     if (a & 2)
  3877  001F2C  A37A               	btfss	Lcd_Port@a& (0+255),1,b
  3878  001F2E  EF9B  F00F         	goto	u1621
  3879  001F32  EF9D  F00F         	goto	u1620
  3880  001F36                     u1621:
  3881  001F36  EFA0  F00F         	goto	l55
  3882  001F3A                     u1620:
  3883  001F3A                     
  3884                           ; BSR set to: 0
  3885                           ;./lcd.h: 10:         LATD5 = 1;
  3886  001F3A  8A8C               	bsf	3980,5,c	;volatile
  3887  001F3C  EFA1  F00F         	goto	l1952
  3888  001F40                     l55:
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;./lcd.h: 12:         LATD5 = 0;
  3892  001F40  9A8C               	bcf	3980,5,c	;volatile
  3893  001F42                     l1952:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;./lcd.h: 14:     if (a & 4)
  3897  001F42  A57A               	btfss	Lcd_Port@a& (0+255),2,b
  3898  001F44  EFA6  F00F         	goto	u1631
  3899  001F48  EFA8  F00F         	goto	u1630
  3900  001F4C                     u1631:
  3901  001F4C  EFAB  F00F         	goto	l57
  3902  001F50                     u1630:
  3903  001F50                     
  3904                           ; BSR set to: 0
  3905                           ;./lcd.h: 15:         LATD6 = 1;
  3906  001F50  8C8C               	bsf	3980,6,c	;volatile
  3907  001F52  EFAC  F00F         	goto	l1956
  3908  001F56                     l57:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;./lcd.h: 17:         LATD6 = 0;
  3912  001F56  9C8C               	bcf	3980,6,c	;volatile
  3913  001F58                     l1956:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;./lcd.h: 19:     if (a & 8)
  3917  001F58  A77A               	btfss	Lcd_Port@a& (0+255),3,b
  3918  001F5A  EFB1  F00F         	goto	u1641
  3919  001F5E  EFB3  F00F         	goto	u1640
  3920  001F62                     u1641:
  3921  001F62  EFB6  F00F         	goto	l59
  3922  001F66                     u1640:
  3923  001F66                     
  3924                           ; BSR set to: 0
  3925                           ;./lcd.h: 20:         LATD7 = 1;
  3926  001F66  8E8C               	bsf	3980,7,c	;volatile
  3927  001F68  EFB7  F00F         	goto	l61
  3928  001F6C                     l59:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;./lcd.h: 22:         LATD7 = 0;
  3932  001F6C  9E8C               	bcf	3980,7,c	;volatile
  3933  001F6E                     l61:
  3934                           
  3935                           ; BSR set to: 0
  3936  001F6E  0012               	return		;funcret
  3937  001F70                     __end_of_Lcd_Port:
  3938                           	callstack 0
  3939                           
  3940 ;; *************** function _RS232 *****************
  3941 ;; Defined at:
  3942 ;;		line 104 in file "main.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3958 ;;      Temps:          0       8       0       0       0       0       0       0       0
  3959 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3960 ;;Total ram usage:        8 bytes
  3961 ;; Hardware stack levels used: 1
  3962 ;; Hardware stack levels required when called: 8
  3963 ;; This function calls:
  3964 ;;		i2_Lcd_Set_Cursor
  3965 ;;		i2_Lcd_Write_String
  3966 ;;		i2_cronometro
  3967 ;;		i2_sprintf
  3968 ;; This function is called by:
  3969 ;;		Interrupt level 2
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	intcode
  3974  000008                     __pintcode:
  3975                           	callstack 0
  3976  000008                     _RS232:
  3977                           	callstack 13
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;incstack = 0
  3981  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3982  00000A  ED91  F00D         	call	int_func,f	;refresh shadow registers
  3983                           
  3984                           	psect	intcode_body
  3985  001B22                     __pintcode_body:
  3986                           	callstack 13
  3987  001B22                     int_func:
  3988                           	callstack 13
  3989  001B22  0006               	pop		; remove dummy address from shadow register refresh
  3990  001B24  CFE1 F072          	movff	fsr1l,??_RS232
  3991  001B28  CFE2 F073          	movff	fsr1h,??_RS232+1
  3992  001B2C  CFD9 F074          	movff	fsr2l,??_RS232+2
  3993  001B30  CFDA F075          	movff	fsr2h,??_RS232+3
  3994  001B34  CFF6 F076          	movff	tblptrl,??_RS232+4
  3995  001B38  CFF7 F077          	movff	tblptrh,??_RS232+5
  3996  001B3C  CFF8 F078          	movff	tblptru,??_RS232+6
  3997  001B40  CFF5 F079          	movff	tablat,??_RS232+7
  3998  001B44                     
  3999                           ;main.c: 106:     cronometro();
  4000  001B44  ECB8  F00F         	call	i2_cronometro	;wreg free
  4001  001B48                     
  4002                           ;main.c: 108:     sprintf(tx_string, "%u:%u:%u\r", h,m,s);
  4003  001B48  0E20               	movlw	low _tx_string
  4004  001B4A  0100               	movlb	0	; () banked
  4005  001B4C  6F60               	movwf	i2sprintf@s& (0+255),b
  4006  001B4E  0E01               	movlw	high _tx_string
  4007  001B50  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  4008  001B52  0E11               	movlw	low STR_6
  4009  001B54  6F62               	movwf	i2sprintf@fmt& (0+255),b
  4010  001B56  0E08               	movlw	high STR_6
  4011  001B58  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  4012  001B5A  C0DD  F064         	movff	_h,?i2_sprintf+4
  4013  001B5E  C0DE  F065         	movff	_h+1,?i2_sprintf+5
  4014  001B62  C0DB  F066         	movff	_m,?i2_sprintf+6
  4015  001B66  C0DC  F067         	movff	_m+1,?i2_sprintf+7
  4016  001B6A  C0D9  F068         	movff	_s,?i2_sprintf+8
  4017  001B6E  C0DA  F069         	movff	_s+1,?i2_sprintf+9
  4018  001B72  EC96  F010         	call	i2_sprintf	;wreg free
  4019  001B76                     
  4020                           ;main.c: 110:     Lcd_Set_Cursor(1, 1);
  4021  001B76  0E01               	movlw	1
  4022  001B78  6E03               	movwf	i2Lcd_Set_Cursor@b^0,c
  4023  001B7A  0E01               	movlw	1
  4024  001B7C  ECC3  F00E         	call	i2_Lcd_Set_Cursor
  4025  001B80                     
  4026                           ;main.c: 111:     Lcd_Write_String(tx_string);
  4027  001B80  0E20               	movlw	low _tx_string
  4028  001B82  6E05               	movwf	i2Lcd_Write_String@a^0,c
  4029  001B84  0E01               	movlw	high _tx_string
  4030  001B86  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  4031  001B88  EC1A  F00E         	call	i2_Lcd_Write_String	;wreg free
  4032  001B8C  C079  FFF5         	movff	??_RS232+7,tablat
  4033  001B90  C078  FFF8         	movff	??_RS232+6,tblptru
  4034  001B94  C077  FFF7         	movff	??_RS232+5,tblptrh
  4035  001B98  C076  FFF6         	movff	??_RS232+4,tblptrl
  4036  001B9C  C075  FFDA         	movff	??_RS232+3,fsr2h
  4037  001BA0  C074  FFD9         	movff	??_RS232+2,fsr2l
  4038  001BA4  C073  FFE2         	movff	??_RS232+1,fsr1h
  4039  001BA8  C072  FFE1         	movff	??_RS232,fsr1l
  4040  001BAC  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4041  001BAE  0011               	retfie		f
  4042  001BB0                     __end_of_RS232:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function i2_sprintf *****************
  4046 ;; Defined at:
  4047 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4050 ;;		 -> tx_string(30), 
  4051 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4052 ;;		 -> STR_6(10), STR_5(16), 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  f               6   12[BANK0 ] struct _IO_FILE
  4055 ;;  ap              2   10[BANK0 ] PTR void [1]
  4056 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  4057 ;;  ret             2    0        int 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  2    0[BANK0 ] int 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4067 ;;      Params:         0      10       0       0       0       0       0       0       0
  4068 ;;      Locals:         0       8       0       0       0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4070 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4071 ;;Total ram usage:       18 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 7
  4074 ;; This function calls:
  4075 ;;		i2_vfprintf
  4076 ;; This function is called by:
  4077 ;;		_RS232
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text25
  4082  00212C                     __ptext25:
  4083                           	callstack 0
  4084  00212C                     i2_sprintf:
  4085                           	callstack 13
  4086  00212C  0E64               	movlw	low (?i2_sprintf+4)
  4087  00212E  0100               	movlb	0	; () banked
  4088  002130  6F6A               	movwf	i2sprintf@ap& (0+255),b
  4089  002132  0E00               	movlw	high (?i2_sprintf+4)
  4090  002134  6F6B               	movwf	(i2sprintf@ap+1)& (0+255),b
  4091  002136  C060  F06C         	movff	i2sprintf@s,i2sprintf@f
  4092  00213A  C061  F06D         	movff	i2sprintf@s+1,i2sprintf@f+1
  4093  00213E                     
  4094                           ; BSR set to: 0
  4095  00213E  0E00               	movlw	0
  4096  002140  6F6F               	movwf	(i2sprintf@f+3)& (0+255),b
  4097  002142  0E00               	movlw	0
  4098  002144  6F6E               	movwf	(i2sprintf@f+2)& (0+255),b
  4099  002146                     
  4100                           ; BSR set to: 0
  4101  002146  0E00               	movlw	0
  4102  002148  6F71               	movwf	(i2sprintf@f+5)& (0+255),b
  4103  00214A  0E00               	movlw	0
  4104  00214C  6F70               	movwf	(i2sprintf@f+4)& (0+255),b
  4105  00214E                     
  4106                           ; BSR set to: 0
  4107  00214E  0E6C               	movlw	low i2sprintf@f
  4108  002150  6E50               	movwf	i2vfprintf@fp^0,c
  4109  002152  0E00               	movlw	high i2sprintf@f
  4110  002154  6E51               	movwf	(i2vfprintf@fp+1)^0,c
  4111  002156  C062  F052         	movff	i2sprintf@fmt,i2vfprintf@fmt
  4112  00215A  C063  F053         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  4113  00215E  0E6A               	movlw	low i2sprintf@ap
  4114  002160  6E54               	movwf	i2vfprintf@ap^0,c
  4115  002162  0E00               	movlw	high i2sprintf@ap
  4116  002164  6E55               	movwf	(i2vfprintf@ap+1)^0,c
  4117  002166  EC27  F00F         	call	i2_vfprintf	;wreg free
  4118  00216A  0100               	movlb	0	; () banked
  4119  00216C  516E               	movf	(i2sprintf@f+2)& (0+255),w,b
  4120  00216E  2560               	addwf	i2sprintf@s& (0+255),w,b
  4121  002170  6ED9               	movwf	fsr2l,c
  4122  002172  516F               	movf	(i2sprintf@f+3)& (0+255),w,b
  4123  002174  2161               	addwfc	(i2sprintf@s+1)& (0+255),w,b
  4124  002176  6EDA               	movwf	fsr2h,c
  4125  002178  0E00               	movlw	0
  4126  00217A  6EDF               	movwf	indf2,c
  4127  00217C                     
  4128                           ; BSR set to: 0
  4129  00217C  0012               	return		;funcret
  4130  00217E                     __end_ofi2_sprintf:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function i2_vfprintf *****************
  4134 ;; Defined at:
  4135 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  4138 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  4139 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  4140 ;;		 -> STR_6(10), STR_5(16), 
  4141 ;;  ap              2   83[COMRAM] PTR PTR void 
  4142 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  4145 ;;		 -> STR_6(10), STR_5(16), 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  2   79[COMRAM] int 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4155 ;;      Params:         6       0       0       0       0       0       0       0       0
  4156 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4158 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4159 ;;Total ram usage:        8 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; Hardware stack levels required when called: 6
  4162 ;; This function calls:
  4163 ;;		i2_vfpfcnvrt
  4164 ;; This function is called by:
  4165 ;;		i2_sprintf
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text26
  4170  001E4E                     __ptext26:
  4171                           	callstack 0
  4172  001E4E                     i2_vfprintf:
  4173                           	callstack 13
  4174  001E4E                     
  4175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4176  001E4E  C052  F056         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  4177  001E52  C053  F057         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  4178  001E56                     
  4179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4180  001E56  0E00               	movlw	0
  4181  001E58  0100               	movlb	0	; () banked
  4182  001E5A  6FCC               	movwf	(_nout+1)& (0+255),b
  4183  001E5C  0E00               	movlw	0
  4184  001E5E  6FCB               	movwf	_nout& (0+255),b
  4185                           
  4186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4187  001E60  EF45  F00F         	goto	i2l2272
  4188  001E64                     i2l2270:
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4192  001E64  C050  F03C         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  4193  001E68  C051  F03D         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  4194  001E6C  0E56               	movlw	low i2vfprintf@cfmt
  4195  001E6E  6E3E               	movwf	i2vfpfcnvrt@fmt^0,c
  4196  001E70  0E00               	movlw	high i2vfprintf@cfmt
  4197  001E72  6E3F               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  4198  001E74  C054  F040         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  4199  001E78  C055  F041         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  4200  001E7C  EC1B  F005         	call	i2_vfpfcnvrt	;wreg free
  4201  001E80  503C               	movf	?i2_vfpfcnvrt^0,w,c
  4202  001E82  0100               	movlb	0	; () banked
  4203  001E84  27CB               	addwf	_nout& (0+255),f,b
  4204  001E86  503D               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  4205  001E88  23CC               	addwfc	(_nout+1)& (0+255),f,b
  4206  001E8A                     i2l2272:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4210  001E8A  C056  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  4211  001E8E  C057  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  4212  001E92                     	if	0	;tblptru may be non-zero
  4213  001E92                     	endif
  4214  001E92                     	if	0	;tblptru may be non-zero
  4215  001E92                     	endif
  4216  001E92  0008               	tblrd		*
  4217  001E94  50F5               	movf	tablat,w,c
  4218  001E96  0900               	iorlw	0
  4219  001E98  A4D8               	btfss	status,2,c
  4220  001E9A  EF51  F00F         	goto	i2u202_41
  4221  001E9E  EF53  F00F         	goto	i2u202_40
  4222  001EA2                     i2u202_41:
  4223  001EA2  EF32  F00F         	goto	i2l2270
  4224  001EA6                     i2u202_40:
  4225  001EA6                     
  4226                           ; BSR set to: 0
  4227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4228  001EA6  C0CB  F050         	movff	_nout,?i2_vfprintf
  4229  001EAA  C0CC  F051         	movff	_nout+1,?i2_vfprintf+1
  4230  001EAE                     
  4231                           ; BSR set to: 0
  4232  001EAE  0012               	return		;funcret
  4233  001EB0                     __end_ofi2_vfprintf:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function i2_vfpfcnvrt *****************
  4237 ;; Defined at:
  4238 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  4241 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  4242 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  4243 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  4244 ;;  ap              2   63[COMRAM] PTR PTR void 
  4245 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  llu             8   69[COMRAM] unsigned long long 
  4248 ;;  ll              8    0        long long 
  4249 ;;  f               4    0        long long 
  4250 ;;  vp              3    0        PTR void 
  4251 ;;  ct              3    0        unsigned char [3]
  4252 ;;  cp              2   77[COMRAM] PTR unsigned char 
  4253 ;;		 -> NULL(0), ?_sprintf(2), STR_4(2), STR_3(2), 
  4254 ;;		 -> STR_2(2), STR_1(1), 
  4255 ;;  i               2    0        int 
  4256 ;;  done            2    0        int 
  4257 ;;  c               1    0        unsigned char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2   59[COMRAM] int 
  4260 ;; Registers used:
  4261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4267 ;;      Params:         6       0       0       0       0       0       0       0       0
  4268 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4269 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4270 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4271 ;;Total ram usage:       20 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; Hardware stack levels required when called: 5
  4274 ;; This function calls:
  4275 ;;		i2_fputc
  4276 ;;		i2_stoa
  4277 ;;		i2_utoa
  4278 ;; This function is called by:
  4279 ;;		i2_vfprintf
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text27
  4284  000A36                     __ptext27:
  4285                           	callstack 0
  4286  000A36                     i2_vfpfcnvrt:
  4287                           	callstack 13
  4288  000A36                     
  4289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4290  000A36  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4291  000A3A  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4292  000A3E  CFDE FFF6          	movff	postinc2,tblptrl
  4293  000A42  CFDD FFF7          	movff	postdec2,tblptrh
  4294  000A46                     	if	0	;tblptru may be non-zero
  4295  000A46                     	endif
  4296  000A46                     	if	0	;tblptru may be non-zero
  4297  000A46                     	endif
  4298  000A46  0008               	tblrd		*
  4299  000A48  50F5               	movf	tablat,w,c
  4300  000A4A  0A25               	xorlw	37
  4301  000A4C  A4D8               	btfss	status,2,c
  4302  000A4E  EF2B  F005         	goto	i2u191_41
  4303  000A52  EF2D  F005         	goto	i2u191_40
  4304  000A56                     i2u191_41:
  4305  000A56  EF05  F006         	goto	i2l2180
  4306  000A5A                     i2u191_40:
  4307  000A5A                     
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4309  000A5A  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4310  000A5E  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4311  000A62  2ADE               	incf	postinc2,f,c
  4312  000A64  0E00               	movlw	0
  4313  000A66  22DD               	addwfc	postdec2,f,c
  4314  000A68                     
  4315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4316  000A68  0E00               	movlw	0
  4317  000A6A  0100               	movlb	0	; () banked
  4318  000A6C  6FCE               	movwf	(_width+1)& (0+255),b
  4319  000A6E  0E00               	movlw	0
  4320  000A70  6FCD               	movwf	_width& (0+255),b
  4321  000A72  C0CD  F0D1         	movff	_width,_flags
  4322  000A76  C0CE  F0D2         	movff	_width+1,_flags+1
  4323  000A7A                     
  4324                           ; BSR set to: 0
  4325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4326  000A7A  69CF               	setf	_prec& (0+255),b
  4327  000A7C  69D0               	setf	(_prec+1)& (0+255),b
  4328  000A7E                     
  4329                           ; BSR set to: 0
  4330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  4331  000A7E  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4332  000A82  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4333  000A86  CFDE FFF6          	movff	postinc2,tblptrl
  4334  000A8A  CFDD FFF7          	movff	postdec2,tblptrh
  4335  000A8E                     	if	0	;tblptru may be non-zero
  4336  000A8E                     	endif
  4337  000A8E                     	if	0	;tblptru may be non-zero
  4338  000A8E                     	endif
  4339  000A8E  0008               	tblrd		*
  4340  000A90  50F5               	movf	tablat,w,c
  4341  000A92  0A73               	xorlw	115
  4342  000A94  A4D8               	btfss	status,2,c
  4343  000A96  EF4F  F005         	goto	i2u192_41
  4344  000A9A  EF51  F005         	goto	i2u192_40
  4345  000A9E                     i2u192_41:
  4346  000A9E  EF7C  F005         	goto	i2l2156
  4347  000AA2                     i2u192_40:
  4348  000AA2                     
  4349                           ; BSR set to: 0
  4350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  4351  000AA2  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4352  000AA6  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4353  000AAA  2ADE               	incf	postinc2,f,c
  4354  000AAC  0E00               	movlw	0
  4355  000AAE  22DD               	addwfc	postdec2,f,c
  4356                           
  4357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4358  000AB0  C040  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  4359  000AB4  C041  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  4360  000AB8  CFDF F042          	movff	indf2,??i2_vfpfcnvrt
  4361  000ABC  0E02               	movlw	2
  4362  000ABE  26DE               	addwf	postinc2,f,c
  4363  000AC0  CFDF F043          	movff	indf2,??i2_vfpfcnvrt+1
  4364  000AC4  0E00               	movlw	0
  4365  000AC6  22DD               	addwfc	postdec2,f,c
  4366  000AC8  C042  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  4367  000ACC  C043  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  4368  000AD0  CFDE F04E          	movff	postinc2,i2vfpfcnvrt@cp
  4369  000AD4  CFDD F04F          	movff	postdec2,i2vfpfcnvrt@cp+1
  4370  000AD8                     
  4371                           ; BSR set to: 0
  4372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  4373  000AD8  C03C  F00A         	movff	i2vfpfcnvrt@fp,i2stoa@fp
  4374  000ADC  C03D  F00B         	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
  4375  000AE0  C04E  F00C         	movff	i2vfpfcnvrt@cp,i2stoa@s
  4376  000AE4  C04F  F00D         	movff	i2vfpfcnvrt@cp+1,i2stoa@s+1
  4377  000AE8  ECF8  F008         	call	i2_stoa	;wreg free
  4378  000AEC  C00A  F03C         	movff	?i2_stoa,?i2_vfpfcnvrt
  4379  000AF0  C00B  F03D         	movff	?i2_stoa+1,?i2_vfpfcnvrt+1
  4380  000AF4  EF20  F006         	goto	i2l901
  4381  000AF8                     i2l2156:
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  4385  000AF8  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4386  000AFC  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4387  000B00  CFDE FFF6          	movff	postinc2,tblptrl
  4388  000B04  CFDD FFF7          	movff	postdec2,tblptrh
  4389  000B08                     	if	0	;tblptru may be non-zero
  4390  000B08                     	endif
  4391  000B08                     	if	0	;tblptru may be non-zero
  4392  000B08                     	endif
  4393  000B08  0008               	tblrd		*
  4394  000B0A  50F5               	movf	tablat,w,c
  4395  000B0C  0A75               	xorlw	117
  4396  000B0E  A4D8               	btfss	status,2,c
  4397  000B10  EF8C  F005         	goto	i2u193_41
  4398  000B14  EF8E  F005         	goto	i2u193_40
  4399  000B18                     i2u193_41:
  4400  000B18  EFCF  F005         	goto	i2l2164
  4401  000B1C                     i2u193_40:
  4402  000B1C                     
  4403                           ; BSR set to: 0
  4404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  4405  000B1C  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4406  000B20  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4407  000B24  2ADE               	incf	postinc2,f,c
  4408  000B26  0E00               	movlw	0
  4409  000B28  22DD               	addwfc	postdec2,f,c
  4410                           
  4411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4412  000B2A  C040  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  4413  000B2E  C041  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  4414  000B32  CFDF F042          	movff	indf2,??i2_vfpfcnvrt
  4415  000B36  0E02               	movlw	2
  4416  000B38  26DE               	addwf	postinc2,f,c
  4417  000B3A  CFDF F043          	movff	indf2,??i2_vfpfcnvrt+1
  4418  000B3E  0E00               	movlw	0
  4419  000B40  22DD               	addwfc	postdec2,f,c
  4420  000B42  C042  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  4421  000B46  C043  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  4422  000B4A  CFDE F044          	movff	postinc2,??i2_vfpfcnvrt+2
  4423  000B4E  CFDD F045          	movff	postdec2,??i2_vfpfcnvrt+3
  4424  000B52  C044  F046         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
  4425  000B56  C045  F047         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
  4426  000B5A  6A48               	clrf	(i2vfpfcnvrt@llu+2)^0,c
  4427  000B5C  6A49               	clrf	(i2vfpfcnvrt@llu+3)^0,c
  4428  000B5E  6A4A               	clrf	(i2vfpfcnvrt@llu+4)^0,c
  4429  000B60  6A4B               	clrf	(i2vfpfcnvrt@llu+5)^0,c
  4430  000B62  6A4C               	clrf	(i2vfpfcnvrt@llu+6)^0,c
  4431  000B64  6A4D               	clrf	(i2vfpfcnvrt@llu+7)^0,c
  4432  000B66                     
  4433                           ; BSR set to: 0
  4434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  4435  000B66  C03C  F01C         	movff	i2vfpfcnvrt@fp,i2utoa@fp
  4436  000B6A  C03D  F01D         	movff	i2vfpfcnvrt@fp+1,i2utoa@fp+1
  4437  000B6E  C046  F01E         	movff	i2vfpfcnvrt@llu,i2utoa@d
  4438  000B72  C047  F01F         	movff	i2vfpfcnvrt@llu+1,i2utoa@d+1
  4439  000B76  C048  F020         	movff	i2vfpfcnvrt@llu+2,i2utoa@d+2
  4440  000B7A  C049  F021         	movff	i2vfpfcnvrt@llu+3,i2utoa@d+3
  4441  000B7E  C04A  F022         	movff	i2vfpfcnvrt@llu+4,i2utoa@d+4
  4442  000B82  C04B  F023         	movff	i2vfpfcnvrt@llu+5,i2utoa@d+5
  4443  000B86  C04C  F024         	movff	i2vfpfcnvrt@llu+6,i2utoa@d+6
  4444  000B8A  C04D  F025         	movff	i2vfpfcnvrt@llu+7,i2utoa@d+7
  4445  000B8E  EC24  F007         	call	i2_utoa	;wreg free
  4446  000B92  C01C  F03C         	movff	?i2_utoa,?i2_vfpfcnvrt
  4447  000B96  C01D  F03D         	movff	?i2_utoa+1,?i2_vfpfcnvrt+1
  4448  000B9A  EF20  F006         	goto	i2l901
  4449  000B9E                     i2l2164:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4453  000B9E  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4454  000BA2  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4455  000BA6  CFDE FFF6          	movff	postinc2,tblptrl
  4456  000BAA  CFDD FFF7          	movff	postdec2,tblptrh
  4457  000BAE                     	if	0	;tblptru may be non-zero
  4458  000BAE                     	endif
  4459  000BAE                     	if	0	;tblptru may be non-zero
  4460  000BAE                     	endif
  4461  000BAE  0008               	tblrd		*
  4462  000BB0  50F5               	movf	tablat,w,c
  4463  000BB2  0A25               	xorlw	37
  4464  000BB4  A4D8               	btfss	status,2,c
  4465  000BB6  EFDF  F005         	goto	i2u194_41
  4466  000BBA  EFE1  F005         	goto	i2u194_40
  4467  000BBE                     i2u194_41:
  4468  000BBE  EFF8  F005         	goto	i2l2174
  4469  000BC2                     i2u194_40:
  4470  000BC2                     
  4471                           ; BSR set to: 0
  4472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4473  000BC2  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4474  000BC6  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4475  000BCA  2ADE               	incf	postinc2,f,c
  4476  000BCC  0E00               	movlw	0
  4477  000BCE  22DD               	addwfc	postdec2,f,c
  4478  000BD0                     
  4479                           ; BSR set to: 0
  4480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4481  000BD0  0E00               	movlw	0
  4482  000BD2  6E02               	movwf	(i2fputc@c+1)^0,c
  4483  000BD4  0E25               	movlw	37
  4484  000BD6  6E01               	movwf	i2fputc@c^0,c
  4485  000BD8  C03C  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4486  000BDC  C03D  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4487  000BE0  ECC9  F00C         	call	i2_fputc	;wreg free
  4488  000BE4                     i2l2170:
  4489                           
  4490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4491  000BE4  0E00               	movlw	0
  4492  000BE6  6E3D               	movwf	(?i2_vfpfcnvrt+1)^0,c
  4493  000BE8  0E01               	movlw	1
  4494  000BEA  6E3C               	movwf	?i2_vfpfcnvrt^0,c
  4495  000BEC  EF20  F006         	goto	i2l901
  4496  000BF0                     i2l2174:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4500  000BF0  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4501  000BF4  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4502  000BF8  2ADE               	incf	postinc2,f,c
  4503  000BFA  0E00               	movlw	0
  4504  000BFC  22DD               	addwfc	postdec2,f,c
  4505  000BFE                     
  4506                           ; BSR set to: 0
  4507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4508  000BFE  0E00               	movlw	0
  4509  000C00  6E3D               	movwf	(?i2_vfpfcnvrt+1)^0,c
  4510  000C02  0E00               	movlw	0
  4511  000C04  6E3C               	movwf	?i2_vfpfcnvrt^0,c
  4512  000C06  EF20  F006         	goto	i2l901
  4513  000C0A                     i2l2180:
  4514                           
  4515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4516  000C0A  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4517  000C0E  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4518  000C12  CFDE FFF6          	movff	postinc2,tblptrl
  4519  000C16  CFDD FFF7          	movff	postdec2,tblptrh
  4520  000C1A                     	if	0	;tblptru may be non-zero
  4521  000C1A                     	endif
  4522  000C1A                     	if	0	;tblptru may be non-zero
  4523  000C1A                     	endif
  4524  000C1A  0008               	tblrd		*
  4525  000C1C  50F5               	movf	tablat,w,c
  4526  000C1E  6E01               	movwf	i2fputc@c^0,c
  4527  000C20  6A02               	clrf	(i2fputc@c+1)^0,c
  4528  000C22  C03C  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4529  000C26  C03D  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4530  000C2A  ECC9  F00C         	call	i2_fputc	;wreg free
  4531  000C2E                     
  4532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4533  000C2E  C03E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4534  000C32  C03F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4535  000C36  2ADE               	incf	postinc2,f,c
  4536  000C38  0E00               	movlw	0
  4537  000C3A  22DD               	addwfc	postdec2,f,c
  4538  000C3C  EFF2  F005         	goto	i2l2170
  4539  000C40                     i2l901:
  4540  000C40  0012               	return		;funcret
  4541  000C42                     __end_ofi2_vfpfcnvrt:
  4542                           	callstack 0
  4543                           
  4544 ;; *************** function i2_utoa *****************
  4545 ;; Defined at:
  4546 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4549 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  4550 ;;  d               8   29[COMRAM] unsigned long long 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  n               8   49[COMRAM] unsigned long long 
  4553 ;;  i               2   57[COMRAM] int 
  4554 ;;  w               2   47[COMRAM] int 
  4555 ;;  p               2   45[COMRAM] int 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2   27[COMRAM] int 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4565 ;;      Params:        10       0       0       0       0       0       0       0       0
  4566 ;;      Locals:        14       0       0       0       0       0       0       0       0
  4567 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4568 ;;      Totals:        32       0       0       0       0       0       0       0       0
  4569 ;;Total ram usage:       32 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; Hardware stack levels required when called: 4
  4572 ;; This function calls:
  4573 ;;		i2___lodiv
  4574 ;;		i2___lomod
  4575 ;;		i2_pad
  4576 ;; This function is called by:
  4577 ;;		i2_vfpfcnvrt
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text28
  4582  000E48                     __ptext28:
  4583                           	callstack 0
  4584  000E48                     i2_utoa:
  4585                           	callstack 13
  4586  000E48                     
  4587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  4588  000E48  0100               	movlb	0	; () banked
  4589  000E4A  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  4590  000E4C  EF2A  F007         	goto	i2u179_41
  4591  000E50  EF2C  F007         	goto	i2u179_40
  4592  000E54                     i2u179_41:
  4593  000E54  EF2D  F007         	goto	i2l2054
  4594  000E58                     i2u179_40:
  4595  000E58                     
  4596                           ; BSR set to: 0
  4597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  4598  000E58  93D1               	bcf	_flags& (0+255),1,b
  4599  000E5A                     i2l2054:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  4603  000E5A  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  4604  000E5C  EF3A  F007         	goto	i2u180_40
  4605  000E60  51D0               	movf	(_prec+1)& (0+255),w,b
  4606  000E62  E106               	bnz	i2u180_41
  4607  000E64  05CF               	decf	_prec& (0+255),w,b
  4608  000E66  B0D8               	btfsc	status,0,c
  4609  000E68  EF38  F007         	goto	i2u180_41
  4610  000E6C  EF3A  F007         	goto	i2u180_40
  4611  000E70                     i2u180_41:
  4612  000E70  EF40  F007         	goto	i2l886
  4613  000E74                     i2u180_40:
  4614  000E74                     
  4615                           ; BSR set to: 0
  4616  000E74  0E00               	movlw	0
  4617  000E76  6E2F               	movwf	(i2utoa@p+1)^0,c
  4618  000E78  0E01               	movlw	1
  4619  000E7A  6E2E               	movwf	i2utoa@p^0,c
  4620  000E7C  EF44  F007         	goto	i2l888
  4621  000E80                     i2l886:
  4622                           
  4623                           ; BSR set to: 0
  4624  000E80  C0CF  F02E         	movff	_prec,i2utoa@p
  4625  000E84  C0D0  F02F         	movff	_prec+1,i2utoa@p+1
  4626  000E88                     i2l888:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  4630  000E88  C0CD  F030         	movff	_width,i2utoa@w
  4631  000E8C  C0CE  F031         	movff	_width+1,i2utoa@w+1
  4632                           
  4633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  4634  000E90  C01E  F032         	movff	i2utoa@d,i2utoa@n
  4635  000E94  C01F  F033         	movff	i2utoa@d+1,i2utoa@n+1
  4636  000E98  C020  F034         	movff	i2utoa@d+2,i2utoa@n+2
  4637  000E9C  C021  F035         	movff	i2utoa@d+3,i2utoa@n+3
  4638  000EA0  C022  F036         	movff	i2utoa@d+4,i2utoa@n+4
  4639  000EA4  C023  F037         	movff	i2utoa@d+5,i2utoa@n+5
  4640  000EA8  C024  F038         	movff	i2utoa@d+6,i2utoa@n+6
  4641  000EAC  C025  F039         	movff	i2utoa@d+7,i2utoa@n+7
  4642  000EB0                     
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  4645  000EB0  0E00               	movlw	0
  4646  000EB2  6E3B               	movwf	(i2utoa@i+1)^0,c
  4647  000EB4  0E1F               	movlw	31
  4648  000EB6  6E3A               	movwf	i2utoa@i^0,c
  4649  000EB8                     
  4650                           ; BSR set to: 0
  4651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  4652  000EB8  0E00               	movlw	0
  4653  000EBA  0101               	movlb	1	; () banked
  4654  000EBC  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4655                           
  4656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4657  000EBE  EFD7  F007         	goto	i2l2072
  4658  000EC2                     i2l2062:
  4659                           
  4660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  4661  000EC2  063A               	decf	i2utoa@i^0,f,c
  4662  000EC4  A0D8               	btfss	status,0,c
  4663  000EC6  063B               	decf	(i2utoa@i+1)^0,f,c
  4664  000EC8                     
  4665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  4666  000EC8  0E00               	movlw	low _dbuf
  4667  000ECA  243A               	addwf	i2utoa@i^0,w,c
  4668  000ECC  6ED9               	movwf	fsr2l,c
  4669  000ECE  0E01               	movlw	high _dbuf
  4670  000ED0  203B               	addwfc	(i2utoa@i+1)^0,w,c
  4671  000ED2  6EDA               	movwf	fsr2h,c
  4672  000ED4  C032  F001         	movff	i2utoa@n,i2___lomod@dividend
  4673  000ED8  C033  F002         	movff	i2utoa@n+1,i2___lomod@dividend+1
  4674  000EDC  C034  F003         	movff	i2utoa@n+2,i2___lomod@dividend+2
  4675  000EE0  C035  F004         	movff	i2utoa@n+3,i2___lomod@dividend+3
  4676  000EE4  C036  F005         	movff	i2utoa@n+4,i2___lomod@dividend+4
  4677  000EE8  C037  F006         	movff	i2utoa@n+5,i2___lomod@dividend+5
  4678  000EEC  C038  F007         	movff	i2utoa@n+6,i2___lomod@dividend+6
  4679  000EF0  C039  F008         	movff	i2utoa@n+7,i2___lomod@dividend+7
  4680  000EF4  0E0A               	movlw	10
  4681  000EF6  6E09               	movwf	i2___lomod@divisor^0,c
  4682  000EF8  0E00               	movlw	0
  4683  000EFA  6E0A               	movwf	(i2___lomod@divisor+1)^0,c
  4684  000EFC  0E00               	movlw	0
  4685  000EFE  6E0B               	movwf	(i2___lomod@divisor+2)^0,c
  4686  000F00  0E00               	movlw	0
  4687  000F02  6E0C               	movwf	(i2___lomod@divisor+3)^0,c
  4688  000F04  0E00               	movlw	0
  4689  000F06  6E0D               	movwf	(i2___lomod@divisor+4)^0,c
  4690  000F08  0E00               	movlw	0
  4691  000F0A  6E0E               	movwf	(i2___lomod@divisor+5)^0,c
  4692  000F0C  0E00               	movlw	0
  4693  000F0E  6E0F               	movwf	(i2___lomod@divisor+6)^0,c
  4694  000F10  0E00               	movlw	0
  4695  000F12  6E10               	movwf	(i2___lomod@divisor+7)^0,c
  4696  000F14  EC96  F00B         	call	i2___lomod	;wreg free
  4697  000F18  C001  F026         	movff	?i2___lomod,??i2_utoa
  4698  000F1C  C002  F027         	movff	?i2___lomod+1,??i2_utoa+1
  4699  000F20  C003  F028         	movff	?i2___lomod+2,??i2_utoa+2
  4700  000F24  C004  F029         	movff	?i2___lomod+3,??i2_utoa+3
  4701  000F28  C005  F02A         	movff	?i2___lomod+4,??i2_utoa+4
  4702  000F2C  C006  F02B         	movff	?i2___lomod+5,??i2_utoa+5
  4703  000F30  C007  F02C         	movff	?i2___lomod+6,??i2_utoa+6
  4704  000F34  C008  F02D         	movff	?i2___lomod+7,??i2_utoa+7
  4705  000F38  5026               	movf	??i2_utoa^0,w,c
  4706  000F3A  0F30               	addlw	48
  4707  000F3C  6EDF               	movwf	indf2,c
  4708  000F3E                     
  4709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  4710  000F3E  062E               	decf	i2utoa@p^0,f,c
  4711  000F40  A0D8               	btfss	status,0,c
  4712  000F42  062F               	decf	(i2utoa@p+1)^0,f,c
  4713  000F44                     
  4714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  4715  000F44  0630               	decf	i2utoa@w^0,f,c
  4716  000F46  A0D8               	btfss	status,0,c
  4717  000F48  0631               	decf	(i2utoa@w+1)^0,f,c
  4718  000F4A                     
  4719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4720  000F4A  C032  F001         	movff	i2utoa@n,i2___lodiv@dividend
  4721  000F4E  C033  F002         	movff	i2utoa@n+1,i2___lodiv@dividend+1
  4722  000F52  C034  F003         	movff	i2utoa@n+2,i2___lodiv@dividend+2
  4723  000F56  C035  F004         	movff	i2utoa@n+3,i2___lodiv@dividend+3
  4724  000F5A  C036  F005         	movff	i2utoa@n+4,i2___lodiv@dividend+4
  4725  000F5E  C037  F006         	movff	i2utoa@n+5,i2___lodiv@dividend+5
  4726  000F62  C038  F007         	movff	i2utoa@n+6,i2___lodiv@dividend+6
  4727  000F66  C039  F008         	movff	i2utoa@n+7,i2___lodiv@dividend+7
  4728  000F6A  0E0A               	movlw	10
  4729  000F6C  6E09               	movwf	i2___lodiv@divisor^0,c
  4730  000F6E  0E00               	movlw	0
  4731  000F70  6E0A               	movwf	(i2___lodiv@divisor+1)^0,c
  4732  000F72  0E00               	movlw	0
  4733  000F74  6E0B               	movwf	(i2___lodiv@divisor+2)^0,c
  4734  000F76  0E00               	movlw	0
  4735  000F78  6E0C               	movwf	(i2___lodiv@divisor+3)^0,c
  4736  000F7A  0E00               	movlw	0
  4737  000F7C  6E0D               	movwf	(i2___lodiv@divisor+4)^0,c
  4738  000F7E  0E00               	movlw	0
  4739  000F80  6E0E               	movwf	(i2___lodiv@divisor+5)^0,c
  4740  000F82  0E00               	movlw	0
  4741  000F84  6E0F               	movwf	(i2___lodiv@divisor+6)^0,c
  4742  000F86  0E00               	movlw	0
  4743  000F88  6E10               	movwf	(i2___lodiv@divisor+7)^0,c
  4744  000F8A  EC3F  F00A         	call	i2___lodiv	;wreg free
  4745  000F8E  C001  F032         	movff	?i2___lodiv,i2utoa@n
  4746  000F92  C002  F033         	movff	?i2___lodiv+1,i2utoa@n+1
  4747  000F96  C003  F034         	movff	?i2___lodiv+2,i2utoa@n+2
  4748  000F9A  C004  F035         	movff	?i2___lodiv+3,i2utoa@n+3
  4749  000F9E  C005  F036         	movff	?i2___lodiv+4,i2utoa@n+4
  4750  000FA2  C006  F037         	movff	?i2___lodiv+5,i2utoa@n+5
  4751  000FA6  C007  F038         	movff	?i2___lodiv+6,i2utoa@n+6
  4752  000FAA  C008  F039         	movff	?i2___lodiv+7,i2utoa@n+7
  4753  000FAE                     i2l2072:
  4754                           
  4755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4756  000FAE  503A               	movf	i2utoa@i^0,w,c
  4757  000FB0  103B               	iorwf	(i2utoa@i+1)^0,w,c
  4758  000FB2  B4D8               	btfsc	status,2,c
  4759  000FB4  EFDE  F007         	goto	i2u181_41
  4760  000FB8  EFE0  F007         	goto	i2u181_40
  4761  000FBC                     i2u181_41:
  4762  000FBC  EF11  F008         	goto	i2l2082
  4763  000FC0                     i2u181_40:
  4764  000FC0  5032               	movf	i2utoa@n^0,w,c
  4765  000FC2  1033               	iorwf	(i2utoa@n+1)^0,w,c
  4766  000FC4  1034               	iorwf	(i2utoa@n+2)^0,w,c
  4767  000FC6  1035               	iorwf	(i2utoa@n+3)^0,w,c
  4768  000FC8  1036               	iorwf	(i2utoa@n+4)^0,w,c
  4769  000FCA  1037               	iorwf	(i2utoa@n+5)^0,w,c
  4770  000FCC  1038               	iorwf	(i2utoa@n+6)^0,w,c
  4771  000FCE  1039               	iorwf	(i2utoa@n+7)^0,w,c
  4772  000FD0  A4D8               	btfss	status,2,c
  4773  000FD2  EFED  F007         	goto	i2u182_41
  4774  000FD6  EFEF  F007         	goto	i2u182_40
  4775  000FDA                     i2u182_41:
  4776  000FDA  EF61  F007         	goto	i2l2062
  4777  000FDE                     i2u182_40:
  4778  000FDE  BE2F               	btfsc	(i2utoa@p+1)^0,7,c
  4779  000FE0  EFFC  F007         	goto	i2u183_40
  4780  000FE4  502F               	movf	(i2utoa@p+1)^0,w,c
  4781  000FE6  E106               	bnz	i2u183_41
  4782  000FE8  042E               	decf	i2utoa@p^0,w,c
  4783  000FEA  B0D8               	btfsc	status,0,c
  4784  000FEC  EFFA  F007         	goto	i2u183_41
  4785  000FF0  EFFC  F007         	goto	i2u183_40
  4786  000FF4                     i2u183_41:
  4787  000FF4  EF61  F007         	goto	i2l2062
  4788  000FF8                     i2u183_40:
  4789  000FF8  BE31               	btfsc	(i2utoa@w+1)^0,7,c
  4790  000FFA  EF07  F008         	goto	i2u184_41
  4791  000FFE  5031               	movf	(i2utoa@w+1)^0,w,c
  4792  001000  E108               	bnz	i2u184_40
  4793  001002  0430               	decf	i2utoa@w^0,w,c
  4794  001004  A0D8               	btfss	status,0,c
  4795  001006  EF07  F008         	goto	i2u184_41
  4796  00100A  EF09  F008         	goto	i2u184_40
  4797  00100E                     i2u184_41:
  4798  00100E  EF11  F008         	goto	i2l2082
  4799  001012                     i2u184_40:
  4800  001012  0100               	movlb	0	; () banked
  4801  001014  B3D1               	btfsc	_flags& (0+255),1,b
  4802  001016  EF0F  F008         	goto	i2u185_41
  4803  00101A  EF11  F008         	goto	i2u185_40
  4804  00101E                     i2u185_41:
  4805  00101E  EF61  F007         	goto	i2l2062
  4806  001022                     i2u185_40:
  4807  001022                     i2l2082:
  4808                           
  4809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4810  001022  C01C  F011         	movff	i2utoa@fp,i2pad@fp
  4811  001026  C01D  F012         	movff	i2utoa@fp+1,i2pad@fp+1
  4812  00102A  0E00               	movlw	low _dbuf
  4813  00102C  243A               	addwf	i2utoa@i^0,w,c
  4814  00102E  6E13               	movwf	i2pad@buf^0,c
  4815  001030  0E01               	movlw	high _dbuf
  4816  001032  203B               	addwfc	(i2utoa@i+1)^0,w,c
  4817  001034  6E14               	movwf	(i2pad@buf+1)^0,c
  4818  001036  C030  F015         	movff	i2utoa@w,i2pad@p
  4819  00103A  C031  F016         	movff	i2utoa@w+1,i2pad@p+1
  4820  00103E  EC2E  F00D         	call	i2_pad	;wreg free
  4821  001042  C011  F01C         	movff	?i2_pad,?i2_utoa
  4822  001046  C012  F01D         	movff	?i2_pad+1,?i2_utoa+1
  4823  00104A  0012               	return		;funcret
  4824  00104C                     __end_ofi2_utoa:
  4825                           	callstack 0
  4826                           
  4827 ;; *************** function i2_pad *****************
  4828 ;; Defined at:
  4829 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4832 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  4833 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4834 ;;		 -> dbuf(32), 
  4835 ;;  p               2   20[COMRAM] int 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;  w               2   25[COMRAM] int 
  4838 ;;  i               2   23[COMRAM] int 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  2   16[COMRAM] int 
  4841 ;; Registers used:
  4842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4848 ;;      Params:         6       0       0       0       0       0       0       0       0
  4849 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4850 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4851 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4852 ;;Total ram usage:       11 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; Hardware stack levels required when called: 3
  4855 ;; This function calls:
  4856 ;;		i2_fputc
  4857 ;;		i2_fputs
  4858 ;;		i2_strlen
  4859 ;; This function is called by:
  4860 ;;		i2_utoa
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text29
  4865  001A5C                     __ptext29:
  4866                           	callstack 0
  4867  001A5C                     i2_pad:
  4868                           	callstack 13
  4869  001A5C                     
  4870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4871  001A5C  0100               	movlb	0	; () banked
  4872  001A5E  A1D1               	btfss	_flags& (0+255),0,b
  4873  001A60  EF34  F00D         	goto	i2u157_41
  4874  001A64  EF36  F00D         	goto	i2u157_40
  4875  001A68                     i2u157_41:
  4876  001A68  EF40  F00D         	goto	i2l1926
  4877  001A6C                     i2u157_40:
  4878  001A6C                     
  4879                           ; BSR set to: 0
  4880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4881  001A6C  C013  F00A         	movff	i2pad@buf,i2fputs@s
  4882  001A70  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  4883  001A74  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  4884  001A78  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  4885  001A7C  EC2D  F011         	call	i2_fputs	;wreg free
  4886  001A80                     i2l1926:
  4887                           
  4888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4889  001A80  BE16               	btfsc	(i2pad@p+1)^0,7,c
  4890  001A82  EF45  F00D         	goto	i2u158_41
  4891  001A86  EF47  F00D         	goto	i2u158_40
  4892  001A8A                     i2u158_41:
  4893  001A8A  EF4D  F00D         	goto	i2l1930
  4894  001A8E                     i2u158_40:
  4895  001A8E  C015  F01A         	movff	i2pad@p,i2pad@w
  4896  001A92  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  4897  001A96  EF51  F00D         	goto	i2l853
  4898  001A9A                     i2l1930:
  4899  001A9A  0E00               	movlw	0
  4900  001A9C  6E1B               	movwf	(i2pad@w+1)^0,c
  4901  001A9E  0E00               	movlw	0
  4902  001AA0  6E1A               	movwf	i2pad@w^0,c
  4903  001AA2                     i2l853:
  4904                           
  4905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4906  001AA2  0E00               	movlw	0
  4907  001AA4  6E19               	movwf	(i2pad@i+1)^0,c
  4908  001AA6  0E00               	movlw	0
  4909  001AA8  6E18               	movwf	i2pad@i^0,c
  4910                           
  4911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4912  001AAA  EF63  F00D         	goto	i2l1936
  4913  001AAE                     i2l1932:
  4914                           
  4915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4916  001AAE  0E00               	movlw	0
  4917  001AB0  6E02               	movwf	(i2fputc@c+1)^0,c
  4918  001AB2  0E20               	movlw	32
  4919  001AB4  6E01               	movwf	i2fputc@c^0,c
  4920  001AB6  C011  F003         	movff	i2pad@fp,i2fputc@fp
  4921  001ABA  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  4922  001ABE  ECC9  F00C         	call	i2_fputc	;wreg free
  4923  001AC2                     
  4924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4925  001AC2  4A18               	infsnz	i2pad@i^0,f,c
  4926  001AC4  2A19               	incf	(i2pad@i+1)^0,f,c
  4927  001AC6                     i2l1936:
  4928                           
  4929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4930  001AC6  501A               	movf	i2pad@w^0,w,c
  4931  001AC8  5C18               	subwf	i2pad@i^0,w,c
  4932  001ACA  5019               	movf	(i2pad@i+1)^0,w,c
  4933  001ACC  0A80               	xorlw	128
  4934  001ACE  6E17               	movwf	??i2_pad^0,c
  4935  001AD0  501B               	movf	(i2pad@w+1)^0,w,c
  4936  001AD2  0A80               	xorlw	128
  4937  001AD4  5817               	subwfb	??i2_pad^0,w,c
  4938  001AD6  A0D8               	btfss	status,0,c
  4939  001AD8  EF70  F00D         	goto	i2u159_41
  4940  001ADC  EF72  F00D         	goto	i2u159_40
  4941  001AE0                     i2u159_41:
  4942  001AE0  EF57  F00D         	goto	i2l1932
  4943  001AE4                     i2u159_40:
  4944  001AE4                     
  4945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4946  001AE4  0100               	movlb	0	; () banked
  4947  001AE6  B1D1               	btfsc	_flags& (0+255),0,b
  4948  001AE8  EF78  F00D         	goto	i2u160_41
  4949  001AEC  EF7A  F00D         	goto	i2u160_40
  4950  001AF0                     i2u160_41:
  4951  001AF0  EF84  F00D         	goto	i2l1940
  4952  001AF4                     i2u160_40:
  4953  001AF4                     
  4954                           ; BSR set to: 0
  4955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4956  001AF4  C013  F00A         	movff	i2pad@buf,i2fputs@s
  4957  001AF8  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  4958  001AFC  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  4959  001B00  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  4960  001B04  EC2D  F011         	call	i2_fputs	;wreg free
  4961  001B08                     i2l1940:
  4962                           
  4963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4964  001B08  C013  F001         	movff	i2pad@buf,i2strlen@s
  4965  001B0C  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
  4966  001B10  ECBF  F010         	call	i2_strlen	;wreg free
  4967  001B14  501A               	movf	i2pad@w^0,w,c
  4968  001B16  2401               	addwf	?i2_strlen^0,w,c
  4969  001B18  6E11               	movwf	?i2_pad^0,c
  4970  001B1A  501B               	movf	(i2pad@w+1)^0,w,c
  4971  001B1C  2002               	addwfc	(?i2_strlen+1)^0,w,c
  4972  001B1E  6E12               	movwf	(?i2_pad+1)^0,c
  4973  001B20  0012               	return		;funcret
  4974  001B22                     __end_ofi2_pad:
  4975                           	callstack 0
  4976                           
  4977 ;; *************** function i2_fputs *****************
  4978 ;; Defined at:
  4979 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4982 ;;		 -> dbuf(32), 
  4983 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4984 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  i               2   14[COMRAM] int 
  4987 ;;  c               1   13[COMRAM] unsigned char 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  2    9[COMRAM] int 
  4990 ;; Registers used:
  4991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4997 ;;      Params:         4       0       0       0       0       0       0       0       0
  4998 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5000 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5001 ;;Total ram usage:        7 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; Hardware stack levels required when called: 2
  5004 ;; This function calls:
  5005 ;;		i2_fputc
  5006 ;; This function is called by:
  5007 ;;		i2_pad
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text30
  5012  00225A                     __ptext30:
  5013                           	callstack 0
  5014  00225A                     i2_fputs:
  5015                           	callstack 13
  5016  00225A  0E00               	movlw	0
  5017  00225C  6E10               	movwf	(i2fputs@i+1)^0,c
  5018  00225E  0E00               	movlw	0
  5019  002260  6E0F               	movwf	i2fputs@i^0,c
  5020  002262  EF3E  F011         	goto	i2l1794
  5021  002266                     i2l1790:
  5022  002266  C00E  F001         	movff	i2fputs@c,i2fputc@c
  5023  00226A  6A02               	clrf	(i2fputc@c+1)^0,c
  5024  00226C  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  5025  002270  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  5026  002274  ECC9  F00C         	call	i2_fputc	;wreg free
  5027  002278  4A0F               	infsnz	i2fputs@i^0,f,c
  5028  00227A  2A10               	incf	(i2fputs@i+1)^0,f,c
  5029  00227C                     i2l1794:
  5030  00227C  500F               	movf	i2fputs@i^0,w,c
  5031  00227E  240A               	addwf	i2fputs@s^0,w,c
  5032  002280  6ED9               	movwf	fsr2l,c
  5033  002282  5010               	movf	(i2fputs@i+1)^0,w,c
  5034  002284  200B               	addwfc	(i2fputs@s+1)^0,w,c
  5035  002286  6EDA               	movwf	fsr2h,c
  5036  002288  50DF               	movf	indf2,w,c
  5037  00228A  6E0E               	movwf	i2fputs@c^0,c
  5038  00228C  500E               	movf	i2fputs@c^0,w,c
  5039  00228E  A4D8               	btfss	status,2,c
  5040  002290  EF4C  F011         	goto	i2u130_41
  5041  002294  EF4E  F011         	goto	i2u130_40
  5042  002298                     i2u130_41:
  5043  002298  EF33  F011         	goto	i2l1790
  5044  00229C                     i2u130_40:
  5045  00229C  0012               	return		;funcret
  5046  00229E                     __end_ofi2_fputs:
  5047                           	callstack 0
  5048                           
  5049 ;; *************** function i2___lomod *****************
  5050 ;; Defined at:
  5051 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  dividend        8    0[COMRAM] unsigned long long 
  5054 ;;  divisor         8    8[COMRAM] unsigned long long 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  counter         1   16[COMRAM] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  8    0[COMRAM] unsigned long long 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5066 ;;      Params:        16       0       0       0       0       0       0       0       0
  5067 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5069 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5070 ;;Total ram usage:       17 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		i2_utoa
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text31
  5080  00172C                     __ptext31:
  5081                           	callstack 0
  5082  00172C                     i2___lomod:
  5083                           	callstack 16
  5084  00172C  5009               	movf	i2___lomod@divisor^0,w,c
  5085  00172E  100A               	iorwf	(i2___lomod@divisor+1)^0,w,c
  5086  001730  100B               	iorwf	(i2___lomod@divisor+2)^0,w,c
  5087  001732  100C               	iorwf	(i2___lomod@divisor+3)^0,w,c
  5088  001734  100D               	iorwf	(i2___lomod@divisor+4)^0,w,c
  5089  001736  100E               	iorwf	(i2___lomod@divisor+5)^0,w,c
  5090  001738  100F               	iorwf	(i2___lomod@divisor+6)^0,w,c
  5091  00173A  1010               	iorwf	(i2___lomod@divisor+7)^0,w,c
  5092  00173C  B4D8               	btfsc	status,2,c
  5093  00173E  EFA3  F00B         	goto	i2u154_41
  5094  001742  EFA5  F00B         	goto	i2u154_40
  5095  001746                     i2u154_41:
  5096  001746  EFED  F00B         	goto	i2l598
  5097  00174A                     i2u154_40:
  5098  00174A  0E01               	movlw	1
  5099  00174C  6E11               	movwf	i2___lomod@counter^0,c
  5100  00174E  EFB3  F00B         	goto	i2l1912
  5101  001752                     i2l1910:
  5102  001752  90D8               	bcf	status,0,c
  5103  001754  3609               	rlcf	i2___lomod@divisor^0,f,c
  5104  001756  360A               	rlcf	(i2___lomod@divisor+1)^0,f,c
  5105  001758  360B               	rlcf	(i2___lomod@divisor+2)^0,f,c
  5106  00175A  360C               	rlcf	(i2___lomod@divisor+3)^0,f,c
  5107  00175C  360D               	rlcf	(i2___lomod@divisor+4)^0,f,c
  5108  00175E  360E               	rlcf	(i2___lomod@divisor+5)^0,f,c
  5109  001760  360F               	rlcf	(i2___lomod@divisor+6)^0,f,c
  5110  001762  3610               	rlcf	(i2___lomod@divisor+7)^0,f,c
  5111  001764  2A11               	incf	i2___lomod@counter^0,f,c
  5112  001766                     i2l1912:
  5113  001766  AE10               	btfss	(i2___lomod@divisor+7)^0,7,c
  5114  001768  EFB8  F00B         	goto	i2u155_41
  5115  00176C  EFBA  F00B         	goto	i2u155_40
  5116  001770                     i2u155_41:
  5117  001770  EFA9  F00B         	goto	i2l1910
  5118  001774                     i2u155_40:
  5119  001774                     i2l1914:
  5120  001774  5009               	movf	i2___lomod@divisor^0,w,c
  5121  001776  5C01               	subwf	i2___lomod@dividend^0,w,c
  5122  001778  500A               	movf	(i2___lomod@divisor+1)^0,w,c
  5123  00177A  5802               	subwfb	(i2___lomod@dividend+1)^0,w,c
  5124  00177C  500B               	movf	(i2___lomod@divisor+2)^0,w,c
  5125  00177E  5803               	subwfb	(i2___lomod@dividend+2)^0,w,c
  5126  001780  500C               	movf	(i2___lomod@divisor+3)^0,w,c
  5127  001782  5804               	subwfb	(i2___lomod@dividend+3)^0,w,c
  5128  001784  500D               	movf	(i2___lomod@divisor+4)^0,w,c
  5129  001786  5805               	subwfb	(i2___lomod@dividend+4)^0,w,c
  5130  001788  500E               	movf	(i2___lomod@divisor+5)^0,w,c
  5131  00178A  5806               	subwfb	(i2___lomod@dividend+5)^0,w,c
  5132  00178C  500F               	movf	(i2___lomod@divisor+6)^0,w,c
  5133  00178E  5807               	subwfb	(i2___lomod@dividend+6)^0,w,c
  5134  001790  5010               	movf	(i2___lomod@divisor+7)^0,w,c
  5135  001792  5808               	subwfb	(i2___lomod@dividend+7)^0,w,c
  5136  001794  A0D8               	btfss	status,0,c
  5137  001796  EFCF  F00B         	goto	i2u156_41
  5138  00179A  EFD1  F00B         	goto	i2u156_40
  5139  00179E                     i2u156_41:
  5140  00179E  EFE1  F00B         	goto	i2l1918
  5141  0017A2                     i2u156_40:
  5142  0017A2  5009               	movf	i2___lomod@divisor^0,w,c
  5143  0017A4  5E01               	subwf	i2___lomod@dividend^0,f,c
  5144  0017A6  500A               	movf	(i2___lomod@divisor+1)^0,w,c
  5145  0017A8  5A02               	subwfb	(i2___lomod@dividend+1)^0,f,c
  5146  0017AA  500B               	movf	(i2___lomod@divisor+2)^0,w,c
  5147  0017AC  5A03               	subwfb	(i2___lomod@dividend+2)^0,f,c
  5148  0017AE  500C               	movf	(i2___lomod@divisor+3)^0,w,c
  5149  0017B0  5A04               	subwfb	(i2___lomod@dividend+3)^0,f,c
  5150  0017B2  500D               	movf	(i2___lomod@divisor+4)^0,w,c
  5151  0017B4  5A05               	subwfb	(i2___lomod@dividend+4)^0,f,c
  5152  0017B6  500E               	movf	(i2___lomod@divisor+5)^0,w,c
  5153  0017B8  5A06               	subwfb	(i2___lomod@dividend+5)^0,f,c
  5154  0017BA  500F               	movf	(i2___lomod@divisor+6)^0,w,c
  5155  0017BC  5A07               	subwfb	(i2___lomod@dividend+6)^0,f,c
  5156  0017BE  5010               	movf	(i2___lomod@divisor+7)^0,w,c
  5157  0017C0  5A08               	subwfb	(i2___lomod@dividend+7)^0,f,c
  5158  0017C2                     i2l1918:
  5159  0017C2  90D8               	bcf	status,0,c
  5160  0017C4  3210               	rrcf	(i2___lomod@divisor+7)^0,f,c
  5161  0017C6  320F               	rrcf	(i2___lomod@divisor+6)^0,f,c
  5162  0017C8  320E               	rrcf	(i2___lomod@divisor+5)^0,f,c
  5163  0017CA  320D               	rrcf	(i2___lomod@divisor+4)^0,f,c
  5164  0017CC  320C               	rrcf	(i2___lomod@divisor+3)^0,f,c
  5165  0017CE  320B               	rrcf	(i2___lomod@divisor+2)^0,f,c
  5166  0017D0  320A               	rrcf	(i2___lomod@divisor+1)^0,f,c
  5167  0017D2  3209               	rrcf	i2___lomod@divisor^0,f,c
  5168  0017D4  2E11               	decfsz	i2___lomod@counter^0,f,c
  5169  0017D6  EFBA  F00B         	goto	i2l1914
  5170  0017DA                     i2l598:
  5171  0017DA  C001  F001         	movff	i2___lomod@dividend,?i2___lomod
  5172  0017DE  C002  F002         	movff	i2___lomod@dividend+1,?i2___lomod+1
  5173  0017E2  C003  F003         	movff	i2___lomod@dividend+2,?i2___lomod+2
  5174  0017E6  C004  F004         	movff	i2___lomod@dividend+3,?i2___lomod+3
  5175  0017EA  C005  F005         	movff	i2___lomod@dividend+4,?i2___lomod+4
  5176  0017EE  C006  F006         	movff	i2___lomod@dividend+5,?i2___lomod+5
  5177  0017F2  C007  F007         	movff	i2___lomod@dividend+6,?i2___lomod+6
  5178  0017F6  C008  F008         	movff	i2___lomod@dividend+7,?i2___lomod+7
  5179  0017FA  0012               	return		;funcret
  5180  0017FC                     __end_ofi2___lomod:
  5181                           	callstack 0
  5182                           
  5183 ;; *************** function i2___lodiv *****************
  5184 ;; Defined at:
  5185 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  dividend        8    0[COMRAM] unsigned long long 
  5188 ;;  divisor         8    8[COMRAM] unsigned long long 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  quotient        8   16[COMRAM] unsigned long long 
  5191 ;;  counter         1   24[COMRAM] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  8    0[COMRAM] unsigned long long 
  5194 ;; Registers used:
  5195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5201 ;;      Params:        16       0       0       0       0       0       0       0       0
  5202 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5204 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5205 ;;Total ram usage:       25 bytes
  5206 ;; Hardware stack levels used: 1
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		i2_utoa
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text32
  5215  00147E                     __ptext32:
  5216                           	callstack 0
  5217  00147E                     i2___lodiv:
  5218                           	callstack 16
  5219  00147E  EE20  F011         	lfsr	2,i2___lodiv@quotient
  5220  001482  0E07               	movlw	7
  5221  001484                     i2u150_41:
  5222  001484  6ADE               	clrf	postinc2,c
  5223  001486  06E8               	decf	wreg,f,c
  5224  001488  E2FD               	bc	i2u150_41
  5225  00148A  5009               	movf	i2___lodiv@divisor^0,w,c
  5226  00148C  100A               	iorwf	(i2___lodiv@divisor+1)^0,w,c
  5227  00148E  100B               	iorwf	(i2___lodiv@divisor+2)^0,w,c
  5228  001490  100C               	iorwf	(i2___lodiv@divisor+3)^0,w,c
  5229  001492  100D               	iorwf	(i2___lodiv@divisor+4)^0,w,c
  5230  001494  100E               	iorwf	(i2___lodiv@divisor+5)^0,w,c
  5231  001496  100F               	iorwf	(i2___lodiv@divisor+6)^0,w,c
  5232  001498  1010               	iorwf	(i2___lodiv@divisor+7)^0,w,c
  5233  00149A  B4D8               	btfsc	status,2,c
  5234  00149C  EF52  F00A         	goto	i2u151_41
  5235  0014A0  EF54  F00A         	goto	i2u151_40
  5236  0014A4                     i2u151_41:
  5237  0014A4  EFA6  F00A         	goto	i2l588
  5238  0014A8                     i2u151_40:
  5239  0014A8  0E01               	movlw	1
  5240  0014AA  6E19               	movwf	i2___lodiv@counter^0,c
  5241  0014AC  EF62  F00A         	goto	i2l1892
  5242  0014B0                     i2l1890:
  5243  0014B0  90D8               	bcf	status,0,c
  5244  0014B2  3609               	rlcf	i2___lodiv@divisor^0,f,c
  5245  0014B4  360A               	rlcf	(i2___lodiv@divisor+1)^0,f,c
  5246  0014B6  360B               	rlcf	(i2___lodiv@divisor+2)^0,f,c
  5247  0014B8  360C               	rlcf	(i2___lodiv@divisor+3)^0,f,c
  5248  0014BA  360D               	rlcf	(i2___lodiv@divisor+4)^0,f,c
  5249  0014BC  360E               	rlcf	(i2___lodiv@divisor+5)^0,f,c
  5250  0014BE  360F               	rlcf	(i2___lodiv@divisor+6)^0,f,c
  5251  0014C0  3610               	rlcf	(i2___lodiv@divisor+7)^0,f,c
  5252  0014C2  2A19               	incf	i2___lodiv@counter^0,f,c
  5253  0014C4                     i2l1892:
  5254  0014C4  AE10               	btfss	(i2___lodiv@divisor+7)^0,7,c
  5255  0014C6  EF67  F00A         	goto	i2u152_41
  5256  0014CA  EF69  F00A         	goto	i2u152_40
  5257  0014CE                     i2u152_41:
  5258  0014CE  EF58  F00A         	goto	i2l1890
  5259  0014D2                     i2u152_40:
  5260  0014D2                     i2l1894:
  5261  0014D2  90D8               	bcf	status,0,c
  5262  0014D4  3611               	rlcf	i2___lodiv@quotient^0,f,c
  5263  0014D6  3612               	rlcf	(i2___lodiv@quotient+1)^0,f,c
  5264  0014D8  3613               	rlcf	(i2___lodiv@quotient+2)^0,f,c
  5265  0014DA  3614               	rlcf	(i2___lodiv@quotient+3)^0,f,c
  5266  0014DC  3615               	rlcf	(i2___lodiv@quotient+4)^0,f,c
  5267  0014DE  3616               	rlcf	(i2___lodiv@quotient+5)^0,f,c
  5268  0014E0  3617               	rlcf	(i2___lodiv@quotient+6)^0,f,c
  5269  0014E2  3618               	rlcf	(i2___lodiv@quotient+7)^0,f,c
  5270  0014E4  5009               	movf	i2___lodiv@divisor^0,w,c
  5271  0014E6  5C01               	subwf	i2___lodiv@dividend^0,w,c
  5272  0014E8  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
  5273  0014EA  5802               	subwfb	(i2___lodiv@dividend+1)^0,w,c
  5274  0014EC  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
  5275  0014EE  5803               	subwfb	(i2___lodiv@dividend+2)^0,w,c
  5276  0014F0  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
  5277  0014F2  5804               	subwfb	(i2___lodiv@dividend+3)^0,w,c
  5278  0014F4  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
  5279  0014F6  5805               	subwfb	(i2___lodiv@dividend+4)^0,w,c
  5280  0014F8  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
  5281  0014FA  5806               	subwfb	(i2___lodiv@dividend+5)^0,w,c
  5282  0014FC  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
  5283  0014FE  5807               	subwfb	(i2___lodiv@dividend+6)^0,w,c
  5284  001500  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
  5285  001502  5808               	subwfb	(i2___lodiv@dividend+7)^0,w,c
  5286  001504  A0D8               	btfss	status,0,c
  5287  001506  EF87  F00A         	goto	i2u153_41
  5288  00150A  EF89  F00A         	goto	i2u153_40
  5289  00150E                     i2u153_41:
  5290  00150E  EF9A  F00A         	goto	i2l1902
  5291  001512                     i2u153_40:
  5292  001512  5009               	movf	i2___lodiv@divisor^0,w,c
  5293  001514  5E01               	subwf	i2___lodiv@dividend^0,f,c
  5294  001516  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
  5295  001518  5A02               	subwfb	(i2___lodiv@dividend+1)^0,f,c
  5296  00151A  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
  5297  00151C  5A03               	subwfb	(i2___lodiv@dividend+2)^0,f,c
  5298  00151E  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
  5299  001520  5A04               	subwfb	(i2___lodiv@dividend+3)^0,f,c
  5300  001522  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
  5301  001524  5A05               	subwfb	(i2___lodiv@dividend+4)^0,f,c
  5302  001526  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
  5303  001528  5A06               	subwfb	(i2___lodiv@dividend+5)^0,f,c
  5304  00152A  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
  5305  00152C  5A07               	subwfb	(i2___lodiv@dividend+6)^0,f,c
  5306  00152E  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
  5307  001530  5A08               	subwfb	(i2___lodiv@dividend+7)^0,f,c
  5308  001532  8011               	bsf	i2___lodiv@quotient^0,0,c
  5309  001534                     i2l1902:
  5310  001534  90D8               	bcf	status,0,c
  5311  001536  3210               	rrcf	(i2___lodiv@divisor+7)^0,f,c
  5312  001538  320F               	rrcf	(i2___lodiv@divisor+6)^0,f,c
  5313  00153A  320E               	rrcf	(i2___lodiv@divisor+5)^0,f,c
  5314  00153C  320D               	rrcf	(i2___lodiv@divisor+4)^0,f,c
  5315  00153E  320C               	rrcf	(i2___lodiv@divisor+3)^0,f,c
  5316  001540  320B               	rrcf	(i2___lodiv@divisor+2)^0,f,c
  5317  001542  320A               	rrcf	(i2___lodiv@divisor+1)^0,f,c
  5318  001544  3209               	rrcf	i2___lodiv@divisor^0,f,c
  5319  001546  2E19               	decfsz	i2___lodiv@counter^0,f,c
  5320  001548  EF69  F00A         	goto	i2l1894
  5321  00154C                     i2l588:
  5322  00154C  C011  F001         	movff	i2___lodiv@quotient,?i2___lodiv
  5323  001550  C012  F002         	movff	i2___lodiv@quotient+1,?i2___lodiv+1
  5324  001554  C013  F003         	movff	i2___lodiv@quotient+2,?i2___lodiv+2
  5325  001558  C014  F004         	movff	i2___lodiv@quotient+3,?i2___lodiv+3
  5326  00155C  C015  F005         	movff	i2___lodiv@quotient+4,?i2___lodiv+4
  5327  001560  C016  F006         	movff	i2___lodiv@quotient+5,?i2___lodiv+5
  5328  001564  C017  F007         	movff	i2___lodiv@quotient+6,?i2___lodiv+6
  5329  001568  C018  F008         	movff	i2___lodiv@quotient+7,?i2___lodiv+7
  5330  00156C  0012               	return		;funcret
  5331  00156E                     __end_ofi2___lodiv:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function i2_stoa *****************
  5335 ;; Defined at:
  5336 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5339 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  5340 ;;  s               2   11[COMRAM] PTR unsigned char 
  5341 ;;		 -> NULL(0), ?_sprintf(2), STR_4(2), STR_3(2), 
  5342 ;;		 -> STR_2(2), STR_1(1), 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5345 ;;  l               2   29[COMRAM] int 
  5346 ;;  p               2   27[COMRAM] int 
  5347 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5348 ;;		 -> i2stoa@nuls(7), NULL(0), stoa@nuls(7), ?_sprintf(2), 
  5349 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(1), 
  5350 ;;  w               2   23[COMRAM] int 
  5351 ;;  i               2   21[COMRAM] int 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  2    9[COMRAM] int 
  5354 ;; Registers used:
  5355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5361 ;;      Params:         4       0       0       0       0       0       0       0       0
  5362 ;;      Locals:        17       0       0       0       0       0       0       0       0
  5363 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5364 ;;      Totals:        22       0       0       0       0       0       0       0       0
  5365 ;;Total ram usage:       22 bytes
  5366 ;; Hardware stack levels used: 1
  5367 ;; Hardware stack levels required when called: 2
  5368 ;; This function calls:
  5369 ;;		i2_fputc
  5370 ;;		i2_strlen
  5371 ;; This function is called by:
  5372 ;;		i2_vfpfcnvrt
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text33
  5377  0011F0                     __ptext33:
  5378                           	callstack 0
  5379  0011F0                     i2_stoa:
  5380                           	callstack 15
  5381  0011F0                     
  5382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  5383  0011F0  EE20  F0DF         	lfsr	2,stoa@F1133
  5384  0011F4  EE10  F00F         	lfsr	1,i2stoa@nuls
  5385  0011F8  0E06               	movlw	6
  5386  0011FA                     i2u169_41:
  5387  0011FA  CFDB FFE3          	movff	plusw2,plusw1
  5388  0011FE  06E8               	decf	wreg,f,c
  5389  001200  E2FC               	bc	i2u169_41
  5390  001202                     
  5391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  5392  001202  C00C  F01A         	movff	i2stoa@s,i2stoa@cp
  5393  001206  C00D  F01B         	movff	i2stoa@s+1,i2stoa@cp+1
  5394  00120A                     
  5395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  5396  00120A  501A               	movf	i2stoa@cp^0,w,c
  5397  00120C  101B               	iorwf	(i2stoa@cp+1)^0,w,c
  5398  00120E  A4D8               	btfss	status,2,c
  5399  001210  EF0C  F009         	goto	i2u170_41
  5400  001214  EF0E  F009         	goto	i2u170_40
  5401  001218                     i2u170_41:
  5402  001218  EF12  F009         	goto	i2l2016
  5403  00121C                     i2u170_40:
  5404  00121C                     
  5405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  5406  00121C  0E0F               	movlw	low i2stoa@nuls
  5407  00121E  6E1A               	movwf	i2stoa@cp^0,c
  5408  001220  0E00               	movlw	high i2stoa@nuls
  5409  001222  6E1B               	movwf	(i2stoa@cp+1)^0,c
  5410  001224                     i2l2016:
  5411                           
  5412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  5413  001224  C01A  F001         	movff	i2stoa@cp,i2strlen@s
  5414  001228  C01B  F002         	movff	i2stoa@cp+1,i2strlen@s+1
  5415  00122C  ECBF  F010         	call	i2_strlen	;wreg free
  5416  001230  C001  F01E         	movff	?i2_strlen,i2stoa@l
  5417  001234  C002  F01F         	movff	?i2_strlen+1,i2stoa@l+1
  5418  001238                     
  5419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  5420  001238  C0CF  F01C         	movff	_prec,i2stoa@p
  5421  00123C  C0D0  F01D         	movff	_prec+1,i2stoa@p+1
  5422  001240                     
  5423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  5424  001240  BE1D               	btfsc	(i2stoa@p+1)^0,7,c
  5425  001242  EF25  F009         	goto	i2u171_41
  5426  001246  EF27  F009         	goto	i2u171_40
  5427  00124A                     i2u171_41:
  5428  00124A  EF3C  F009         	goto	i2l867
  5429  00124E                     i2u171_40:
  5430  00124E  501E               	movf	i2stoa@l^0,w,c
  5431  001250  5C1C               	subwf	i2stoa@p^0,w,c
  5432  001252  501D               	movf	(i2stoa@p+1)^0,w,c
  5433  001254  0A80               	xorlw	128
  5434  001256  6E0E               	movwf	??i2_stoa^0,c
  5435  001258  501F               	movf	(i2stoa@l+1)^0,w,c
  5436  00125A  0A80               	xorlw	128
  5437  00125C  580E               	subwfb	??i2_stoa^0,w,c
  5438  00125E  A0D8               	btfss	status,0,c
  5439  001260  EF34  F009         	goto	i2u172_41
  5440  001264  EF36  F009         	goto	i2u172_40
  5441  001268                     i2u172_41:
  5442  001268  EF38  F009         	goto	i2l865
  5443  00126C                     i2u172_40:
  5444  00126C  EF3C  F009         	goto	i2l867
  5445  001270                     i2l865:
  5446  001270  C01C  F01E         	movff	i2stoa@p,i2stoa@l
  5447  001274  C01D  F01F         	movff	i2stoa@p+1,i2stoa@l+1
  5448  001278                     i2l867:
  5449                           
  5450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  5451  001278  C01E  F01C         	movff	i2stoa@l,i2stoa@p
  5452  00127C  C01F  F01D         	movff	i2stoa@l+1,i2stoa@p+1
  5453                           
  5454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  5455  001280  C0CD  F018         	movff	_width,i2stoa@w
  5456  001284  C0CE  F019         	movff	_width+1,i2stoa@w+1
  5457                           
  5458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  5459  001288  0100               	movlb	0	; () banked
  5460  00128A  B1D1               	btfsc	_flags& (0+255),0,b
  5461  00128C  EF4A  F009         	goto	i2u173_41
  5462  001290  EF4C  F009         	goto	i2u173_40
  5463  001294                     i2u173_41:
  5464  001294  EF69  F009         	goto	i2l2032
  5465  001298                     i2u173_40:
  5466  001298  EF5A  F009         	goto	i2l2030
  5467  00129C                     i2l2026:
  5468                           
  5469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  5470  00129C  0E00               	movlw	0
  5471  00129E  6E02               	movwf	(i2fputc@c+1)^0,c
  5472  0012A0  0E20               	movlw	32
  5473  0012A2  6E01               	movwf	i2fputc@c^0,c
  5474  0012A4  C00A  F003         	movff	i2stoa@fp,i2fputc@fp
  5475  0012A8  C00B  F004         	movff	i2stoa@fp+1,i2fputc@fp+1
  5476  0012AC  ECC9  F00C         	call	i2_fputc	;wreg free
  5477  0012B0                     
  5478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  5479  0012B0  4A1E               	infsnz	i2stoa@l^0,f,c
  5480  0012B2  2A1F               	incf	(i2stoa@l+1)^0,f,c
  5481  0012B4                     i2l2030:
  5482                           
  5483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  5484  0012B4  5018               	movf	i2stoa@w^0,w,c
  5485  0012B6  5C1E               	subwf	i2stoa@l^0,w,c
  5486  0012B8  501F               	movf	(i2stoa@l+1)^0,w,c
  5487  0012BA  0A80               	xorlw	128
  5488  0012BC  6E0E               	movwf	??i2_stoa^0,c
  5489  0012BE  5019               	movf	(i2stoa@w+1)^0,w,c
  5490  0012C0  0A80               	xorlw	128
  5491  0012C2  580E               	subwfb	??i2_stoa^0,w,c
  5492  0012C4  A0D8               	btfss	status,0,c
  5493  0012C6  EF67  F009         	goto	i2u174_41
  5494  0012CA  EF69  F009         	goto	i2u174_40
  5495  0012CE                     i2u174_41:
  5496  0012CE  EF4E  F009         	goto	i2l2026
  5497  0012D2                     i2u174_40:
  5498  0012D2                     i2l2032:
  5499                           
  5500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  5501  0012D2  0E00               	movlw	0
  5502  0012D4  6E17               	movwf	(i2stoa@i+1)^0,c
  5503  0012D6  0E00               	movlw	0
  5504  0012D8  6E16               	movwf	i2stoa@i^0,c
  5505                           
  5506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  5507  0012DA  EF8D  F009         	goto	i2l2040
  5508  0012DE                     i2l2034:
  5509                           
  5510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  5511  0012DE  C01A  FFF6         	movff	i2stoa@cp,tblptrl
  5512  0012E2  C01B  FFF7         	movff	i2stoa@cp+1,tblptrh
  5513  0012E6  6AF8               	clrf	tblptru,c
  5514  0012E8  0E07               	movlw	(high __ramtop+-1)
  5515  0012EA  64F7               	cpfsgt	tblptrh,c
  5516  0012EC  D003               	bra	i2u175_47
  5517  0012EE  0008               	tblrd		*
  5518  0012F0  50F5               	movf	tablat,w,c
  5519  0012F2  D005               	bra	i2u175_40
  5520  0012F4                     i2u175_47:
  5521  0012F4  CFF6 FFE1          	movff	tblptrl,fsr1l
  5522  0012F8  CFF7 FFE2          	movff	tblptrh,fsr1h
  5523  0012FC  50E7               	movf	indf1,w,c
  5524  0012FE                     i2u175_40:
  5525  0012FE  6E0E               	movwf	??i2_stoa^0,c
  5526  001300  500E               	movf	??i2_stoa^0,w,c
  5527  001302  6E01               	movwf	i2fputc@c^0,c
  5528  001304  6A02               	clrf	(i2fputc@c+1)^0,c
  5529  001306  C00A  F003         	movff	i2stoa@fp,i2fputc@fp
  5530  00130A  C00B  F004         	movff	i2stoa@fp+1,i2fputc@fp+1
  5531  00130E  ECC9  F00C         	call	i2_fputc	;wreg free
  5532  001312                     
  5533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  5534  001312  4A1A               	infsnz	i2stoa@cp^0,f,c
  5535  001314  2A1B               	incf	(i2stoa@cp+1)^0,f,c
  5536  001316                     
  5537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  5538  001316  4A16               	infsnz	i2stoa@i^0,f,c
  5539  001318  2A17               	incf	(i2stoa@i+1)^0,f,c
  5540  00131A                     i2l2040:
  5541                           
  5542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  5543  00131A  501C               	movf	i2stoa@p^0,w,c
  5544  00131C  5C16               	subwf	i2stoa@i^0,w,c
  5545  00131E  5017               	movf	(i2stoa@i+1)^0,w,c
  5546  001320  0A80               	xorlw	128
  5547  001322  6E0E               	movwf	??i2_stoa^0,c
  5548  001324  501D               	movf	(i2stoa@p+1)^0,w,c
  5549  001326  0A80               	xorlw	128
  5550  001328  580E               	subwfb	??i2_stoa^0,w,c
  5551  00132A  A0D8               	btfss	status,0,c
  5552  00132C  EF9A  F009         	goto	i2u176_41
  5553  001330  EF9C  F009         	goto	i2u176_40
  5554  001334                     i2u176_41:
  5555  001334  EF6F  F009         	goto	i2l2034
  5556  001338                     i2u176_40:
  5557  001338                     
  5558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  5559  001338  0100               	movlb	0	; () banked
  5560  00133A  A1D1               	btfss	_flags& (0+255),0,b
  5561  00133C  EFA2  F009         	goto	i2u177_41
  5562  001340  EFA4  F009         	goto	i2u177_40
  5563  001344                     i2u177_41:
  5564  001344  EFC1  F009         	goto	i2l877
  5565  001348                     i2u177_40:
  5566  001348  EFB2  F009         	goto	i2l2048
  5567  00134C                     i2l2044:
  5568                           
  5569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  5570  00134C  0E00               	movlw	0
  5571  00134E  6E02               	movwf	(i2fputc@c+1)^0,c
  5572  001350  0E20               	movlw	32
  5573  001352  6E01               	movwf	i2fputc@c^0,c
  5574  001354  C00A  F003         	movff	i2stoa@fp,i2fputc@fp
  5575  001358  C00B  F004         	movff	i2stoa@fp+1,i2fputc@fp+1
  5576  00135C  ECC9  F00C         	call	i2_fputc	;wreg free
  5577  001360                     
  5578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  5579  001360  4A1E               	infsnz	i2stoa@l^0,f,c
  5580  001362  2A1F               	incf	(i2stoa@l+1)^0,f,c
  5581  001364                     i2l2048:
  5582                           
  5583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  5584  001364  5018               	movf	i2stoa@w^0,w,c
  5585  001366  5C1E               	subwf	i2stoa@l^0,w,c
  5586  001368  501F               	movf	(i2stoa@l+1)^0,w,c
  5587  00136A  0A80               	xorlw	128
  5588  00136C  6E0E               	movwf	??i2_stoa^0,c
  5589  00136E  5019               	movf	(i2stoa@w+1)^0,w,c
  5590  001370  0A80               	xorlw	128
  5591  001372  580E               	subwfb	??i2_stoa^0,w,c
  5592  001374  A0D8               	btfss	status,0,c
  5593  001376  EFBF  F009         	goto	i2u178_41
  5594  00137A  EFC1  F009         	goto	i2u178_40
  5595  00137E                     i2u178_41:
  5596  00137E  EFA6  F009         	goto	i2l2044
  5597  001382                     i2u178_40:
  5598  001382                     i2l877:
  5599                           
  5600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  5601  001382  C01E  F00A         	movff	i2stoa@l,?i2_stoa
  5602  001386  C01F  F00B         	movff	i2stoa@l+1,?i2_stoa+1
  5603  00138A  0012               	return		;funcret
  5604  00138C                     __end_ofi2_stoa:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function i2_strlen *****************
  5608 ;; Defined at:
  5609 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5612 ;;		 -> i2stoa@nuls(7), dbuf(32), NULL(0), stoa@nuls(7), 
  5613 ;;		 -> ?_sprintf(2), STR_4(2), STR_3(2), STR_2(2), 
  5614 ;;		 -> STR_1(1), 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5617 ;;		 -> i2stoa@nuls(7), dbuf(32), NULL(0), stoa@nuls(7), 
  5618 ;;		 -> ?_sprintf(2), STR_4(2), STR_3(2), STR_2(2), 
  5619 ;;		 -> STR_1(1), 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  2    0[COMRAM] unsigned int 
  5622 ;; Registers used:
  5623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5629 ;;      Params:         2       0       0       0       0       0       0       0       0
  5630 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5632 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5633 ;;Total ram usage:        4 bytes
  5634 ;; Hardware stack levels used: 1
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		i2_pad
  5639 ;;		i2_stoa
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text34
  5644  00217E                     __ptext34:
  5645                           	callstack 0
  5646  00217E                     i2_strlen:
  5647                           	callstack 15
  5648  00217E  C001  F003         	movff	i2strlen@s,i2strlen@a
  5649  002182  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  5650  002186  EFC7  F010         	goto	i2l1800
  5651  00218A                     i2l1798:
  5652  00218A  4A01               	infsnz	i2strlen@s^0,f,c
  5653  00218C  2A02               	incf	(i2strlen@s+1)^0,f,c
  5654  00218E                     i2l1800:
  5655  00218E  C001  FFF6         	movff	i2strlen@s,tblptrl
  5656  002192  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  5657  002196  6AF8               	clrf	tblptru,c
  5658  002198  0E07               	movlw	(high __ramtop+-1)
  5659  00219A  64F7               	cpfsgt	tblptrh,c
  5660  00219C  D003               	bra	i2u131_47
  5661  00219E  0008               	tblrd		*
  5662  0021A0  50F5               	movf	tablat,w,c
  5663  0021A2  D005               	bra	i2u131_40
  5664  0021A4                     i2u131_47:
  5665  0021A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  5666  0021A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  5667  0021AC  50E7               	movf	indf1,w,c
  5668  0021AE                     i2u131_40:
  5669  0021AE  0900               	iorlw	0
  5670  0021B0  A4D8               	btfss	status,2,c
  5671  0021B2  EFDD  F010         	goto	i2u132_41
  5672  0021B6  EFDF  F010         	goto	i2u132_40
  5673  0021BA                     i2u132_41:
  5674  0021BA  EFC5  F010         	goto	i2l1798
  5675  0021BE                     i2u132_40:
  5676  0021BE  5003               	movf	i2strlen@a^0,w,c
  5677  0021C0  5C01               	subwf	i2strlen@s^0,w,c
  5678  0021C2  6E01               	movwf	?i2_strlen^0,c
  5679  0021C4  5004               	movf	(i2strlen@a+1)^0,w,c
  5680  0021C6  5802               	subwfb	(i2strlen@s+1)^0,w,c
  5681  0021C8  6E02               	movwf	(?i2_strlen+1)^0,c
  5682  0021CA  0012               	return		;funcret
  5683  0021CC                     __end_ofi2_strlen:
  5684                           	callstack 0
  5685                           
  5686 ;; *************** function i2_fputc *****************
  5687 ;; Defined at:
  5688 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  c               2    0[COMRAM] int 
  5691 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5692 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;		None
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  2    0[COMRAM] int 
  5697 ;; Registers used:
  5698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5704 ;;      Params:         4       0       0       0       0       0       0       0       0
  5705 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5706 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5707 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5708 ;;Total ram usage:        9 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; Hardware stack levels required when called: 1
  5711 ;; This function calls:
  5712 ;;		i2_putch
  5713 ;; This function is called by:
  5714 ;;		i2_pad
  5715 ;;		i2_stoa
  5716 ;;		i2_vfpfcnvrt
  5717 ;;		i2_fputs
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text35
  5722  001992                     __ptext35:
  5723                           	callstack 0
  5724  001992                     i2_fputc:
  5725                           	callstack 13
  5726  001992  5003               	movf	i2fputc@fp^0,w,c
  5727  001994  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  5728  001996  B4D8               	btfsc	status,2,c
  5729  001998  EFD0  F00C         	goto	i2u115_41
  5730  00199C  EFD2  F00C         	goto	i2u115_40
  5731  0019A0                     i2u115_41:
  5732  0019A0  EFDB  F00C         	goto	i2l1718
  5733  0019A4                     i2u115_40:
  5734  0019A4  5003               	movf	i2fputc@fp^0,w,c
  5735  0019A6  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  5736  0019A8  A4D8               	btfss	status,2,c
  5737  0019AA  EFD9  F00C         	goto	i2u116_41
  5738  0019AE  EFDB  F00C         	goto	i2u116_40
  5739  0019B2                     i2u116_41:
  5740  0019B2  EFE0  F00C         	goto	i2l1720
  5741  0019B6                     i2u116_40:
  5742  0019B6                     i2l1718:
  5743  0019B6  5001               	movf	i2fputc@c^0,w,c
  5744  0019B8  ECB6  F011         	call	i2_putch
  5745  0019BC  EF2D  F00D         	goto	i2l921
  5746  0019C0                     i2l1720:
  5747  0019C0  EE20 F004          	lfsr	2,4
  5748  0019C4  5003               	movf	i2fputc@fp^0,w,c
  5749  0019C6  26D9               	addwf	fsr2l,f,c
  5750  0019C8  5004               	movf	(i2fputc@fp+1)^0,w,c
  5751  0019CA  22DA               	addwfc	fsr2h,f,c
  5752  0019CC  50DE               	movf	postinc2,w,c
  5753  0019CE  10DE               	iorwf	postinc2,w,c
  5754  0019D0  B4D8               	btfsc	status,2,c
  5755  0019D2  EFED  F00C         	goto	i2u117_41
  5756  0019D6  EFEF  F00C         	goto	i2u117_40
  5757  0019DA                     i2u117_41:
  5758  0019DA  EF0A  F00D         	goto	i2l1724
  5759  0019DE                     i2u117_40:
  5760  0019DE  EE20 F004          	lfsr	2,4
  5761  0019E2  5003               	movf	i2fputc@fp^0,w,c
  5762  0019E4  26D9               	addwf	fsr2l,f,c
  5763  0019E6  5004               	movf	(i2fputc@fp+1)^0,w,c
  5764  0019E8  22DA               	addwfc	fsr2h,f,c
  5765  0019EA  EE10 F002          	lfsr	1,2
  5766  0019EE  5003               	movf	i2fputc@fp^0,w,c
  5767  0019F0  26E1               	addwf	fsr1l,f,c
  5768  0019F2  5004               	movf	(i2fputc@fp+1)^0,w,c
  5769  0019F4  22E2               	addwfc	fsr1h,f,c
  5770  0019F6  50DE               	movf	postinc2,w,c
  5771  0019F8  5CE6               	subwf	postinc1,w,c
  5772  0019FA  50E6               	movf	postinc1,w,c
  5773  0019FC  0A80               	xorlw	128
  5774  0019FE  6E09               	movwf	(??i2_fputc+4)^0,c
  5775  001A00  50DE               	movf	postinc2,w,c
  5776  001A02  0A80               	xorlw	128
  5777  001A04  5809               	subwfb	(??i2_fputc+4)^0,w,c
  5778  001A06  B0D8               	btfsc	status,0,c
  5779  001A08  EF08  F00D         	goto	i2u118_41
  5780  001A0C  EF0A  F00D         	goto	i2u118_40
  5781  001A10                     i2u118_41:
  5782  001A10  EF2D  F00D         	goto	i2l921
  5783  001A14                     i2u118_40:
  5784  001A14                     i2l1724:
  5785  001A14  EE20 F002          	lfsr	2,2
  5786  001A18  5003               	movf	i2fputc@fp^0,w,c
  5787  001A1A  26D9               	addwf	fsr2l,f,c
  5788  001A1C  5004               	movf	(i2fputc@fp+1)^0,w,c
  5789  001A1E  22DA               	addwfc	fsr2h,f,c
  5790  001A20  CFDE F005          	movff	postinc2,??i2_fputc
  5791  001A24  CFDD F006          	movff	postdec2,??i2_fputc+1
  5792  001A28  C003  FFD9         	movff	i2fputc@fp,fsr2l
  5793  001A2C  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  5794  001A30  CFDE F007          	movff	postinc2,??i2_fputc+2
  5795  001A34  CFDD F008          	movff	postdec2,??i2_fputc+3
  5796  001A38  5005               	movf	??i2_fputc^0,w,c
  5797  001A3A  2407               	addwf	(??i2_fputc+2)^0,w,c
  5798  001A3C  6ED9               	movwf	fsr2l,c
  5799  001A3E  5006               	movf	(??i2_fputc+1)^0,w,c
  5800  001A40  2008               	addwfc	(??i2_fputc+3)^0,w,c
  5801  001A42  6EDA               	movwf	fsr2h,c
  5802  001A44  C001  FFDF         	movff	i2fputc@c,indf2
  5803  001A48  EE20 F002          	lfsr	2,2
  5804  001A4C  5003               	movf	i2fputc@fp^0,w,c
  5805  001A4E  26D9               	addwf	fsr2l,f,c
  5806  001A50  5004               	movf	(i2fputc@fp+1)^0,w,c
  5807  001A52  22DA               	addwfc	fsr2h,f,c
  5808  001A54  2ADE               	incf	postinc2,f,c
  5809  001A56  0E00               	movlw	0
  5810  001A58  22DD               	addwfc	postdec2,f,c
  5811  001A5A                     i2l921:
  5812  001A5A  0012               	return		;funcret
  5813  001A5C                     __end_ofi2_fputc:
  5814                           	callstack 0
  5815                           
  5816 ;; *************** function i2_putch *****************
  5817 ;; Defined at:
  5818 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  c               1    wreg     unsigned char 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  c               1  (no storage) unsigned char 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      void 
  5825 ;; Registers used:
  5826 ;;		wreg
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5832 ;;      Params:         0       0       0       0       0       0       0       0       0
  5833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5835 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5836 ;;Total ram usage:        0 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		i2_fputc
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text36
  5846  00236C                     __ptext36:
  5847                           	callstack 0
  5848  00236C                     i2_putch:
  5849                           	callstack 13
  5850  00236C  0012               	return		;funcret
  5851  00236E                     __end_ofi2_putch:
  5852                           	callstack 0
  5853                           
  5854 ;; *************** function i2_cronometro *****************
  5855 ;; Defined at:
  5856 ;;		line 66 in file "main.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;		None
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;		None
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  1    wreg      void 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5870 ;;      Params:         0       0       0       0       0       0       0       0       0
  5871 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5873 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5874 ;;Total ram usage:        0 bytes
  5875 ;; Hardware stack levels used: 1
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_RS232
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text37
  5884  001F70                     __ptext37:
  5885                           	callstack 0
  5886  001F70                     i2_cronometro:
  5887                           	callstack 20
  5888  001F70                     
  5889                           ;main.c: 68:     s = s+1;
  5890  001F70  0E01               	movlw	1
  5891  001F72  0100               	movlb	0	; () banked
  5892  001F74  25D9               	addwf	_s& (0+255),w,b
  5893  001F76  6FD9               	movwf	_s& (0+255),b
  5894  001F78  0E00               	movlw	0
  5895  001F7A  21DA               	addwfc	(_s+1)& (0+255),w,b
  5896  001F7C  6FDA               	movwf	(_s+1)& (0+255),b
  5897                           
  5898                           ;main.c: 70:     if (s == 60 ){
  5899  001F7E  0E3C               	movlw	60
  5900  001F80  19D9               	xorwf	_s& (0+255),w,b
  5901  001F82  11DA               	iorwf	(_s+1)& (0+255),w,b
  5902  001F84  A4D8               	btfss	status,2,c
  5903  001F86  EFC7  F00F         	goto	i2u211_41
  5904  001F8A  EFC9  F00F         	goto	i2u211_40
  5905  001F8E                     i2u211_41:
  5906  001F8E  EFD3  F00F         	goto	i2l2358
  5907  001F92                     i2u211_40:
  5908  001F92                     
  5909                           ; BSR set to: 0
  5910                           ;main.c: 71:         s = 0;
  5911  001F92  0E00               	movlw	0
  5912  001F94  6FDA               	movwf	(_s+1)& (0+255),b
  5913  001F96  0E00               	movlw	0
  5914  001F98  6FD9               	movwf	_s& (0+255),b
  5915  001F9A                     
  5916                           ; BSR set to: 0
  5917                           ;main.c: 72:         m = m + 1;
  5918  001F9A  0E01               	movlw	1
  5919  001F9C  25DB               	addwf	_m& (0+255),w,b
  5920  001F9E  6FDB               	movwf	_m& (0+255),b
  5921  001FA0  0E00               	movlw	0
  5922  001FA2  21DC               	addwfc	(_m+1)& (0+255),w,b
  5923  001FA4  6FDC               	movwf	(_m+1)& (0+255),b
  5924  001FA6                     i2l2358:
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;main.c: 75:       if (m == 60){
  5928  001FA6  0E3C               	movlw	60
  5929  001FA8  19DB               	xorwf	_m& (0+255),w,b
  5930  001FAA  11DC               	iorwf	(_m+1)& (0+255),w,b
  5931  001FAC  A4D8               	btfss	status,2,c
  5932  001FAE  EFDB  F00F         	goto	i2u212_41
  5933  001FB2  EFDD  F00F         	goto	i2u212_40
  5934  001FB6                     i2u212_41:
  5935  001FB6  EFE7  F00F         	goto	i2l122
  5936  001FBA                     i2u212_40:
  5937  001FBA                     
  5938                           ; BSR set to: 0
  5939                           ;main.c: 76:           m = 0;
  5940  001FBA  0E00               	movlw	0
  5941  001FBC  6FDC               	movwf	(_m+1)& (0+255),b
  5942  001FBE  0E00               	movlw	0
  5943  001FC0  6FDB               	movwf	_m& (0+255),b
  5944  001FC2                     
  5945                           ; BSR set to: 0
  5946                           ;main.c: 77:           h = h + 1;
  5947  001FC2  0E01               	movlw	1
  5948  001FC4  25DD               	addwf	_h& (0+255),w,b
  5949  001FC6  6FDD               	movwf	_h& (0+255),b
  5950  001FC8  0E00               	movlw	0
  5951  001FCA  21DE               	addwfc	(_h+1)& (0+255),w,b
  5952  001FCC  6FDE               	movwf	(_h+1)& (0+255),b
  5953  001FCE                     i2l122:
  5954                           
  5955                           ; BSR set to: 0
  5956  001FCE  0012               	return		;funcret
  5957  001FD0                     __end_ofi2_cronometro:
  5958                           	callstack 0
  5959                           
  5960 ;; *************** function i2_Lcd_Write_String *****************
  5961 ;; Defined at:
  5962 ;;		line 88 in file "./lcd.h"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  a               2    4[COMRAM] PTR unsigned char 
  5965 ;;		 -> STR_7(8), tx_string(30), 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  i               2    8[COMRAM] int 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5977 ;;      Params:         2       0       0       0       0       0       0       0       0
  5978 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5979 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5980 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5981 ;;Total ram usage:        6 bytes
  5982 ;; Hardware stack levels used: 1
  5983 ;; Hardware stack levels required when called: 2
  5984 ;; This function calls:
  5985 ;;		i2_Lcd_Write_Char
  5986 ;; This function is called by:
  5987 ;;		_RS232
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text38
  5992  001C34                     __ptext38:
  5993                           	callstack 0
  5994  001C34                     i2_Lcd_Write_String:
  5995                           	callstack 18
  5996  001C34                     
  5997                           ;./lcd.h: 89:     int i;;./lcd.h: 90:     for (i = 0; a[i] != '\0'; i++)
  5998  001C34  0E00               	movlw	0
  5999  001C36  6E0A               	movwf	(i2Lcd_Write_String@i+1)^0,c
  6000  001C38  0E00               	movlw	0
  6001  001C3A  6E09               	movwf	i2Lcd_Write_String@i^0,c
  6002  001C3C  EF3A  F00E         	goto	i2l2350
  6003  001C40                     i2l2346:
  6004                           
  6005                           ;./lcd.h: 91:         Lcd_Write_Char(a[i]);
  6006  001C40  5009               	movf	i2Lcd_Write_String@i^0,w,c
  6007  001C42  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  6008  001C44  6E07               	movwf	??i2_Lcd_Write_String^0,c
  6009  001C46  500A               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  6010  001C48  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  6011  001C4A  6E08               	movwf	(??i2_Lcd_Write_String+1)^0,c
  6012  001C4C  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  6013  001C50  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  6014  001C54  6AF8               	clrf	tblptru,c
  6015  001C56  0E07               	movlw	(high __ramtop+-1)
  6016  001C58  64F7               	cpfsgt	tblptrh,c
  6017  001C5A  D003               	bra	i2u208_47
  6018  001C5C  0008               	tblrd		*
  6019  001C5E  50F5               	movf	tablat,w,c
  6020  001C60  D005               	bra	i2u208_40
  6021  001C62                     i2u208_47:
  6022  001C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  6023  001C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  6024  001C6A  50E7               	movf	indf1,w,c
  6025  001C6C                     i2u208_40:
  6026  001C6C  EC6A  F011         	call	i2_Lcd_Write_Char
  6027  001C70  4A09               	infsnz	i2Lcd_Write_String@i^0,f,c
  6028  001C72  2A0A               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  6029  001C74                     i2l2350:
  6030  001C74  5009               	movf	i2Lcd_Write_String@i^0,w,c
  6031  001C76  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  6032  001C78  6E07               	movwf	??i2_Lcd_Write_String^0,c
  6033  001C7A  500A               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  6034  001C7C  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  6035  001C7E  6E08               	movwf	(??i2_Lcd_Write_String+1)^0,c
  6036  001C80  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  6037  001C84  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  6038  001C88  6AF8               	clrf	tblptru,c
  6039  001C8A  0E07               	movlw	(high __ramtop+-1)
  6040  001C8C  64F7               	cpfsgt	tblptrh,c
  6041  001C8E  D003               	bra	i2u209_47
  6042  001C90  0008               	tblrd		*
  6043  001C92  50F5               	movf	tablat,w,c
  6044  001C94  D005               	bra	i2u209_40
  6045  001C96                     i2u209_47:
  6046  001C96  CFF6 FFE1          	movff	tblptrl,fsr1l
  6047  001C9A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6048  001C9E  50E7               	movf	indf1,w,c
  6049  001CA0                     i2u209_40:
  6050  001CA0  0900               	iorlw	0
  6051  001CA2  A4D8               	btfss	status,2,c
  6052  001CA4  EF56  F00E         	goto	i2u210_41
  6053  001CA8  EF58  F00E         	goto	i2u210_40
  6054  001CAC                     i2u210_41:
  6055  001CAC  EF20  F00E         	goto	i2l2346
  6056  001CB0                     i2u210_40:
  6057  001CB0  0012               	return		;funcret
  6058  001CB2                     __end_ofi2_Lcd_Write_String:
  6059                           	callstack 0
  6060                           
  6061 ;; *************** function i2_Lcd_Write_Char *****************
  6062 ;; Defined at:
  6063 ;;		line 73 in file "./lcd.h"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  a               1    wreg     unsigned char 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  a               1    3[COMRAM] unsigned char 
  6068 ;;  y               1    2[COMRAM] unsigned char 
  6069 ;;  temp            1    1[COMRAM] unsigned char 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6079 ;;      Params:         0       0       0       0       0       0       0       0       0
  6080 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6082 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6083 ;;Total ram usage:        3 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; Hardware stack levels required when called: 1
  6086 ;; This function calls:
  6087 ;;		i2_Lcd_Port
  6088 ;; This function is called by:
  6089 ;;		i2_Lcd_Write_String
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text39
  6094  0022D4                     __ptext39:
  6095                           	callstack 0
  6096  0022D4                     i2_Lcd_Write_Char:
  6097                           	callstack 18
  6098                           
  6099                           ;incstack = 0
  6100                           ;i2Lcd_Write_Char@a stored from wreg
  6101  0022D4  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  6102  0022D6                     
  6103                           ;./lcd.h: 74:     char temp, y;;./lcd.h: 75:     temp = a & 0x0F;
  6104  0022D6  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  6105  0022D8  0B0F               	andlw	15
  6106  0022DA  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  6107                           
  6108                           ;./lcd.h: 76:     y = a & 0xF0;
  6109  0022DC  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  6110  0022DE  0BF0               	andlw	240
  6111  0022E0  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  6112  0022E2                     
  6113                           ;./lcd.h: 77:     LATE0 = 1;
  6114  0022E2  808D               	bsf	3981,0,c	;volatile
  6115  0022E4                     
  6116                           ;./lcd.h: 78:     Lcd_Port(y >> 4);
  6117  0022E4  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  6118  0022E6  0B0F               	andlw	15
  6119  0022E8  EC16  F010         	call	i2_Lcd_Port
  6120  0022EC                     
  6121                           ;./lcd.h: 79:     LATE1 = 1;
  6122  0022EC  828D               	bsf	3981,1,c	;volatile
  6123  0022EE                     
  6124                           ;./lcd.h: 80:     _delay((unsigned long)((40)*(400000/4000000.0)));
  6125  0022EE  D000               	nop2		;2 cycle nop
  6126  0022F0  D000               	nop2		;2 cycle nop
  6127  0022F2                     
  6128                           ;./lcd.h: 81:     LATE1 = 0;
  6129  0022F2  928D               	bcf	3981,1,c	;volatile
  6130  0022F4                     
  6131                           ;./lcd.h: 82:     Lcd_Port(temp);
  6132  0022F4  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  6133  0022F6  EC16  F010         	call	i2_Lcd_Port
  6134  0022FA                     
  6135                           ;./lcd.h: 83:     LATE1 = 1;
  6136  0022FA  828D               	bsf	3981,1,c	;volatile
  6137  0022FC                     
  6138                           ;./lcd.h: 84:     _delay((unsigned long)((40)*(400000/4000000.0)));
  6139  0022FC  D000               	nop2		;2 cycle nop
  6140  0022FE  D000               	nop2		;2 cycle nop
  6141  002300                     
  6142                           ;./lcd.h: 85:     LATE1 = 0;
  6143  002300  928D               	bcf	3981,1,c	;volatile
  6144  002302  0012               	return		;funcret
  6145  002304                     __end_ofi2_Lcd_Write_Char:
  6146                           	callstack 0
  6147                           
  6148 ;; *************** function i2_Lcd_Set_Cursor *****************
  6149 ;; Defined at:
  6150 ;;		line 38 in file "./lcd.h"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  a               1    wreg     unsigned char 
  6153 ;;  b               1    2[COMRAM] unsigned char 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  a               1    3[COMRAM] unsigned char 
  6156 ;;  temp            1    6[COMRAM] unsigned char 
  6157 ;;  y               1    5[COMRAM] unsigned char 
  6158 ;;  z               1    4[COMRAM] unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  1    wreg      void 
  6161 ;; Registers used:
  6162 ;;		wreg, status,2, status,0, cstack
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6168 ;;      Params:         1       0       0       0       0       0       0       0       0
  6169 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6171 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6172 ;;Total ram usage:        5 bytes
  6173 ;; Hardware stack levels used: 1
  6174 ;; Hardware stack levels required when called: 2
  6175 ;; This function calls:
  6176 ;;		i2_Lcd_Cmd
  6177 ;; This function is called by:
  6178 ;;		_RS232
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text40
  6183  001D86                     __ptext40:
  6184                           	callstack 0
  6185  001D86                     i2_Lcd_Set_Cursor:
  6186                           	callstack 18
  6187                           
  6188                           ;incstack = 0
  6189                           ;i2Lcd_Set_Cursor@a stored from wreg
  6190  001D86  6E04               	movwf	i2Lcd_Set_Cursor@a^0,c
  6191  001D88                     
  6192                           ;./lcd.h: 39:     char temp, z, y;;./lcd.h: 40:     if (a == 1) {
  6193  001D88  0404               	decf	i2Lcd_Set_Cursor@a^0,w,c
  6194  001D8A  A4D8               	btfss	status,2,c
  6195  001D8C  EFCA  F00E         	goto	i2u206_41
  6196  001D90  EFCC  F00E         	goto	i2u206_40
  6197  001D94                     i2u206_41:
  6198  001D94  EFDD  F00E         	goto	i2l2336
  6199  001D98                     i2u206_40:
  6200  001D98                     
  6201                           ;./lcd.h: 41:         temp = 0x80 + b - 1;
  6202  001D98  5003               	movf	i2Lcd_Set_Cursor@b^0,w,c
  6203  001D9A  0F7F               	addlw	127
  6204  001D9C  6E07               	movwf	i2Lcd_Set_Cursor@temp^0,c
  6205                           
  6206                           ;./lcd.h: 42:         z = temp >> 4;
  6207  001D9E  3807               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  6208  001DA0  0B0F               	andlw	15
  6209  001DA2  6E05               	movwf	i2Lcd_Set_Cursor@z^0,c
  6210                           
  6211                           ;./lcd.h: 43:         y = temp & 0x0F;
  6212  001DA4  5007               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  6213  001DA6  0B0F               	andlw	15
  6214  001DA8  6E06               	movwf	i2Lcd_Set_Cursor@y^0,c
  6215  001DAA                     
  6216                           ;./lcd.h: 44:         Lcd_Cmd(z);
  6217  001DAA  5005               	movf	i2Lcd_Set_Cursor@z^0,w,c
  6218  001DAC  EC90  F011         	call	i2_Lcd_Cmd
  6219  001DB0                     
  6220                           ;./lcd.h: 45:         Lcd_Cmd(y);
  6221  001DB0  5006               	movf	i2Lcd_Set_Cursor@y^0,w,c
  6222  001DB2  EC90  F011         	call	i2_Lcd_Cmd
  6223                           
  6224                           ;./lcd.h: 46:     } else if (a == 2) {
  6225  001DB6  EFF5  F00E         	goto	i2l73
  6226  001DBA                     i2l2336:
  6227  001DBA  0E02               	movlw	2
  6228  001DBC  1804               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  6229  001DBE  A4D8               	btfss	status,2,c
  6230  001DC0  EFE4  F00E         	goto	i2u207_41
  6231  001DC4  EFE6  F00E         	goto	i2u207_40
  6232  001DC8                     i2u207_41:
  6233  001DC8  EFF5  F00E         	goto	i2l73
  6234  001DCC                     i2u207_40:
  6235  001DCC                     
  6236                           ;./lcd.h: 47:         temp = 0xC0 + b - 1;
  6237  001DCC  5003               	movf	i2Lcd_Set_Cursor@b^0,w,c
  6238  001DCE  0FBF               	addlw	191
  6239  001DD0  6E07               	movwf	i2Lcd_Set_Cursor@temp^0,c
  6240                           
  6241                           ;./lcd.h: 48:         z = temp >> 4;
  6242  001DD2  3807               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  6243  001DD4  0B0F               	andlw	15
  6244  001DD6  6E05               	movwf	i2Lcd_Set_Cursor@z^0,c
  6245                           
  6246                           ;./lcd.h: 49:         y = temp & 0x0F;
  6247  001DD8  5007               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  6248  001DDA  0B0F               	andlw	15
  6249  001DDC  6E06               	movwf	i2Lcd_Set_Cursor@y^0,c
  6250  001DDE                     
  6251                           ;./lcd.h: 50:         Lcd_Cmd(z);
  6252  001DDE  5005               	movf	i2Lcd_Set_Cursor@z^0,w,c
  6253  001DE0  EC90  F011         	call	i2_Lcd_Cmd
  6254  001DE4                     
  6255                           ;./lcd.h: 51:         Lcd_Cmd(y);
  6256  001DE4  5006               	movf	i2Lcd_Set_Cursor@y^0,w,c
  6257  001DE6  EC90  F011         	call	i2_Lcd_Cmd
  6258  001DEA                     i2l73:
  6259  001DEA  0012               	return		;funcret
  6260  001DEC                     __end_ofi2_Lcd_Set_Cursor:
  6261                           	callstack 0
  6262                           
  6263 ;; *************** function i2_Lcd_Cmd *****************
  6264 ;; Defined at:
  6265 ;;		line 25 in file "./lcd.h"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  a               1    wreg     unsigned char 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  a               1    1[COMRAM] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0
  6280 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6282 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6283 ;;Total ram usage:        1 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; Hardware stack levels required when called: 1
  6286 ;; This function calls:
  6287 ;;		i2_Lcd_Port
  6288 ;; This function is called by:
  6289 ;;		i2_Lcd_Set_Cursor
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text41
  6294  002320                     __ptext41:
  6295                           	callstack 0
  6296  002320                     i2_Lcd_Cmd:
  6297                           	callstack 18
  6298                           
  6299                           ;incstack = 0
  6300                           ;i2Lcd_Cmd@a stored from wreg
  6301  002320  6E02               	movwf	i2Lcd_Cmd@a^0,c
  6302  002322                     
  6303                           ;./lcd.h: 26:     LATE0 = 0;
  6304  002322  908D               	bcf	3981,0,c	;volatile
  6305  002324                     
  6306                           ;./lcd.h: 27:     Lcd_Port(a);
  6307  002324  5002               	movf	i2Lcd_Cmd@a^0,w,c
  6308  002326  EC16  F010         	call	i2_Lcd_Port
  6309  00232A                     
  6310                           ;./lcd.h: 28:     LATE1 = 1;
  6311  00232A  828D               	bsf	3981,1,c	;volatile
  6312  00232C                     
  6313                           ;./lcd.h: 29:     _delay((unsigned long)((4)*(400000/4000.0)));
  6314  00232C  0E85               	movlw	133
  6315  00232E                     i2u223_47:
  6316  00232E  2EE8               	decfsz	wreg,f,c
  6317  002330  D7FE               	bra	i2u223_47
  6318  002332  F000               	nop	
  6319  002334                     
  6320                           ;./lcd.h: 30:     LATE1 = 0;
  6321  002334  928D               	bcf	3981,1,c	;volatile
  6322  002336  0012               	return		;funcret
  6323  002338                     __end_ofi2_Lcd_Cmd:
  6324                           	callstack 0
  6325                           
  6326 ;; *************** function i2_Lcd_Port *****************
  6327 ;; Defined at:
  6328 ;;		line 3 in file "./lcd.h"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  a               1    wreg     unsigned char 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  a               1    0[COMRAM] unsigned char 
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		wreg
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0
  6343 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6345 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6346 ;;Total ram usage:        1 bytes
  6347 ;; Hardware stack levels used: 1
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		i2_Lcd_Cmd
  6352 ;;		i2_Lcd_Write_Char
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text42
  6357  00202C                     __ptext42:
  6358                           	callstack 0
  6359  00202C                     i2_Lcd_Port:
  6360                           	callstack 18
  6361                           
  6362                           ;incstack = 0
  6363                           ;i2Lcd_Port@a stored from wreg
  6364  00202C  6E01               	movwf	i2Lcd_Port@a^0,c
  6365  00202E                     
  6366                           ;./lcd.h: 4:     if (a & 1)
  6367  00202E  A001               	btfss	i2Lcd_Port@a^0,0,c
  6368  002030  EF1C  F010         	goto	i2u187_41
  6369  002034  EF1E  F010         	goto	i2u187_40
  6370  002038                     i2u187_41:
  6371  002038  EF21  F010         	goto	i2l53
  6372  00203C                     i2u187_40:
  6373  00203C                     
  6374                           ;./lcd.h: 5:         LATD4 = 1;
  6375  00203C  888C               	bsf	3980,4,c	;volatile
  6376  00203E  EF22  F010         	goto	i2l2128
  6377  002042                     i2l53:
  6378                           
  6379                           ;./lcd.h: 7:         LATD4 = 0;
  6380  002042  988C               	bcf	3980,4,c	;volatile
  6381  002044                     i2l2128:
  6382                           
  6383                           ;./lcd.h: 9:     if (a & 2)
  6384  002044  A201               	btfss	i2Lcd_Port@a^0,1,c
  6385  002046  EF27  F010         	goto	i2u188_41
  6386  00204A  EF29  F010         	goto	i2u188_40
  6387  00204E                     i2u188_41:
  6388  00204E  EF2C  F010         	goto	i2l55
  6389  002052                     i2u188_40:
  6390  002052                     
  6391                           ;./lcd.h: 10:         LATD5 = 1;
  6392  002052  8A8C               	bsf	3980,5,c	;volatile
  6393  002054  EF2D  F010         	goto	i2l2132
  6394  002058                     i2l55:
  6395                           
  6396                           ;./lcd.h: 12:         LATD5 = 0;
  6397  002058  9A8C               	bcf	3980,5,c	;volatile
  6398  00205A                     i2l2132:
  6399                           
  6400                           ;./lcd.h: 14:     if (a & 4)
  6401  00205A  A401               	btfss	i2Lcd_Port@a^0,2,c
  6402  00205C  EF32  F010         	goto	i2u189_41
  6403  002060  EF34  F010         	goto	i2u189_40
  6404  002064                     i2u189_41:
  6405  002064  EF37  F010         	goto	i2l57
  6406  002068                     i2u189_40:
  6407  002068                     
  6408                           ;./lcd.h: 15:         LATD6 = 1;
  6409  002068  8C8C               	bsf	3980,6,c	;volatile
  6410  00206A  EF38  F010         	goto	i2l2136
  6411  00206E                     i2l57:
  6412                           
  6413                           ;./lcd.h: 17:         LATD6 = 0;
  6414  00206E  9C8C               	bcf	3980,6,c	;volatile
  6415  002070                     i2l2136:
  6416                           
  6417                           ;./lcd.h: 19:     if (a & 8)
  6418  002070  A601               	btfss	i2Lcd_Port@a^0,3,c
  6419  002072  EF3D  F010         	goto	i2u190_41
  6420  002076  EF3F  F010         	goto	i2u190_40
  6421  00207A                     i2u190_41:
  6422  00207A  EF42  F010         	goto	i2l59
  6423  00207E                     i2u190_40:
  6424  00207E                     
  6425                           ;./lcd.h: 20:         LATD7 = 1;
  6426  00207E  8E8C               	bsf	3980,7,c	;volatile
  6427  002080  EF43  F010         	goto	i2l61
  6428  002084                     i2l59:
  6429                           
  6430                           ;./lcd.h: 22:         LATD7 = 0;
  6431  002084  9E8C               	bcf	3980,7,c	;volatile
  6432  002086                     i2l61:
  6433  002086  0012               	return		;funcret
  6434  002088                     __end_ofi2_Lcd_Port:
  6435                           	callstack 0
  6436                           
  6437                           	psect	rparam
  6438  0000                     
  6439                           	psect	temp
  6440  000058                     btemp:
  6441                           	callstack 0
  6442  000058                     	ds	1
  6443  0000                     int$flags	set	btemp
  6444  0000                     wtemp8	set	btemp+1
  6445  0000                     ttemp5	set	btemp+1
  6446  0000                     ttemp6	set	btemp+4
  6447  0000                     ttemp7	set	btemp+8
  6448                           
  6449                           	psect	idloc
  6450                           
  6451                           ;Config register IDLOC0 @ 0x200000
  6452                           ;	unspecified, using default values
  6453  200000                     	org	2097152
  6454  200000  FF                 	db	255
  6455                           
  6456                           ;Config register IDLOC1 @ 0x200001
  6457                           ;	unspecified, using default values
  6458  200001                     	org	2097153
  6459  200001  FF                 	db	255
  6460                           
  6461                           ;Config register IDLOC2 @ 0x200002
  6462                           ;	unspecified, using default values
  6463  200002                     	org	2097154
  6464  200002  FF                 	db	255
  6465                           
  6466                           ;Config register IDLOC3 @ 0x200003
  6467                           ;	unspecified, using default values
  6468  200003                     	org	2097155
  6469  200003  FF                 	db	255
  6470                           
  6471                           ;Config register IDLOC4 @ 0x200004
  6472                           ;	unspecified, using default values
  6473  200004                     	org	2097156
  6474  200004  FF                 	db	255
  6475                           
  6476                           ;Config register IDLOC5 @ 0x200005
  6477                           ;	unspecified, using default values
  6478  200005                     	org	2097157
  6479  200005  FF                 	db	255
  6480                           
  6481                           ;Config register IDLOC6 @ 0x200006
  6482                           ;	unspecified, using default values
  6483  200006                     	org	2097158
  6484  200006  FF                 	db	255
  6485                           
  6486                           ;Config register IDLOC7 @ 0x200007
  6487                           ;	unspecified, using default values
  6488  200007                     	org	2097159
  6489  200007  FF                 	db	255
  6490                           
  6491                           	psect	config
  6492                           
  6493                           ;Config register CONFIG1L @ 0x300000
  6494                           ;	unspecified, using default values
  6495                           ;	PLL Prescaler Selection bits
  6496                           ;	PLLDIV = 0x0, unprogrammed default
  6497                           ;	System Clock Postscaler Selection bits
  6498                           ;	CPUDIV = 0x0, unprogrammed default
  6499                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6500                           ;	USBDIV = 0x0, unprogrammed default
  6501  300000                     	org	3145728
  6502  300000  00                 	db	0
  6503                           
  6504                           ;Config register CONFIG1H @ 0x300001
  6505                           ;	Oscillator Selection bits
  6506                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  6507                           ;	Fail-Safe Clock Monitor Enable bit
  6508                           ;	FCMEN = 0x0, unprogrammed default
  6509                           ;	Internal/External Oscillator Switchover bit
  6510                           ;	IESO = 0x0, unprogrammed default
  6511  300001                     	org	3145729
  6512  300001  09                 	db	9
  6513                           
  6514                           ;Config register CONFIG2L @ 0x300002
  6515                           ;	unspecified, using default values
  6516                           ;	Power-up Timer Enable bit
  6517                           ;	PWRT = 0x1, unprogrammed default
  6518                           ;	Brown-out Reset Enable bits
  6519                           ;	BOR = 0x3, unprogrammed default
  6520                           ;	Brown-out Reset Voltage bits
  6521                           ;	BORV = 0x3, unprogrammed default
  6522                           ;	USB Voltage Regulator Enable bit
  6523                           ;	VREGEN = 0x0, unprogrammed default
  6524  300002                     	org	3145730
  6525  300002  1F                 	db	31
  6526                           
  6527                           ;Config register CONFIG2H @ 0x300003
  6528                           ;	Watchdog Timer Enable bit
  6529                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6530                           ;	Watchdog Timer Postscale Select bits
  6531                           ;	WDTPS = 0xF, unprogrammed default
  6532  300003                     	org	3145731
  6533  300003  1E                 	db	30
  6534                           
  6535                           ; Padding undefined space
  6536  300004                     	org	3145732
  6537  300004  FF                 	db	255
  6538                           
  6539                           ;Config register CONFIG3H @ 0x300005
  6540                           ;	CCP2 MUX bit
  6541                           ;	CCP2MX = 0x1, unprogrammed default
  6542                           ;	PORTB A/D Enable bit
  6543                           ;	PBADEN = 0x1, unprogrammed default
  6544                           ;	Low-Power Timer 1 Oscillator Enable bit
  6545                           ;	LPT1OSC = 0x0, unprogrammed default
  6546                           ;	MCLR Pin Enable bit
  6547                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  6548  300005                     	org	3145733
  6549  300005  03                 	db	3
  6550                           
  6551                           ;Config register CONFIG4L @ 0x300006
  6552                           ;	unspecified, using default values
  6553                           ;	Stack Full/Underflow Reset Enable bit
  6554                           ;	STVREN = 0x1, unprogrammed default
  6555                           ;	Single-Supply ICSP Enable bit
  6556                           ;	LVP = 0x1, unprogrammed default
  6557                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6558                           ;	ICPRT = 0x0, unprogrammed default
  6559                           ;	Extended Instruction Set Enable bit
  6560                           ;	XINST = 0x0, unprogrammed default
  6561                           ;	Background Debugger Enable bit
  6562                           ;	DEBUG = 0x1, unprogrammed default
  6563  300006                     	org	3145734
  6564  300006  85                 	db	133
  6565                           
  6566                           ; Padding undefined space
  6567  300007                     	org	3145735
  6568  300007  FF                 	db	255
  6569                           
  6570                           ;Config register CONFIG5L @ 0x300008
  6571                           ;	unspecified, using default values
  6572                           ;	Code Protection bit
  6573                           ;	CP0 = 0x1, unprogrammed default
  6574                           ;	Code Protection bit
  6575                           ;	CP1 = 0x1, unprogrammed default
  6576                           ;	Code Protection bit
  6577                           ;	CP2 = 0x1, unprogrammed default
  6578                           ;	Code Protection bit
  6579                           ;	CP3 = 0x1, unprogrammed default
  6580  300008                     	org	3145736
  6581  300008  0F                 	db	15
  6582                           
  6583                           ;Config register CONFIG5H @ 0x300009
  6584                           ;	unspecified, using default values
  6585                           ;	Boot Block Code Protection bit
  6586                           ;	CPB = 0x1, unprogrammed default
  6587                           ;	Data EEPROM Code Protection bit
  6588                           ;	CPD = 0x1, unprogrammed default
  6589  300009                     	org	3145737
  6590  300009  C0                 	db	192
  6591                           
  6592                           ;Config register CONFIG6L @ 0x30000A
  6593                           ;	unspecified, using default values
  6594                           ;	Write Protection bit
  6595                           ;	WRT0 = 0x1, unprogrammed default
  6596                           ;	Write Protection bit
  6597                           ;	WRT1 = 0x1, unprogrammed default
  6598                           ;	Write Protection bit
  6599                           ;	WRT2 = 0x1, unprogrammed default
  6600                           ;	Write Protection bit
  6601                           ;	WRT3 = 0x1, unprogrammed default
  6602  30000A                     	org	3145738
  6603  30000A  0F                 	db	15
  6604                           
  6605                           ;Config register CONFIG6H @ 0x30000B
  6606                           ;	unspecified, using default values
  6607                           ;	Configuration Register Write Protection bit
  6608                           ;	WRTC = 0x1, unprogrammed default
  6609                           ;	Boot Block Write Protection bit
  6610                           ;	WRTB = 0x1, unprogrammed default
  6611                           ;	Data EEPROM Write Protection bit
  6612                           ;	WRTD = 0x1, unprogrammed default
  6613  30000B                     	org	3145739
  6614  30000B  E0                 	db	224
  6615                           
  6616                           ;Config register CONFIG7L @ 0x30000C
  6617                           ;	unspecified, using default values
  6618                           ;	Table Read Protection bit
  6619                           ;	EBTR0 = 0x1, unprogrammed default
  6620                           ;	Table Read Protection bit
  6621                           ;	EBTR1 = 0x1, unprogrammed default
  6622                           ;	Table Read Protection bit
  6623                           ;	EBTR2 = 0x1, unprogrammed default
  6624                           ;	Table Read Protection bit
  6625                           ;	EBTR3 = 0x1, unprogrammed default
  6626  30000C                     	org	3145740
  6627  30000C  0F                 	db	15
  6628                           
  6629                           ;Config register CONFIG7H @ 0x30000D
  6630                           ;	unspecified, using default values
  6631                           ;	Boot Block Table Read Protection bit
  6632                           ;	EBTRB = 0x1, unprogrammed default
  6633  30000D                     	org	3145741
  6634  30000D  40                 	db	64
  6635                           tosu	equ	0xFFF
  6636                           tosh	equ	0xFFE
  6637                           tosl	equ	0xFFD
  6638                           stkptr	equ	0xFFC
  6639                           pclatu	equ	0xFFB
  6640                           pclath	equ	0xFFA
  6641                           pcl	equ	0xFF9
  6642                           tblptru	equ	0xFF8
  6643                           tblptrh	equ	0xFF7
  6644                           tblptrl	equ	0xFF6
  6645                           tablat	equ	0xFF5
  6646                           prodh	equ	0xFF4
  6647                           prodl	equ	0xFF3
  6648                           indf0	equ	0xFEF
  6649                           postinc0	equ	0xFEE
  6650                           postdec0	equ	0xFED
  6651                           preinc0	equ	0xFEC
  6652                           plusw0	equ	0xFEB
  6653                           fsr0h	equ	0xFEA
  6654                           fsr0l	equ	0xFE9
  6655                           wreg	equ	0xFE8
  6656                           indf1	equ	0xFE7
  6657                           postinc1	equ	0xFE6
  6658                           postdec1	equ	0xFE5
  6659                           preinc1	equ	0xFE4
  6660                           plusw1	equ	0xFE3
  6661                           fsr1h	equ	0xFE2
  6662                           fsr1l	equ	0xFE1
  6663                           bsr	equ	0xFE0
  6664                           indf2	equ	0xFDF
  6665                           postinc2	equ	0xFDE
  6666                           postdec2	equ	0xFDD
  6667                           preinc2	equ	0xFDC
  6668                           plusw2	equ	0xFDB
  6669                           fsr2h	equ	0xFDA
  6670                           fsr2l	equ	0xFD9
  6671                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        7
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      87
    BANK0           160    107     134
    BANK1           256     31      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> tx_string(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), NULL(NULL[0]), stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), NULL(NULL[0]), stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[1]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> tx_string(BANK1[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[10]), STR_5(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[10]), STR_5(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), ?_sprintf(BANK1[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), ?_sprintf(BANK1[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> NULL(NULL[0]), stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[1]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[10]), STR_5(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> tx_string(BANK1[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S604_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> tx_string(BANK1[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> tx_string(BANK1[30]), 

    s0	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), STR_4(CODE[2]), STR_1(CODE[1]), 

    m0	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), STR_4(CODE[2]), STR_3(CODE[2]), STR_1(CODE[1]), 

    h0	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[1]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 30
		 -> STR_7(CODE[8]), tx_string(BANK1[30]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _RS232 in COMRAM

    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_utoa
    i2_utoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_stoa->i2_fputc
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _stoa->_fputc
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _RS232 in BANK0

    _RS232->i2_sprintf

Critical Paths under _main in BANK1

    _disp_cronometro->_sprintf
    _sprintf->_vfprintf

Critical Paths under _RS232 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RS232 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RS232 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RS232 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RS232 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RS232 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RS232 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   12555
                                             30 BANK1      1     1      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _disp_cronometro
                _setup_Interruptions
                        _setup_RS232
 ---------------------------------------------------------------------------------
 (1) _setup_RS232                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_Interruptions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disp_cronometro                                      0     0      0   11195
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _cronometro
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    10     16   10143
                                              6 BANK1     24     8     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    9508
                                            105 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           43    37      6    8978
                                             85 BANK0     20    14      6
                              _fputc
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4823
                                             53 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3773
                                             42 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                             35 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                             26 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                             26 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2217
                                             35 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     318
                                             26 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                             26 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _cronometro                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2     470
                                             30 BANK0      6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                             27 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     582
                                             28 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                             28 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              1     1      0     110
                                             27 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _RS232                                               8     8      0    6083
                                             18 BANK0      8     8      0
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
                       i2_cronometro
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (11) i2_sprintf                                          20    10     10    5383
                                              0 BANK0     18     8     10
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (12) i2_vfprintf                                          8     2      6    5130
                                             79 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) i2_vfpfcnvrt                                        43    37      6    4924
                                             59 COMRAM    20    14      6
                            i2_fputc
                             i2_stoa
                             i2_utoa
 ---------------------------------------------------------------------------------
 (14) i2_utoa                                             32    22     10    2597
                                             27 COMRAM    32    22     10
                          i2___lodiv
                          i2___lomod
                              i2_pad
 ---------------------------------------------------------------------------------
 (15) i2_pad                                              11     5      6    1847
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (16) i2_fputs                                             7     3      4     791
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (15) i2___lomod                                          17     1     16     211
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (15) i2___lodiv                                          25     9     16     214
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (14) i2_stoa                                             22    18      4    1239
                                              9 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (16) i2_strlen                                            4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) i2_fputc                                             9     5      4     590
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (18) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (11) i2_cronometro                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Write_String                                  6     4      2     294
                                              4 COMRAM     6     4      2
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (12) i2_Lcd_Write_Char                                    3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Set_Cursor                                    5     4      1     406
                                              2 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (12) i2_Lcd_Cmd                                           1     1      0     110
                                              1 COMRAM     1     1      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (13) i2_Lcd_Port                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _disp_cronometro
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _cronometro
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
   _setup_Interruptions
   _setup_RS232

 _RS232 (ROOT)
   i2_Lcd_Set_Cursor
     i2_Lcd_Cmd
       i2_Lcd_Port
   i2_Lcd_Write_String
     i2_Lcd_Write_Char
       i2_Lcd_Port
   i2_cronometro
   i2_sprintf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_fputc
           i2_putch
         i2_stoa
           i2_fputc
           i2_strlen
         i2_utoa
           i2___lodiv
           i2___lomod
           i2_pad
             i2_fputc
             i2_fputs
               i2_fputc
             i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1F      5D       7       36.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      57       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13A      20        0.0%
DATA                 0      0     13A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 06 13:27:36 2021

                           _h 00DD                             _m 00DB                             _s 00D9  
__size_of_setup_Interruptions 0008                            l61 1F6E                            l53 1F2A  
                          l55 1F40                            l64 231E                            l57 1F56  
                          l73 1D1E                            l59 1F6C                            l67 2358  
                          l76 1D84                            l85 1C32                            l79 22D2  
                          _h0 00D7                            _m0 00D5                            _s0 00D3  
                         l122 1F0E                           l125 15B0     __size_ofi2_Lcd_Write_Char 0030  
                         l126 15D4                           l128 1658                           l136 234A  
                         l139 2360                           l605 172A                           l901 0A34  
                         l921 18C6                           l595 147C                           l932 236A  
                         l588 145C                           l908 1E44                           l828 20D8  
                         l853 1910                           l909 1E4C                           l598 170A  
                         l856 1954                           l881 11EE                           l865 10D0  
                         l929 2212                           l938 212A                           l858 1990  
                         l867 10D8                           l876 119C                           l877 11E6  
                         l886 0C7A                           l896 0E46                           l888 0C82  
                         _GIE 007F97                           _pad 18C8                           wreg 000FE8  
         __end_ofi2_vfpfcnvrt 0C42                          l2000 09FC                          l2002 0A22  
                        l2100 22B2                          l2110 22CA                          l2102 22BA  
                        l2200 1D10                          l2112 22CC                          l2104 22BC  
                        l2202 1D16                          l2114 22D0                          l2106 22C0  
                        l2210 1BF6                          l2300 1D78                          l2108 22C2  
                        l2204 1BB0                          l2220 1EFA                          l2212 1EB0  
                        l2302 1D7E                          l2206 1BBE                          l2222 1F02  
                        l2214 1ED2                          l2208 1BF0                          l2216 1EDA  
                        l2090 2312                          l2218 1EE6                          l2322 2338  
                        l2092 2314                          l1700 20EC                          l2420 1DEC  
                        l2324 2342                          l2094 231C                          l2086 2308  
                        l2190 1CC8                          l1702 211C                          l1710 21EC  
                        l2422 1DF4                          l2430 209A                          l2326 235A  
                        l2088 230A                          l2280 1D38                          l2192 1CDA  
                        l2096 22A2                          l1712 21F2                          l2424 1E02  
                        l2432 20A2                          l2440 156E                          l2274 234C  
                        l2290 1D5A                          l2282 1D3E                          l2194 1CE0  
                        l2098 22B0                          l1810 1066                          l1730 1398  
                        l1706 21CC                          l2426 1E28                          l2434 20AA  
                        l2450 15F0                          l2442 1572                          l2292 1D60  
                        l2284 1D46                          l2276 1D20                          l2196 1CEC  
                        l2188 1CB6                          l1820 10AE                          l1812 107A  
                        l1740 13F4                          l1732 13B8                          l1708 21DA  
                        l2436 20C6                          l2428 2088                          l2452 15F8  
                        l2444 158C                          l2460 1FDC                          l2294 1D66  
                        l2286 1D4C                          l2278 1D26                          l2198 1CFE  
                        l1830 1132                          l1814 1082                          l1806 104C  
                        l1742 1422                          l1734 13C0                          l1750 165A  
                        l2454 163E                          l2446 15A8                          l2470 1FF0  
                        l2462 1FDE                          l2296 1D6C                          l2288 1D54  
                        l1832 113E                          l1824 10FA                          l1816 1096  
                        l1808 105E                          l1744 1442                          l1736 13D4  
                        l1728 138C                          l1760 16D2                          l1752 167A  
                        l2456 164A                          l2448 15CC                          l2472 1FFC  
                        l2464 1FE0                          l2298 1D72                          l1690 184A  
                        l1682 17FC                          l1842 11AE                          l1834 1174  
                        l1826 110E                          l1818 109E                          l1746 1444  
                        l1738 13E2                          l1762 16F2                          l1754 1682  
                        l1770 18EC                          l1850 0C52                          l2474 200A  
                        l2466 1FE8                          l2458 1FD0                          l1692 1880  
                        l1684 1810                          l1844 11C2                          l1836 117A  
                        l1828 1114                          l1748 1456                          l1764 1704  
                        l1756 1696                          l1780 1936                          l1772 18FC  
                        l1860 0CBC                          l1852 0C54                          l2476 201C  
                        l2468 1FEC                          l1950 1F3A                          l1686 1822  
                        l1846 11C8                          l1838 117E                          l1758 16A4  
                        l1782 1962                          l1774 1908                          l1766 18C8  
                        l1862 0CC2                          l1870 0DAA                          l1854 0C6E  
                        l2478 2020                          l1952 1F42                          l1944 1F14  
                        l1688 182C                          l1696 20DA                          l1784 1976  
                        l1776 191C                          l1768 18D8                          l1872 0DBE  
                        l1880 0E1E                          l1864 0D3A                          l1856 0CAA  
                        l1848 0C42                          l1960 0826                          l1954 1F50  
                        l1946 1F24                          l1698 20E6                          l1778 1930  
                        l1874 0DDC                          l1866 0D40                          l1858 0CB2  
                        l1970 0892                          l1962 084A                          l1956 1F58  
                        l1948 1F2C                          l1876 0DF6                          l1868 0D46  
                        l1980 0956                          l1972 08C8                          l1964 0858  
                        l1958 1F66                          l1878 0E10                          l1990 09D4  
                        l1966 086A                          ?_pad 008A                          l1984 098E  
                        l1976 08E8                          l1968 086E                          l1986 09B2  
                        l1994 09E2                          l1978 090C                          l1996 09F0  
                        l1988 09C0                          STR_1 081A                          STR_2 0823  
                        STR_3 0823                          STR_4 0823                          STR_5 0801  
                        STR_6 0811                          STR_7 081B                          _BRGH 007D62  
                        _CREN 007D5C                          u1100 184A                          u1101 1846  
                        u1110 1880                          u1111 187C                          u2000 1ED2  
                        u1120 210C                          u1200 13B8                          u2001 1ECE  
                        u1201 13B4                          u2010 1EFA                          u1130 211C  
                        u1210 13E2                          u2011 1EF6                          u1131 2118  
                        u1211 13DE                          u1220 1422                          u1140 2212  
                        u1221 141E                          u1141 220E                          u1230 167A  
                        u1127 2102                          u1231 1676                          u1080 1810  
                        u1400 119C                          u1240 16A4                          u1081 180C  
                        u1401 1198                          u1241 16A0                          u1090 1822  
                        u1410 11AA                          u1250 16D2                          u1091 181E  
                        u1411 11A6                          u1331 1056                          u1251 16CE  
                        u1420 11E6                          u1340 107A                          u1260 18D8  
                        u2140 1E44                          u1421 11E2                          u1341 1076  
                        u1261 18D4                          u2141 1E40                          u1350 10AE  
                        u1270 18FC                          u1430 0C52                          u2150 15A8  
                        u2207 1D40                          u1351 10AA                          u1191 1392  
                        u1271 18F8                          u1431 0C4E                          u2151 15A4  
                        u1360 10CC                          u1280 1954                          u1440 0C6E  
                        u2160 15CC                          u2217 1D4E                          u1361 10C8  
                        u1281 1950                          u1441 0C6A                          u2161 15C8  
                        u1610 1F24                          u1370 10F6                          u1290 1962  
                        u1450 0DBE                          u2170 15F0                          u1611 1F20  
                        u2227 2316                          u1371 10F2                          u1291 195E  
                        u1451 0DBA                          u2171 15EC                          u1620 1F3A  
                        u1380 1132                          u1460 0DDC                          u1621 1F36  
                        u1381 112E                          u1461 0DD8                          u1630 1F50  
                        u1390 115E                          u1470 0DF6                          u1631 1F4C  
                        u1471 0DF2                          u1640 1F66                          u1480 0E10  
                        u1641 1F62                          u1481 0E0C                          u1490 0E1E  
                        u1650 084A                          u1491 0E1A                          u1651 0846  
                        u2187 2012                          u1660 0892                          u2197 1D2E  
                        u1397 1154                          u1661 088E                          u1670 090C  
                        u1671 0908                          u1680 09B2                          u1681 09AE  
                        u1950 1CC8                          u1951 1CC4                          u1960 1CFE  
                        u1961 1CFA                          u1970 1BEC                          _PEIE 007F96  
                        u1980 1C22                          u1990 1C32                          u1991 1C2E  
                        u1977 1BE2                          u1987 1C18                          _RCIE 007CED  
                        i2l61 2086                          i2l53 2042                          i2l55 2058  
                        i2l64 2336                          i2l57 206E                          i2l73 1DEA  
                        i2l59 2084                          i2l85 1CB0                          i2l79 2302  
                        _SPEN 007D5F                          _TXIF 007CF4                          _TXEN 007D65  
                        _SYNC 007D64             ?_Lcd_Write_String 007E                          _dbuf 0100  
                        _main 1FD0                          _prec 00CF                          _nout 00CB  
                        pad@i 0091                          pad@p 008E                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          pad@w 0093                          fsr2l 000FD9  
                        _stoa 104C                          btemp 0058                          _utoa 0C42  
                        start 000E            ??_Lcd_Write_String 0080               __end_ofi2_fputc 1A5C  
             __end_ofi2_fputs 229E               __end_of_Lcd_Cmd 2320               __end_ofi2_putch 236E  
                ___param_bank 000000                         ??_pad 0090                    i2_vfprintf 1E4E  
                       ?_main 0001                         ?_stoa 0083                         ?_utoa 0095  
             __end_of___lodiv 147E                         _LATE0 007C68                         _LATE1 007C69  
                       _LATD4 007C64                         _LATD5 007C65                         _LATD6 007C66  
                       _LATD7 007C67               __end_of___lomod 172C                         _RS232 0008  
                       i2l122 1FCE                         i2l133 1B8C                         i2l605 17FA  
                       i2l901 0C40                         i2l921 1A5A                         i2l595 156C  
                       i2l932 236C                         i2l588 154C                         i2l908 1EA6  
                       i2l828 217C                         i2l853 1AA2                         i2l909 1EAE  
                       i2l598 17DA                         i2l856 1AE4                         i2l881 138A  
                       i2l865 1270                         i2l929 229C                         i2l938 21CA  
                       i2l858 1B20                         i2l867 1278                         i2l876 1338  
                       i2l877 1382                         i2l886 0E80                         i2l896 104A  
                       i2l888 0E88                  vfpfcnvrt@fmt 00B7                  vfpfcnvrt@llu 00BF  
                       _SPBRG 000FAF       __size_of_Lcd_Set_Cursor 006E                         _TRISD 000F95  
                       _TRISE 000F96                         _TXREG 000FAD                         i2_pad 1A5C  
          __size_ofi2_Lcd_Cmd 0018                   ?i2_Lcd_Port 0001                         _flags 00D1  
                       _fputc 17FC                         _fputs 21CC                         pad@fp 008A  
                       _width 00CD                         _putch 236A                         tablat 000FF5  
                       plusw1 000FE3                         plusw2 000FDB                         stoa@i 008F  
                       stoa@l 0097                         stoa@p 0095                         stoa@s 0085  
                       stoa@w 0091                         ttemp5 0059                         ttemp6 005C  
                       ttemp7 0060                         utoa@d 0097                         utoa@i 00B3  
                       utoa@n 00AB                         utoa@p 00A7                         utoa@w 00A9  
                       status 000FD8                         wtemp8 0059               __end_of_sprintf 20DA  
            ___lodiv@dividend 007A            __size_ofi2___lodiv 00F0            __size_ofi2___lomod 00D0  
            i2_Lcd_Set_Cursor 1D86              __end_of_Lcd_Init 1D86              __end_of_Lcd_Port 1F70  
            __end_ofi2_strlen 21CC               __initialization 2214                  __end_of_main 202C  
                __end_of_stoa 11F0                  __end_of_utoa 0E48                    i2stoa@nuls 000F  
       __size_ofi2_cronometro 0060                   i2_vfpfcnvrt 0A36                 i2vfpfcnvrt@ap 0040  
               i2vfpfcnvrt@cp 004E                 i2vfpfcnvrt@fp 003C                        ??_main 015C  
                      ??_stoa 0087                        ??_utoa 009F            __size_of_Lcd_Clear 000E  
               __activetblptr 000002                    i2sprintf@f 006C                        ?_RS232 0001  
                  i2sprintf@s 0060            __size_ofi2_sprintf 0052                        ?i2_pad 0011  
            ___lodiv@quotient 008A                        ?_fputc 007A                        ?_fputs 0083  
                      ?_putch 0001                        i2l2010 1202                        i2l2020 1240  
                      i2l2012 120A                        i2l2030 12B4                        i2l2022 124E  
                      i2l2014 121C                        i2l2040 131A                        i2l2032 12D2  
                      i2l2016 1224                        i2l2008 11F0                        i2l2130 2052  
                      i2l2034 12DE                        i2l2026 129C                        i2l2018 1238  
                      i2l2050 0E48                        i2l2132 205A                        i2l2124 202E  
                      i2l2044 134C                        i2l2036 1312                        i2l2028 12B0  
                      i2l2060 0EB8                        i2l2052 0E58                        i2l2140 0A36  
                      i2l2134 2068                        i2l2126 203C                        i2l2046 1360  
                      i2l2038 1316                        i2l2070 0F4A                        i2l2062 0EC2  
                      i2l2054 0E5A                        i2l2150 0AA2                        i2l2142 0A5A  
                      i2l2136 2070                        i2l2128 2044                        i2l2240 232A  
                      i2l2048 1364                        i2l2080 1012                        i2l2064 0EC8  
                      i2l2072 0FAE                        i2l2056 0E74                        i2l2160 0B66  
                      i2l2152 0AD8                        i2l2144 0A68                        i2l2138 207E  
                      i2l2242 232C                        i2l2330 1D98                        i2l2250 22E4  
                      i2l2074 0FC0                        i2l2082 1022                        i2l2066 0F3E  
                      i2l2058 0EB0                        i2l2170 0BE4                        i2l2146 0A7A  
                      i2l2244 2334                        i2l2236 2322                        i2l2340 1DDE  
                      i2l2332 1DAA                        i2l2260 22FA                        i2l2252 22EC  
                      i2l2076 0FDE                        i2l2068 0F44                        i2l2164 0B9E  
                      i2l2156 0AF8                        i2l2148 0A7E                        i2l2180 0C0A  
                      i2l2238 2324                        i2l2342 1DE4                        i2l2334 1DB0  
                      i2l2262 22FC                        i2l2254 22EE                        i2l2246 22D6  
                      i2l2350 1C74                        i2l2078 0FF8                        i2l2182 0C2E  
                      i2l2166 0BC2                        i2l2174 0BF0                        i2l2158 0B1C  
                      i2l2270 1E64                        i2l2336 1DBA                        i2l2328 1D88  
                      i2l2264 2300                        i2l2256 22F2                        i2l2248 22E2  
                      i2l2344 1C34                        i2l2360 1FBA                        i2l2352 1F70  
                      i2l1720 19C0                        i2l1800 218E                        i2l2176 0BFE  
                      i2l2168 0BD0                        i2l2272 1E8A                        i2l2338 1DCC  
                      i2l2258 22F4                        i2l2346 1C40                        i2l2362 1FC2  
                      i2l2354 1F92                        i2l1722 19DE                        i2l1714 1992  
                      i2l1802 21BE                        i2l2266 1E4E                        i2l2370 214E  
                      i2l2348 1C70                        i2l2356 1F9A                        i2l1724 1A14  
                      i2l1716 19A4                        i2l1900 1532                        i2l2268 1E56  
                      i2l2372 216A                        i2l2364 212C                        i2l2358 1FA6  
                      i2l1718 19B6                        i2l1902 1534                        i2l1910 1752  
                      i2l2366 213E                        i2l2390 1B44                        i2l1904 1546  
                      i2l1920 17D4                        i2l1912 1766                        i2l2368 2146  
                      i2l2392 1B48                        i2l1914 1774                        i2l1906 172C  
                      i2l1930 1A9A                        i2l1922 1A5C                        i2l2394 1B76  
                      i2l1916 17A2                        i2l1908 174A                        i2l1940 1B08  
                      i2l1932 1AAE                        i2l1924 1A6C                        i2l2396 1B80  
                      i2l1918 17C2                        i2l1790 2266                        i2l1934 1AC2  
                      i2l1926 1A80                        i2l1792 2278                        i2l1936 1AC6  
                      i2l1928 1A8E                        i2l1890 14B0                        i2l1794 227C  
                      i2l1938 1AF4                        i2l1796 217E                        i2l1892 14C4  
                      i2l1884 147E                        i2l1788 225A                        i2l1798 218A  
                      i2l1894 14D2                        i2l1886 148A                        i2l1896 14E4  
                      i2l1888 14A8                        i2l1898 1512                     ??i2_fputc 0005  
                   ??i2_fputs 000E                        _OSCCON 000FD3                     ??_Lcd_Cmd 007B  
                   ??i2_putch 0001       __size_of_Lcd_Write_Char 0036                        i2pad@i 0018  
                      i2pad@p 0015                        i2pad@w 001A                        i2_stoa 11F0  
                      i2_utoa 0E48                  i2_cronometro 1F70                  vfprintf@cfmt 00C9  
           __end_ofi2_Lcd_Cmd 2338                 i2vfprintf@fmt 0052                     ??___lodiv 008A  
                   ??___lomod 008A           __size_ofi2_Lcd_Port 005C                   ?i2_vfprintf 0050  
         i2Lcd_Write_String@a 0005           i2Lcd_Write_String@i 0009                        clear_0 223A  
                      clear_1 2246                        isa$std 000001                        pad@buf 008C  
            i2_Lcd_Write_Char 22D4                        _strlen 20DA                        fputc@c 007A  
                      fputs@c 0087                        fputs@i 0088                        fputs@s 0083  
           __end_ofi2___lodiv 156E             __end_ofi2___lomod 17FC                  ?_setup_RS232 0001  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        stoa@cp 0093                        stoa@fp 0083  
                      putch@c 0001              __end_of_vfprintf 1E4E             i2___lodiv@divisor 0009  
                      utoa@fp 0095             i2___lodiv@counter 0019                     ??_sprintf 00CB  
         _setup_Interruptions 235A               Lcd_Set_Cursor@a 007D               Lcd_Set_Cursor@b 007C  
             Lcd_Set_Cursor@y 007F               Lcd_Set_Cursor@z 007E                    __accesstop 0060  
     __end_of__initialization 224C             __end_of_Lcd_Clear 235A                 ___rparam_used 000001  
               __end_of_RS232 1BB0             __end_ofi2_sprintf 217E                 __end_ofi2_pad 1B22  
              __pcstackCOMRAM 0001                  __pidataBANK0 2362          ?_setup_Interruptions 0001  
               __end_of_fputc 18C8                 __end_of_fputs 2214                 __end_of_putch 236C  
 __size_ofi2_Lcd_Write_String 007E             i2Lcd_Write_Char@a 0004             i2Lcd_Write_Char@y 0003  
                     ??_RS232 0072                _Lcd_Set_Cursor 1CB2                       ??i2_pad 0017  
              i2vfpfcnvrt@fmt 003E                i2vfpfcnvrt@llu 0046                     ?_Lcd_Init 0001  
                   ?_Lcd_Port 0001                     ?i2_strlen 0001                       ??_fputc 007E  
                     ??_fputs 0087          i2Lcd_Write_Char@temp 0002                       ??_putch 007A  
                  __pbssBANK0 00CB                    __pbssBANK1 0100                   i2sprintf@ap 006A  
         __size_ofi2_vfprintf 0062                       ?i2_stoa 000A                       ?i2_utoa 001C  
       ??_setup_Interruptions 007A      __size_of_disp_cronometro 00EC                       _BAUDCON 000FB8  
        i2Lcd_Set_Cursor@temp 0007     __size_of_Lcd_Write_String 0084        __end_of_Lcd_Set_Cursor 1D20  
                     ?_strlen 007A      __end_ofi2_Lcd_Set_Cursor 1DEC             i2___lomod@divisor 0009  
          __size_of_vfpfcnvrt 0210             i2___lomod@counter 0011                    ??_Lcd_Init 007C  
                ??i2_Lcd_Port 0001                    ??_Lcd_Port 007A                    ??i2_strlen 0003  
            ___lomod@dividend 007A                       i2_fputc 1992                       i2_fputs 225A  
              _Lcd_Write_Char 229E                       _Lcd_Cmd 2304                       i2pad@fp 0011  
                     i2_putch 236C                       i2stoa@i 0016                       i2stoa@l 001E  
                     i2stoa@p 001C                       i2stoa@s 000C                       i2stoa@w 0018  
                     i2utoa@d 001E                       i2utoa@i 003A                       i2utoa@n 0032  
                     i2utoa@p 002E                       i2utoa@w 0030               __size_ofi2_stoa 019C  
             __size_ofi2_utoa 0204                    _cronometro 1EB0                       __Hparam 0000  
                     __Lparam 0000                       ___lodiv 138C                       ___lomod 165A  
                   ?_vfprintf 013E                i2vfprintf@cfmt 0056                  __psmallconst 0800  
          __end_ofi2_Lcd_Port 2088                  ?i2_vfpfcnvrt 003C                       __pcinit 2214  
                     __ramtop 0800               ?_Lcd_Set_Cursor 007C                       __ptext0 1FD0  
                     __ptext1 2338                       __ptext2 235A                       __ptext3 156E  
                     __ptext4 2088                       __ptext5 1DEC                       __ptext6 0826  
                     __ptext7 0C42                       __ptext8 18C8                       __ptext9 21CC  
             __size_of_strlen 0052                  __size_of_pad 00CA                       _sprintf 2088  
        __size_of_setup_RS232 0014        __end_of_Lcd_Write_Char 22D4                __pintcode_body 1B22  
        end_of_initialization 224C                       fputc@fp 007C                 __Lmediumconst 0000  
                     int_func 1B22                       fputs@fp 0085      __end_ofi2_Lcd_Write_Char 2304  
           __end_of_vfpfcnvrt 0A36                       postdec1 000FE5                       postdec2 000FDD  
          i2___lodiv@dividend 0001                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE                     Lcd_Port@a 007A                  ??i2_vfprintf 0056  
                  ??_vfprintf 00C9                       strlen@a 007C                       strlen@s 007A  
                   i2_Lcd_Cmd 2320             ??_disp_cronometro 00CB                     _TRISCbits 000F94  
                   i2___lodiv 147E                     i2___lomod 172C               ?_Lcd_Write_Char 0001  
           Lcd_Write_String@a 007E             Lcd_Write_String@i 0082            i2___lodiv@quotient 0011  
          __end_ofi2_vfprintf 1EB0                   ?_cronometro 0001                __end_ofi2_stoa 138C  
              __end_ofi2_utoa 104C                     _Lcd_Clear 234C                     i2_sprintf 212C  
                 vfpfcnvrt@ap 00B9                   vfpfcnvrt@cp 00C7                   vfpfcnvrt@fp 00B5  
            _Lcd_Write_String 1BB0                    ?i2_Lcd_Cmd 0001                     i2fputc@fp 0003  
                   i2fputs@fp 000C                __end_of_strlen 212C           start_initialization 2214  
             ___lodiv@divisor 0082               ___lodiv@counter 0092                   __end_of_pad 1992  
                  ?i2___lodiv 0001                    ?i2___lomod 0001             __size_of_Lcd_Init 0066  
           __size_of_Lcd_Port 0060             __size_ofi2_strlen 004E                     i2strlen@a 0003  
                   i2strlen@s 0001                      ??i2_stoa 000E                      ??i2_utoa 0026  
                 vfprintf@fmt 0140                  i2vfprintf@ap 0054                  i2vfprintf@fp 0050  
                  ?_Lcd_Clear 0001    __end_ofi2_Lcd_Write_String 1CB2                    ?i2_sprintf 0060  
                 __pdataBANK0 00DF               Lcd_Write_Char@a 007D               Lcd_Write_Char@y 007C  
                    ??_strlen 007C          __size_ofi2_vfpfcnvrt 020C                  i2sprintf@fmt 0062  
               __pcstackBANK0 0060                 __pcstackBANK1 013E             ?i2_Lcd_Set_Cursor 0003  
         __size_of_cronometro 0060            ??i2_Lcd_Set_Cursor 0004                      ?i2_fputc 0001  
                    ?i2_fputs 000A                      ?_Lcd_Cmd 0001                      ?i2_putch 0001  
 __end_of_setup_Interruptions 2362              ??_Lcd_Set_Cursor 007D                     __pintcode 0008  
                    ?___lodiv 007A                      ?___lomod 007A                   ??i2_Lcd_Cmd 0002  
           __size_of_vfprintf 0062               ___lomod@divisor 0082                   __smallconst 0800  
              __size_of_RS232 1BA8               ___lomod@counter 008A                __size_ofi2_pad 00C6  
                    ?_sprintf 0144                __size_of_fputc 00CC                   ??i2___lodiv 0011  
              __size_of_fputs 0048                   ??i2___lomod 0011                __size_of_putch 0002  
           ?i2_Lcd_Write_Char 0001            i2___lomod@dividend 0001                 ?i2_cronometro 0001  
                    i2u210_40 1CB0                      i2u130_40 229C                      i2u202_40 1EA6  
                    i2u210_41 1CAC                      i2u130_41 2298                      i2u202_41 1EA2  
                    i2u211_40 1F92                      i2u115_40 19A4                      i2u131_40 21AE  
                    i2u211_41 1F8E                      i2u115_41 19A0                      i2u131_47 21A4  
                    i2u212_40 1FBA                      i2u116_40 19B6                      i2u132_40 21BE  
                    i2u212_41 1FB6                      i2u116_41 19B2                      i2u132_41 21BA  
                    i2u117_40 19DE                      i2u117_41 19DA                      i2u206_40 1D98  
                    i2u118_40 1A14                      i2u206_41 1D94                      i2u118_41 1A10  
                    i2u150_41 1484                      i2u207_40 1DCC                      i2u151_40 14A8  
                    i2u207_41 1DC8                      i2u151_41 14A4                      i2u223_47 232E  
                    i2u208_40 1C6C                      i2u152_40 14D2                      i2u160_40 1AF4  
                    i2u152_41 14CE                      i2u160_41 1AF0                      i2u208_47 1C62  
                    i2u209_40 1CA0                      i2u153_40 1512                      i2u153_41 150E  
                    i2u209_47 1C96                      i2u170_40 121C                      i2u154_40 174A  
                    i2u170_41 1218                      i2u154_41 1746                      Lcd_Cmd@a 007B  
                    i2u171_40 124E                      i2u155_40 1774                      i2u171_41 124A  
                    i2u155_41 1770                      i2u172_40 126C                      i2u156_40 17A2  
                    i2u180_40 0E74                      i2u172_41 1268                      i2u156_41 179E  
                    i2u180_41 0E70                      i2u173_40 1298                      i2u157_40 1A6C  
                    i2u181_40 0FC0                      i2u173_41 1294                      i2u157_41 1A68  
                    i2u181_41 0FBC                      i2u190_40 207E                      i2u174_40 12D2  
                    i2u158_40 1A8E                      i2u182_40 0FDE                      i2u190_41 207A  
                    i2u174_41 12CE                      i2u158_41 1A8A                      i2u182_41 0FDA  
                    i2u175_40 12FE                      i2u159_40 1AE4                      i2u183_40 0FF8  
                    i2u191_40 0A5A                      i2u159_41 1AE0                      i2u183_41 0FF4  
                    i2u191_41 0A56                      i2u175_47 12F4                      i2u176_40 1338  
                    i2u184_40 1012                      i2u192_40 0AA2                      i2u176_41 1334  
                    i2u184_41 100E                      i2u192_41 0A9E                      i2u177_40 1348  
                    i2u185_40 1022                      i2u193_40 0B1C                      i2u177_41 1344  
                    i2u169_41 11FA                      i2u185_41 101E                      i2u193_41 0B18  
                    i2u178_40 1382                      i2u194_40 0BC2                      i2u178_41 137E  
                    i2u194_41 0BBE                      i2u187_40 203C                      i2u179_40 0E58  
                    i2u187_41 2038                      i2u179_41 0E54                      i2u188_40 2052  
                    i2u188_41 204E                      i2u189_40 2068                      i2u189_41 2064  
          ??i2_Lcd_Write_Char 0002                   ??_Lcd_Clear 007C               _disp_cronometro 156E  
                 ??i2_sprintf 0058                     _vfpfcnvrt 0826              ??_Lcd_Write_Char 007B  
               ??_setup_RS232 007A                      i2pad@buf 0013                      _Lcd_Init 1D20  
                   _tx_string 0120                      _Lcd_Port 1F10                      i2_strlen 217E  
                   copy_data0 2228                      i2fputc@c 0001                      i2fputs@c 000E  
                    i2fputs@i 000F                      i2fputs@s 000A      __end_of_Lcd_Write_String 1C34  
                    i2stoa@cp 001A                      i2stoa@fp 000A              __size_ofi2_fputc 00CA  
            __size_ofi2_fputs 0044                      i2utoa@fp 001C              __size_of_Lcd_Cmd 001C  
            __size_ofi2_putch 0002                ??i2_cronometro 0001                  ??_cronometro 007A  
                    __Hrparam 0000                    vfprintf@ap 0142                      __Lrparam 0000  
                  vfprintf@fp 013E              __size_of___lodiv 00F2              __size_of___lomod 00D2  
                  ?_vfpfcnvrt 00B5                    sprintf@fmt 0146            __end_of_cronometro 1F10  
                    __ptext10 165A                      __ptext11 138C                      __ptext20 1D20  
                    __ptext12 104C                      __ptext21 234C                      __ptext13 20DA  
                    __ptext30 225A                      __ptext22 2304                      __ptext14 17FC  
                    __ptext31 172C                      __ptext23 1F10                      __ptext15 236A  
                    __ptext40 1D86                      __ptext32 147E                      __ptext16 1EB0  
                    __ptext41 2320                      __ptext33 11F0                      __ptext25 212C  
                    __ptext17 1BB0                      __ptext42 202C                      __ptext34 217E  
                    __ptext26 1E4E                      __ptext18 229E                      __ptext35 1992  
                    __ptext27 0A36                      __ptext19 1CB2                      __ptext36 236C  
                    __ptext28 0E48                      __ptext37 1F70                      __ptext29 1A5C  
                    __ptext38 1C34                      __ptext39 22D4              __size_of_sprintf 0052  
         __end_of_setup_RS232 234C                 __size_of_main 005C       __end_of_disp_cronometro 165A  
               __size_of_stoa 01A4                 __size_of_utoa 0206                     stoa@F1133 00DF  
                    isa$xinst 000000                      int$flags 0058                   i2Lcd_Port@a 0001  
                    _vfprintf 1DEC            i2_Lcd_Write_String 1C34            Lcd_Write_Char@temp 007B  
                    intlevel2 0000                     sprintf@ap 0154           ?i2_Lcd_Write_String 0005  
           i2Lcd_Set_Cursor@a 0004             i2Lcd_Set_Cursor@b 0003             i2Lcd_Set_Cursor@y 0006  
           i2Lcd_Set_Cursor@z 0005     __size_ofi2_Lcd_Set_Cursor 0066                    i2Lcd_Cmd@a 0002  
        ??i2_Lcd_Write_String 0007                 ??i2_vfpfcnvrt 0042                   ??_vfpfcnvrt 00BB  
                    stoa@nuls 0088            Lcd_Set_Cursor@temp 0080                      sprintf@f 0156  
                    sprintf@s 0144          __end_ofi2_cronometro 1FD0                   _setup_RS232 2338  
                  i2_Lcd_Port 202C              ?_disp_cronometro 0001  
