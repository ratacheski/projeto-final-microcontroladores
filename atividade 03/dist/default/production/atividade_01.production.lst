

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 06 10:54:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     _TRISCbits	set	3988
    91  0000                     _OSCCON	set	4051
    92  0000                     _TRISE	set	3990
    93  0000                     _TRISD	set	3989
    94  0000                     _SPBRG	set	4015
    95  0000                     _BAUDCON	set	4024
    96  0000                     _RCREG	set	4014
    97  0000                     _TXREG	set	4013
    98  0000                     _RCIE	set	31981
    99  0000                     _PEIE	set	32662
   100  0000                     _GIE	set	32663
   101  0000                     _CREN	set	32092
   102  0000                     _SPEN	set	32095
   103  0000                     _BRGH	set	32098
   104  0000                     _SYNC	set	32100
   105  0000                     _TXEN	set	32101
   106  0000                     _RCIF	set	31989
   107  0000                     _TXIF	set	31988
   108  0000                     _LATE1	set	31849
   109  0000                     _LATE0	set	31848
   110  0000                     _LATD7	set	31847
   111  0000                     _LATD6	set	31846
   112  0000                     _LATD5	set	31845
   113  0000                     _LATD4	set	31844
   114                           
   115                           	psect	smallconst
   116  000800                     __psmallconst:
   117                           	callstack 0
   118  000800  00                 	db	0
   119  000801                     STR_5:
   120  000801  58                 	db	88	;'X'
   121  000802  20                 	db	32
   122  000803  3D                 	db	61	;'='
   123  000804  20                 	db	32
   124  000805  25                 	db	37
   125  000806  35                 	db	53	;'5'
   126  000807  75                 	db	117	;'u'
   127  000808  20                 	db	32
   128  000809  20                 	db	32
   129  00080A  20                 	db	32
   130  00080B  20                 	db	32
   131  00080C  20                 	db	32
   132  00080D  20                 	db	32
   133  00080E  20                 	db	32
   134  00080F  20                 	db	32
   135  000810  20                 	db	32
   136  000811  20                 	db	32
   137  000812  20                 	db	32
   138  000813  00                 	db	0
   139  000814                     STR_11:
   140  000814  59                 	db	89	;'Y'
   141  000815  20                 	db	32
   142  000816  3D                 	db	61	;'='
   143  000817  20                 	db	32
   144  000818  25                 	db	37
   145  000819  35                 	db	53	;'5'
   146  00081A  75                 	db	117	;'u'
   147  00081B  20                 	db	32
   148  00081C  20                 	db	32
   149  00081D  20                 	db	32
   150  00081E  20                 	db	32
   151  00081F  20                 	db	32
   152  000820  20                 	db	32
   153  000821  20                 	db	32
   154  000822  20                 	db	32
   155  000823  20                 	db	32
   156  000824  20                 	db	32
   157  000825  20                 	db	32
   158  000826  00                 	db	0
   159  000827                     STR_12:
   160  000827  20                 	db	32
   161  000828  20                 	db	32
   162  000829  20                 	db	32
   163  00082A  20                 	db	32
   164  00082B  20                 	db	32
   165  00082C  20                 	db	32
   166  00082D  53                 	db	83	;'S'
   167  00082E  4F                 	db	79	;'O'
   168  00082F  4D                 	db	77	;'M'
   169  000830  41                 	db	65	;'A'
   170  000831  20                 	db	32
   171  000832  20                 	db	32
   172  000833  20                 	db	32
   173  000834  20                 	db	32
   174  000835  20                 	db	32
   175  000836  20                 	db	32
   176  000837  00                 	db	0
   177  000838                     STR_3:
   178  000838  56                 	db	86	;'V'
   179  000839  61                 	db	97	;'a'
   180  00083A  6C                 	db	108	;'l'
   181  00083B  6F                 	db	111	;'o'
   182  00083C  72                 	db	114	;'r'
   183  00083D  20                 	db	32
   184  00083E  20                 	db	32
   185  00083F  69                 	db	105	;'i'
   186  000840  6E                 	db	110	;'n'
   187  000841  76                 	db	118	;'v'
   188  000842  61                 	db	97	;'a'
   189  000843  6C                 	db	108	;'l'
   190  000844  69                 	db	105	;'i'
   191  000845  64                 	db	100	;'d'
   192  000846  6F                 	db	111	;'o'
   193  000847  21                 	db	33
   194  000848  00                 	db	0
   195  000849                     STR_13:
   196  000849  44                 	db	68	;'D'
   197  00084A  69                 	db	105	;'i'
   198  00084B  67                 	db	103	;'g'
   199  00084C  69                 	db	105	;'i'
   200  00084D  74                 	db	116	;'t'
   201  00084E  65                 	db	101	;'e'
   202  00084F  20                 	db	32
   203  000850  6F                 	db	111	;'o'
   204  000851  20                 	db	32
   205  000852  76                 	db	118	;'v'
   206  000853  61                 	db	97	;'a'
   207  000854  6C                 	db	108	;'l'
   208  000855  6F                 	db	111	;'o'
   209  000856  72                 	db	114	;'r'
   210  000857  20                 	db	32
   211  000858  58                 	db	88	;'X'
   212  000859  00                 	db	0
   213  00085A                     STR_1:
   214  00085A  44                 	db	68	;'D'
   215  00085B  69                 	db	105	;'i'
   216  00085C  67                 	db	103	;'g'
   217  00085D  69                 	db	105	;'i'
   218  00085E  74                 	db	116	;'t'
   219  00085F  65                 	db	101	;'e'
   220  000860  20                 	db	32
   221  000861  6F                 	db	111	;'o'
   222  000862  20                 	db	32
   223  000863  76                 	db	118	;'v'
   224  000864  61                 	db	97	;'a'
   225  000865  6C                 	db	108	;'l'
   226  000866  6F                 	db	111	;'o'
   227  000867  72                 	db	114	;'r'
   228  000868  20                 	db	32
   229  000869  59                 	db	89	;'Y'
   230  00086A  00                 	db	0
   231  00086B                     STR_4:
   232  00086B  44                 	db	68	;'D'
   233  00086C  69                 	db	105	;'i'
   234  00086D  67                 	db	103	;'g'
   235  00086E  69                 	db	105	;'i'
   236  00086F  74                 	db	116	;'t'
   237  000870  65                 	db	101	;'e'
   238  000871  20                 	db	32
   239  000872  4E                 	db	78	;'N'
   240  000873  6F                 	db	111	;'o'
   241  000874  76                 	db	118	;'v'
   242  000875  61                 	db	97	;'a'
   243  000876  6D                 	db	109	;'m'
   244  000877  65                 	db	101	;'e'
   245  000878  6E                 	db	110	;'n'
   246  000879  74                 	db	116	;'t'
   247  00087A  65                 	db	101	;'e'
   248  00087B  00                 	db	0
   249  00087C                     STR_6:
   250  00087C  20                 	db	32
   251  00087D  20                 	db	32
   252  00087E  20                 	db	32
   253  00087F  54                 	db	84	;'T'
   254  000880  4F                 	db	79	;'O'
   255  000881  54                 	db	84	;'T'
   256  000882  41                 	db	65	;'A'
   257  000883  4C                 	db	76	;'L'
   258  000884  20                 	db	32
   259  000885  3D                 	db	61	;'='
   260  000886  20                 	db	32
   261  000887  25                 	db	37
   262  000888  75                 	db	117	;'u'
   263  000889  00                 	db	0
   264  00088A                     STR_8:
   265  00088A  54                 	db	84	;'T'
   266  00088B  4F                 	db	79	;'O'
   267  00088C  54                 	db	84	;'T'
   268  00088D  41                 	db	65	;'A'
   269  00088E  4C                 	db	76	;'L'
   270  00088F  20                 	db	32
   271  000890  3D                 	db	61	;'='
   272  000891  20                 	db	32
   273  000892  25                 	db	37
   274  000893  75                 	db	117	;'u'
   275  000894  0D                 	db	13
   276  000895  00                 	db	0
   277  000896                     STR_2:
   278  000896  58                 	db	88	;'X'
   279  000897  20                 	db	32
   280  000898  3D                 	db	61	;'='
   281  000899  20                 	db	32
   282  00089A  25                 	db	37
   283  00089B  75                 	db	117	;'u'
   284  00089C  0D                 	db	13
   285  00089D  00                 	db	0
   286  00089E                     STR_7:
   287  00089E  59                 	db	89	;'Y'
   288  00089F  20                 	db	32
   289  0008A0  3D                 	db	61	;'='
   290  0008A1  20                 	db	32
   291  0008A2  25                 	db	37
   292  0008A3  75                 	db	117	;'u'
   293  0008A4  0D                 	db	13
   294  0008A5  00                 	db	0
   295  0008A6  00                 	db	0	; dummy byte at the end
   296  0000                     
   297                           ; #config settings
   298                           
   299                           	psect	cinit
   300  001C46                     __pcinit:
   301                           	callstack 0
   302  001C46                     start_initialization:
   303                           	callstack 0
   304  001C46                     __initialization:
   305                           	callstack 0
   306                           
   307                           ; Clear objects allocated to BITBANK0 (1 bytes)
   308  001C46  0100               	movlb	0
   309  001C48  6BEA               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   310                           
   311                           ; Clear objects allocated to BANK0 (108 bytes)
   312  001C4A  EE00  F060         	lfsr	0,__pbssBANK0
   313  001C4E  0E6C               	movlw	108
   314  001C50                     clear_0:
   315  001C50  6AEE               	clrf	postinc0,c
   316  001C52  06E8               	decf	wreg,f,c
   317  001C54  E1FD               	bnz	clear_0
   318  001C56                     end_of_initialization:
   319                           	callstack 0
   320  001C56                     __end_of__initialization:
   321                           	callstack 0
   322  001C56  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   323  001C58  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   324  001C5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   325  001C5C  6EF8               	movwf	tblptru,c
   326  001C5E  0100               	movlb	0
   327  001C60  EF6E  F00B         	goto	_main	;jump to C main() function
   328                           
   329                           	psect	bitbssBANK0
   330  000750                     __pbitbssBANK0:
   331                           	callstack 0
   332  000750                     _hasX:
   333                           	callstack 0
   334  000750                     	ds	1
   335                           
   336                           	psect	bssBANK0
   337  000060                     __pbssBANK0:
   338                           	callstack 0
   339  000060                     _nout:
   340                           	callstack 0
   341  000060                     	ds	2
   342  000062                     _width:
   343                           	callstack 0
   344  000062                     	ds	2
   345  000064                     _prec:
   346                           	callstack 0
   347  000064                     	ds	2
   348  000066                     _flags:
   349                           	callstack 0
   350  000066                     	ds	2
   351  000068                     _digito:
   352                           	callstack 0
   353  000068                     	ds	2
   354  00006A                     _y:
   355                           	callstack 0
   356  00006A                     	ds	2
   357  00006C                     _x:
   358                           	callstack 0
   359  00006C                     	ds	2
   360  00006E                     _dbuf:
   361                           	callstack 0
   362  00006E                     	ds	32
   363  00008E                     _tx_string:
   364                           	callstack 0
   365  00008E                     	ds	30
   366  0000AC                     _linha2:
   367                           	callstack 0
   368  0000AC                     	ds	16
   369  0000BC                     _linha1:
   370                           	callstack 0
   371  0000BC                     	ds	16
   372                           
   373                           	psect	cstackBANK1
   374  000100                     __pcstackBANK1:
   375                           	callstack 0
   376  000100                     ??_main:
   377                           
   378                           ; 1 bytes @ 0x0
   379  000100                     	ds	2
   380                           
   381                           	psect	cstackBANK0
   382  0000CC                     __pcstackBANK0:
   383                           	callstack 0
   384  0000CC                     sprintf@ap:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x0
   388  0000CC                     	ds	2
   389  0000CE                     sprintf@f:
   390                           	callstack 0
   391                           
   392                           ; 6 bytes @ 0x2
   393  0000CE                     	ds	6
   394  0000D4                     ??_get_x:
   395  0000D4                     ??_get_y_and_sum:
   396                           
   397                           ; 1 bytes @ 0x8
   398  0000D4                     	ds	2
   399  0000D6                     ??_RS232:
   400                           
   401                           ; 1 bytes @ 0xA
   402  0000D6                     	ds	10
   403  0000E0                     Lcd_Port@a:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x14
   407  0000E0                     	ds	1
   408  0000E1                     ??_Lcd_Cmd:
   409  0000E1                     Lcd_Write_Char@temp:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x15
   413  0000E1                     	ds	1
   414  0000E2                     Lcd_Cmd@a:
   415                           	callstack 0
   416  0000E2                     Lcd_Write_Char@y:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x16
   420  0000E2                     	ds	1
   421  0000E3                     ??_Lcd_Init:
   422  0000E3                     Lcd_Set_Cursor@b:
   423                           	callstack 0
   424  0000E3                     Lcd_Write_Char@a:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x17
   428  0000E3                     	ds	1
   429  0000E4                     Lcd_Set_Cursor@a:
   430                           	callstack 0
   431  0000E4                     Lcd_Write_String@a:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x18
   435  0000E4                     	ds	1
   436  0000E5                     Lcd_Set_Cursor@z:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x19
   440  0000E5                     	ds	1
   441  0000E6                     ??_Lcd_Write_String:
   442  0000E6                     Lcd_Set_Cursor@y:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x1A
   446  0000E6                     	ds	1
   447  0000E7                     Lcd_Set_Cursor@temp:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x1B
   451  0000E7                     	ds	1
   452  0000E8                     Lcd_Write_String@i:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x1C
   456  0000E8                     	ds	2
   457                           
   458                           	psect	cstackCOMRAM
   459  000001                     __pcstackCOMRAM:
   460                           	callstack 0
   461  000001                     ?_strlen:
   462                           	callstack 0
   463  000001                     ?_isdigit:
   464                           	callstack 0
   465  000001                     ?_isspace:
   466                           	callstack 0
   467  000001                     ?___wmul:
   468                           	callstack 0
   469  000001                     ?___lodiv:
   470                           	callstack 0
   471  000001                     ?___lomod:
   472                           	callstack 0
   473  000001                     serial_send@character:
   474                           	callstack 0
   475  000001                     i2Lcd_Port@a:
   476                           	callstack 0
   477  000001                     ___wmul@multiplier:
   478                           	callstack 0
   479  000001                     isdigit@c:
   480                           	callstack 0
   481  000001                     isspace@c:
   482                           	callstack 0
   483  000001                     fputc@c:
   484                           	callstack 0
   485  000001                     strlen@s:
   486                           	callstack 0
   487  000001                     ___lodiv@dividend:
   488                           	callstack 0
   489  000001                     ___lomod@dividend:
   490                           	callstack 0
   491                           
   492                           ; 8 bytes @ 0x0
   493  000001                     	ds	1
   494  000002                     ??i2_Lcd_Cmd:
   495  000002                     i2Lcd_Write_Char@temp:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x1
   499  000002                     	ds	1
   500  000003                     ??_isdigit:
   501  000003                     ??_isspace:
   502  000003                     i2Lcd_Cmd@a:
   503                           	callstack 0
   504  000003                     i2Lcd_Write_Char@y:
   505                           	callstack 0
   506  000003                     ___wmul@multiplicand:
   507                           	callstack 0
   508  000003                     fputc@fp:
   509                           	callstack 0
   510  000003                     strlen@a:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x2
   514  000003                     	ds	1
   515  000004                     i2Lcd_Set_Cursor@b:
   516                           	callstack 0
   517  000004                     i2Lcd_Write_Char@a:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x3
   521  000004                     	ds	1
   522  000005                     ??_fputc:
   523  000005                     i2Lcd_Set_Cursor@a:
   524                           	callstack 0
   525  000005                     serial_sendString@phrase:
   526                           	callstack 0
   527  000005                     ___wmul@product:
   528                           	callstack 0
   529  000005                     i2Lcd_Write_String@a:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x4
   533  000005                     	ds	1
   534  000006                     i2Lcd_Set_Cursor@z:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x5
   538  000006                     	ds	1
   539  000007                     ??i2_Lcd_Write_String:
   540  000007                     _isspace$738:
   541                           	callstack 0
   542  000007                     i2Lcd_Set_Cursor@y:
   543                           	callstack 0
   544  000007                     serial_sendString@size:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x6
   548  000007                     	ds	1
   549  000008                     ?_atoi:
   550                           	callstack 0
   551  000008                     i2Lcd_Set_Cursor@temp:
   552                           	callstack 0
   553  000008                     atoi@s:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x7
   557  000008                     	ds	1
   558  000009                     serial_sendString@index:
   559                           	callstack 0
   560  000009                     i2Lcd_Write_String@i:
   561                           	callstack 0
   562  000009                     ___lodiv@divisor:
   563                           	callstack 0
   564  000009                     ___lomod@divisor:
   565                           	callstack 0
   566                           
   567                           ; 8 bytes @ 0x8
   568  000009                     	ds	1
   569  00000A                     ??_atoi:
   570  00000A                     fputs@s:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x9
   574  00000A                     	ds	2
   575  00000C                     fputs@fp:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0xB
   579  00000C                     	ds	2
   580  00000E                     fputs@c:
   581                           	callstack 0
   582  00000E                     atoi@neg:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0xD
   586  00000E                     	ds	1
   587  00000F                     fputs@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0xE
   591  00000F                     	ds	1
   592  000010                     _atoi$720:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0xF
   596  000010                     	ds	1
   597  000011                     ?_pad:
   598                           	callstack 0
   599  000011                     ___lomod@counter:
   600                           	callstack 0
   601  000011                     pad@fp:
   602                           	callstack 0
   603  000011                     ___lodiv@quotient:
   604                           	callstack 0
   605                           
   606                           ; 8 bytes @ 0x10
   607  000011                     	ds	1
   608  000012                     _atoi$722:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x11
   612  000012                     	ds	1
   613  000013                     pad@buf:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x12
   617  000013                     	ds	1
   618  000014                     _atoi$721:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x13
   622  000014                     	ds	1
   623  000015                     pad@p:
   624                           	callstack 0
   625  000015                     atoi@n:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x14
   629  000015                     	ds	2
   630  000017                     ??_pad:
   631                           
   632                           ; 1 bytes @ 0x16
   633  000017                     	ds	1
   634  000018                     pad@i:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x17
   638  000018                     	ds	1
   639  000019                     ___lodiv@counter:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x18
   643  000019                     	ds	1
   644  00001A                     pad@w:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x19
   648  00001A                     	ds	2
   649  00001C                     ?_utoa:
   650                           	callstack 0
   651  00001C                     utoa@fp:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1B
   655  00001C                     	ds	2
   656  00001E                     utoa@d:
   657                           	callstack 0
   658                           
   659                           ; 8 bytes @ 0x1D
   660  00001E                     	ds	8
   661  000026                     ??_utoa:
   662                           
   663                           ; 1 bytes @ 0x25
   664  000026                     	ds	8
   665  00002E                     utoa@p:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x2D
   669  00002E                     	ds	2
   670  000030                     utoa@w:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x2F
   674  000030                     	ds	2
   675  000032                     utoa@n:
   676                           	callstack 0
   677                           
   678                           ; 8 bytes @ 0x31
   679  000032                     	ds	8
   680  00003A                     utoa@i:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x39
   684  00003A                     	ds	2
   685  00003C                     ?_vfpfcnvrt:
   686                           	callstack 0
   687  00003C                     vfpfcnvrt@fp:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x3B
   691  00003C                     	ds	2
   692  00003E                     vfpfcnvrt@fmt:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x3D
   696  00003E                     	ds	2
   697  000040                     vfpfcnvrt@ap:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x3F
   701  000040                     	ds	2
   702  000042                     ??_vfpfcnvrt:
   703                           
   704                           ; 1 bytes @ 0x41
   705  000042                     	ds	4
   706  000046                     vfpfcnvrt@llu:
   707                           	callstack 0
   708                           
   709                           ; 8 bytes @ 0x45
   710  000046                     	ds	8
   711  00004E                     _vfpfcnvrt$702:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x4D
   715  00004E                     	ds	2
   716  000050                     ?_vfprintf:
   717                           	callstack 0
   718  000050                     vfprintf@fp:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x4F
   722  000050                     	ds	2
   723  000052                     vfprintf@fmt:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x51
   727  000052                     	ds	2
   728  000054                     vfprintf@ap:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x53
   732  000054                     	ds	2
   733  000056                     vfprintf@cfmt:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x55
   737  000056                     	ds	2
   738  000058                     ?_sprintf:
   739                           	callstack 0
   740  000058                     sprintf@s:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x57
   744  000058                     	ds	2
   745  00005A                     sprintf@fmt:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x59
   749  00005A                     	ds	4
   750  00005E                     
   751                           ; 1 bytes @ 0x5D
   752 ;;
   753 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   754 ;;
   755 ;; *************** function _main *****************
   756 ;; Defined at:
   757 ;;		line 155 in file "main.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   771 ;;      Params:         0       0       0       0       0       0       0       0       0
   772 ;;      Locals:         0       0       0       0       0       0       0       0       0
   773 ;;      Temps:          0       0       2       0       0       0       0       0       0
   774 ;;      Totals:         0       0       2       0       0       0       0       0       0
   775 ;;Total ram usage:        2 bytes
   776 ;; Hardware stack levels required when called: 13
   777 ;; This function calls:
   778 ;;		_Lcd_Clear
   779 ;;		_Lcd_Init
   780 ;;		_Lcd_Set_Cursor
   781 ;;		_Lcd_Write_String
   782 ;;		_setup_Interruptions
   783 ;;		_setup_RS232
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text0
   790  0016DC                     __ptext0:
   791                           	callstack 0
   792  0016DC                     _main:
   793                           	callstack 18
   794  0016DC                     
   795                           ;main.c: 157:     TRISD = 0;
   796  0016DC  0E00               	movlw	0
   797  0016DE  6E95               	movwf	149,c	;volatile
   798                           
   799                           ;main.c: 158:     TRISE = 0;
   800  0016E0  0E00               	movlw	0
   801  0016E2  6E96               	movwf	150,c	;volatile
   802                           
   803                           ;main.c: 160:     OSCCON = 0b01100000;
   804  0016E4  0E60               	movlw	96
   805  0016E6  6ED3               	movwf	211,c	;volatile
   806  0016E8                     
   807                           ;main.c: 161:     TRISCbits.RC6 = 1;
   808  0016E8  8C94               	bsf	148,6,c	;volatile
   809  0016EA                     
   810                           ;main.c: 162:     TRISCbits.RC7 = 1;
   811  0016EA  8E94               	bsf	148,7,c	;volatile
   812  0016EC                     
   813                           ;main.c: 163:     setup_RS232();
   814  0016EC  EC49  F00E         	call	_setup_RS232	;wreg free
   815                           
   816                           ;main.c: 164:     setup_Interruptions();
   817  0016F0  EC61  F00E         	call	_setup_Interruptions	;wreg free
   818  0016F4                     
   819                           ;main.c: 165:     Lcd_Init();
   820  0016F4  ECAB  F00B         	call	_Lcd_Init	;wreg free
   821  0016F8                     
   822                           ;main.c: 166:     Lcd_Clear();
   823  0016F8  EC53  F00E         	call	_Lcd_Clear	;wreg free
   824  0016FC                     
   825                           ;main.c: 167:     Lcd_Set_Cursor(1, 1);
   826  0016FC  0E01               	movlw	1
   827  0016FE  0100               	movlb	0	; () banked
   828  001700  6FE3               	movwf	Lcd_Set_Cursor@b& (0+255),b
   829  001702  0E01               	movlw	1
   830  001704  ECE7  F00B         	call	_Lcd_Set_Cursor
   831  001708                     
   832                           ;main.c: 168:     Lcd_Write_String("      SOMA      ");
   833  001708  0E27               	movlw	low STR_12
   834  00170A  0100               	movlb	0	; () banked
   835  00170C  6FE4               	movwf	Lcd_Write_String@a& (0+255),b
   836  00170E  0E08               	movlw	high STR_12
   837  001710  6FE5               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   838  001712  ECAC  F00A         	call	_Lcd_Write_String	;wreg free
   839  001716                     
   840                           ;main.c: 169:     _delay((unsigned long)((500)*(4000000/4000.0)));
   841  001716  0E03               	movlw	3
   842  001718  0101               	movlb	1	; () banked
   843  00171A  6F01               	movwf	(??_main+1)& (0+255),b
   844  00171C  0E8A               	movlw	138
   845  00171E  6F00               	movwf	??_main& (0+255),b
   846  001720  0E55               	movlw	85
   847  001722                     u2147:
   848  001722  2EE8               	decfsz	wreg,f,c
   849  001724  D7FE               	bra	u2147
   850  001726  2F00               	decfsz	??_main& (0+255),f,b
   851  001728  D7FC               	bra	u2147
   852  00172A  2F01               	decfsz	(??_main+1)& (0+255),f,b
   853  00172C  D7FA               	bra	u2147
   854  00172E  D000               	nop2	
   855  001730                     
   856                           ;main.c: 170:     Lcd_Clear();
   857  001730  EC53  F00E         	call	_Lcd_Clear	;wreg free
   858  001734                     
   859                           ;main.c: 171:     Lcd_Set_Cursor(1, 1);
   860  001734  0E01               	movlw	1
   861  001736  0100               	movlb	0	; () banked
   862  001738  6FE3               	movwf	Lcd_Set_Cursor@b& (0+255),b
   863  00173A  0E01               	movlw	1
   864  00173C  ECE7  F00B         	call	_Lcd_Set_Cursor
   865  001740                     
   866                           ;main.c: 172:     Lcd_Write_String("Digite o valor X");
   867  001740  0E49               	movlw	low STR_13
   868  001742  0100               	movlb	0	; () banked
   869  001744  6FE4               	movwf	Lcd_Write_String@a& (0+255),b
   870  001746  0E08               	movlw	high STR_13
   871  001748  6FE5               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   872  00174A  ECAC  F00A         	call	_Lcd_Write_String	;wreg free
   873  00174E                     l161:
   874  00174E  EFA7  F00B         	goto	l161
   875  001752  EF07  F000         	goto	start
   876  001756                     __end_of_main:
   877                           	callstack 0
   878                           
   879 ;; *************** function _setup_RS232 *****************
   880 ;; Defined at:
   881 ;;		line 139 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, status,2
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   895 ;;      Params:         0       0       0       0       0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0       0       0       0       0
   897 ;;      Temps:          0       0       0       0       0       0       0       0       0
   898 ;;      Totals:         0       0       0       0       0       0       0       0       0
   899 ;;Total ram usage:        0 bytes
   900 ;; Hardware stack levels used: 1
   901 ;; Hardware stack levels required when called: 10
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text1
   910  001C92                     __ptext1:
   911                           	callstack 0
   912  001C92                     _setup_RS232:
   913                           	callstack 20
   914  001C92                     
   915                           ;main.c: 140:     TXEN = 1;
   916  001C92  8AAC               	bsf	4012,5,c	;volatile
   917                           
   918                           ;main.c: 141:     SYNC = 0;
   919  001C94  98AC               	bcf	4012,4,c	;volatile
   920                           
   921                           ;main.c: 142:     BRGH = 1;
   922  001C96  84AC               	bsf	4012,2,c	;volatile
   923                           
   924                           ;main.c: 143:     SPEN = 1;
   925  001C98  8EAB               	bsf	4011,7,c	;volatile
   926                           
   927                           ;main.c: 144:     CREN = 1;
   928  001C9A  88AB               	bsf	4011,4,c	;volatile
   929  001C9C                     
   930                           ;main.c: 145:     BAUDCON = 0x00;
   931  001C9C  0E00               	movlw	0
   932  001C9E  6EB8               	movwf	184,c	;volatile
   933                           
   934                           ;main.c: 146:     SPBRG = 25;
   935  001CA0  0E19               	movlw	25
   936  001CA2  6EAF               	movwf	175,c	;volatile
   937  001CA4  0012               	return		;funcret
   938  001CA6                     __end_of_setup_RS232:
   939                           	callstack 0
   940                           
   941 ;; *************** function _setup_Interruptions *****************
   942 ;; Defined at:
   943 ;;		line 149 in file "main.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		None
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   957 ;;      Params:         0       0       0       0       0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0       0       0
   960 ;;      Totals:         0       0       0       0       0       0       0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 10
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text2
   972  001CC2                     __ptext2:
   973                           	callstack 0
   974  001CC2                     _setup_Interruptions:
   975                           	callstack 20
   976  001CC2                     
   977                           ;main.c: 150:     GIE = 1;
   978  001CC2  8EF2               	bsf	4082,7,c	;volatile
   979                           
   980                           ;main.c: 151:     PEIE = 1;
   981  001CC4  8CF2               	bsf	4082,6,c	;volatile
   982                           
   983                           ;main.c: 152:     RCIE = 1;
   984  001CC6  8A9D               	bsf	3997,5,c	;volatile
   985  001CC8  0012               	return		;funcret
   986  001CCA                     __end_of_setup_Interruptions:
   987                           	callstack 0
   988                           
   989 ;; *************** function _Lcd_Write_String *****************
   990 ;; Defined at:
   991 ;;		line 88 in file "./lcd.h"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  a               2   24[BANK0 ] PTR unsigned char 
   994 ;;		 -> STR_13(17), STR_12(17), STR_10(17), STR_9(17), 
   995 ;;		 -> linha2(16), linha1(16), STR_4(17), STR_3(17), 
   996 ;;		 -> STR_1(17), 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  i               2   28[BANK0 ] int 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1008 ;;      Params:         0       2       0       0       0       0       0       0       0
  1009 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1010 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1011 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1012 ;;Total ram usage:        6 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 12
  1015 ;; This function calls:
  1016 ;;		_Lcd_Write_Char
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text3
  1023  001558                     __ptext3:
  1024                           	callstack 0
  1025  001558                     _Lcd_Write_String:
  1026                           	callstack 18
  1027  001558                     
  1028                           ;./lcd.h: 89:     int i;;./lcd.h: 90:     for (i = 0; a[i] != '\0'; i++)
  1029  001558  0E00               	movlw	0
  1030  00155A  0100               	movlb	0	; () banked
  1031  00155C  6FE9               	movwf	(Lcd_Write_String@i+1)& (0+255),b
  1032  00155E  0E00               	movlw	0
  1033  001560  6FE8               	movwf	Lcd_Write_String@i& (0+255),b
  1034  001562  EFCF  F00A         	goto	l2066
  1035  001566                     l2062:
  1036                           
  1037                           ;./lcd.h: 91:         Lcd_Write_Char(a[i]);
  1038  001566  0100               	movlb	0	; () banked
  1039  001568  51E8               	movf	Lcd_Write_String@i& (0+255),w,b
  1040  00156A  25E4               	addwf	Lcd_Write_String@a& (0+255),w,b
  1041  00156C  6FE6               	movwf	??_Lcd_Write_String& (0+255),b
  1042  00156E  51E9               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  1043  001570  21E5               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  1044  001572  6FE7               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  1045  001574  C0E6  FFF6         	movff	??_Lcd_Write_String,tblptrl
  1046  001578  C0E7  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  1047  00157C  6AF8               	clrf	tblptru,c
  1048  00157E  0E07               	movlw	(high __ramtop+-1)
  1049  001580  64F7               	cpfsgt	tblptrh,c
  1050  001582  D003               	bra	u1367
  1051  001584  0008               	tblrd		*
  1052  001586  50F5               	movf	tablat,w,c
  1053  001588  D005               	bra	u1360
  1054  00158A                     u1367:
  1055  00158A  CFF6 FFE1          	movff	tblptrl,fsr1l
  1056  00158E  CFF7 FFE2          	movff	tblptrh,fsr1h
  1057  001592  50E7               	movf	indf1,w,c
  1058  001594                     u1360:
  1059  001594  EC7B  F00D         	call	_Lcd_Write_Char
  1060  001598  0100               	movlb	0	; () banked
  1061  00159A  4BE8               	infsnz	Lcd_Write_String@i& (0+255),f,b
  1062  00159C  2BE9               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
  1063  00159E                     l2066:
  1064                           
  1065                           ; BSR set to: 0
  1066  00159E  51E8               	movf	Lcd_Write_String@i& (0+255),w,b
  1067  0015A0  25E4               	addwf	Lcd_Write_String@a& (0+255),w,b
  1068  0015A2  6FE6               	movwf	??_Lcd_Write_String& (0+255),b
  1069  0015A4  51E9               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  1070  0015A6  21E5               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  1071  0015A8  6FE7               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  1072  0015AA  C0E6  FFF6         	movff	??_Lcd_Write_String,tblptrl
  1073  0015AE  C0E7  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  1074  0015B2  6AF8               	clrf	tblptru,c
  1075  0015B4  0E07               	movlw	(high __ramtop+-1)
  1076  0015B6  64F7               	cpfsgt	tblptrh,c
  1077  0015B8  D003               	bra	u1377
  1078  0015BA  0008               	tblrd		*
  1079  0015BC  50F5               	movf	tablat,w,c
  1080  0015BE  D005               	bra	u1370
  1081  0015C0                     u1377:
  1082  0015C0  CFF6 FFE1          	movff	tblptrl,fsr1l
  1083  0015C4  CFF7 FFE2          	movff	tblptrh,fsr1h
  1084  0015C8  50E7               	movf	indf1,w,c
  1085  0015CA                     u1370:
  1086  0015CA  0900               	iorlw	0
  1087  0015CC  A4D8               	btfss	status,2,c
  1088  0015CE  EFEB  F00A         	goto	u1381
  1089  0015D2  EFED  F00A         	goto	u1380
  1090  0015D6                     u1381:
  1091  0015D6  EFB3  F00A         	goto	l2062
  1092  0015DA                     u1380:
  1093  0015DA  0012               	return		;funcret
  1094  0015DC                     __end_of_Lcd_Write_String:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _Lcd_Write_Char *****************
  1098 ;; Defined at:
  1099 ;;		line 73 in file "./lcd.h"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  a               1    wreg     unsigned char 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  a               1   23[BANK0 ] unsigned char 
  1104 ;;  y               1   22[BANK0 ] unsigned char 
  1105 ;;  temp            1   21[BANK0 ] unsigned char 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1115 ;;      Params:         0       0       0       0       0       0       0       0       0
  1116 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1118 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1119 ;;Total ram usage:        3 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; Hardware stack levels required when called: 11
  1122 ;; This function calls:
  1123 ;;		_Lcd_Port
  1124 ;; This function is called by:
  1125 ;;		_Lcd_Write_String
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text4
  1130  001AF6                     __ptext4:
  1131                           	callstack 0
  1132  001AF6                     _Lcd_Write_Char:
  1133                           	callstack 18
  1134                           
  1135                           ;incstack = 0
  1136                           ;Lcd_Write_Char@a stored from wreg
  1137  001AF6  0100               	movlb	0	; () banked
  1138  001AF8  6FE3               	movwf	Lcd_Write_Char@a& (0+255),b
  1139  001AFA                     
  1140                           ;./lcd.h: 74:     char temp, y;;./lcd.h: 75:     temp = a & 0x0F;
  1141  001AFA  0100               	movlb	0	; () banked
  1142  001AFC  51E3               	movf	Lcd_Write_Char@a& (0+255),w,b
  1143  001AFE  0B0F               	andlw	15
  1144  001B00  6FE1               	movwf	Lcd_Write_Char@temp& (0+255),b
  1145                           
  1146                           ;./lcd.h: 76:     y = a & 0xF0;
  1147  001B02  51E3               	movf	Lcd_Write_Char@a& (0+255),w,b
  1148  001B04  0BF0               	andlw	240
  1149  001B06  6FE2               	movwf	Lcd_Write_Char@y& (0+255),b
  1150  001B08                     
  1151                           ; BSR set to: 0
  1152                           ;./lcd.h: 77:     LATE0 = 1;
  1153  001B08  808D               	bsf	3981,0,c	;volatile
  1154  001B0A                     
  1155                           ; BSR set to: 0
  1156                           ;./lcd.h: 78:     Lcd_Port(y >> 4);
  1157  001B0A  39E2               	swapf	Lcd_Write_Char@y& (0+255),w,b
  1158  001B0C  0B0F               	andlw	15
  1159  001B0E  EC82  F00C         	call	_Lcd_Port
  1160  001B12                     
  1161                           ;./lcd.h: 79:     LATE1 = 1;
  1162  001B12  828D               	bsf	3981,1,c	;volatile
  1163  001B14                     
  1164                           ;./lcd.h: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1165  001B14  0E0D               	movlw	13
  1166  001B16                     u2157:
  1167  001B16  2EE8               	decfsz	wreg,f,c
  1168  001B18  D7FE               	bra	u2157
  1169  001B1A  F000               	nop	
  1170  001B1C                     
  1171                           ;./lcd.h: 81:     LATE1 = 0;
  1172  001B1C  928D               	bcf	3981,1,c	;volatile
  1173  001B1E                     
  1174                           ;./lcd.h: 82:     Lcd_Port(temp);
  1175  001B1E  0100               	movlb	0	; () banked
  1176  001B20  51E1               	movf	Lcd_Write_Char@temp& (0+255),w,b
  1177  001B22  EC82  F00C         	call	_Lcd_Port
  1178  001B26                     
  1179                           ;./lcd.h: 83:     LATE1 = 1;
  1180  001B26  828D               	bsf	3981,1,c	;volatile
  1181  001B28                     
  1182                           ;./lcd.h: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1183  001B28  0E0D               	movlw	13
  1184  001B2A                     u2167:
  1185  001B2A  2EE8               	decfsz	wreg,f,c
  1186  001B2C  D7FE               	bra	u2167
  1187  001B2E  F000               	nop	
  1188  001B30                     
  1189                           ;./lcd.h: 85:     LATE1 = 0;
  1190  001B30  928D               	bcf	3981,1,c	;volatile
  1191  001B32  0012               	return		;funcret
  1192  001B34                     __end_of_Lcd_Write_Char:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function _Lcd_Set_Cursor *****************
  1196 ;; Defined at:
  1197 ;;		line 38 in file "./lcd.h"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  a               1    wreg     unsigned char 
  1200 ;;  b               1   23[BANK0 ] unsigned char 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  a               1   24[BANK0 ] unsigned char 
  1203 ;;  temp            1   27[BANK0 ] unsigned char 
  1204 ;;  y               1   26[BANK0 ] unsigned char 
  1205 ;;  z               1   25[BANK0 ] unsigned char 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1215 ;;      Params:         0       1       0       0       0       0       0       0       0
  1216 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1218 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1219 ;;Total ram usage:        5 bytes
  1220 ;; Hardware stack levels used: 1
  1221 ;; Hardware stack levels required when called: 12
  1222 ;; This function calls:
  1223 ;;		_Lcd_Cmd
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text5
  1230  0017CE                     __ptext5:
  1231                           	callstack 0
  1232  0017CE                     _Lcd_Set_Cursor:
  1233                           	callstack 18
  1234                           
  1235                           ;incstack = 0
  1236                           ;Lcd_Set_Cursor@a stored from wreg
  1237  0017CE  0100               	movlb	0	; () banked
  1238  0017D0  6FE4               	movwf	Lcd_Set_Cursor@a& (0+255),b
  1239  0017D2                     
  1240                           ;./lcd.h: 39:     char temp, z, y;;./lcd.h: 40:     if (a == 1) {
  1241  0017D2  0100               	movlb	0	; () banked
  1242  0017D4  05E4               	decf	Lcd_Set_Cursor@a& (0+255),w,b
  1243  0017D6  A4D8               	btfss	status,2,c
  1244  0017D8  EFF0  F00B         	goto	u1341
  1245  0017DC  EFF2  F00B         	goto	u1340
  1246  0017E0                     u1341:
  1247  0017E0  EF04  F00C         	goto	l2024
  1248  0017E4                     u1340:
  1249  0017E4                     
  1250                           ; BSR set to: 0
  1251                           ;./lcd.h: 41:         temp = 0x80 + b - 1;
  1252  0017E4  51E3               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  1253  0017E6  0F7F               	addlw	127
  1254  0017E8  6FE7               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  1255                           
  1256                           ;./lcd.h: 42:         z = temp >> 4;
  1257  0017EA  39E7               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  1258  0017EC  0B0F               	andlw	15
  1259  0017EE  6FE5               	movwf	Lcd_Set_Cursor@z& (0+255),b
  1260                           
  1261                           ;./lcd.h: 43:         y = temp & 0x0F;
  1262  0017F0  51E7               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  1263  0017F2  0B0F               	andlw	15
  1264  0017F4  6FE6               	movwf	Lcd_Set_Cursor@y& (0+255),b
  1265  0017F6                     
  1266                           ; BSR set to: 0
  1267                           ;./lcd.h: 44:         Lcd_Cmd(z);
  1268  0017F6  51E5               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  1269  0017F8  ECED  F00D         	call	_Lcd_Cmd
  1270  0017FC                     
  1271                           ;./lcd.h: 45:         Lcd_Cmd(y);
  1272  0017FC  0100               	movlb	0	; () banked
  1273  0017FE  51E6               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  1274  001800  ECED  F00D         	call	_Lcd_Cmd
  1275                           
  1276                           ;./lcd.h: 46:     } else if (a == 2) {
  1277  001804  EF1D  F00C         	goto	l77
  1278  001808                     l2024:
  1279                           
  1280                           ; BSR set to: 0
  1281  001808  0E02               	movlw	2
  1282  00180A  19E4               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  1283  00180C  A4D8               	btfss	status,2,c
  1284  00180E  EF0B  F00C         	goto	u1351
  1285  001812  EF0D  F00C         	goto	u1350
  1286  001816                     u1351:
  1287  001816  EF1D  F00C         	goto	l77
  1288  00181A                     u1350:
  1289  00181A                     
  1290                           ; BSR set to: 0
  1291                           ;./lcd.h: 47:         temp = 0xC0 + b - 1;
  1292  00181A  51E3               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  1293  00181C  0FBF               	addlw	191
  1294  00181E  6FE7               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  1295                           
  1296                           ;./lcd.h: 48:         z = temp >> 4;
  1297  001820  39E7               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  1298  001822  0B0F               	andlw	15
  1299  001824  6FE5               	movwf	Lcd_Set_Cursor@z& (0+255),b
  1300                           
  1301                           ;./lcd.h: 49:         y = temp & 0x0F;
  1302  001826  51E7               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  1303  001828  0B0F               	andlw	15
  1304  00182A  6FE6               	movwf	Lcd_Set_Cursor@y& (0+255),b
  1305  00182C                     
  1306                           ; BSR set to: 0
  1307                           ;./lcd.h: 50:         Lcd_Cmd(z);
  1308  00182C  51E5               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  1309  00182E  ECED  F00D         	call	_Lcd_Cmd
  1310  001832                     
  1311                           ;./lcd.h: 51:         Lcd_Cmd(y);
  1312  001832  0100               	movlb	0	; () banked
  1313  001834  51E6               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  1314  001836  ECED  F00D         	call	_Lcd_Cmd
  1315  00183A                     l77:
  1316  00183A  0012               	return		;funcret
  1317  00183C                     __end_of_Lcd_Set_Cursor:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _Lcd_Init *****************
  1321 ;; Defined at:
  1322 ;;		line 55 in file "./lcd.h"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1338 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1339 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1340 ;;Total ram usage:        1 bytes
  1341 ;; Hardware stack levels used: 1
  1342 ;; Hardware stack levels required when called: 12
  1343 ;; This function calls:
  1344 ;;		_Lcd_Cmd
  1345 ;;		_Lcd_Port
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text6
  1352  001756                     __ptext6:
  1353                           	callstack 0
  1354  001756                     _Lcd_Init:
  1355                           	callstack 18
  1356  001756                     
  1357                           ;./lcd.h: 56:     Lcd_Port(0x00);
  1358  001756  0E00               	movlw	0
  1359  001758  EC82  F00C         	call	_Lcd_Port
  1360  00175C                     
  1361                           ;./lcd.h: 57:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1362  00175C  0E1A               	movlw	26
  1363  00175E  0100               	movlb	0	; () banked
  1364  001760  6FE3               	movwf	??_Lcd_Init& (0+255),b
  1365  001762  0EF8               	movlw	248
  1366  001764                     u2177:
  1367  001764  2EE8               	decfsz	wreg,f,c
  1368  001766  D7FE               	bra	u2177
  1369  001768  2FE3               	decfsz	??_Lcd_Init& (0+255),f,b
  1370  00176A  D7FC               	bra	u2177
  1371  00176C  F000               	nop	
  1372  00176E                     
  1373                           ;./lcd.h: 58:     Lcd_Cmd(0x03);
  1374  00176E  0E03               	movlw	3
  1375  001770  ECED  F00D         	call	_Lcd_Cmd
  1376  001774                     
  1377                           ;./lcd.h: 59:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1378  001774  0E07               	movlw	7
  1379  001776  0100               	movlb	0	; () banked
  1380  001778  6FE3               	movwf	??_Lcd_Init& (0+255),b
  1381  00177A  0E7D               	movlw	125
  1382  00177C                     u2187:
  1383  00177C  2EE8               	decfsz	wreg,f,c
  1384  00177E  D7FE               	bra	u2187
  1385  001780  2FE3               	decfsz	??_Lcd_Init& (0+255),f,b
  1386  001782  D7FC               	bra	u2187
  1387  001784                     
  1388                           ;./lcd.h: 60:     Lcd_Cmd(0x03);
  1389  001784  0E03               	movlw	3
  1390  001786  ECED  F00D         	call	_Lcd_Cmd
  1391  00178A                     
  1392                           ;./lcd.h: 61:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1393  00178A  0E0F               	movlw	15
  1394  00178C  0100               	movlb	0	; () banked
  1395  00178E  6FE3               	movwf	??_Lcd_Init& (0+255),b
  1396  001790  0E47               	movlw	71
  1397  001792                     u2197:
  1398  001792  2EE8               	decfsz	wreg,f,c
  1399  001794  D7FE               	bra	u2197
  1400  001796  2FE3               	decfsz	??_Lcd_Init& (0+255),f,b
  1401  001798  D7FC               	bra	u2197
  1402  00179A  D000               	nop2	
  1403  00179C                     
  1404                           ;./lcd.h: 62:     Lcd_Cmd(0x03);
  1405  00179C  0E03               	movlw	3
  1406  00179E  ECED  F00D         	call	_Lcd_Cmd
  1407  0017A2                     
  1408                           ;./lcd.h: 64:     Lcd_Cmd(0x02);
  1409  0017A2  0E02               	movlw	2
  1410  0017A4  ECED  F00D         	call	_Lcd_Cmd
  1411  0017A8                     
  1412                           ;./lcd.h: 65:     Lcd_Cmd(0x02);
  1413  0017A8  0E02               	movlw	2
  1414  0017AA  ECED  F00D         	call	_Lcd_Cmd
  1415  0017AE                     
  1416                           ;./lcd.h: 66:     Lcd_Cmd(0x08);
  1417  0017AE  0E08               	movlw	8
  1418  0017B0  ECED  F00D         	call	_Lcd_Cmd
  1419  0017B4                     
  1420                           ;./lcd.h: 67:     Lcd_Cmd(0x00);
  1421  0017B4  0E00               	movlw	0
  1422  0017B6  ECED  F00D         	call	_Lcd_Cmd
  1423  0017BA                     
  1424                           ;./lcd.h: 68:     Lcd_Cmd(0x0C);
  1425  0017BA  0E0C               	movlw	12
  1426  0017BC  ECED  F00D         	call	_Lcd_Cmd
  1427  0017C0                     
  1428                           ;./lcd.h: 69:     Lcd_Cmd(0x00);
  1429  0017C0  0E00               	movlw	0
  1430  0017C2  ECED  F00D         	call	_Lcd_Cmd
  1431  0017C6                     
  1432                           ;./lcd.h: 70:     Lcd_Cmd(0x06);
  1433  0017C6  0E06               	movlw	6
  1434  0017C8  ECED  F00D         	call	_Lcd_Cmd
  1435  0017CC  0012               	return		;funcret
  1436  0017CE                     __end_of_Lcd_Init:
  1437                           	callstack 0
  1438                           
  1439 ;; *************** function _Lcd_Clear *****************
  1440 ;; Defined at:
  1441 ;;		line 33 in file "./lcd.h"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1455 ;;      Params:         0       0       0       0       0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1458 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 12
  1462 ;; This function calls:
  1463 ;;		_Lcd_Cmd
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text7
  1470  001CA6                     __ptext7:
  1471                           	callstack 0
  1472  001CA6                     _Lcd_Clear:
  1473                           	callstack 18
  1474  001CA6                     
  1475                           ;./lcd.h: 34:     Lcd_Cmd(0);
  1476  001CA6  0E00               	movlw	0
  1477  001CA8  ECED  F00D         	call	_Lcd_Cmd
  1478                           
  1479                           ;./lcd.h: 35:     Lcd_Cmd(1);
  1480  001CAC  0E01               	movlw	1
  1481  001CAE  ECED  F00D         	call	_Lcd_Cmd
  1482  001CB2  0012               	return		;funcret
  1483  001CB4                     __end_of_Lcd_Clear:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function _Lcd_Cmd *****************
  1487 ;; Defined at:
  1488 ;;		line 25 in file "./lcd.h"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  a               1    wreg     unsigned char 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  a               1   22[BANK0 ] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0
  1503 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1504 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1505 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1506 ;;Total ram usage:        2 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 11
  1509 ;; This function calls:
  1510 ;;		_Lcd_Port
  1511 ;; This function is called by:
  1512 ;;		_Lcd_Clear
  1513 ;;		_Lcd_Set_Cursor
  1514 ;;		_Lcd_Init
  1515 ;;		_Lcd_Shift_Right
  1516 ;;		_Lcd_Shift_Left
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text8
  1521  001BDA                     __ptext8:
  1522                           	callstack 0
  1523  001BDA                     _Lcd_Cmd:
  1524                           	callstack 18
  1525                           
  1526                           ;incstack = 0
  1527                           ;Lcd_Cmd@a stored from wreg
  1528  001BDA  0100               	movlb	0	; () banked
  1529  001BDC  6FE2               	movwf	Lcd_Cmd@a& (0+255),b
  1530  001BDE                     
  1531                           ;./lcd.h: 26:     LATE0 = 0;
  1532  001BDE  908D               	bcf	3981,0,c	;volatile
  1533  001BE0                     
  1534                           ;./lcd.h: 27:     Lcd_Port(a);
  1535  001BE0  0100               	movlb	0	; () banked
  1536  001BE2  51E2               	movf	Lcd_Cmd@a& (0+255),w,b
  1537  001BE4  EC82  F00C         	call	_Lcd_Port
  1538  001BE8                     
  1539                           ;./lcd.h: 28:     LATE1 = 1;
  1540  001BE8  828D               	bsf	3981,1,c	;volatile
  1541  001BEA                     
  1542                           ;./lcd.h: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1543  001BEA  0E06               	movlw	6
  1544  001BEC  0100               	movlb	0	; () banked
  1545  001BEE  6FE1               	movwf	??_Lcd_Cmd& (0+255),b
  1546  001BF0  0E30               	movlw	48
  1547  001BF2                     u2207:
  1548  001BF2  2EE8               	decfsz	wreg,f,c
  1549  001BF4  D7FE               	bra	u2207
  1550  001BF6  2FE1               	decfsz	??_Lcd_Cmd& (0+255),f,b
  1551  001BF8  D7FC               	bra	u2207
  1552  001BFA  F000               	nop	
  1553  001BFC                     
  1554                           ;./lcd.h: 30:     LATE1 = 0;
  1555  001BFC  928D               	bcf	3981,1,c	;volatile
  1556  001BFE  0012               	return		;funcret
  1557  001C00                     __end_of_Lcd_Cmd:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _Lcd_Port *****************
  1561 ;; Defined at:
  1562 ;;		line 3 in file "./lcd.h"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  a               1    wreg     unsigned char 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  a               1   20[BANK0 ] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0
  1577 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1579 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1580 ;;Total ram usage:        1 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 10
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_Lcd_Cmd
  1587 ;;		_Lcd_Init
  1588 ;;		_Lcd_Write_Char
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text9
  1593  001904                     __ptext9:
  1594                           	callstack 0
  1595  001904                     _Lcd_Port:
  1596                           	callstack 18
  1597                           
  1598                           ;incstack = 0
  1599                           ;Lcd_Port@a stored from wreg
  1600  001904  0100               	movlb	0	; () banked
  1601  001906  6FE0               	movwf	Lcd_Port@a& (0+255),b
  1602  001908                     
  1603                           ;./lcd.h: 4:     if (a & 1)
  1604  001908  0100               	movlb	0	; () banked
  1605  00190A  A1E0               	btfss	Lcd_Port@a& (0+255),0,b
  1606  00190C  EF8A  F00C         	goto	u1221
  1607  001910  EF8C  F00C         	goto	u1220
  1608  001914                     u1221:
  1609  001914  EF8F  F00C         	goto	l57
  1610  001918                     u1220:
  1611  001918                     
  1612                           ; BSR set to: 0
  1613                           ;./lcd.h: 5:         LATD4 = 1;
  1614  001918  888C               	bsf	3980,4,c	;volatile
  1615  00191A  EF90  F00C         	goto	l1878
  1616  00191E                     l57:
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;./lcd.h: 7:         LATD4 = 0;
  1620  00191E  988C               	bcf	3980,4,c	;volatile
  1621  001920                     l1878:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;./lcd.h: 9:     if (a & 2)
  1625  001920  A3E0               	btfss	Lcd_Port@a& (0+255),1,b
  1626  001922  EF95  F00C         	goto	u1231
  1627  001926  EF97  F00C         	goto	u1230
  1628  00192A                     u1231:
  1629  00192A  EF9A  F00C         	goto	l59
  1630  00192E                     u1230:
  1631  00192E                     
  1632                           ; BSR set to: 0
  1633                           ;./lcd.h: 10:         LATD5 = 1;
  1634  00192E  8A8C               	bsf	3980,5,c	;volatile
  1635  001930  EF9B  F00C         	goto	l1882
  1636  001934                     l59:
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;./lcd.h: 12:         LATD5 = 0;
  1640  001934  9A8C               	bcf	3980,5,c	;volatile
  1641  001936                     l1882:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;./lcd.h: 14:     if (a & 4)
  1645  001936  A5E0               	btfss	Lcd_Port@a& (0+255),2,b
  1646  001938  EFA0  F00C         	goto	u1241
  1647  00193C  EFA2  F00C         	goto	u1240
  1648  001940                     u1241:
  1649  001940  EFA5  F00C         	goto	l61
  1650  001944                     u1240:
  1651  001944                     
  1652                           ; BSR set to: 0
  1653                           ;./lcd.h: 15:         LATD6 = 1;
  1654  001944  8C8C               	bsf	3980,6,c	;volatile
  1655  001946  EFA6  F00C         	goto	l1886
  1656  00194A                     l61:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;./lcd.h: 17:         LATD6 = 0;
  1660  00194A  9C8C               	bcf	3980,6,c	;volatile
  1661  00194C                     l1886:
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;./lcd.h: 19:     if (a & 8)
  1665  00194C  A7E0               	btfss	Lcd_Port@a& (0+255),3,b
  1666  00194E  EFAB  F00C         	goto	u1251
  1667  001952  EFAD  F00C         	goto	u1250
  1668  001956                     u1251:
  1669  001956  EFB0  F00C         	goto	l63
  1670  00195A                     u1250:
  1671  00195A                     
  1672                           ; BSR set to: 0
  1673                           ;./lcd.h: 20:         LATD7 = 1;
  1674  00195A  8E8C               	bsf	3980,7,c	;volatile
  1675  00195C  EFB1  F00C         	goto	l65
  1676  001960                     l63:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;./lcd.h: 22:         LATD7 = 0;
  1680  001960  9E8C               	bcf	3980,7,c	;volatile
  1681  001962                     l65:
  1682                           
  1683                           ; BSR set to: 0
  1684  001962  0012               	return		;funcret
  1685  001964                     __end_of_Lcd_Port:
  1686                           	callstack 0
  1687                           
  1688 ;; *************** function _RS232 *****************
  1689 ;; Defined at:
  1690 ;;		line 128 in file "main.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1706 ;;      Temps:          0      10       0       0       0       0       0       0       0
  1707 ;;      Totals:         0      10       0       0       0       0       0       0       0
  1708 ;;Total ram usage:       10 bytes
  1709 ;; Hardware stack levels used: 1
  1710 ;; Hardware stack levels required when called: 9
  1711 ;; This function calls:
  1712 ;;		_get_x
  1713 ;;		_get_y_and_sum
  1714 ;; This function is called by:
  1715 ;;		Interrupt level 2
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	intcode
  1720  000008                     __pintcode:
  1721                           	callstack 0
  1722  000008                     _RS232:
  1723                           	callstack 18
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;incstack = 0
  1727  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1728  00000A  EDEE  F00A         	call	int_func,f	;refresh shadow registers
  1729                           
  1730                           	psect	intcode_body
  1731  0015DC                     __pintcode_body:
  1732                           	callstack 18
  1733  0015DC                     int_func:
  1734                           	callstack 18
  1735  0015DC  0006               	pop		; remove dummy address from shadow register refresh
  1736  0015DE  CFE1 F0D6          	movff	fsr1l,??_RS232
  1737  0015E2  CFE2 F0D7          	movff	fsr1h,??_RS232+1
  1738  0015E6  CFD9 F0D8          	movff	fsr2l,??_RS232+2
  1739  0015EA  CFDA F0D9          	movff	fsr2h,??_RS232+3
  1740  0015EE  CFF3 F0DA          	movff	prodl,??_RS232+4
  1741  0015F2  CFF4 F0DB          	movff	prodh,??_RS232+5
  1742  0015F6  CFF6 F0DC          	movff	tblptrl,??_RS232+6
  1743  0015FA  CFF7 F0DD          	movff	tblptrh,??_RS232+7
  1744  0015FE  CFF8 F0DE          	movff	tblptru,??_RS232+8
  1745  001602  CFF5 F0DF          	movff	tablat,??_RS232+9
  1746  001606                     
  1747                           ;main.c: 129:     if (RCIF) {
  1748  001606  AA9E               	btfss	3998,5,c	;volatile
  1749  001608  EF08  F00B         	goto	i2u212_41
  1750  00160C  EF0A  F00B         	goto	i2u212_40
  1751  001610                     i2u212_41:
  1752  001610  EF19  F00B         	goto	i2l150
  1753  001614                     i2u212_40:
  1754  001614                     
  1755                           ;main.c: 130:         if (!hasX) {
  1756  001614  0100               	movlb	0	; () banked
  1757  001616  B1EA               	btfsc	(_hasX/(0+8))& (0+255),_hasX& (0+7),b
  1758  001618  EF10  F00B         	goto	i2u213_41
  1759  00161C  EF12  F00B         	goto	i2u213_40
  1760  001620                     i2u213_41:
  1761  001620  EF16  F00B         	goto	i2l2682
  1762  001624                     i2u213_40:
  1763  001624                     
  1764                           ; BSR set to: 0
  1765                           ;main.c: 131:             get_x();
  1766  001624  EC47  F008         	call	_get_x	;wreg free
  1767                           
  1768                           ;main.c: 132:         } else {
  1769  001628  EF18  F00B         	goto	i2l2684
  1770  00162C                     i2l2682:
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;main.c: 133:             get_y_and_sum();
  1774  00162C  EC9C  F006         	call	_get_y_and_sum	;wreg free
  1775  001630                     i2l2684:
  1776                           
  1777                           ;main.c: 135:         RCIF = 0;
  1778  001630  9A9E               	bcf	3998,5,c	;volatile
  1779  001632                     i2l150:
  1780  001632  C0DF  FFF5         	movff	??_RS232+9,tablat
  1781  001636  C0DE  FFF8         	movff	??_RS232+8,tblptru
  1782  00163A  C0DD  FFF7         	movff	??_RS232+7,tblptrh
  1783  00163E  C0DC  FFF6         	movff	??_RS232+6,tblptrl
  1784  001642  C0DB  FFF4         	movff	??_RS232+5,prodh
  1785  001646  C0DA  FFF3         	movff	??_RS232+4,prodl
  1786  00164A  C0D9  FFDA         	movff	??_RS232+3,fsr2h
  1787  00164E  C0D8  FFD9         	movff	??_RS232+2,fsr2l
  1788  001652  C0D7  FFE2         	movff	??_RS232+1,fsr1h
  1789  001656  C0D6  FFE1         	movff	??_RS232,fsr1l
  1790  00165A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1791  00165C  0011               	retfie		f
  1792  00165E                     __end_of_RS232:
  1793                           	callstack 0
  1794                           
  1795 ;; *************** function _get_y_and_sum *****************
  1796 ;; Defined at:
  1797 ;;		line 97 in file "main.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1813 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1814 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1815 ;;Total ram usage:        2 bytes
  1816 ;; Hardware stack levels used: 1
  1817 ;; Hardware stack levels required when called: 8
  1818 ;; This function calls:
  1819 ;;		___wmul
  1820 ;;		_reset_values
  1821 ;;		_serial_sendString
  1822 ;;		_sprintf
  1823 ;;		i2_Lcd_Clear
  1824 ;;		i2_Lcd_Set_Cursor
  1825 ;;		i2_Lcd_Write_String
  1826 ;; This function is called by:
  1827 ;;		_RS232
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text11
  1832  000D38                     __ptext11:
  1833                           	callstack 0
  1834  000D38                     _get_y_and_sum:
  1835                           	callstack 18
  1836  000D38                     
  1837                           ;main.c: 98:     if (RCREG == '\r') {
  1838  000D38  0E0D               	movlw	13
  1839  000D3A  18AE               	xorwf	174,w,c	;volatile
  1840  000D3C  A4D8               	btfss	status,2,c
  1841  000D3E  EFA3  F006         	goto	i2u208_41
  1842  000D42  EFA5  F006         	goto	i2u208_40
  1843  000D46                     i2u208_41:
  1844  000D46  EFF0  F006         	goto	i2l2646
  1845  000D4A                     i2u208_40:
  1846  000D4A                     
  1847                           ;main.c: 99:         sprintf(linha2, "   TOTAL = %u", x+y);
  1848  000D4A  0EAC               	movlw	low _linha2
  1849  000D4C  6E58               	movwf	sprintf@s^0,c
  1850  000D4E  0E00               	movlw	high _linha2
  1851  000D50  6E59               	movwf	(sprintf@s+1)^0,c
  1852  000D52  0E7C               	movlw	low STR_6
  1853  000D54  6E5A               	movwf	sprintf@fmt^0,c
  1854  000D56  0E08               	movlw	high STR_6
  1855  000D58  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1856  000D5A  0100               	movlb	0	; () banked
  1857  000D5C  516A               	movf	_y& (0+255),w,b
  1858  000D5E  256C               	addwf	_x& (0+255),w,b
  1859  000D60  6E5C               	movwf	(?_sprintf+4)^0,c
  1860  000D62  516B               	movf	(_y+1)& (0+255),w,b
  1861  000D64  216D               	addwfc	(_x+1)& (0+255),w,b
  1862  000D66  6E5D               	movwf	(?_sprintf+5)^0,c
  1863  000D68  ECE0  F00C         	call	_sprintf	;wreg free
  1864  000D6C                     
  1865                           ;main.c: 100:         Lcd_Set_Cursor(2, 1);
  1866  000D6C  0E01               	movlw	1
  1867  000D6E  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  1868  000D70  0E02               	movlw	2
  1869  000D72  EC1E  F00C         	call	i2_Lcd_Set_Cursor
  1870  000D76                     
  1871                           ;main.c: 101:         Lcd_Write_String(linha2);
  1872  000D76  0EAC               	movlw	low _linha2
  1873  000D78  6E05               	movwf	i2Lcd_Write_String@a^0,c
  1874  000D7A  0E00               	movlw	high _linha2
  1875  000D7C  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  1876  000D7E  EC2F  F00B         	call	i2_Lcd_Write_String	;wreg free
  1877  000D82                     
  1878                           ;main.c: 102:         sprintf(tx_string, "Y = %u\r", y);
  1879  000D82  0E8E               	movlw	low _tx_string
  1880  000D84  6E58               	movwf	sprintf@s^0,c
  1881  000D86  0E00               	movlw	high _tx_string
  1882  000D88  6E59               	movwf	(sprintf@s+1)^0,c
  1883  000D8A  0E9E               	movlw	low STR_7
  1884  000D8C  6E5A               	movwf	sprintf@fmt^0,c
  1885  000D8E  0E08               	movlw	high STR_7
  1886  000D90  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1887  000D92  C06A  F05C         	movff	_y,?_sprintf+4
  1888  000D96  C06B  F05D         	movff	_y+1,?_sprintf+5
  1889  000D9A  ECE0  F00C         	call	_sprintf	;wreg free
  1890  000D9E                     
  1891                           ;main.c: 103:         serial_sendString(tx_string);
  1892  000D9E  0E8E               	movlw	low _tx_string
  1893  000DA0  6E05               	movwf	serial_sendString@phrase^0,c
  1894  000DA2  0E00               	movlw	high _tx_string
  1895  000DA4  6E06               	movwf	(serial_sendString@phrase+1)^0,c
  1896  000DA6  EC32  F00D         	call	_serial_sendString	;wreg free
  1897  000DAA                     
  1898                           ;main.c: 104:         sprintf(tx_string, "TOTAL = %u\r", x+y);
  1899  000DAA  0E8E               	movlw	low _tx_string
  1900  000DAC  6E58               	movwf	sprintf@s^0,c
  1901  000DAE  0E00               	movlw	high _tx_string
  1902  000DB0  6E59               	movwf	(sprintf@s+1)^0,c
  1903  000DB2  0E8A               	movlw	low STR_8
  1904  000DB4  6E5A               	movwf	sprintf@fmt^0,c
  1905  000DB6  0E08               	movlw	high STR_8
  1906  000DB8  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1907  000DBA  0100               	movlb	0	; () banked
  1908  000DBC  516A               	movf	_y& (0+255),w,b
  1909  000DBE  256C               	addwf	_x& (0+255),w,b
  1910  000DC0  6E5C               	movwf	(?_sprintf+4)^0,c
  1911  000DC2  516B               	movf	(_y+1)& (0+255),w,b
  1912  000DC4  216D               	addwfc	(_x+1)& (0+255),w,b
  1913  000DC6  6E5D               	movwf	(?_sprintf+5)^0,c
  1914  000DC8  ECE0  F00C         	call	_sprintf	;wreg free
  1915  000DCC                     
  1916                           ;main.c: 105:         serial_sendString(tx_string);
  1917  000DCC  0E8E               	movlw	low _tx_string
  1918  000DCE  6E05               	movwf	serial_sendString@phrase^0,c
  1919  000DD0  0E00               	movlw	high _tx_string
  1920  000DD2  6E06               	movwf	(serial_sendString@phrase+1)^0,c
  1921  000DD4  EC32  F00D         	call	_serial_sendString	;wreg free
  1922  000DD8                     
  1923                           ;main.c: 106:         reset_values();
  1924  000DD8  EC3E  F00E         	call	_reset_values	;wreg free
  1925                           
  1926                           ;main.c: 107:     } else {
  1927  000DDC  EF7E  F007         	goto	i2l142
  1928  000DE0                     i2l2646:
  1929                           
  1930                           ;main.c: 108:         digito = RCREG - 0x30;
  1931  000DE0  0ED0               	movlw	208
  1932  000DE2  24AE               	addwf	174,w,c	;volatile
  1933  000DE4  0100               	movlb	0	; () banked
  1934  000DE6  6F68               	movwf	_digito& (0+255),b
  1935  000DE8  6B69               	clrf	(_digito+1)& (0+255),b
  1936  000DEA  0EFF               	movlw	255
  1937  000DEC  2369               	addwfc	(_digito+1)& (0+255),f,b
  1938                           
  1939                           ;main.c: 109:         if (y > 6553 || (y == 6553 && digito > 5)) {
  1940  000DEE  0E9A               	movlw	154
  1941  000DF0  5D6A               	subwf	_y& (0+255),w,b
  1942  000DF2  0E19               	movlw	25
  1943  000DF4  596B               	subwfb	(_y+1)& (0+255),w,b
  1944  000DF6  B0D8               	btfsc	status,0,c
  1945  000DF8  EF00  F007         	goto	i2u209_41
  1946  000DFC  EF02  F007         	goto	i2u209_40
  1947  000E00                     i2u209_41:
  1948  000E00  EF19  F007         	goto	i2l2652
  1949  000E04                     i2u209_40:
  1950  000E04                     
  1951                           ; BSR set to: 0
  1952  000E04  0E99               	movlw	153
  1953  000E06  196A               	xorwf	_y& (0+255),w,b
  1954  000E08  E107               	bnz	i2u210_41
  1955  000E0A  0E19               	movlw	25
  1956  000E0C  196B               	xorwf	(_y+1)& (0+255),w,b
  1957  000E0E  A4D8               	btfss	status,2,c
  1958  000E10  EF0C  F007         	goto	i2u210_41
  1959  000E14  EF0E  F007         	goto	i2u210_40
  1960  000E18                     i2u210_41:
  1961  000E18  EF54  F007         	goto	i2l2668
  1962  000E1C                     i2u210_40:
  1963  000E1C                     
  1964                           ; BSR set to: 0
  1965  000E1C  5169               	movf	(_digito+1)& (0+255),w,b
  1966  000E1E  E109               	bnz	i2u211_40
  1967  000E20  0E06               	movlw	6
  1968  000E22  5D68               	subwf	_digito& (0+255),w,b
  1969  000E24  A0D8               	btfss	status,0,c
  1970  000E26  EF17  F007         	goto	i2u211_41
  1971  000E2A  EF19  F007         	goto	i2u211_40
  1972  000E2E                     i2u211_41:
  1973  000E2E  EF54  F007         	goto	i2l2668
  1974  000E32                     i2u211_40:
  1975  000E32                     i2l2652:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;main.c: 110:             Lcd_Clear();
  1979  000E32  EC5A  F00E         	call	i2_Lcd_Clear	;wreg free
  1980  000E36                     
  1981                           ;main.c: 111:             Lcd_Set_Cursor(1, 1);
  1982  000E36  0E01               	movlw	1
  1983  000E38  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  1984  000E3A  0E01               	movlw	1
  1985  000E3C  EC1E  F00C         	call	i2_Lcd_Set_Cursor
  1986  000E40                     
  1987                           ;main.c: 112:             Lcd_Write_String("Valor  invalido!");
  1988  000E40  0E38               	movlw	low STR_3
  1989  000E42  6E05               	movwf	i2Lcd_Write_String@a^0,c
  1990  000E44  0E08               	movlw	high STR_3
  1991  000E46  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  1992  000E48  EC2F  F00B         	call	i2_Lcd_Write_String	;wreg free
  1993  000E4C                     
  1994                           ;main.c: 113:             _delay((unsigned long)((200)*(4000000/4000.0)));
  1995  000E4C  0E02               	movlw	2
  1996  000E4E  0100               	movlb	0	; () banked
  1997  000E50  6FD5               	movwf	(??_get_y_and_sum+1)& (0+255),b
  1998  000E52  0E04               	movlw	4
  1999  000E54  6FD4               	movwf	??_get_y_and_sum& (0+255),b
  2000  000E56  0EBA               	movlw	186
  2001  000E58                     i2u221_47:
  2002  000E58  2EE8               	decfsz	wreg,f,c
  2003  000E5A  D7FE               	bra	i2u221_47
  2004  000E5C  2FD4               	decfsz	??_get_y_and_sum& (0+255),f,b
  2005  000E5E  D7FC               	bra	i2u221_47
  2006  000E60  2FD5               	decfsz	(??_get_y_and_sum+1)& (0+255),f,b
  2007  000E62  D7FA               	bra	i2u221_47
  2008  000E64  F000               	nop	
  2009  000E66                     
  2010                           ;main.c: 114:             Lcd_Set_Cursor(2, 1);
  2011  000E66  0E01               	movlw	1
  2012  000E68  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  2013  000E6A  0E02               	movlw	2
  2014  000E6C  EC1E  F00C         	call	i2_Lcd_Set_Cursor
  2015  000E70                     
  2016                           ;main.c: 115:             Lcd_Write_String("Digite Novamente");
  2017  000E70  0E6B               	movlw	low STR_4
  2018  000E72  6E05               	movwf	i2Lcd_Write_String@a^0,c
  2019  000E74  0E08               	movlw	high STR_4
  2020  000E76  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  2021  000E78  EC2F  F00B         	call	i2_Lcd_Write_String	;wreg free
  2022  000E7C                     
  2023                           ;main.c: 116:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2024  000E7C  0E03               	movlw	3
  2025  000E7E  0100               	movlb	0	; () banked
  2026  000E80  6FD5               	movwf	(??_get_y_and_sum+1)& (0+255),b
  2027  000E82  0E8A               	movlw	138
  2028  000E84  6FD4               	movwf	??_get_y_and_sum& (0+255),b
  2029  000E86  0E55               	movlw	85
  2030  000E88                     i2u222_47:
  2031  000E88  2EE8               	decfsz	wreg,f,c
  2032  000E8A  D7FE               	bra	i2u222_47
  2033  000E8C  2FD4               	decfsz	??_get_y_and_sum& (0+255),f,b
  2034  000E8E  D7FC               	bra	i2u222_47
  2035  000E90  2FD5               	decfsz	(??_get_y_and_sum+1)& (0+255),f,b
  2036  000E92  D7FA               	bra	i2u222_47
  2037  000E94  D000               	nop2	
  2038                           
  2039                           ;main.c: 117:             Lcd_Clear();
  2040  000E96  EC5A  F00E         	call	i2_Lcd_Clear	;wreg free
  2041  000E9A                     
  2042                           ;main.c: 118:             y = 0;
  2043  000E9A  0E00               	movlw	0
  2044  000E9C  0100               	movlb	0	; () banked
  2045  000E9E  6F6B               	movwf	(_y+1)& (0+255),b
  2046  000EA0  0E00               	movlw	0
  2047  000EA2  6F6A               	movwf	_y& (0+255),b
  2048                           
  2049                           ;main.c: 119:         } else {
  2050  000EA4  EF7E  F007         	goto	i2l142
  2051  000EA8                     i2l2668:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;main.c: 120:             y = y * 10 + digito;
  2055  000EA8  C06A  F001         	movff	_y,___wmul@multiplier
  2056  000EAC  C06B  F002         	movff	_y+1,___wmul@multiplier+1
  2057  000EB0  0E00               	movlw	0
  2058  000EB2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2059  000EB4  0E0A               	movlw	10
  2060  000EB6  6E03               	movwf	___wmul@multiplicand^0,c
  2061  000EB8  EC00  F00E         	call	___wmul	;wreg free
  2062  000EBC  0100               	movlb	0	; () banked
  2063  000EBE  5168               	movf	_digito& (0+255),w,b
  2064  000EC0  2401               	addwf	?___wmul^0,w,c
  2065  000EC2  6F6A               	movwf	_y& (0+255),b
  2066  000EC4  5169               	movf	(_digito+1)& (0+255),w,b
  2067  000EC6  2002               	addwfc	(?___wmul+1)^0,w,c
  2068  000EC8  6F6B               	movwf	(_y+1)& (0+255),b
  2069  000ECA                     
  2070                           ; BSR set to: 0
  2071                           ;main.c: 121:             sprintf(linha1, "Y = %5u           ", y);
  2072  000ECA  0EBC               	movlw	low _linha1
  2073  000ECC  6E58               	movwf	sprintf@s^0,c
  2074  000ECE  0E00               	movlw	high _linha1
  2075  000ED0  6E59               	movwf	(sprintf@s+1)^0,c
  2076  000ED2  0E14               	movlw	low STR_11
  2077  000ED4  6E5A               	movwf	sprintf@fmt^0,c
  2078  000ED6  0E08               	movlw	high STR_11
  2079  000ED8  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2080  000EDA  C06A  F05C         	movff	_y,?_sprintf+4
  2081  000EDE  C06B  F05D         	movff	_y+1,?_sprintf+5
  2082  000EE2  ECE0  F00C         	call	_sprintf	;wreg free
  2083  000EE6                     
  2084                           ;main.c: 122:             Lcd_Set_Cursor(1, 1);
  2085  000EE6  0E01               	movlw	1
  2086  000EE8  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  2087  000EEA  0E01               	movlw	1
  2088  000EEC  EC1E  F00C         	call	i2_Lcd_Set_Cursor
  2089  000EF0                     
  2090                           ;main.c: 123:             Lcd_Write_String(linha1);
  2091  000EF0  0EBC               	movlw	low _linha1
  2092  000EF2  6E05               	movwf	i2Lcd_Write_String@a^0,c
  2093  000EF4  0E00               	movlw	high _linha1
  2094  000EF6  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  2095  000EF8  EC2F  F00B         	call	i2_Lcd_Write_String	;wreg free
  2096  000EFC                     i2l142:
  2097  000EFC  0012               	return		;funcret
  2098  000EFE                     __end_of_get_y_and_sum:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _reset_values *****************
  2102 ;; Defined at:
  2103 ;;		line 62 in file "main.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_get_y_and_sum
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text12
  2131  001C7C                     __ptext12:
  2132                           	callstack 0
  2133  001C7C                     _reset_values:
  2134                           	callstack 25
  2135  001C7C                     
  2136                           ;main.c: 63:     x = 0;
  2137  001C7C  0E00               	movlw	0
  2138  001C7E  0100               	movlb	0	; () banked
  2139  001C80  6F6D               	movwf	(_x+1)& (0+255),b
  2140  001C82  0E00               	movlw	0
  2141  001C84  6F6C               	movwf	_x& (0+255),b
  2142                           
  2143                           ;main.c: 64:     y = 0;
  2144  001C86  0E00               	movlw	0
  2145  001C88  6F6B               	movwf	(_y+1)& (0+255),b
  2146  001C8A  0E00               	movlw	0
  2147  001C8C  6F6A               	movwf	_y& (0+255),b
  2148  001C8E                     
  2149                           ; BSR set to: 0
  2150                           ;main.c: 65:     hasX = 0;
  2151  001C8E  91EA               	bcf	(_hasX/(0+8))& (0+255),_hasX& (0+7),b
  2152  001C90                     
  2153                           ; BSR set to: 0
  2154  001C90  0012               	return		;funcret
  2155  001C92                     __end_of_reset_values:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _get_x *****************
  2159 ;; Defined at:
  2160 ;;		line 68 in file "main.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2176 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2177 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2178 ;;Total ram usage:        2 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 8
  2181 ;; This function calls:
  2182 ;;		___wmul
  2183 ;;		_serial_sendString
  2184 ;;		_sprintf
  2185 ;;		i2_Lcd_Clear
  2186 ;;		i2_Lcd_Set_Cursor
  2187 ;;		i2_Lcd_Write_String
  2188 ;; This function is called by:
  2189 ;;		_RS232
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text13
  2194  00108E                     __ptext13:
  2195                           	callstack 0
  2196  00108E                     _get_x:
  2197                           	callstack 18
  2198  00108E                     
  2199                           ;main.c: 69:     if (RCREG == '\r') {
  2200  00108E  0E0D               	movlw	13
  2201  001090  18AE               	xorwf	174,w,c	;volatile
  2202  001092  A4D8               	btfss	status,2,c
  2203  001094  EF4E  F008         	goto	i2u204_41
  2204  001098  EF50  F008         	goto	i2u204_40
  2205  00109C                     i2u204_41:
  2206  00109C  EF75  F008         	goto	i2l2598
  2207  0010A0                     i2u204_40:
  2208  0010A0                     
  2209                           ;main.c: 70:         Lcd_Clear();
  2210  0010A0  EC5A  F00E         	call	i2_Lcd_Clear	;wreg free
  2211  0010A4                     
  2212                           ;main.c: 71:         Lcd_Set_Cursor(1, 1);
  2213  0010A4  0E01               	movlw	1
  2214  0010A6  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  2215  0010A8  0E01               	movlw	1
  2216  0010AA  EC1E  F00C         	call	i2_Lcd_Set_Cursor
  2217  0010AE                     
  2218                           ;main.c: 72:         Lcd_Write_String("Digite o valor Y");
  2219  0010AE  0E5A               	movlw	low STR_1
  2220  0010B0  6E05               	movwf	i2Lcd_Write_String@a^0,c
  2221  0010B2  0E08               	movlw	high STR_1
  2222  0010B4  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  2223  0010B6  EC2F  F00B         	call	i2_Lcd_Write_String	;wreg free
  2224  0010BA                     
  2225                           ;main.c: 73:         sprintf(tx_string, "X = %u\r", x);
  2226  0010BA  0E8E               	movlw	low _tx_string
  2227  0010BC  6E58               	movwf	sprintf@s^0,c
  2228  0010BE  0E00               	movlw	high _tx_string
  2229  0010C0  6E59               	movwf	(sprintf@s+1)^0,c
  2230  0010C2  0E96               	movlw	low STR_2
  2231  0010C4  6E5A               	movwf	sprintf@fmt^0,c
  2232  0010C6  0E08               	movlw	high STR_2
  2233  0010C8  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2234  0010CA  C06C  F05C         	movff	_x,?_sprintf+4
  2235  0010CE  C06D  F05D         	movff	_x+1,?_sprintf+5
  2236  0010D2  ECE0  F00C         	call	_sprintf	;wreg free
  2237  0010D6                     
  2238                           ;main.c: 74:         serial_sendString(tx_string);
  2239  0010D6  0E8E               	movlw	low _tx_string
  2240  0010D8  6E05               	movwf	serial_sendString@phrase^0,c
  2241  0010DA  0E00               	movlw	high _tx_string
  2242  0010DC  6E06               	movwf	(serial_sendString@phrase+1)^0,c
  2243  0010DE  EC32  F00D         	call	_serial_sendString	;wreg free
  2244  0010E2                     
  2245                           ;main.c: 75:         hasX = 1;
  2246  0010E2  0100               	movlb	0	; () banked
  2247  0010E4  81EA               	bsf	(_hasX/(0+8))& (0+255),_hasX& (0+7),b
  2248                           
  2249                           ;main.c: 76:     } else {
  2250  0010E6  EF03  F009         	goto	i2l133
  2251  0010EA                     i2l2598:
  2252                           
  2253                           ;main.c: 77:         digito = RCREG - 0x30;
  2254  0010EA  0ED0               	movlw	208
  2255  0010EC  24AE               	addwf	174,w,c	;volatile
  2256  0010EE  0100               	movlb	0	; () banked
  2257  0010F0  6F68               	movwf	_digito& (0+255),b
  2258  0010F2  6B69               	clrf	(_digito+1)& (0+255),b
  2259  0010F4  0EFF               	movlw	255
  2260  0010F6  2369               	addwfc	(_digito+1)& (0+255),f,b
  2261                           
  2262                           ;main.c: 78:         if (x > 6553 || (x == 6553 && digito > 5)) {
  2263  0010F8  0E9A               	movlw	154
  2264  0010FA  5D6C               	subwf	_x& (0+255),w,b
  2265  0010FC  0E19               	movlw	25
  2266  0010FE  596D               	subwfb	(_x+1)& (0+255),w,b
  2267  001100  B0D8               	btfsc	status,0,c
  2268  001102  EF85  F008         	goto	i2u205_41
  2269  001106  EF87  F008         	goto	i2u205_40
  2270  00110A                     i2u205_41:
  2271  00110A  EF9E  F008         	goto	i2l2604
  2272  00110E                     i2u205_40:
  2273  00110E                     
  2274                           ; BSR set to: 0
  2275  00110E  0E99               	movlw	153
  2276  001110  196C               	xorwf	_x& (0+255),w,b
  2277  001112  E107               	bnz	i2u206_41
  2278  001114  0E19               	movlw	25
  2279  001116  196D               	xorwf	(_x+1)& (0+255),w,b
  2280  001118  A4D8               	btfss	status,2,c
  2281  00111A  EF91  F008         	goto	i2u206_41
  2282  00111E  EF93  F008         	goto	i2u206_40
  2283  001122                     i2u206_41:
  2284  001122  EFD9  F008         	goto	i2l2620
  2285  001126                     i2u206_40:
  2286  001126                     
  2287                           ; BSR set to: 0
  2288  001126  5169               	movf	(_digito+1)& (0+255),w,b
  2289  001128  E109               	bnz	i2u207_40
  2290  00112A  0E06               	movlw	6
  2291  00112C  5D68               	subwf	_digito& (0+255),w,b
  2292  00112E  A0D8               	btfss	status,0,c
  2293  001130  EF9C  F008         	goto	i2u207_41
  2294  001134  EF9E  F008         	goto	i2u207_40
  2295  001138                     i2u207_41:
  2296  001138  EFD9  F008         	goto	i2l2620
  2297  00113C                     i2u207_40:
  2298  00113C                     i2l2604:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;main.c: 79:             Lcd_Clear();
  2302  00113C  EC5A  F00E         	call	i2_Lcd_Clear	;wreg free
  2303  001140                     
  2304                           ;main.c: 80:             Lcd_Set_Cursor(1, 1);
  2305  001140  0E01               	movlw	1
  2306  001142  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  2307  001144  0E01               	movlw	1
  2308  001146  EC1E  F00C         	call	i2_Lcd_Set_Cursor
  2309  00114A                     
  2310                           ;main.c: 81:             Lcd_Write_String("Valor  invalido!");
  2311  00114A  0E38               	movlw	low STR_3
  2312  00114C  6E05               	movwf	i2Lcd_Write_String@a^0,c
  2313  00114E  0E08               	movlw	high STR_3
  2314  001150  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  2315  001152  EC2F  F00B         	call	i2_Lcd_Write_String	;wreg free
  2316  001156                     
  2317                           ;main.c: 82:             _delay((unsigned long)((200)*(4000000/4000.0)));
  2318  001156  0E02               	movlw	2
  2319  001158  0100               	movlb	0	; () banked
  2320  00115A  6FD5               	movwf	(??_get_x+1)& (0+255),b
  2321  00115C  0E04               	movlw	4
  2322  00115E  6FD4               	movwf	??_get_x& (0+255),b
  2323  001160  0EBA               	movlw	186
  2324  001162                     i2u223_47:
  2325  001162  2EE8               	decfsz	wreg,f,c
  2326  001164  D7FE               	bra	i2u223_47
  2327  001166  2FD4               	decfsz	??_get_x& (0+255),f,b
  2328  001168  D7FC               	bra	i2u223_47
  2329  00116A  2FD5               	decfsz	(??_get_x+1)& (0+255),f,b
  2330  00116C  D7FA               	bra	i2u223_47
  2331  00116E  F000               	nop	
  2332  001170                     
  2333                           ;main.c: 83:             Lcd_Set_Cursor(2, 1);
  2334  001170  0E01               	movlw	1
  2335  001172  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  2336  001174  0E02               	movlw	2
  2337  001176  EC1E  F00C         	call	i2_Lcd_Set_Cursor
  2338  00117A                     
  2339                           ;main.c: 84:             Lcd_Write_String("Digite Novamente");
  2340  00117A  0E6B               	movlw	low STR_4
  2341  00117C  6E05               	movwf	i2Lcd_Write_String@a^0,c
  2342  00117E  0E08               	movlw	high STR_4
  2343  001180  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  2344  001182  EC2F  F00B         	call	i2_Lcd_Write_String	;wreg free
  2345  001186                     
  2346                           ;main.c: 85:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2347  001186  0E03               	movlw	3
  2348  001188  0100               	movlb	0	; () banked
  2349  00118A  6FD5               	movwf	(??_get_x+1)& (0+255),b
  2350  00118C  0E8A               	movlw	138
  2351  00118E  6FD4               	movwf	??_get_x& (0+255),b
  2352  001190  0E55               	movlw	85
  2353  001192                     i2u224_47:
  2354  001192  2EE8               	decfsz	wreg,f,c
  2355  001194  D7FE               	bra	i2u224_47
  2356  001196  2FD4               	decfsz	??_get_x& (0+255),f,b
  2357  001198  D7FC               	bra	i2u224_47
  2358  00119A  2FD5               	decfsz	(??_get_x+1)& (0+255),f,b
  2359  00119C  D7FA               	bra	i2u224_47
  2360  00119E  D000               	nop2	
  2361                           
  2362                           ;main.c: 86:             Lcd_Clear();
  2363  0011A0  EC5A  F00E         	call	i2_Lcd_Clear	;wreg free
  2364  0011A4                     
  2365                           ;main.c: 87:             x = 0;
  2366  0011A4  0E00               	movlw	0
  2367  0011A6  0100               	movlb	0	; () banked
  2368  0011A8  6F6D               	movwf	(_x+1)& (0+255),b
  2369  0011AA  0E00               	movlw	0
  2370  0011AC  6F6C               	movwf	_x& (0+255),b
  2371                           
  2372                           ;main.c: 88:         } else {
  2373  0011AE  EF03  F009         	goto	i2l133
  2374  0011B2                     i2l2620:
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;main.c: 89:             x = x * 10 + digito;
  2378  0011B2  C06C  F001         	movff	_x,___wmul@multiplier
  2379  0011B6  C06D  F002         	movff	_x+1,___wmul@multiplier+1
  2380  0011BA  0E00               	movlw	0
  2381  0011BC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2382  0011BE  0E0A               	movlw	10
  2383  0011C0  6E03               	movwf	___wmul@multiplicand^0,c
  2384  0011C2  EC00  F00E         	call	___wmul	;wreg free
  2385  0011C6  0100               	movlb	0	; () banked
  2386  0011C8  5168               	movf	_digito& (0+255),w,b
  2387  0011CA  2401               	addwf	?___wmul^0,w,c
  2388  0011CC  6F6C               	movwf	_x& (0+255),b
  2389  0011CE  5169               	movf	(_digito+1)& (0+255),w,b
  2390  0011D0  2002               	addwfc	(?___wmul+1)^0,w,c
  2391  0011D2  6F6D               	movwf	(_x+1)& (0+255),b
  2392  0011D4                     
  2393                           ; BSR set to: 0
  2394                           ;main.c: 90:             sprintf(linha1, "X = %5u           ", x);
  2395  0011D4  0EBC               	movlw	low _linha1
  2396  0011D6  6E58               	movwf	sprintf@s^0,c
  2397  0011D8  0E00               	movlw	high _linha1
  2398  0011DA  6E59               	movwf	(sprintf@s+1)^0,c
  2399  0011DC  0E01               	movlw	low STR_5
  2400  0011DE  6E5A               	movwf	sprintf@fmt^0,c
  2401  0011E0  0E08               	movlw	high STR_5
  2402  0011E2  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2403  0011E4  C06C  F05C         	movff	_x,?_sprintf+4
  2404  0011E8  C06D  F05D         	movff	_x+1,?_sprintf+5
  2405  0011EC  ECE0  F00C         	call	_sprintf	;wreg free
  2406  0011F0                     
  2407                           ;main.c: 91:             Lcd_Set_Cursor(1, 1);
  2408  0011F0  0E01               	movlw	1
  2409  0011F2  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  2410  0011F4  0E01               	movlw	1
  2411  0011F6  EC1E  F00C         	call	i2_Lcd_Set_Cursor
  2412  0011FA                     
  2413                           ;main.c: 92:             Lcd_Write_String(linha1);
  2414  0011FA  0EBC               	movlw	low _linha1
  2415  0011FC  6E05               	movwf	i2Lcd_Write_String@a^0,c
  2416  0011FE  0E00               	movlw	high _linha1
  2417  001200  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  2418  001202  EC2F  F00B         	call	i2_Lcd_Write_String	;wreg free
  2419  001206                     i2l133:
  2420  001206  0012               	return		;funcret
  2421  001208                     __end_of_get_x:
  2422                           	callstack 0
  2423                           
  2424 ;; *************** function i2_Lcd_Write_String *****************
  2425 ;; Defined at:
  2426 ;;		line 88 in file "./lcd.h"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  a               2    4[COMRAM] PTR unsigned char 
  2429 ;;		 -> STR_13(17), STR_12(17), STR_10(17), STR_9(17), 
  2430 ;;		 -> linha2(16), linha1(16), STR_4(17), STR_3(17), 
  2431 ;;		 -> STR_1(17), 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  i               2    8[COMRAM] int 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2443 ;;      Params:         2       0       0       0       0       0       0       0       0
  2444 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2445 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2446 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2447 ;;Total ram usage:        6 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 2
  2450 ;; This function calls:
  2451 ;;		i2_Lcd_Write_Char
  2452 ;; This function is called by:
  2453 ;;		_get_x
  2454 ;;		_get_y_and_sum
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text14
  2459  00165E                     __ptext14:
  2460                           	callstack 0
  2461  00165E                     i2_Lcd_Write_String:
  2462                           	callstack 23
  2463  00165E                     
  2464                           ;./lcd.h: 89:     int i;;./lcd.h: 90:     for (i = 0; a[i] != '\0'; i++)
  2465  00165E  0E00               	movlw	0
  2466  001660  6E0A               	movwf	(i2Lcd_Write_String@i+1)^0,c
  2467  001662  0E00               	movlw	0
  2468  001664  6E09               	movwf	i2Lcd_Write_String@i^0,c
  2469  001666  EF4F  F00B         	goto	i2l2582
  2470  00166A                     i2l2578:
  2471                           
  2472                           ;./lcd.h: 91:         Lcd_Write_Char(a[i]);
  2473  00166A  5009               	movf	i2Lcd_Write_String@i^0,w,c
  2474  00166C  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  2475  00166E  6E07               	movwf	??i2_Lcd_Write_String^0,c
  2476  001670  500A               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  2477  001672  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  2478  001674  6E08               	movwf	(??i2_Lcd_Write_String+1)^0,c
  2479  001676  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  2480  00167A  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  2481  00167E  6AF8               	clrf	tblptru,c
  2482  001680  0E07               	movlw	(high __ramtop+-1)
  2483  001682  64F7               	cpfsgt	tblptrh,c
  2484  001684  D003               	bra	i2u201_47
  2485  001686  0008               	tblrd		*
  2486  001688  50F5               	movf	tablat,w,c
  2487  00168A  D005               	bra	i2u201_40
  2488  00168C                     i2u201_47:
  2489  00168C  CFF6 FFE1          	movff	tblptrl,fsr1l
  2490  001690  CFF7 FFE2          	movff	tblptrh,fsr1h
  2491  001694  50E7               	movf	indf1,w,c
  2492  001696                     i2u201_40:
  2493  001696  EC9A  F00D         	call	i2_Lcd_Write_Char
  2494  00169A  4A09               	infsnz	i2Lcd_Write_String@i^0,f,c
  2495  00169C  2A0A               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  2496  00169E                     i2l2582:
  2497  00169E  5009               	movf	i2Lcd_Write_String@i^0,w,c
  2498  0016A0  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  2499  0016A2  6E07               	movwf	??i2_Lcd_Write_String^0,c
  2500  0016A4  500A               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  2501  0016A6  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  2502  0016A8  6E08               	movwf	(??i2_Lcd_Write_String+1)^0,c
  2503  0016AA  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  2504  0016AE  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  2505  0016B2  6AF8               	clrf	tblptru,c
  2506  0016B4  0E07               	movlw	(high __ramtop+-1)
  2507  0016B6  64F7               	cpfsgt	tblptrh,c
  2508  0016B8  D003               	bra	i2u202_47
  2509  0016BA  0008               	tblrd		*
  2510  0016BC  50F5               	movf	tablat,w,c
  2511  0016BE  D005               	bra	i2u202_40
  2512  0016C0                     i2u202_47:
  2513  0016C0  CFF6 FFE1          	movff	tblptrl,fsr1l
  2514  0016C4  CFF7 FFE2          	movff	tblptrh,fsr1h
  2515  0016C8  50E7               	movf	indf1,w,c
  2516  0016CA                     i2u202_40:
  2517  0016CA  0900               	iorlw	0
  2518  0016CC  A4D8               	btfss	status,2,c
  2519  0016CE  EF6B  F00B         	goto	i2u203_41
  2520  0016D2  EF6D  F00B         	goto	i2u203_40
  2521  0016D6                     i2u203_41:
  2522  0016D6  EF35  F00B         	goto	i2l2578
  2523  0016DA                     i2u203_40:
  2524  0016DA  0012               	return		;funcret
  2525  0016DC                     __end_ofi2_Lcd_Write_String:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function i2_Lcd_Write_Char *****************
  2529 ;; Defined at:
  2530 ;;		line 73 in file "./lcd.h"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  a               1    wreg     unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  a               1    3[COMRAM] unsigned char 
  2535 ;;  y               1    2[COMRAM] unsigned char 
  2536 ;;  temp            1    1[COMRAM] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0
  2547 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2549 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2550 ;;Total ram usage:        3 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; Hardware stack levels required when called: 1
  2553 ;; This function calls:
  2554 ;;		i2_Lcd_Port
  2555 ;; This function is called by:
  2556 ;;		i2_Lcd_Write_String
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text15
  2561  001B34                     __ptext15:
  2562                           	callstack 0
  2563  001B34                     i2_Lcd_Write_Char:
  2564                           	callstack 23
  2565                           
  2566                           ;incstack = 0
  2567                           ;i2Lcd_Write_Char@a stored from wreg
  2568  001B34  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  2569  001B36                     
  2570                           ;./lcd.h: 74:     char temp, y;;./lcd.h: 75:     temp = a & 0x0F;
  2571  001B36  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  2572  001B38  0B0F               	andlw	15
  2573  001B3A  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  2574                           
  2575                           ;./lcd.h: 76:     y = a & 0xF0;
  2576  001B3C  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  2577  001B3E  0BF0               	andlw	240
  2578  001B40  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  2579  001B42                     
  2580                           ;./lcd.h: 77:     LATE0 = 1;
  2581  001B42  808D               	bsf	3981,0,c	;volatile
  2582  001B44                     
  2583                           ;./lcd.h: 78:     Lcd_Port(y >> 4);
  2584  001B44  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  2585  001B46  0B0F               	andlw	15
  2586  001B48  ECB2  F00C         	call	i2_Lcd_Port
  2587  001B4C                     
  2588                           ;./lcd.h: 79:     LATE1 = 1;
  2589  001B4C  828D               	bsf	3981,1,c	;volatile
  2590  001B4E                     
  2591                           ;./lcd.h: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2592  001B4E  0E0D               	movlw	13
  2593  001B50                     i2u225_47:
  2594  001B50  2EE8               	decfsz	wreg,f,c
  2595  001B52  D7FE               	bra	i2u225_47
  2596  001B54  F000               	nop	
  2597  001B56                     
  2598                           ;./lcd.h: 81:     LATE1 = 0;
  2599  001B56  928D               	bcf	3981,1,c	;volatile
  2600  001B58                     
  2601                           ;./lcd.h: 82:     Lcd_Port(temp);
  2602  001B58  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  2603  001B5A  ECB2  F00C         	call	i2_Lcd_Port
  2604  001B5E                     
  2605                           ;./lcd.h: 83:     LATE1 = 1;
  2606  001B5E  828D               	bsf	3981,1,c	;volatile
  2607  001B60                     
  2608                           ;./lcd.h: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2609  001B60  0E0D               	movlw	13
  2610  001B62                     i2u226_47:
  2611  001B62  2EE8               	decfsz	wreg,f,c
  2612  001B64  D7FE               	bra	i2u226_47
  2613  001B66  F000               	nop	
  2614  001B68                     
  2615                           ;./lcd.h: 85:     LATE1 = 0;
  2616  001B68  928D               	bcf	3981,1,c	;volatile
  2617  001B6A  0012               	return		;funcret
  2618  001B6C                     __end_ofi2_Lcd_Write_Char:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function i2_Lcd_Set_Cursor *****************
  2622 ;; Defined at:
  2623 ;;		line 38 in file "./lcd.h"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  a               1    wreg     unsigned char 
  2626 ;;  b               1    3[COMRAM] unsigned char 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  a               1    4[COMRAM] unsigned char 
  2629 ;;  temp            1    7[COMRAM] unsigned char 
  2630 ;;  y               1    6[COMRAM] unsigned char 
  2631 ;;  z               1    5[COMRAM] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2641 ;;      Params:         1       0       0       0       0       0       0       0       0
  2642 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2644 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2645 ;;Total ram usage:        5 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 2
  2648 ;; This function calls:
  2649 ;;		i2_Lcd_Cmd
  2650 ;; This function is called by:
  2651 ;;		_get_x
  2652 ;;		_get_y_and_sum
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text16
  2657  00183C                     __ptext16:
  2658                           	callstack 0
  2659  00183C                     i2_Lcd_Set_Cursor:
  2660                           	callstack 23
  2661                           
  2662                           ;incstack = 0
  2663                           ;i2Lcd_Set_Cursor@a stored from wreg
  2664  00183C  6E05               	movwf	i2Lcd_Set_Cursor@a^0,c
  2665  00183E                     
  2666                           ;./lcd.h: 39:     char temp, z, y;;./lcd.h: 40:     if (a == 1) {
  2667  00183E  0405               	decf	i2Lcd_Set_Cursor@a^0,w,c
  2668  001840  A4D8               	btfss	status,2,c
  2669  001842  EF25  F00C         	goto	i2u199_41
  2670  001846  EF27  F00C         	goto	i2u199_40
  2671  00184A                     i2u199_41:
  2672  00184A  EF38  F00C         	goto	i2l2568
  2673  00184E                     i2u199_40:
  2674  00184E                     
  2675                           ;./lcd.h: 41:         temp = 0x80 + b - 1;
  2676  00184E  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  2677  001850  0F7F               	addlw	127
  2678  001852  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  2679                           
  2680                           ;./lcd.h: 42:         z = temp >> 4;
  2681  001854  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  2682  001856  0B0F               	andlw	15
  2683  001858  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  2684                           
  2685                           ;./lcd.h: 43:         y = temp & 0x0F;
  2686  00185A  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  2687  00185C  0B0F               	andlw	15
  2688  00185E  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  2689  001860                     
  2690                           ;./lcd.h: 44:         Lcd_Cmd(z);
  2691  001860  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  2692  001862  EC13  F00E         	call	i2_Lcd_Cmd
  2693  001866                     
  2694                           ;./lcd.h: 45:         Lcd_Cmd(y);
  2695  001866  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  2696  001868  EC13  F00E         	call	i2_Lcd_Cmd
  2697                           
  2698                           ;./lcd.h: 46:     } else if (a == 2) {
  2699  00186C  EF50  F00C         	goto	i2l77
  2700  001870                     i2l2568:
  2701  001870  0E02               	movlw	2
  2702  001872  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  2703  001874  A4D8               	btfss	status,2,c
  2704  001876  EF3F  F00C         	goto	i2u200_41
  2705  00187A  EF41  F00C         	goto	i2u200_40
  2706  00187E                     i2u200_41:
  2707  00187E  EF50  F00C         	goto	i2l77
  2708  001882                     i2u200_40:
  2709  001882                     
  2710                           ;./lcd.h: 47:         temp = 0xC0 + b - 1;
  2711  001882  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  2712  001884  0FBF               	addlw	191
  2713  001886  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  2714                           
  2715                           ;./lcd.h: 48:         z = temp >> 4;
  2716  001888  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  2717  00188A  0B0F               	andlw	15
  2718  00188C  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  2719                           
  2720                           ;./lcd.h: 49:         y = temp & 0x0F;
  2721  00188E  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  2722  001890  0B0F               	andlw	15
  2723  001892  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  2724  001894                     
  2725                           ;./lcd.h: 50:         Lcd_Cmd(z);
  2726  001894  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  2727  001896  EC13  F00E         	call	i2_Lcd_Cmd
  2728  00189A                     
  2729                           ;./lcd.h: 51:         Lcd_Cmd(y);
  2730  00189A  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  2731  00189C  EC13  F00E         	call	i2_Lcd_Cmd
  2732  0018A0                     i2l77:
  2733  0018A0  0012               	return		;funcret
  2734  0018A2                     __end_ofi2_Lcd_Set_Cursor:
  2735                           	callstack 0
  2736                           
  2737 ;; *************** function i2_Lcd_Clear *****************
  2738 ;; Defined at:
  2739 ;;		line 33 in file "./lcd.h"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2753 ;;      Params:         0       0       0       0       0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 2
  2760 ;; This function calls:
  2761 ;;		i2_Lcd_Cmd
  2762 ;; This function is called by:
  2763 ;;		_get_x
  2764 ;;		_get_y_and_sum
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text17
  2769  001CB4                     __ptext17:
  2770                           	callstack 0
  2771  001CB4                     i2_Lcd_Clear:
  2772                           	callstack 23
  2773  001CB4                     
  2774                           ;./lcd.h: 34:     Lcd_Cmd(0);
  2775  001CB4  0E00               	movlw	0
  2776  001CB6  EC13  F00E         	call	i2_Lcd_Cmd
  2777                           
  2778                           ;./lcd.h: 35:     Lcd_Cmd(1);
  2779  001CBA  0E01               	movlw	1
  2780  001CBC  EC13  F00E         	call	i2_Lcd_Cmd
  2781  001CC0  0012               	return		;funcret
  2782  001CC2                     __end_ofi2_Lcd_Clear:
  2783                           	callstack 0
  2784                           
  2785 ;; *************** function i2_Lcd_Cmd *****************
  2786 ;; Defined at:
  2787 ;;		line 25 in file "./lcd.h"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  a               1    wreg     unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  a               1    2[COMRAM] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0
  2802 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2803 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2804 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2805 ;;Total ram usage:        2 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 1
  2808 ;; This function calls:
  2809 ;;		i2_Lcd_Port
  2810 ;; This function is called by:
  2811 ;;		i2_Lcd_Clear
  2812 ;;		i2_Lcd_Set_Cursor
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text18
  2817  001C26                     __ptext18:
  2818                           	callstack 0
  2819  001C26                     i2_Lcd_Cmd:
  2820                           	callstack 23
  2821                           
  2822                           ;incstack = 0
  2823                           ;i2Lcd_Cmd@a stored from wreg
  2824  001C26  6E03               	movwf	i2Lcd_Cmd@a^0,c
  2825  001C28                     
  2826                           ;./lcd.h: 26:     LATE0 = 0;
  2827  001C28  908D               	bcf	3981,0,c	;volatile
  2828  001C2A                     
  2829                           ;./lcd.h: 27:     Lcd_Port(a);
  2830  001C2A  5003               	movf	i2Lcd_Cmd@a^0,w,c
  2831  001C2C  ECB2  F00C         	call	i2_Lcd_Port
  2832  001C30                     
  2833                           ;./lcd.h: 28:     LATE1 = 1;
  2834  001C30  828D               	bsf	3981,1,c	;volatile
  2835  001C32                     
  2836                           ;./lcd.h: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2837  001C32  0E06               	movlw	6
  2838  001C34  6E02               	movwf	??i2_Lcd_Cmd^0,c
  2839  001C36  0E30               	movlw	48
  2840  001C38                     i2u227_47:
  2841  001C38  2EE8               	decfsz	wreg,f,c
  2842  001C3A  D7FE               	bra	i2u227_47
  2843  001C3C  2E02               	decfsz	??i2_Lcd_Cmd^0,f,c
  2844  001C3E  D7FC               	bra	i2u227_47
  2845  001C40  D000               	nop2	
  2846  001C42                     
  2847                           ;./lcd.h: 30:     LATE1 = 0;
  2848  001C42  928D               	bcf	3981,1,c	;volatile
  2849  001C44  0012               	return		;funcret
  2850  001C46                     __end_ofi2_Lcd_Cmd:
  2851                           	callstack 0
  2852                           
  2853 ;; *************** function i2_Lcd_Port *****************
  2854 ;; Defined at:
  2855 ;;		line 3 in file "./lcd.h"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  a               1    wreg     unsigned char 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  a               1    0[COMRAM] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0
  2870 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2872 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2873 ;;Total ram usage:        1 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		i2_Lcd_Cmd
  2879 ;;		i2_Lcd_Write_Char
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text19
  2884  001964                     __ptext19:
  2885                           	callstack 0
  2886  001964                     i2_Lcd_Port:
  2887                           	callstack 23
  2888                           
  2889                           ;incstack = 0
  2890                           ;i2Lcd_Port@a stored from wreg
  2891  001964  6E01               	movwf	i2Lcd_Port@a^0,c
  2892  001966                     
  2893                           ;./lcd.h: 4:     if (a & 1)
  2894  001966  A001               	btfss	i2Lcd_Port@a^0,0,c
  2895  001968  EFB8  F00C         	goto	i2u192_41
  2896  00196C  EFBA  F00C         	goto	i2u192_40
  2897  001970                     i2u192_41:
  2898  001970  EFBD  F00C         	goto	i2l57
  2899  001974                     i2u192_40:
  2900  001974                     
  2901                           ;./lcd.h: 5:         LATD4 = 1;
  2902  001974  888C               	bsf	3980,4,c	;volatile
  2903  001976  EFBE  F00C         	goto	i2l2478
  2904  00197A                     i2l57:
  2905                           
  2906                           ;./lcd.h: 7:         LATD4 = 0;
  2907  00197A  988C               	bcf	3980,4,c	;volatile
  2908  00197C                     i2l2478:
  2909                           
  2910                           ;./lcd.h: 9:     if (a & 2)
  2911  00197C  A201               	btfss	i2Lcd_Port@a^0,1,c
  2912  00197E  EFC3  F00C         	goto	i2u193_41
  2913  001982  EFC5  F00C         	goto	i2u193_40
  2914  001986                     i2u193_41:
  2915  001986  EFC8  F00C         	goto	i2l59
  2916  00198A                     i2u193_40:
  2917  00198A                     
  2918                           ;./lcd.h: 10:         LATD5 = 1;
  2919  00198A  8A8C               	bsf	3980,5,c	;volatile
  2920  00198C  EFC9  F00C         	goto	i2l2482
  2921  001990                     i2l59:
  2922                           
  2923                           ;./lcd.h: 12:         LATD5 = 0;
  2924  001990  9A8C               	bcf	3980,5,c	;volatile
  2925  001992                     i2l2482:
  2926                           
  2927                           ;./lcd.h: 14:     if (a & 4)
  2928  001992  A401               	btfss	i2Lcd_Port@a^0,2,c
  2929  001994  EFCE  F00C         	goto	i2u194_41
  2930  001998  EFD0  F00C         	goto	i2u194_40
  2931  00199C                     i2u194_41:
  2932  00199C  EFD3  F00C         	goto	i2l61
  2933  0019A0                     i2u194_40:
  2934  0019A0                     
  2935                           ;./lcd.h: 15:         LATD6 = 1;
  2936  0019A0  8C8C               	bsf	3980,6,c	;volatile
  2937  0019A2  EFD4  F00C         	goto	i2l2486
  2938  0019A6                     i2l61:
  2939                           
  2940                           ;./lcd.h: 17:         LATD6 = 0;
  2941  0019A6  9C8C               	bcf	3980,6,c	;volatile
  2942  0019A8                     i2l2486:
  2943                           
  2944                           ;./lcd.h: 19:     if (a & 8)
  2945  0019A8  A601               	btfss	i2Lcd_Port@a^0,3,c
  2946  0019AA  EFD9  F00C         	goto	i2u195_41
  2947  0019AE  EFDB  F00C         	goto	i2u195_40
  2948  0019B2                     i2u195_41:
  2949  0019B2  EFDE  F00C         	goto	i2l63
  2950  0019B6                     i2u195_40:
  2951  0019B6                     
  2952                           ;./lcd.h: 20:         LATD7 = 1;
  2953  0019B6  8E8C               	bsf	3980,7,c	;volatile
  2954  0019B8  EFDF  F00C         	goto	i2l65
  2955  0019BC                     i2l63:
  2956                           
  2957                           ;./lcd.h: 22:         LATD7 = 0;
  2958  0019BC  9E8C               	bcf	3980,7,c	;volatile
  2959  0019BE                     i2l65:
  2960  0019BE  0012               	return		;funcret
  2961  0019C0                     __end_ofi2_Lcd_Port:
  2962                           	callstack 0
  2963                           
  2964 ;; *************** function _sprintf *****************
  2965 ;; Defined at:
  2966 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  s               2   87[COMRAM] PTR unsigned char 
  2969 ;;		 -> linha2(16), linha1(16), tx_string(30), 
  2970 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2971 ;;		 -> STR_11(19), STR_8(12), STR_7(8), STR_6(14), 
  2972 ;;		 -> STR_5(19), STR_2(8), 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  f               6    2[BANK0 ] struct _IO_FILE
  2975 ;;  ap              2    0[BANK0 ] PTR void [1]
  2976 ;;		 -> ?_sprintf(2), 
  2977 ;;  ret             2    0        int 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  2   87[COMRAM] int 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2987 ;;      Params:         6       0       0       0       0       0       0       0       0
  2988 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2990 ;;      Totals:         6       8       0       0       0       0       0       0       0
  2991 ;;Total ram usage:       14 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; Hardware stack levels required when called: 7
  2994 ;; This function calls:
  2995 ;;		_vfprintf
  2996 ;; This function is called by:
  2997 ;;		_get_x
  2998 ;;		_get_y_and_sum
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text20
  3003  0019C0                     __ptext20:
  3004                           	callstack 0
  3005  0019C0                     _sprintf:
  3006                           	callstack 18
  3007  0019C0  0E5C               	movlw	low (?_sprintf+4)
  3008  0019C2  0100               	movlb	0	; () banked
  3009  0019C4  6FCC               	movwf	sprintf@ap& (0+255),b
  3010  0019C6  0E00               	movlw	high (?_sprintf+4)
  3011  0019C8  6FCD               	movwf	(sprintf@ap+1)& (0+255),b
  3012  0019CA  C058  F0CE         	movff	sprintf@s,sprintf@f
  3013  0019CE  C059  F0CF         	movff	sprintf@s+1,sprintf@f+1
  3014  0019D2                     
  3015                           ; BSR set to: 0
  3016  0019D2  0E00               	movlw	0
  3017  0019D4  6FD1               	movwf	(sprintf@f+3)& (0+255),b
  3018  0019D6  0E00               	movlw	0
  3019  0019D8  6FD0               	movwf	(sprintf@f+2)& (0+255),b
  3020  0019DA                     
  3021                           ; BSR set to: 0
  3022  0019DA  0E00               	movlw	0
  3023  0019DC  6FD3               	movwf	(sprintf@f+5)& (0+255),b
  3024  0019DE  0E00               	movlw	0
  3025  0019E0  6FD2               	movwf	(sprintf@f+4)& (0+255),b
  3026  0019E2                     
  3027                           ; BSR set to: 0
  3028  0019E2  0ECE               	movlw	low sprintf@f
  3029  0019E4  6E50               	movwf	vfprintf@fp^0,c
  3030  0019E6  0E00               	movlw	high sprintf@f
  3031  0019E8  6E51               	movwf	(vfprintf@fp+1)^0,c
  3032  0019EA  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  3033  0019EE  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3034  0019F2  0ECC               	movlw	low sprintf@ap
  3035  0019F4  6E54               	movwf	vfprintf@ap^0,c
  3036  0019F6  0E00               	movlw	high sprintf@ap
  3037  0019F8  6E55               	movwf	(vfprintf@ap+1)^0,c
  3038  0019FA  EC51  F00C         	call	_vfprintf	;wreg free
  3039  0019FE  0100               	movlb	0	; () banked
  3040  001A00  51D0               	movf	(sprintf@f+2)& (0+255),w,b
  3041  001A02  2458               	addwf	sprintf@s^0,w,c
  3042  001A04  6ED9               	movwf	fsr2l,c
  3043  001A06  51D1               	movf	(sprintf@f+3)& (0+255),w,b
  3044  001A08  2059               	addwfc	(sprintf@s+1)^0,w,c
  3045  001A0A  6EDA               	movwf	fsr2h,c
  3046  001A0C  0E00               	movlw	0
  3047  001A0E  6EDF               	movwf	indf2,c
  3048  001A10                     
  3049                           ; BSR set to: 0
  3050  001A10  0012               	return		;funcret
  3051  001A12                     __end_of_sprintf:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function _vfprintf *****************
  3055 ;; Defined at:
  3056 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3059 ;;		 -> sprintf@f(6), 
  3060 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3061 ;;		 -> STR_11(19), STR_8(12), STR_7(8), STR_6(14), 
  3062 ;;		 -> STR_5(19), STR_2(8), 
  3063 ;;  ap              2   83[COMRAM] PTR PTR void 
  3064 ;;		 -> sprintf@ap(2), 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3067 ;;		 -> STR_11(19), STR_8(12), STR_7(8), STR_6(14), 
  3068 ;;		 -> STR_5(19), STR_2(8), 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  2   79[COMRAM] int 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3078 ;;      Params:         6       0       0       0       0       0       0       0       0
  3079 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3081 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3082 ;;Total ram usage:        8 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 6
  3085 ;; This function calls:
  3086 ;;		_vfpfcnvrt
  3087 ;; This function is called by:
  3088 ;;		_sprintf
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           	psect	text21
  3093  0018A2                     __ptext21:
  3094                           	callstack 0
  3095  0018A2                     _vfprintf:
  3096                           	callstack 18
  3097  0018A2                     
  3098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3099  0018A2  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3100  0018A6  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3101  0018AA                     
  3102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3103  0018AA  0E00               	movlw	0
  3104  0018AC  0100               	movlb	0	; () banked
  3105  0018AE  6F61               	movwf	(_nout+1)& (0+255),b
  3106  0018B0  0E00               	movlw	0
  3107  0018B2  6F60               	movwf	_nout& (0+255),b
  3108                           
  3109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3110  0018B4  EF6F  F00C         	goto	i2l2500
  3111  0018B8                     i2l2498:
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3115  0018B8  C050  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3116  0018BC  C051  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3117  0018C0  0E56               	movlw	low vfprintf@cfmt
  3118  0018C2  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  3119  0018C4  0E00               	movlw	high vfprintf@cfmt
  3120  0018C6  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3121  0018C8  C054  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  3122  0018CC  C055  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3123  0018D0  EC54  F004         	call	_vfpfcnvrt	;wreg free
  3124  0018D4  503C               	movf	?_vfpfcnvrt^0,w,c
  3125  0018D6  0100               	movlb	0	; () banked
  3126  0018D8  2760               	addwf	_nout& (0+255),f,b
  3127  0018DA  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
  3128  0018DC  2361               	addwfc	(_nout+1)& (0+255),f,b
  3129  0018DE                     i2l2500:
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3133  0018DE  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3134  0018E2  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3135  0018E6                     	if	0	;tblptru may be non-zero
  3136  0018E6                     	endif
  3137  0018E6                     	if	0	;tblptru may be non-zero
  3138  0018E6                     	endif
  3139  0018E6  0008               	tblrd		*
  3140  0018E8  50F5               	movf	tablat,w,c
  3141  0018EA  0900               	iorlw	0
  3142  0018EC  A4D8               	btfss	status,2,c
  3143  0018EE  EF7B  F00C         	goto	i2u197_41
  3144  0018F2  EF7D  F00C         	goto	i2u197_40
  3145  0018F6                     i2u197_41:
  3146  0018F6  EF5C  F00C         	goto	i2l2498
  3147  0018FA                     i2u197_40:
  3148  0018FA                     
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3151  0018FA  C060  F050         	movff	_nout,?_vfprintf
  3152  0018FE  C061  F051         	movff	_nout+1,?_vfprintf+1
  3153  001902                     
  3154                           ; BSR set to: 0
  3155  001902  0012               	return		;funcret
  3156  001904                     __end_of_vfprintf:
  3157                           	callstack 0
  3158                           
  3159 ;; *************** function _vfpfcnvrt *****************
  3160 ;; Defined at:
  3161 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  3164 ;;		 -> sprintf@f(6), 
  3165 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  3166 ;;		 -> vfprintf@cfmt(2), 
  3167 ;;  ap              2   63[COMRAM] PTR PTR void 
  3168 ;;		 -> sprintf@ap(2), 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  llu             8   69[COMRAM] unsigned long long 
  3171 ;;  ll              8    0        long long 
  3172 ;;  f               4    0        long long 
  3173 ;;  vp              3    0        PTR void 
  3174 ;;  ct              3    0        unsigned char [3]
  3175 ;;  cp              3    0        PTR unsigned char 
  3176 ;;  i               2    0        int 
  3177 ;;  done            2    0        int 
  3178 ;;  c               1    0        unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  2   59[COMRAM] int 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3188 ;;      Params:         6       0       0       0       0       0       0       0       0
  3189 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3190 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3191 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3192 ;;Total ram usage:       20 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 5
  3195 ;; This function calls:
  3196 ;;		_atoi
  3197 ;;		_fputc
  3198 ;;		_isdigit
  3199 ;;		_utoa
  3200 ;; This function is called by:
  3201 ;;		_vfprintf
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text22
  3206  0008A8                     __ptext22:
  3207                           	callstack 0
  3208  0008A8                     _vfpfcnvrt:
  3209                           	callstack 18
  3210  0008A8                     
  3211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3212  0008A8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3213  0008AC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3214  0008B0  CFDE FFF6          	movff	postinc2,tblptrl
  3215  0008B4  CFDD FFF7          	movff	postdec2,tblptrh
  3216  0008B8                     	if	0	;tblptru may be non-zero
  3217  0008B8                     	endif
  3218  0008B8                     	if	0	;tblptru may be non-zero
  3219  0008B8                     	endif
  3220  0008B8  0008               	tblrd		*
  3221  0008BA  50F5               	movf	tablat,w,c
  3222  0008BC  0A25               	xorlw	37
  3223  0008BE  A4D8               	btfss	status,2,c
  3224  0008C0  EF64  F004         	goto	i2u184_41
  3225  0008C4  EF66  F004         	goto	i2u184_40
  3226  0008C8                     i2u184_41:
  3227  0008C8  EF7F  F005         	goto	i2l2466
  3228  0008CC                     i2u184_40:
  3229  0008CC                     
  3230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3231  0008CC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3232  0008D0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3233  0008D4  2ADE               	incf	postinc2,f,c
  3234  0008D6  0E00               	movlw	0
  3235  0008D8  22DD               	addwfc	postdec2,f,c
  3236  0008DA                     
  3237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3238  0008DA  0E00               	movlw	0
  3239  0008DC  0100               	movlb	0	; () banked
  3240  0008DE  6F63               	movwf	(_width+1)& (0+255),b
  3241  0008E0  0E00               	movlw	0
  3242  0008E2  6F62               	movwf	_width& (0+255),b
  3243  0008E4  C062  F066         	movff	_width,_flags
  3244  0008E8  C063  F067         	movff	_width+1,_flags+1
  3245  0008EC                     
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3248  0008EC  6964               	setf	_prec& (0+255),b
  3249  0008EE  6965               	setf	(_prec+1)& (0+255),b
  3250  0008F0                     
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  3253  0008F0  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3254  0008F4  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3255  0008F8  CFDE FFF6          	movff	postinc2,tblptrl
  3256  0008FC  CFDD FFF7          	movff	postdec2,tblptrh
  3257  000900                     	if	0	;tblptru may be non-zero
  3258  000900                     	endif
  3259  000900                     	if	0	;tblptru may be non-zero
  3260  000900                     	endif
  3261  000900  0008               	tblrd		*
  3262  000902  50F5               	movf	tablat,w,c
  3263  000904  0A2A               	xorlw	42
  3264  000906  A4D8               	btfss	status,2,c
  3265  000908  EF88  F004         	goto	i2u185_41
  3266  00090C  EF8A  F004         	goto	i2u185_40
  3267  000910                     i2u185_41:
  3268  000910  EFB3  F004         	goto	i2l2432
  3269  000914                     i2u185_40:
  3270  000914                     
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  3273  000914  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3274  000918  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3275  00091C  2ADE               	incf	postinc2,f,c
  3276  00091E  0E00               	movlw	0
  3277  000920  22DD               	addwfc	postdec2,f,c
  3278                           
  3279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3280  000922  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3281  000926  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3282  00092A  CFDF F042          	movff	indf2,??_vfpfcnvrt
  3283  00092E  0E02               	movlw	2
  3284  000930  26DE               	addwf	postinc2,f,c
  3285  000932  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  3286  000936  0E00               	movlw	0
  3287  000938  22DD               	addwfc	postdec2,f,c
  3288  00093A  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3289  00093E  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3290  000942  CFDE F062          	movff	postinc2,_width
  3291  000946  CFDD F063          	movff	postdec2,_width+1
  3292  00094A                     
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  3295  00094A  BF63               	btfsc	(_width+1)& (0+255),7,b
  3296  00094C  EFAC  F004         	goto	i2u186_40
  3297  000950  EFAA  F004         	goto	i2u186_41
  3298  000954                     i2u186_41:
  3299  000954  EFF6  F004         	goto	i2l2442
  3300  000958                     i2u186_40:
  3301  000958                     
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  3304  000958  8166               	bsf	_flags& (0+255),0,b
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  3307  00095A  6D62               	negf	_width& (0+255),b
  3308  00095C  1F63               	comf	(_width+1)& (0+255),f,b
  3309  00095E  B0D8               	btfsc	status,0,c
  3310  000960  2B63               	incf	(_width+1)& (0+255),f,b
  3311  000962  EFF6  F004         	goto	i2l2442
  3312  000966                     i2l2432:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  3316  000966  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3317  00096A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3318  00096E  CFDE F008          	movff	postinc2,atoi@s
  3319  000972  CFDD F009          	movff	postdec2,atoi@s+1
  3320  000976  EC7F  F007         	call	_atoi	;wreg free
  3321  00097A  C008  F062         	movff	?_atoi,_width
  3322  00097E  C009  F063         	movff	?_atoi+1,_width+1
  3323                           
  3324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3325  000982  EFCA  F004         	goto	i2l2436
  3326  000986                     i2l2434:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  3329  000986  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3330  00098A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3331  00098E  2ADE               	incf	postinc2,f,c
  3332  000990  0E00               	movlw	0
  3333  000992  22DD               	addwfc	postdec2,f,c
  3334  000994                     i2l2436:
  3335  000994  0ED0               	movlw	208
  3336  000996  6E42               	movwf	??_vfpfcnvrt^0,c
  3337  000998  0EFF               	movlw	255
  3338  00099A  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  3339  00099C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3340  0009A0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3341  0009A4  CFDE FFF6          	movff	postinc2,tblptrl
  3342  0009A8  CFDD FFF7          	movff	postdec2,tblptrh
  3343  0009AC                     	if	0	;tblptru may be non-zero
  3344  0009AC                     	endif
  3345  0009AC                     	if	0	;tblptru may be non-zero
  3346  0009AC                     	endif
  3347  0009AC  0008               	tblrd		*
  3348  0009AE  50F5               	movf	tablat,w,c
  3349  0009B0  6E44               	movwf	(??_vfpfcnvrt+2)^0,c
  3350  0009B2  6A45               	clrf	(??_vfpfcnvrt+3)^0,c
  3351  0009B4  5042               	movf	??_vfpfcnvrt^0,w,c
  3352  0009B6  2644               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3353  0009B8  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  3354  0009BA  2245               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3355  0009BC  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  3356  0009BE  E10A               	bnz	i2u187_40
  3357  0009C0  0E0A               	movlw	10
  3358  0009C2  5C44               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3359  0009C4  A0D8               	btfss	status,0,c
  3360  0009C6  EFE7  F004         	goto	i2u187_41
  3361  0009CA  EFEA  F004         	goto	i2u187_40
  3362  0009CE                     i2u187_41:
  3363  0009CE  0E01               	movlw	1
  3364  0009D0  EFEB  F004         	goto	i2u188_40
  3365  0009D4                     i2u187_40:
  3366  0009D4  0E00               	movlw	0
  3367  0009D6                     i2u188_40:
  3368  0009D6  6E4E               	movwf	_vfpfcnvrt$702^0,c
  3369  0009D8  6A4F               	clrf	(_vfpfcnvrt$702+1)^0,c
  3370  0009DA  504E               	movf	_vfpfcnvrt$702^0,w,c
  3371  0009DC  104F               	iorwf	(_vfpfcnvrt$702+1)^0,w,c
  3372  0009DE  A4D8               	btfss	status,2,c
  3373  0009E0  EFF4  F004         	goto	i2u189_41
  3374  0009E4  EFF6  F004         	goto	i2u189_40
  3375  0009E8                     i2u189_41:
  3376  0009E8  EFC3  F004         	goto	i2l2434
  3377  0009EC                     i2u189_40:
  3378  0009EC                     i2l2442:
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3381  0009EC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3382  0009F0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3383  0009F4  CFDE FFF6          	movff	postinc2,tblptrl
  3384  0009F8  CFDD FFF7          	movff	postdec2,tblptrh
  3385  0009FC                     	if	0	;tblptru may be non-zero
  3386  0009FC                     	endif
  3387  0009FC                     	if	0	;tblptru may be non-zero
  3388  0009FC                     	endif
  3389  0009FC  0008               	tblrd		*
  3390  0009FE  50F5               	movf	tablat,w,c
  3391  000A00  0A75               	xorlw	117
  3392  000A02  A4D8               	btfss	status,2,c
  3393  000A04  EF06  F005         	goto	i2u190_41
  3394  000A08  EF08  F005         	goto	i2u190_40
  3395  000A0C                     i2u190_41:
  3396  000A0C  EF49  F005         	goto	i2l2450
  3397  000A10                     i2u190_40:
  3398  000A10                     
  3399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3400  000A10  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3401  000A14  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3402  000A18  2ADE               	incf	postinc2,f,c
  3403  000A1A  0E00               	movlw	0
  3404  000A1C  22DD               	addwfc	postdec2,f,c
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3407  000A1E  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3408  000A22  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3409  000A26  CFDF F042          	movff	indf2,??_vfpfcnvrt
  3410  000A2A  0E02               	movlw	2
  3411  000A2C  26DE               	addwf	postinc2,f,c
  3412  000A2E  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  3413  000A32  0E00               	movlw	0
  3414  000A34  22DD               	addwfc	postdec2,f,c
  3415  000A36  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3416  000A3A  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3417  000A3E  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  3418  000A42  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  3419  000A46  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3420  000A4A  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3421  000A4E  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  3422  000A50  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  3423  000A52  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  3424  000A54  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  3425  000A56  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  3426  000A58  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  3427  000A5A                     
  3428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  3429  000A5A  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3430  000A5E  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3431  000A62  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3432  000A66  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3433  000A6A  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3434  000A6E  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3435  000A72  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3436  000A76  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3437  000A7A  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3438  000A7E  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3439  000A82  EC9B  F005         	call	_utoa	;wreg free
  3440  000A86  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  3441  000A8A  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  3442  000A8E  EF9A  F005         	goto	i2l909
  3443  000A92                     i2l2450:
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3446  000A92  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3447  000A96  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3448  000A9A  CFDE FFF6          	movff	postinc2,tblptrl
  3449  000A9E  CFDD FFF7          	movff	postdec2,tblptrh
  3450  000AA2                     	if	0	;tblptru may be non-zero
  3451  000AA2                     	endif
  3452  000AA2                     	if	0	;tblptru may be non-zero
  3453  000AA2                     	endif
  3454  000AA2  0008               	tblrd		*
  3455  000AA4  50F5               	movf	tablat,w,c
  3456  000AA6  0A25               	xorlw	37
  3457  000AA8  A4D8               	btfss	status,2,c
  3458  000AAA  EF59  F005         	goto	i2u191_41
  3459  000AAE  EF5B  F005         	goto	i2u191_40
  3460  000AB2                     i2u191_41:
  3461  000AB2  EF72  F005         	goto	i2l2460
  3462  000AB6                     i2u191_40:
  3463  000AB6                     
  3464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3465  000AB6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3466  000ABA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3467  000ABE  2ADE               	incf	postinc2,f,c
  3468  000AC0  0E00               	movlw	0
  3469  000AC2  22DD               	addwfc	postdec2,f,c
  3470  000AC4                     
  3471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3472  000AC4  0E00               	movlw	0
  3473  000AC6  6E02               	movwf	(fputc@c+1)^0,c
  3474  000AC8  0E25               	movlw	37
  3475  000ACA  6E01               	movwf	fputc@c^0,c
  3476  000ACC  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3477  000AD0  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3478  000AD4  ECE4  F009         	call	_fputc	;wreg free
  3479  000AD8                     i2l2456:
  3480                           
  3481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3482  000AD8  0E00               	movlw	0
  3483  000ADA  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  3484  000ADC  0E01               	movlw	1
  3485  000ADE  6E3C               	movwf	?_vfpfcnvrt^0,c
  3486  000AE0  EF9A  F005         	goto	i2l909
  3487  000AE4                     i2l2460:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3490  000AE4  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3491  000AE8  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3492  000AEC  2ADE               	incf	postinc2,f,c
  3493  000AEE  0E00               	movlw	0
  3494  000AF0  22DD               	addwfc	postdec2,f,c
  3495  000AF2                     
  3496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3497  000AF2  0E00               	movlw	0
  3498  000AF4  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  3499  000AF6  0E00               	movlw	0
  3500  000AF8  6E3C               	movwf	?_vfpfcnvrt^0,c
  3501  000AFA  EF9A  F005         	goto	i2l909
  3502  000AFE                     i2l2466:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3505  000AFE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3506  000B02  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3507  000B06  CFDE FFF6          	movff	postinc2,tblptrl
  3508  000B0A  CFDD FFF7          	movff	postdec2,tblptrh
  3509  000B0E                     	if	0	;tblptru may be non-zero
  3510  000B0E                     	endif
  3511  000B0E                     	if	0	;tblptru may be non-zero
  3512  000B0E                     	endif
  3513  000B0E  0008               	tblrd		*
  3514  000B10  50F5               	movf	tablat,w,c
  3515  000B12  6E01               	movwf	fputc@c^0,c
  3516  000B14  6A02               	clrf	(fputc@c+1)^0,c
  3517  000B16  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3518  000B1A  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3519  000B1E  ECE4  F009         	call	_fputc	;wreg free
  3520  000B22                     
  3521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3522  000B22  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3523  000B26  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3524  000B2A  2ADE               	incf	postinc2,f,c
  3525  000B2C  0E00               	movlw	0
  3526  000B2E  22DD               	addwfc	postdec2,f,c
  3527  000B30  EF6C  F005         	goto	i2l2456
  3528  000B34                     i2l909:
  3529  000B34  0012               	return		;funcret
  3530  000B36                     __end_of_vfpfcnvrt:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _utoa *****************
  3534 ;; Defined at:
  3535 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3538 ;;		 -> sprintf@f(6), 
  3539 ;;  d               8   29[COMRAM] unsigned long long 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  n               8   49[COMRAM] unsigned long long 
  3542 ;;  i               2   57[COMRAM] int 
  3543 ;;  w               2   47[COMRAM] int 
  3544 ;;  p               2   45[COMRAM] int 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2   27[COMRAM] int 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3554 ;;      Params:        10       0       0       0       0       0       0       0       0
  3555 ;;      Locals:        14       0       0       0       0       0       0       0       0
  3556 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3557 ;;      Totals:        32       0       0       0       0       0       0       0       0
  3558 ;;Total ram usage:       32 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 4
  3561 ;; This function calls:
  3562 ;;		___lodiv
  3563 ;;		___lomod
  3564 ;;		_pad
  3565 ;; This function is called by:
  3566 ;;		_vfpfcnvrt
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text23
  3571  000B36                     __ptext23:
  3572                           	callstack 0
  3573  000B36                     _utoa:
  3574                           	callstack 18
  3575  000B36                     
  3576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  3577  000B36  0100               	movlb	0	; () banked
  3578  000B38  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3579  000B3A  EFA1  F005         	goto	i2u170_41
  3580  000B3E  EFA3  F005         	goto	i2u170_40
  3581  000B42                     i2u170_41:
  3582  000B42  EFA4  F005         	goto	i2l2342
  3583  000B46                     i2u170_40:
  3584  000B46                     
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  3587  000B46  9366               	bcf	_flags& (0+255),1,b
  3588  000B48                     i2l2342:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  3592  000B48  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3593  000B4A  EFB1  F005         	goto	i2u171_40
  3594  000B4E  5165               	movf	(_prec+1)& (0+255),w,b
  3595  000B50  E106               	bnz	i2u171_41
  3596  000B52  0564               	decf	_prec& (0+255),w,b
  3597  000B54  B0D8               	btfsc	status,0,c
  3598  000B56  EFAF  F005         	goto	i2u171_41
  3599  000B5A  EFB1  F005         	goto	i2u171_40
  3600  000B5E                     i2u171_41:
  3601  000B5E  EFB7  F005         	goto	i2l884
  3602  000B62                     i2u171_40:
  3603  000B62                     
  3604                           ; BSR set to: 0
  3605  000B62  0E00               	movlw	0
  3606  000B64  6E2F               	movwf	(utoa@p+1)^0,c
  3607  000B66  0E01               	movlw	1
  3608  000B68  6E2E               	movwf	utoa@p^0,c
  3609  000B6A  EFBB  F005         	goto	i2l886
  3610  000B6E                     i2l884:
  3611                           
  3612                           ; BSR set to: 0
  3613  000B6E  C064  F02E         	movff	_prec,utoa@p
  3614  000B72  C065  F02F         	movff	_prec+1,utoa@p+1
  3615  000B76                     i2l886:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  3619  000B76  C062  F030         	movff	_width,utoa@w
  3620  000B7A  C063  F031         	movff	_width+1,utoa@w+1
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  3623  000B7E  C01E  F032         	movff	utoa@d,utoa@n
  3624  000B82  C01F  F033         	movff	utoa@d+1,utoa@n+1
  3625  000B86  C020  F034         	movff	utoa@d+2,utoa@n+2
  3626  000B8A  C021  F035         	movff	utoa@d+3,utoa@n+3
  3627  000B8E  C022  F036         	movff	utoa@d+4,utoa@n+4
  3628  000B92  C023  F037         	movff	utoa@d+5,utoa@n+5
  3629  000B96  C024  F038         	movff	utoa@d+6,utoa@n+6
  3630  000B9A  C025  F039         	movff	utoa@d+7,utoa@n+7
  3631  000B9E                     
  3632                           ; BSR set to: 0
  3633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  3634  000B9E  0E00               	movlw	0
  3635  000BA0  6E3B               	movwf	(utoa@i+1)^0,c
  3636  000BA2  0E1F               	movlw	31
  3637  000BA4  6E3A               	movwf	utoa@i^0,c
  3638  000BA6                     
  3639                           ; BSR set to: 0
  3640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  3641  000BA6  0E00               	movlw	0
  3642  000BA8  6F8D               	movwf	(_dbuf+31)& (0+255),b
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3645  000BAA  EF4D  F006         	goto	i2l2360
  3646  000BAE                     i2l2350:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  3649  000BAE  063A               	decf	utoa@i^0,f,c
  3650  000BB0  A0D8               	btfss	status,0,c
  3651  000BB2  063B               	decf	(utoa@i+1)^0,f,c
  3652  000BB4                     
  3653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  3654  000BB4  0E6E               	movlw	low _dbuf
  3655  000BB6  243A               	addwf	utoa@i^0,w,c
  3656  000BB8  6ED9               	movwf	fsr2l,c
  3657  000BBA  0E00               	movlw	high _dbuf
  3658  000BBC  203B               	addwfc	(utoa@i+1)^0,w,c
  3659  000BBE  6EDA               	movwf	fsr2h,c
  3660  000BC0  C032  F001         	movff	utoa@n,___lomod@dividend
  3661  000BC4  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  3662  000BC8  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  3663  000BCC  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  3664  000BD0  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  3665  000BD4  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  3666  000BD8  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  3667  000BDC  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  3668  000BE0  0E0A               	movlw	10
  3669  000BE2  6E09               	movwf	___lomod@divisor^0,c
  3670  000BE4  0E00               	movlw	0
  3671  000BE6  6E0A               	movwf	(___lomod@divisor+1)^0,c
  3672  000BE8  0E00               	movlw	0
  3673  000BEA  6E0B               	movwf	(___lomod@divisor+2)^0,c
  3674  000BEC  0E00               	movlw	0
  3675  000BEE  6E0C               	movwf	(___lomod@divisor+3)^0,c
  3676  000BF0  0E00               	movlw	0
  3677  000BF2  6E0D               	movwf	(___lomod@divisor+4)^0,c
  3678  000BF4  0E00               	movlw	0
  3679  000BF6  6E0E               	movwf	(___lomod@divisor+5)^0,c
  3680  000BF8  0E00               	movlw	0
  3681  000BFA  6E0F               	movwf	(___lomod@divisor+6)^0,c
  3682  000BFC  0E00               	movlw	0
  3683  000BFE  6E10               	movwf	(___lomod@divisor+7)^0,c
  3684  000C00  EC7C  F009         	call	___lomod	;wreg free
  3685  000C04  C001  F026         	movff	?___lomod,??_utoa
  3686  000C08  C002  F027         	movff	?___lomod+1,??_utoa+1
  3687  000C0C  C003  F028         	movff	?___lomod+2,??_utoa+2
  3688  000C10  C004  F029         	movff	?___lomod+3,??_utoa+3
  3689  000C14  C005  F02A         	movff	?___lomod+4,??_utoa+4
  3690  000C18  C006  F02B         	movff	?___lomod+5,??_utoa+5
  3691  000C1C  C007  F02C         	movff	?___lomod+6,??_utoa+6
  3692  000C20  C008  F02D         	movff	?___lomod+7,??_utoa+7
  3693  000C24  5026               	movf	??_utoa^0,w,c
  3694  000C26  0F30               	addlw	48
  3695  000C28  6EDF               	movwf	indf2,c
  3696  000C2A                     
  3697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  3698  000C2A  062E               	decf	utoa@p^0,f,c
  3699  000C2C  A0D8               	btfss	status,0,c
  3700  000C2E  062F               	decf	(utoa@p+1)^0,f,c
  3701  000C30                     
  3702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  3703  000C30  0630               	decf	utoa@w^0,f,c
  3704  000C32  A0D8               	btfss	status,0,c
  3705  000C34  0631               	decf	(utoa@w+1)^0,f,c
  3706  000C36                     
  3707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  3708  000C36  C032  F001         	movff	utoa@n,___lodiv@dividend
  3709  000C3A  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  3710  000C3E  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  3711  000C42  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  3712  000C46  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  3713  000C4A  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  3714  000C4E  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  3715  000C52  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  3716  000C56  0E0A               	movlw	10
  3717  000C58  6E09               	movwf	___lodiv@divisor^0,c
  3718  000C5A  0E00               	movlw	0
  3719  000C5C  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  3720  000C5E  0E00               	movlw	0
  3721  000C60  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  3722  000C62  0E00               	movlw	0
  3723  000C64  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  3724  000C66  0E00               	movlw	0
  3725  000C68  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  3726  000C6A  0E00               	movlw	0
  3727  000C6C  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  3728  000C6E  0E00               	movlw	0
  3729  000C70  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  3730  000C72  0E00               	movlw	0
  3731  000C74  6E10               	movwf	(___lodiv@divisor+7)^0,c
  3732  000C76  EC04  F009         	call	___lodiv	;wreg free
  3733  000C7A  C001  F032         	movff	?___lodiv,utoa@n
  3734  000C7E  C002  F033         	movff	?___lodiv+1,utoa@n+1
  3735  000C82  C003  F034         	movff	?___lodiv+2,utoa@n+2
  3736  000C86  C004  F035         	movff	?___lodiv+3,utoa@n+3
  3737  000C8A  C005  F036         	movff	?___lodiv+4,utoa@n+4
  3738  000C8E  C006  F037         	movff	?___lodiv+5,utoa@n+5
  3739  000C92  C007  F038         	movff	?___lodiv+6,utoa@n+6
  3740  000C96  C008  F039         	movff	?___lodiv+7,utoa@n+7
  3741  000C9A                     i2l2360:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3744  000C9A  503A               	movf	utoa@i^0,w,c
  3745  000C9C  103B               	iorwf	(utoa@i+1)^0,w,c
  3746  000C9E  B4D8               	btfsc	status,2,c
  3747  000CA0  EF54  F006         	goto	i2u172_41
  3748  000CA4  EF56  F006         	goto	i2u172_40
  3749  000CA8                     i2u172_41:
  3750  000CA8  EF87  F006         	goto	i2l2370
  3751  000CAC                     i2u172_40:
  3752  000CAC  5032               	movf	utoa@n^0,w,c
  3753  000CAE  1033               	iorwf	(utoa@n+1)^0,w,c
  3754  000CB0  1034               	iorwf	(utoa@n+2)^0,w,c
  3755  000CB2  1035               	iorwf	(utoa@n+3)^0,w,c
  3756  000CB4  1036               	iorwf	(utoa@n+4)^0,w,c
  3757  000CB6  1037               	iorwf	(utoa@n+5)^0,w,c
  3758  000CB8  1038               	iorwf	(utoa@n+6)^0,w,c
  3759  000CBA  1039               	iorwf	(utoa@n+7)^0,w,c
  3760  000CBC  A4D8               	btfss	status,2,c
  3761  000CBE  EF63  F006         	goto	i2u173_41
  3762  000CC2  EF65  F006         	goto	i2u173_40
  3763  000CC6                     i2u173_41:
  3764  000CC6  EFD7  F005         	goto	i2l2350
  3765  000CCA                     i2u173_40:
  3766  000CCA  BE2F               	btfsc	(utoa@p+1)^0,7,c
  3767  000CCC  EF72  F006         	goto	i2u174_40
  3768  000CD0  502F               	movf	(utoa@p+1)^0,w,c
  3769  000CD2  E106               	bnz	i2u174_41
  3770  000CD4  042E               	decf	utoa@p^0,w,c
  3771  000CD6  B0D8               	btfsc	status,0,c
  3772  000CD8  EF70  F006         	goto	i2u174_41
  3773  000CDC  EF72  F006         	goto	i2u174_40
  3774  000CE0                     i2u174_41:
  3775  000CE0  EFD7  F005         	goto	i2l2350
  3776  000CE4                     i2u174_40:
  3777  000CE4  BE31               	btfsc	(utoa@w+1)^0,7,c
  3778  000CE6  EF7D  F006         	goto	i2u175_41
  3779  000CEA  5031               	movf	(utoa@w+1)^0,w,c
  3780  000CEC  E108               	bnz	i2u175_40
  3781  000CEE  0430               	decf	utoa@w^0,w,c
  3782  000CF0  A0D8               	btfss	status,0,c
  3783  000CF2  EF7D  F006         	goto	i2u175_41
  3784  000CF6  EF7F  F006         	goto	i2u175_40
  3785  000CFA                     i2u175_41:
  3786  000CFA  EF87  F006         	goto	i2l2370
  3787  000CFE                     i2u175_40:
  3788  000CFE  0100               	movlb	0	; () banked
  3789  000D00  B366               	btfsc	_flags& (0+255),1,b
  3790  000D02  EF85  F006         	goto	i2u176_41
  3791  000D06  EF87  F006         	goto	i2u176_40
  3792  000D0A                     i2u176_41:
  3793  000D0A  EFD7  F005         	goto	i2l2350
  3794  000D0E                     i2u176_40:
  3795  000D0E                     i2l2370:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  3798  000D0E  C01C  F011         	movff	utoa@fp,pad@fp
  3799  000D12  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  3800  000D16  0E6E               	movlw	low _dbuf
  3801  000D18  243A               	addwf	utoa@i^0,w,c
  3802  000D1A  6E13               	movwf	pad@buf^0,c
  3803  000D1C  0E00               	movlw	high _dbuf
  3804  000D1E  203B               	addwfc	(utoa@i+1)^0,w,c
  3805  000D20  6E14               	movwf	(pad@buf+1)^0,c
  3806  000D22  C030  F015         	movff	utoa@w,pad@p
  3807  000D26  C031  F016         	movff	utoa@w+1,pad@p+1
  3808  000D2A  EC49  F00A         	call	_pad	;wreg free
  3809  000D2E  C011  F01C         	movff	?_pad,?_utoa
  3810  000D32  C012  F01D         	movff	?_pad+1,?_utoa+1
  3811  000D36  0012               	return		;funcret
  3812  000D38                     __end_of_utoa:
  3813                           	callstack 0
  3814                           
  3815 ;; *************** function _pad *****************
  3816 ;; Defined at:
  3817 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3820 ;;		 -> sprintf@f(6), 
  3821 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3822 ;;		 -> dbuf(32), 
  3823 ;;  p               2   20[COMRAM] int 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  w               2   25[COMRAM] int 
  3826 ;;  i               2   23[COMRAM] int 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  2   16[COMRAM] int 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3836 ;;      Params:         6       0       0       0       0       0       0       0       0
  3837 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3838 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3839 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3840 ;;Total ram usage:       11 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 3
  3843 ;; This function calls:
  3844 ;;		_fputc
  3845 ;;		_fputs
  3846 ;;		_strlen
  3847 ;; This function is called by:
  3848 ;;		_utoa
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text24
  3853  001492                     __ptext24:
  3854                           	callstack 0
  3855  001492                     _pad:
  3856                           	callstack 18
  3857  001492                     
  3858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3859  001492  0100               	movlb	0	; () banked
  3860  001494  A166               	btfss	_flags& (0+255),0,b
  3861  001496  EF4F  F00A         	goto	i2u162_41
  3862  00149A  EF51  F00A         	goto	i2u162_40
  3863  00149E                     i2u162_41:
  3864  00149E  EF5B  F00A         	goto	i2l2304
  3865  0014A2                     i2u162_40:
  3866  0014A2                     
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3869  0014A2  C013  F00A         	movff	pad@buf,fputs@s
  3870  0014A6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3871  0014AA  C011  F00C         	movff	pad@fp,fputs@fp
  3872  0014AE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3873  0014B2  EC59  F00D         	call	_fputs	;wreg free
  3874  0014B6                     i2l2304:
  3875                           
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3877  0014B6  BE16               	btfsc	(pad@p+1)^0,7,c
  3878  0014B8  EF60  F00A         	goto	i2u163_41
  3879  0014BC  EF62  F00A         	goto	i2u163_40
  3880  0014C0                     i2u163_41:
  3881  0014C0  EF68  F00A         	goto	i2l2308
  3882  0014C4                     i2u163_40:
  3883  0014C4  C015  F01A         	movff	pad@p,pad@w
  3884  0014C8  C016  F01B         	movff	pad@p+1,pad@w+1
  3885  0014CC  EF6C  F00A         	goto	i2l874
  3886  0014D0                     i2l2308:
  3887  0014D0  0E00               	movlw	0
  3888  0014D2  6E1B               	movwf	(pad@w+1)^0,c
  3889  0014D4  0E00               	movlw	0
  3890  0014D6  6E1A               	movwf	pad@w^0,c
  3891  0014D8                     i2l874:
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3894  0014D8  0E00               	movlw	0
  3895  0014DA  6E19               	movwf	(pad@i+1)^0,c
  3896  0014DC  0E00               	movlw	0
  3897  0014DE  6E18               	movwf	pad@i^0,c
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3900  0014E0  EF7E  F00A         	goto	i2l2314
  3901  0014E4                     i2l2310:
  3902                           
  3903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3904  0014E4  0E00               	movlw	0
  3905  0014E6  6E02               	movwf	(fputc@c+1)^0,c
  3906  0014E8  0E20               	movlw	32
  3907  0014EA  6E01               	movwf	fputc@c^0,c
  3908  0014EC  C011  F003         	movff	pad@fp,fputc@fp
  3909  0014F0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3910  0014F4  ECE4  F009         	call	_fputc	;wreg free
  3911  0014F8                     
  3912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3913  0014F8  4A18               	infsnz	pad@i^0,f,c
  3914  0014FA  2A19               	incf	(pad@i+1)^0,f,c
  3915  0014FC                     i2l2314:
  3916                           
  3917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3918  0014FC  501A               	movf	pad@w^0,w,c
  3919  0014FE  5C18               	subwf	pad@i^0,w,c
  3920  001500  5019               	movf	(pad@i+1)^0,w,c
  3921  001502  0A80               	xorlw	128
  3922  001504  6E17               	movwf	??_pad^0,c
  3923  001506  501B               	movf	(pad@w+1)^0,w,c
  3924  001508  0A80               	xorlw	128
  3925  00150A  5817               	subwfb	??_pad^0,w,c
  3926  00150C  A0D8               	btfss	status,0,c
  3927  00150E  EF8B  F00A         	goto	i2u164_41
  3928  001512  EF8D  F00A         	goto	i2u164_40
  3929  001516                     i2u164_41:
  3930  001516  EF72  F00A         	goto	i2l2310
  3931  00151A                     i2u164_40:
  3932  00151A                     
  3933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3934  00151A  0100               	movlb	0	; () banked
  3935  00151C  B166               	btfsc	_flags& (0+255),0,b
  3936  00151E  EF93  F00A         	goto	i2u165_41
  3937  001522  EF95  F00A         	goto	i2u165_40
  3938  001526                     i2u165_41:
  3939  001526  EF9F  F00A         	goto	i2l2318
  3940  00152A                     i2u165_40:
  3941  00152A                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3944  00152A  C013  F00A         	movff	pad@buf,fputs@s
  3945  00152E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3946  001532  C011  F00C         	movff	pad@fp,fputs@fp
  3947  001536  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3948  00153A  EC59  F00D         	call	_fputs	;wreg free
  3949  00153E                     i2l2318:
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3952  00153E  C013  F001         	movff	pad@buf,strlen@s
  3953  001542  C014  F002         	movff	pad@buf+1,strlen@s+1
  3954  001546  ECD2  F00D         	call	_strlen	;wreg free
  3955  00154A  501A               	movf	pad@w^0,w,c
  3956  00154C  2401               	addwf	?_strlen^0,w,c
  3957  00154E  6E11               	movwf	?_pad^0,c
  3958  001550  501B               	movf	(pad@w+1)^0,w,c
  3959  001552  2002               	addwfc	(?_strlen+1)^0,w,c
  3960  001554  6E12               	movwf	(?_pad+1)^0,c
  3961  001556  0012               	return		;funcret
  3962  001558                     __end_of_pad:
  3963                           	callstack 0
  3964                           
  3965 ;; *************** function _fputs *****************
  3966 ;; Defined at:
  3967 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3970 ;;		 -> dbuf(32), 
  3971 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3972 ;;		 -> sprintf@f(6), 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  i               2   14[COMRAM] int 
  3975 ;;  c               1   13[COMRAM] unsigned char 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  2    9[COMRAM] int 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3985 ;;      Params:         4       0       0       0       0       0       0       0       0
  3986 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3988 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3989 ;;Total ram usage:        7 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; Hardware stack levels required when called: 2
  3992 ;; This function calls:
  3993 ;;		_fputc
  3994 ;; This function is called by:
  3995 ;;		_pad
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text25
  4000  001AB2                     __ptext25:
  4001                           	callstack 0
  4002  001AB2                     _fputs:
  4003                           	callstack 18
  4004  001AB2  0E00               	movlw	0
  4005  001AB4  6E10               	movwf	(fputs@i+1)^0,c
  4006  001AB6  0E00               	movlw	0
  4007  001AB8  6E0F               	movwf	fputs@i^0,c
  4008  001ABA  EF6A  F00D         	goto	i2l2254
  4009  001ABE                     i2l2250:
  4010  001ABE  C00E  F001         	movff	fputs@c,fputc@c
  4011  001AC2  6A02               	clrf	(fputc@c+1)^0,c
  4012  001AC4  C00C  F003         	movff	fputs@fp,fputc@fp
  4013  001AC8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4014  001ACC  ECE4  F009         	call	_fputc	;wreg free
  4015  001AD0  4A0F               	infsnz	fputs@i^0,f,c
  4016  001AD2  2A10               	incf	(fputs@i+1)^0,f,c
  4017  001AD4                     i2l2254:
  4018  001AD4  500F               	movf	fputs@i^0,w,c
  4019  001AD6  240A               	addwf	fputs@s^0,w,c
  4020  001AD8  6ED9               	movwf	fsr2l,c
  4021  001ADA  5010               	movf	(fputs@i+1)^0,w,c
  4022  001ADC  200B               	addwfc	(fputs@s+1)^0,w,c
  4023  001ADE  6EDA               	movwf	fsr2h,c
  4024  001AE0  50DF               	movf	indf2,w,c
  4025  001AE2  6E0E               	movwf	fputs@c^0,c
  4026  001AE4  500E               	movf	fputs@c^0,w,c
  4027  001AE6  A4D8               	btfss	status,2,c
  4028  001AE8  EF78  F00D         	goto	i2u154_41
  4029  001AEC  EF7A  F00D         	goto	i2u154_40
  4030  001AF0                     i2u154_41:
  4031  001AF0  EF5F  F00D         	goto	i2l2250
  4032  001AF4                     i2u154_40:
  4033  001AF4  0012               	return		;funcret
  4034  001AF6                     __end_of_fputs:
  4035                           	callstack 0
  4036                           
  4037 ;; *************** function _fputc *****************
  4038 ;; Defined at:
  4039 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  c               2    0[COMRAM] int 
  4042 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4043 ;;		 -> sprintf@f(6), 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  2    0[COMRAM] int 
  4048 ;; Registers used:
  4049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4055 ;;      Params:         4       0       0       0       0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4057 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4058 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4059 ;;Total ram usage:        9 bytes
  4060 ;; Hardware stack levels used: 1
  4061 ;; Hardware stack levels required when called: 1
  4062 ;; This function calls:
  4063 ;;		_putch
  4064 ;; This function is called by:
  4065 ;;		_pad
  4066 ;;		_vfpfcnvrt
  4067 ;;		_fputs
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text26
  4072  0013C8                     __ptext26:
  4073                           	callstack 0
  4074  0013C8                     _fputc:
  4075                           	callstack 18
  4076  0013C8  5003               	movf	fputc@fp^0,w,c
  4077  0013CA  1004               	iorwf	(fputc@fp+1)^0,w,c
  4078  0013CC  B4D8               	btfsc	status,2,c
  4079  0013CE  EFEB  F009         	goto	i2u149_41
  4080  0013D2  EFED  F009         	goto	i2u149_40
  4081  0013D6                     i2u149_41:
  4082  0013D6  EFF6  F009         	goto	i2l2228
  4083  0013DA                     i2u149_40:
  4084  0013DA  5003               	movf	fputc@fp^0,w,c
  4085  0013DC  1004               	iorwf	(fputc@fp+1)^0,w,c
  4086  0013DE  A4D8               	btfss	status,2,c
  4087  0013E0  EFF4  F009         	goto	i2u150_41
  4088  0013E4  EFF6  F009         	goto	i2u150_40
  4089  0013E8                     i2u150_41:
  4090  0013E8  EFFB  F009         	goto	i2l2230
  4091  0013EC                     i2u150_40:
  4092  0013EC                     i2l2228:
  4093  0013EC  5001               	movf	fputc@c^0,w,c
  4094  0013EE  EC65  F00E         	call	_putch
  4095  0013F2  EF48  F00A         	goto	i2l973
  4096  0013F6                     i2l2230:
  4097  0013F6  EE20 F004          	lfsr	2,4
  4098  0013FA  5003               	movf	fputc@fp^0,w,c
  4099  0013FC  26D9               	addwf	fsr2l,f,c
  4100  0013FE  5004               	movf	(fputc@fp+1)^0,w,c
  4101  001400  22DA               	addwfc	fsr2h,f,c
  4102  001402  50DE               	movf	postinc2,w,c
  4103  001404  10DE               	iorwf	postinc2,w,c
  4104  001406  B4D8               	btfsc	status,2,c
  4105  001408  EF08  F00A         	goto	i2u151_41
  4106  00140C  EF0A  F00A         	goto	i2u151_40
  4107  001410                     i2u151_41:
  4108  001410  EF25  F00A         	goto	i2l2234
  4109  001414                     i2u151_40:
  4110  001414  EE20 F004          	lfsr	2,4
  4111  001418  5003               	movf	fputc@fp^0,w,c
  4112  00141A  26D9               	addwf	fsr2l,f,c
  4113  00141C  5004               	movf	(fputc@fp+1)^0,w,c
  4114  00141E  22DA               	addwfc	fsr2h,f,c
  4115  001420  EE10 F002          	lfsr	1,2
  4116  001424  5003               	movf	fputc@fp^0,w,c
  4117  001426  26E1               	addwf	fsr1l,f,c
  4118  001428  5004               	movf	(fputc@fp+1)^0,w,c
  4119  00142A  22E2               	addwfc	fsr1h,f,c
  4120  00142C  50DE               	movf	postinc2,w,c
  4121  00142E  5CE6               	subwf	postinc1,w,c
  4122  001430  50E6               	movf	postinc1,w,c
  4123  001432  0A80               	xorlw	128
  4124  001434  6E09               	movwf	(??_fputc+4)^0,c
  4125  001436  50DE               	movf	postinc2,w,c
  4126  001438  0A80               	xorlw	128
  4127  00143A  5809               	subwfb	(??_fputc+4)^0,w,c
  4128  00143C  B0D8               	btfsc	status,0,c
  4129  00143E  EF23  F00A         	goto	i2u152_41
  4130  001442  EF25  F00A         	goto	i2u152_40
  4131  001446                     i2u152_41:
  4132  001446  EF48  F00A         	goto	i2l973
  4133  00144A                     i2u152_40:
  4134  00144A                     i2l2234:
  4135  00144A  EE20 F002          	lfsr	2,2
  4136  00144E  5003               	movf	fputc@fp^0,w,c
  4137  001450  26D9               	addwf	fsr2l,f,c
  4138  001452  5004               	movf	(fputc@fp+1)^0,w,c
  4139  001454  22DA               	addwfc	fsr2h,f,c
  4140  001456  CFDE F005          	movff	postinc2,??_fputc
  4141  00145A  CFDD F006          	movff	postdec2,??_fputc+1
  4142  00145E  C003  FFD9         	movff	fputc@fp,fsr2l
  4143  001462  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4144  001466  CFDE F007          	movff	postinc2,??_fputc+2
  4145  00146A  CFDD F008          	movff	postdec2,??_fputc+3
  4146  00146E  5005               	movf	??_fputc^0,w,c
  4147  001470  2407               	addwf	(??_fputc+2)^0,w,c
  4148  001472  6ED9               	movwf	fsr2l,c
  4149  001474  5006               	movf	(??_fputc+1)^0,w,c
  4150  001476  2008               	addwfc	(??_fputc+3)^0,w,c
  4151  001478  6EDA               	movwf	fsr2h,c
  4152  00147A  C001  FFDF         	movff	fputc@c,indf2
  4153  00147E  EE20 F002          	lfsr	2,2
  4154  001482  5003               	movf	fputc@fp^0,w,c
  4155  001484  26D9               	addwf	fsr2l,f,c
  4156  001486  5004               	movf	(fputc@fp+1)^0,w,c
  4157  001488  22DA               	addwfc	fsr2h,f,c
  4158  00148A  2ADE               	incf	postinc2,f,c
  4159  00148C  0E00               	movlw	0
  4160  00148E  22DD               	addwfc	postdec2,f,c
  4161  001490                     i2l973:
  4162  001490  0012               	return		;funcret
  4163  001492                     __end_of_fputc:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _putch *****************
  4167 ;; Defined at:
  4168 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  c               1    wreg     unsigned char 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  c               1    0[COMRAM] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_fputc
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text27
  4196  001CCA                     __ptext27:
  4197                           	callstack 0
  4198  001CCA                     _putch:
  4199                           	callstack 18
  4200  001CCA  0012               	return		;funcret
  4201  001CCC                     __end_of_putch:
  4202                           	callstack 0
  4203                           
  4204 ;; *************** function ___lomod *****************
  4205 ;; Defined at:
  4206 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  dividend        8    0[COMRAM] unsigned long long 
  4209 ;;  divisor         8    8[COMRAM] unsigned long long 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  counter         1   16[COMRAM] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  8    0[COMRAM] unsigned long long 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4221 ;;      Params:        16       0       0       0       0       0       0       0       0
  4222 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4224 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4225 ;;Total ram usage:       17 bytes
  4226 ;; Hardware stack levels used: 1
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_utoa
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text28
  4235  0012F8                     __ptext28:
  4236                           	callstack 0
  4237  0012F8                     ___lomod:
  4238                           	callstack 21
  4239  0012F8  5009               	movf	___lomod@divisor^0,w,c
  4240  0012FA  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  4241  0012FC  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  4242  0012FE  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  4243  001300  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  4244  001302  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  4245  001304  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  4246  001306  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  4247  001308  B4D8               	btfsc	status,2,c
  4248  00130A  EF89  F009         	goto	i2u159_41
  4249  00130E  EF8B  F009         	goto	i2u159_40
  4250  001312                     i2u159_41:
  4251  001312  EFD3  F009         	goto	i2l615
  4252  001316                     i2u159_40:
  4253  001316  0E01               	movlw	1
  4254  001318  6E11               	movwf	___lomod@counter^0,c
  4255  00131A  EF99  F009         	goto	i2l2290
  4256  00131E                     i2l2288:
  4257  00131E  90D8               	bcf	status,0,c
  4258  001320  3609               	rlcf	___lomod@divisor^0,f,c
  4259  001322  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  4260  001324  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  4261  001326  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  4262  001328  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  4263  00132A  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  4264  00132C  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  4265  00132E  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  4266  001330  2A11               	incf	___lomod@counter^0,f,c
  4267  001332                     i2l2290:
  4268  001332  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  4269  001334  EF9E  F009         	goto	i2u160_41
  4270  001338  EFA0  F009         	goto	i2u160_40
  4271  00133C                     i2u160_41:
  4272  00133C  EF8F  F009         	goto	i2l2288
  4273  001340                     i2u160_40:
  4274  001340                     i2l2292:
  4275  001340  5009               	movf	___lomod@divisor^0,w,c
  4276  001342  5C01               	subwf	___lomod@dividend^0,w,c
  4277  001344  500A               	movf	(___lomod@divisor+1)^0,w,c
  4278  001346  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  4279  001348  500B               	movf	(___lomod@divisor+2)^0,w,c
  4280  00134A  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  4281  00134C  500C               	movf	(___lomod@divisor+3)^0,w,c
  4282  00134E  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  4283  001350  500D               	movf	(___lomod@divisor+4)^0,w,c
  4284  001352  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  4285  001354  500E               	movf	(___lomod@divisor+5)^0,w,c
  4286  001356  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  4287  001358  500F               	movf	(___lomod@divisor+6)^0,w,c
  4288  00135A  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  4289  00135C  5010               	movf	(___lomod@divisor+7)^0,w,c
  4290  00135E  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  4291  001360  A0D8               	btfss	status,0,c
  4292  001362  EFB5  F009         	goto	i2u161_41
  4293  001366  EFB7  F009         	goto	i2u161_40
  4294  00136A                     i2u161_41:
  4295  00136A  EFC7  F009         	goto	i2l2296
  4296  00136E                     i2u161_40:
  4297  00136E  5009               	movf	___lomod@divisor^0,w,c
  4298  001370  5E01               	subwf	___lomod@dividend^0,f,c
  4299  001372  500A               	movf	(___lomod@divisor+1)^0,w,c
  4300  001374  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  4301  001376  500B               	movf	(___lomod@divisor+2)^0,w,c
  4302  001378  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  4303  00137A  500C               	movf	(___lomod@divisor+3)^0,w,c
  4304  00137C  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  4305  00137E  500D               	movf	(___lomod@divisor+4)^0,w,c
  4306  001380  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  4307  001382  500E               	movf	(___lomod@divisor+5)^0,w,c
  4308  001384  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  4309  001386  500F               	movf	(___lomod@divisor+6)^0,w,c
  4310  001388  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  4311  00138A  5010               	movf	(___lomod@divisor+7)^0,w,c
  4312  00138C  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  4313  00138E                     i2l2296:
  4314  00138E  90D8               	bcf	status,0,c
  4315  001390  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  4316  001392  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  4317  001394  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  4318  001396  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  4319  001398  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  4320  00139A  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  4321  00139C  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  4322  00139E  3209               	rrcf	___lomod@divisor^0,f,c
  4323  0013A0  2E11               	decfsz	___lomod@counter^0,f,c
  4324  0013A2  EFA0  F009         	goto	i2l2292
  4325  0013A6                     i2l615:
  4326  0013A6  C001  F001         	movff	___lomod@dividend,?___lomod
  4327  0013AA  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4328  0013AE  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4329  0013B2  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4330  0013B6  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4331  0013BA  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4332  0013BE  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4333  0013C2  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4334  0013C6  0012               	return		;funcret
  4335  0013C8                     __end_of___lomod:
  4336                           	callstack 0
  4337                           
  4338 ;; *************** function ___lodiv *****************
  4339 ;; Defined at:
  4340 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  dividend        8    0[COMRAM] unsigned long long 
  4343 ;;  divisor         8    8[COMRAM] unsigned long long 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  quotient        8   16[COMRAM] unsigned long long 
  4346 ;;  counter         1   24[COMRAM] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  8    0[COMRAM] unsigned long long 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4356 ;;      Params:        16       0       0       0       0       0       0       0       0
  4357 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4359 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4360 ;;Total ram usage:       25 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_utoa
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text29
  4370  001208                     __ptext29:
  4371                           	callstack 0
  4372  001208                     ___lodiv:
  4373                           	callstack 21
  4374  001208  EE20  F011         	lfsr	2,___lodiv@quotient
  4375  00120C  0E07               	movlw	7
  4376  00120E                     i2u155_41:
  4377  00120E  6ADE               	clrf	postinc2,c
  4378  001210  06E8               	decf	wreg,f,c
  4379  001212  E2FD               	bc	i2u155_41
  4380  001214  5009               	movf	___lodiv@divisor^0,w,c
  4381  001216  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  4382  001218  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  4383  00121A  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  4384  00121C  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  4385  00121E  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  4386  001220  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  4387  001222  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  4388  001224  B4D8               	btfsc	status,2,c
  4389  001226  EF17  F009         	goto	i2u156_41
  4390  00122A  EF19  F009         	goto	i2u156_40
  4391  00122E                     i2u156_41:
  4392  00122E  EF6B  F009         	goto	i2l605
  4393  001232                     i2u156_40:
  4394  001232  0E01               	movlw	1
  4395  001234  6E19               	movwf	___lodiv@counter^0,c
  4396  001236  EF27  F009         	goto	i2l2270
  4397  00123A                     i2l2268:
  4398  00123A  90D8               	bcf	status,0,c
  4399  00123C  3609               	rlcf	___lodiv@divisor^0,f,c
  4400  00123E  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  4401  001240  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  4402  001242  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  4403  001244  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  4404  001246  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  4405  001248  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  4406  00124A  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  4407  00124C  2A19               	incf	___lodiv@counter^0,f,c
  4408  00124E                     i2l2270:
  4409  00124E  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  4410  001250  EF2C  F009         	goto	i2u157_41
  4411  001254  EF2E  F009         	goto	i2u157_40
  4412  001258                     i2u157_41:
  4413  001258  EF1D  F009         	goto	i2l2268
  4414  00125C                     i2u157_40:
  4415  00125C                     i2l2272:
  4416  00125C  90D8               	bcf	status,0,c
  4417  00125E  3611               	rlcf	___lodiv@quotient^0,f,c
  4418  001260  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  4419  001262  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  4420  001264  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  4421  001266  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  4422  001268  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  4423  00126A  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  4424  00126C  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  4425  00126E  5009               	movf	___lodiv@divisor^0,w,c
  4426  001270  5C01               	subwf	___lodiv@dividend^0,w,c
  4427  001272  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4428  001274  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  4429  001276  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4430  001278  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  4431  00127A  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4432  00127C  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  4433  00127E  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4434  001280  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  4435  001282  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4436  001284  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  4437  001286  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4438  001288  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  4439  00128A  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4440  00128C  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  4441  00128E  A0D8               	btfss	status,0,c
  4442  001290  EF4C  F009         	goto	i2u158_41
  4443  001294  EF4E  F009         	goto	i2u158_40
  4444  001298                     i2u158_41:
  4445  001298  EF5F  F009         	goto	i2l2280
  4446  00129C                     i2u158_40:
  4447  00129C  5009               	movf	___lodiv@divisor^0,w,c
  4448  00129E  5E01               	subwf	___lodiv@dividend^0,f,c
  4449  0012A0  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4450  0012A2  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  4451  0012A4  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4452  0012A6  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  4453  0012A8  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4454  0012AA  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  4455  0012AC  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4456  0012AE  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  4457  0012B0  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4458  0012B2  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  4459  0012B4  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4460  0012B6  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  4461  0012B8  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4462  0012BA  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  4463  0012BC  8011               	bsf	___lodiv@quotient^0,0,c
  4464  0012BE                     i2l2280:
  4465  0012BE  90D8               	bcf	status,0,c
  4466  0012C0  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  4467  0012C2  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  4468  0012C4  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  4469  0012C6  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  4470  0012C8  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  4471  0012CA  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  4472  0012CC  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  4473  0012CE  3209               	rrcf	___lodiv@divisor^0,f,c
  4474  0012D0  2E19               	decfsz	___lodiv@counter^0,f,c
  4475  0012D2  EF2E  F009         	goto	i2l2272
  4476  0012D6                     i2l605:
  4477  0012D6  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4478  0012DA  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4479  0012DE  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4480  0012E2  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4481  0012E6  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4482  0012EA  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4483  0012EE  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4484  0012F2  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4485  0012F6  0012               	return		;funcret
  4486  0012F8                     __end_of___lodiv:
  4487                           	callstack 0
  4488                           
  4489 ;; *************** function _atoi *****************
  4490 ;; Defined at:
  4491 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  s               2    7[COMRAM] PTR const unsigned char 
  4494 ;;		 -> STR_11(19), STR_8(12), STR_7(8), STR_6(14), 
  4495 ;;		 -> STR_5(19), STR_2(8), 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  n               2   20[COMRAM] int 
  4498 ;;  neg             2   13[COMRAM] int 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  2    7[COMRAM] int 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4508 ;;      Params:         2       0       0       0       0       0       0       0       0
  4509 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4510 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4511 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4512 ;;Total ram usage:       15 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 1
  4515 ;; This function calls:
  4516 ;;		___wmul
  4517 ;;		_isdigit
  4518 ;;		_isspace
  4519 ;; This function is called by:
  4520 ;;		_vfpfcnvrt
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text30
  4525  000EFE                     __ptext30:
  4526                           	callstack 0
  4527  000EFE                     _atoi:
  4528                           	callstack 21
  4529  000EFE  0E00               	movlw	0
  4530  000F00  6E16               	movwf	(atoi@n+1)^0,c
  4531  000F02  0E00               	movlw	0
  4532  000F04  6E15               	movwf	atoi@n^0,c
  4533  000F06  0E00               	movlw	0
  4534  000F08  6E0F               	movwf	(atoi@neg+1)^0,c
  4535  000F0A  0E00               	movlw	0
  4536  000F0C  6E0E               	movwf	atoi@neg^0,c
  4537  000F0E  EF8B  F007         	goto	i2l2378
  4538  000F12                     i2l2376:
  4539  000F12  4A08               	infsnz	atoi@s^0,f,c
  4540  000F14  2A09               	incf	(atoi@s+1)^0,f,c
  4541  000F16                     i2l2378:
  4542  000F16  0E01               	movlw	1
  4543  000F18  6E14               	movwf	_atoi$721^0,c
  4544  000F1A  C008  FFF6         	movff	atoi@s,tblptrl
  4545  000F1E  C009  FFF7         	movff	atoi@s+1,tblptrh
  4546  000F22                     	if	0	;tblptru may be non-zero
  4547  000F22                     	endif
  4548  000F22                     	if	0	;tblptru may be non-zero
  4549  000F22                     	endif
  4550  000F22  0008               	tblrd		*
  4551  000F24  50F5               	movf	tablat,w,c
  4552  000F26  0A20               	xorlw	32
  4553  000F28  B4D8               	btfsc	status,2,c
  4554  000F2A  EF99  F007         	goto	i2u177_41
  4555  000F2E  EF9B  F007         	goto	i2u177_40
  4556  000F32                     i2u177_41:
  4557  000F32  EFB8  F007         	goto	i2l2386
  4558  000F36                     i2u177_40:
  4559  000F36  0EF7               	movlw	247
  4560  000F38  6E0A               	movwf	??_atoi^0,c
  4561  000F3A  0EFF               	movlw	255
  4562  000F3C  6E0B               	movwf	(??_atoi+1)^0,c
  4563  000F3E  C008  FFF6         	movff	atoi@s,tblptrl
  4564  000F42  C009  FFF7         	movff	atoi@s+1,tblptrh
  4565  000F46                     	if	0	;tblptru may be non-zero
  4566  000F46                     	endif
  4567  000F46                     	if	0	;tblptru may be non-zero
  4568  000F46                     	endif
  4569  000F46  0008               	tblrd		*
  4570  000F48  50F5               	movf	tablat,w,c
  4571  000F4A  6E0C               	movwf	(??_atoi+2)^0,c
  4572  000F4C  6A0D               	clrf	(??_atoi+3)^0,c
  4573  000F4E  500A               	movf	??_atoi^0,w,c
  4574  000F50  260C               	addwf	(??_atoi+2)^0,f,c
  4575  000F52  500B               	movf	(??_atoi+1)^0,w,c
  4576  000F54  220D               	addwfc	(??_atoi+3)^0,f,c
  4577  000F56  500D               	movf	(??_atoi+3)^0,w,c
  4578  000F58  E109               	bnz	i2u178_40
  4579  000F5A  0E05               	movlw	5
  4580  000F5C  5C0C               	subwf	(??_atoi+2)^0,w,c
  4581  000F5E  A0D8               	btfss	status,0,c
  4582  000F60  EFB4  F007         	goto	i2u178_41
  4583  000F64  EFB6  F007         	goto	i2u178_40
  4584  000F68                     i2u178_41:
  4585  000F68  EFB8  F007         	goto	i2l2386
  4586  000F6C                     i2u178_40:
  4587  000F6C  0E00               	movlw	0
  4588  000F6E  6E14               	movwf	_atoi$721^0,c
  4589  000F70                     i2l2386:
  4590  000F70  C014  F010         	movff	_atoi$721,_atoi$720
  4591  000F74  6A11               	clrf	(_atoi$720+1)^0,c
  4592  000F76  5010               	movf	_atoi$720^0,w,c
  4593  000F78  1011               	iorwf	(_atoi$720+1)^0,w,c
  4594  000F7A  A4D8               	btfss	status,2,c
  4595  000F7C  EFC2  F007         	goto	i2u179_41
  4596  000F80  EFC4  F007         	goto	i2u179_40
  4597  000F84                     i2u179_41:
  4598  000F84  EF89  F007         	goto	i2l2376
  4599  000F88                     i2u179_40:
  4600  000F88  EFCE  F007         	goto	i2l2396
  4601  000F8C                     i2l2392:
  4602  000F8C  0E00               	movlw	0
  4603  000F8E  6E0F               	movwf	(atoi@neg+1)^0,c
  4604  000F90  0E01               	movlw	1
  4605  000F92  6E0E               	movwf	atoi@neg^0,c
  4606  000F94                     i2l2394:
  4607  000F94  4A08               	infsnz	atoi@s^0,f,c
  4608  000F96  2A09               	incf	(atoi@s+1)^0,f,c
  4609  000F98  EF03  F008         	goto	i2l2402
  4610  000F9C                     i2l2396:
  4611  000F9C  C008  FFF6         	movff	atoi@s,tblptrl
  4612  000FA0  C009  FFF7         	movff	atoi@s+1,tblptrh
  4613  000FA4                     	if	0	;tblptru may be non-zero
  4614  000FA4                     	endif
  4615  000FA4                     	if	0	;tblptru may be non-zero
  4616  000FA4                     	endif
  4617  000FA4  0008               	tblrd		*
  4618  000FA6  50F5               	movf	tablat,w,c
  4619  000FA8  6E0A               	movwf	??_atoi^0,c
  4620  000FAA  6A0B               	clrf	(??_atoi+1)^0,c
  4621                           
  4622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4623                           ; Switch size 1, requested type "simple"
  4624                           ; Number of cases is 1, Range of values is 0 to 0
  4625                           ; switch strategies available:
  4626                           ; Name         Instructions Cycles
  4627                           ; simple_byte            4     3 (average)
  4628                           ;	Chosen strategy is simple_byte
  4629  000FAC  500B               	movf	(??_atoi+1)^0,w,c
  4630  000FAE  0A00               	xorlw	0	; case 0
  4631  000FB0  B4D8               	btfsc	status,2,c
  4632  000FB2  EFDD  F007         	goto	i2l2750
  4633  000FB6  EF03  F008         	goto	i2l2402
  4634  000FBA                     i2l2750:
  4635                           
  4636                           ; Switch size 1, requested type "simple"
  4637                           ; Number of cases is 2, Range of values is 43 to 45
  4638                           ; switch strategies available:
  4639                           ; Name         Instructions Cycles
  4640                           ; simple_byte            7     4 (average)
  4641                           ;	Chosen strategy is simple_byte
  4642  000FBA  500A               	movf	??_atoi^0,w,c
  4643  000FBC  0A2B               	xorlw	43	; case 43
  4644  000FBE  B4D8               	btfsc	status,2,c
  4645  000FC0  EFCA  F007         	goto	i2l2394
  4646  000FC4  0A06               	xorlw	6	; case 45
  4647  000FC6  B4D8               	btfsc	status,2,c
  4648  000FC8  EFC6  F007         	goto	i2l2392
  4649  000FCC  EF03  F008         	goto	i2l2402
  4650  000FD0                     i2l2398:
  4651  000FD0  C015  F001         	movff	atoi@n,___wmul@multiplier
  4652  000FD4  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  4653  000FD8  0E00               	movlw	0
  4654  000FDA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4655  000FDC  0E0A               	movlw	10
  4656  000FDE  6E03               	movwf	___wmul@multiplicand^0,c
  4657  000FE0  EC00  F00E         	call	___wmul	;wreg free
  4658  000FE4  C008  FFF6         	movff	atoi@s,tblptrl
  4659  000FE8  C009  FFF7         	movff	atoi@s+1,tblptrh
  4660  000FEC                     	if	0	;tblptru may be non-zero
  4661  000FEC                     	endif
  4662  000FEC                     	if	0	;tblptru may be non-zero
  4663  000FEC                     	endif
  4664  000FEC  0008               	tblrd		*
  4665  000FEE  50F5               	movf	tablat,w,c
  4666  000FF0  5E01               	subwf	?___wmul^0,f,c
  4667  000FF2  0E00               	movlw	0
  4668  000FF4  5A02               	subwfb	(?___wmul+1)^0,f,c
  4669  000FF6  0E30               	movlw	48
  4670  000FF8  2401               	addwf	?___wmul^0,w,c
  4671  000FFA  6E15               	movwf	atoi@n^0,c
  4672  000FFC  0E00               	movlw	0
  4673  000FFE  2002               	addwfc	(?___wmul+1)^0,w,c
  4674  001000  6E16               	movwf	(atoi@n+1)^0,c
  4675  001002  EFCA  F007         	goto	i2l2394
  4676  001006                     i2l2402:
  4677  001006  0ED0               	movlw	208
  4678  001008  6E0A               	movwf	??_atoi^0,c
  4679  00100A  0EFF               	movlw	255
  4680  00100C  6E0B               	movwf	(??_atoi+1)^0,c
  4681  00100E  C008  FFF6         	movff	atoi@s,tblptrl
  4682  001012  C009  FFF7         	movff	atoi@s+1,tblptrh
  4683  001016                     	if	0	;tblptru may be non-zero
  4684  001016                     	endif
  4685  001016                     	if	0	;tblptru may be non-zero
  4686  001016                     	endif
  4687  001016  0008               	tblrd		*
  4688  001018  50F5               	movf	tablat,w,c
  4689  00101A  6E0C               	movwf	(??_atoi+2)^0,c
  4690  00101C  6A0D               	clrf	(??_atoi+3)^0,c
  4691  00101E  500A               	movf	??_atoi^0,w,c
  4692  001020  260C               	addwf	(??_atoi+2)^0,f,c
  4693  001022  500B               	movf	(??_atoi+1)^0,w,c
  4694  001024  220D               	addwfc	(??_atoi+3)^0,f,c
  4695  001026  500D               	movf	(??_atoi+3)^0,w,c
  4696  001028  E10A               	bnz	i2u180_40
  4697  00102A  0E0A               	movlw	10
  4698  00102C  5C0C               	subwf	(??_atoi+2)^0,w,c
  4699  00102E  A0D8               	btfss	status,0,c
  4700  001030  EF1C  F008         	goto	i2u180_41
  4701  001034  EF1F  F008         	goto	i2u180_40
  4702  001038                     i2u180_41:
  4703  001038  0E01               	movlw	1
  4704  00103A  EF20  F008         	goto	i2u181_40
  4705  00103E                     i2u180_40:
  4706  00103E  0E00               	movlw	0
  4707  001040                     i2u181_40:
  4708  001040  6E12               	movwf	_atoi$722^0,c
  4709  001042  6A13               	clrf	(_atoi$722+1)^0,c
  4710  001044  5012               	movf	_atoi$722^0,w,c
  4711  001046  1013               	iorwf	(_atoi$722+1)^0,w,c
  4712  001048  A4D8               	btfss	status,2,c
  4713  00104A  EF29  F008         	goto	i2u182_41
  4714  00104E  EF2B  F008         	goto	i2u182_40
  4715  001052                     i2u182_41:
  4716  001052  EFE8  F007         	goto	i2l2398
  4717  001056                     i2u182_40:
  4718  001056  500E               	movf	atoi@neg^0,w,c
  4719  001058  100F               	iorwf	(atoi@neg+1)^0,w,c
  4720  00105A  A4D8               	btfss	status,2,c
  4721  00105C  EF32  F008         	goto	i2u183_41
  4722  001060  EF34  F008         	goto	i2u183_40
  4723  001064                     i2u183_41:
  4724  001064  EF42  F008         	goto	i2l944
  4725  001068                     i2u183_40:
  4726  001068  C015  F00A         	movff	atoi@n,??_atoi
  4727  00106C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  4728  001070  1E0A               	comf	??_atoi^0,f,c
  4729  001072  1E0B               	comf	(??_atoi+1)^0,f,c
  4730  001074  4A0A               	infsnz	??_atoi^0,f,c
  4731  001076  2A0B               	incf	(??_atoi+1)^0,f,c
  4732  001078  C00A  F008         	movff	??_atoi,?_atoi
  4733  00107C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  4734  001080  EF46  F008         	goto	i2l947
  4735  001084                     i2l944:
  4736  001084  C015  F008         	movff	atoi@n,?_atoi
  4737  001088  C016  F009         	movff	atoi@n+1,?_atoi+1
  4738  00108C                     i2l947:
  4739  00108C  0012               	return		;funcret
  4740  00108E                     __end_of_atoi:
  4741                           	callstack 0
  4742                           
  4743 ;; *************** function _isspace *****************
  4744 ;; Defined at:
  4745 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  c               2    0[COMRAM] int 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  2    0[COMRAM] int 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4759 ;;      Params:         2       0       0       0       0       0       0       0       0
  4760 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4761 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4762 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4763 ;;Total ram usage:        7 bytes
  4764 ;; Hardware stack levels used: 1
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_atoi
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text31
  4773  001A12                     __ptext31:
  4774                           	callstack 0
  4775  001A12                     _isspace:
  4776                           	callstack 21
  4777  001A12  0E01               	movlw	1
  4778  001A14  6E07               	movwf	_isspace$738^0,c
  4779  001A16  0E20               	movlw	32
  4780  001A18  1801               	xorwf	isspace@c^0,w,c
  4781  001A1A  1002               	iorwf	(isspace@c+1)^0,w,c
  4782  001A1C  B4D8               	btfsc	status,2,c
  4783  001A1E  EF13  F00D         	goto	i2u168_41
  4784  001A22  EF15  F00D         	goto	i2u168_40
  4785  001A26                     i2u168_41:
  4786  001A26  EF2E  F00D         	goto	i2l2334
  4787  001A2A                     i2u168_40:
  4788  001A2A  0EF7               	movlw	247
  4789  001A2C  6E03               	movwf	??_isspace^0,c
  4790  001A2E  0EFF               	movlw	255
  4791  001A30  6E04               	movwf	(??_isspace+1)^0,c
  4792  001A32  C001  F005         	movff	isspace@c,??_isspace+2
  4793  001A36  C002  F006         	movff	isspace@c+1,??_isspace+3
  4794  001A3A  5003               	movf	??_isspace^0,w,c
  4795  001A3C  2605               	addwf	(??_isspace+2)^0,f,c
  4796  001A3E  5004               	movf	(??_isspace+1)^0,w,c
  4797  001A40  2206               	addwfc	(??_isspace+3)^0,f,c
  4798  001A42  5006               	movf	(??_isspace+3)^0,w,c
  4799  001A44  E109               	bnz	i2u169_40
  4800  001A46  0E05               	movlw	5
  4801  001A48  5C05               	subwf	(??_isspace+2)^0,w,c
  4802  001A4A  A0D8               	btfss	status,0,c
  4803  001A4C  EF2A  F00D         	goto	i2u169_41
  4804  001A50  EF2C  F00D         	goto	i2u169_40
  4805  001A54                     i2u169_41:
  4806  001A54  EF2E  F00D         	goto	i2l2334
  4807  001A58                     i2u169_40:
  4808  001A58  0E00               	movlw	0
  4809  001A5A  6E07               	movwf	_isspace$738^0,c
  4810  001A5C                     i2l2334:
  4811  001A5C  C007  F001         	movff	_isspace$738,?_isspace
  4812  001A60  6A02               	clrf	(?_isspace+1)^0,c
  4813  001A62  0012               	return		;funcret
  4814  001A64                     __end_of_isspace:
  4815                           	callstack 0
  4816                           
  4817 ;; *************** function _isdigit *****************
  4818 ;; Defined at:
  4819 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  c               2    0[COMRAM] int 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  2    0[COMRAM] int 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4833 ;;      Params:         2       0       0       0       0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4835 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4836 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4837 ;;Total ram usage:        6 bytes
  4838 ;; Hardware stack levels used: 1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_vfpfcnvrt
  4843 ;;		_atoi
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text32
  4848  001B6C                     __ptext32:
  4849                           	callstack 0
  4850  001B6C                     _isdigit:
  4851                           	callstack 22
  4852  001B6C  0ED0               	movlw	208
  4853  001B6E  6E03               	movwf	??_isdigit^0,c
  4854  001B70  0EFF               	movlw	255
  4855  001B72  6E04               	movwf	(??_isdigit+1)^0,c
  4856  001B74  C001  F005         	movff	isdigit@c,??_isdigit+2
  4857  001B78  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  4858  001B7C  5003               	movf	??_isdigit^0,w,c
  4859  001B7E  2605               	addwf	(??_isdigit+2)^0,f,c
  4860  001B80  5004               	movf	(??_isdigit+1)^0,w,c
  4861  001B82  2206               	addwfc	(??_isdigit+3)^0,f,c
  4862  001B84  5006               	movf	(??_isdigit+3)^0,w,c
  4863  001B86  E10A               	bnz	i2u166_40
  4864  001B88  0E0A               	movlw	10
  4865  001B8A  5C05               	subwf	(??_isdigit+2)^0,w,c
  4866  001B8C  A0D8               	btfss	status,0,c
  4867  001B8E  EFCB  F00D         	goto	i2u166_41
  4868  001B92  EFCE  F00D         	goto	i2u166_40
  4869  001B96                     i2u166_41:
  4870  001B96  0E01               	movlw	1
  4871  001B98  EFCF  F00D         	goto	i2u167_40
  4872  001B9C                     i2u166_40:
  4873  001B9C  0E00               	movlw	0
  4874  001B9E                     i2u167_40:
  4875  001B9E  6E01               	movwf	?_isdigit^0,c
  4876  001BA0  6A02               	clrf	(?_isdigit+1)^0,c
  4877  001BA2  0012               	return		;funcret
  4878  001BA4                     __end_of_isdigit:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function ___wmul *****************
  4882 ;; Defined at:
  4883 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  multiplier      2    0[COMRAM] unsigned int 
  4886 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  product         2    4[COMRAM] unsigned int 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  2    0[COMRAM] unsigned int 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0, prodl, prodh
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4898 ;;      Params:         4       0       0       0       0       0       0       0       0
  4899 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4901 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4902 ;;Total ram usage:        6 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_get_x
  4908 ;;		_get_y_and_sum
  4909 ;;		_atoi
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text33
  4914  001C00                     __ptext33:
  4915                           	callstack 0
  4916  001C00                     ___wmul:
  4917                           	callstack 21
  4918  001C00  5001               	movf	___wmul@multiplier^0,w,c
  4919  001C02  0203               	mulwf	___wmul@multiplicand^0,c
  4920  001C04  CFF3 F005          	movff	prodl,___wmul@product
  4921  001C08  CFF4 F006          	movff	prodh,___wmul@product+1
  4922  001C0C  5001               	movf	___wmul@multiplier^0,w,c
  4923  001C0E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4924  001C10  50F3               	movf	243,w,c
  4925  001C12  2606               	addwf	(___wmul@product+1)^0,f,c
  4926  001C14  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4927  001C16  0203               	mulwf	___wmul@multiplicand^0,c
  4928  001C18  50F3               	movf	243,w,c
  4929  001C1A  2606               	addwf	(___wmul@product+1)^0,f,c
  4930  001C1C  C005  F001         	movff	___wmul@product,?___wmul
  4931  001C20  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4932  001C24  0012               	return		;funcret
  4933  001C26                     __end_of___wmul:
  4934                           	callstack 0
  4935                           
  4936 ;; *************** function _serial_sendString *****************
  4937 ;; Defined at:
  4938 ;;		line 53 in file "main.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  phrase          2    4[COMRAM] PTR const unsigned char 
  4941 ;;		 -> tx_string(30), 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  index           2    8[COMRAM] unsigned int 
  4944 ;;  size            2    6[COMRAM] unsigned int 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4954 ;;      Params:         2       0       0       0       0       0       0       0       0
  4955 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4957 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4958 ;;Total ram usage:        6 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 1
  4961 ;; This function calls:
  4962 ;;		_serial_send
  4963 ;;		_strlen
  4964 ;; This function is called by:
  4965 ;;		_get_x
  4966 ;;		_get_y_and_sum
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text34
  4971  001A64                     __ptext34:
  4972                           	callstack 0
  4973  001A64                     _serial_sendString:
  4974                           	callstack 24
  4975  001A64                     
  4976                           ;main.c: 54:     unsigned int index = 0;
  4977  001A64  0E00               	movlw	0
  4978  001A66  6E0A               	movwf	(serial_sendString@index+1)^0,c
  4979  001A68  0E00               	movlw	0
  4980  001A6A  6E09               	movwf	serial_sendString@index^0,c
  4981  001A6C                     
  4982                           ;main.c: 55:     unsigned int size = strlen(phrase);
  4983  001A6C  C005  F001         	movff	serial_sendString@phrase,strlen@s
  4984  001A70  C006  F002         	movff	serial_sendString@phrase+1,strlen@s+1
  4985  001A74  ECD2  F00D         	call	_strlen	;wreg free
  4986  001A78  C001  F007         	movff	?_strlen,serial_sendString@size
  4987  001A7C  C002  F008         	movff	?_strlen+1,serial_sendString@size+1
  4988                           
  4989                           ;main.c: 56:     while (index < size) {
  4990  001A80  EF4D  F00D         	goto	i2l2540
  4991  001A84                     i2l2536:
  4992                           
  4993                           ;main.c: 57:         serial_send(phrase[index]);
  4994  001A84  5009               	movf	serial_sendString@index^0,w,c
  4995  001A86  2405               	addwf	serial_sendString@phrase^0,w,c
  4996  001A88  6ED9               	movwf	fsr2l,c
  4997  001A8A  500A               	movf	(serial_sendString@index+1)^0,w,c
  4998  001A8C  2006               	addwfc	(serial_sendString@phrase+1)^0,w,c
  4999  001A8E  6EDA               	movwf	fsr2h,c
  5000  001A90  50DF               	movf	indf2,w,c
  5001  001A92  EC32  F00E         	call	_serial_send
  5002  001A96                     
  5003                           ;main.c: 58:         index++;
  5004  001A96  4A09               	infsnz	serial_sendString@index^0,f,c
  5005  001A98  2A0A               	incf	(serial_sendString@index+1)^0,f,c
  5006  001A9A                     i2l2540:
  5007                           
  5008                           ;main.c: 56:     while (index < size) {
  5009  001A9A  5007               	movf	serial_sendString@size^0,w,c
  5010  001A9C  5C09               	subwf	serial_sendString@index^0,w,c
  5011  001A9E  5008               	movf	(serial_sendString@size+1)^0,w,c
  5012  001AA0  580A               	subwfb	(serial_sendString@index+1)^0,w,c
  5013  001AA2  A0D8               	btfss	status,0,c
  5014  001AA4  EF56  F00D         	goto	i2u198_41
  5015  001AA8  EF58  F00D         	goto	i2u198_40
  5016  001AAC                     i2u198_41:
  5017  001AAC  EF42  F00D         	goto	i2l2536
  5018  001AB0                     i2u198_40:
  5019  001AB0  0012               	return		;funcret
  5020  001AB2                     __end_of_serial_sendString:
  5021                           	callstack 0
  5022                           
  5023 ;; *************** function _strlen *****************
  5024 ;; Defined at:
  5025 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5028 ;;		 -> dbuf(32), tx_string(30), 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5031 ;;		 -> dbuf(32), tx_string(30), 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  2    0[COMRAM] unsigned int 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5041 ;;      Params:         2       0       0       0       0       0       0       0       0
  5042 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5044 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5045 ;;Total ram usage:        4 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_serial_sendString
  5051 ;;		_pad
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text35
  5056  001BA4                     __ptext35:
  5057                           	callstack 0
  5058  001BA4                     _strlen:
  5059                           	callstack 20
  5060  001BA4  C001  F003         	movff	strlen@s,strlen@a
  5061  001BA8  C002  F004         	movff	strlen@s+1,strlen@a+1
  5062  001BAC  EFDA  F00D         	goto	i2l2242
  5063  001BB0                     i2l2240:
  5064  001BB0  4A01               	infsnz	strlen@s^0,f,c
  5065  001BB2  2A02               	incf	(strlen@s+1)^0,f,c
  5066  001BB4                     i2l2242:
  5067  001BB4  C001  FFD9         	movff	strlen@s,fsr2l
  5068  001BB8  C002  FFDA         	movff	strlen@s+1,fsr2h
  5069  001BBC  50DF               	movf	indf2,w,c
  5070  001BBE  A4D8               	btfss	status,2,c
  5071  001BC0  EFE4  F00D         	goto	i2u153_41
  5072  001BC4  EFE6  F00D         	goto	i2u153_40
  5073  001BC8                     i2u153_41:
  5074  001BC8  EFD8  F00D         	goto	i2l2240
  5075  001BCC                     i2u153_40:
  5076  001BCC  5003               	movf	strlen@a^0,w,c
  5077  001BCE  5C01               	subwf	strlen@s^0,w,c
  5078  001BD0  6E01               	movwf	?_strlen^0,c
  5079  001BD2  5004               	movf	(strlen@a+1)^0,w,c
  5080  001BD4  5802               	subwfb	(strlen@s+1)^0,w,c
  5081  001BD6  6E02               	movwf	(?_strlen+1)^0,c
  5082  001BD8  0012               	return		;funcret
  5083  001BDA                     __end_of_strlen:
  5084                           	callstack 0
  5085                           
  5086 ;; *************** function _serial_send *****************
  5087 ;; Defined at:
  5088 ;;		line 47 in file "main.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  character       1    wreg     unsigned char 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  character       1    0[COMRAM] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5102 ;;      Params:         0       0       0       0       0       0       0       0       0
  5103 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5105 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5106 ;;Total ram usage:        1 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_serial_sendString
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text36
  5116  001C64                     __ptext36:
  5117                           	callstack 0
  5118  001C64                     _serial_send:
  5119                           	callstack 24
  5120                           
  5121                           ;incstack = 0
  5122                           ;serial_send@character stored from wreg
  5123  001C64  6E01               	movwf	serial_send@character^0,c
  5124  001C66                     
  5125                           ;main.c: 48:     TXIF = 0;
  5126  001C66  989E               	bcf	3998,4,c	;volatile
  5127  001C68                     
  5128                           ;main.c: 49:     TXREG = character;
  5129  001C68  C001  FFAD         	movff	serial_send@character,4013	;volatile
  5130  001C6C                     i2l112:
  5131  001C6C  A89E               	btfss	3998,4,c	;volatile
  5132  001C6E  EF3B  F00E         	goto	i2u196_41
  5133  001C72  EF3D  F00E         	goto	i2u196_40
  5134  001C76                     i2u196_41:
  5135  001C76  EF36  F00E         	goto	i2l112
  5136  001C7A                     i2u196_40:
  5137  001C7A  0012               	return		;funcret
  5138  001C7C                     __end_of_serial_send:
  5139                           	callstack 0
  5140                           
  5141                           	psect	rparam
  5142  0000                     
  5143                           	psect	temp
  5144  00005E                     btemp:
  5145                           	callstack 0
  5146  00005E                     	ds	1
  5147  0000                     int$flags	set	btemp
  5148  0000                     wtemp8	set	btemp+1
  5149  0000                     ttemp5	set	btemp+1
  5150  0000                     ttemp6	set	btemp+4
  5151  0000                     ttemp7	set	btemp+8
  5152                           
  5153                           	psect	idloc
  5154                           
  5155                           ;Config register IDLOC0 @ 0x200000
  5156                           ;	unspecified, using default values
  5157  200000                     	org	2097152
  5158  200000  FF                 	db	255
  5159                           
  5160                           ;Config register IDLOC1 @ 0x200001
  5161                           ;	unspecified, using default values
  5162  200001                     	org	2097153
  5163  200001  FF                 	db	255
  5164                           
  5165                           ;Config register IDLOC2 @ 0x200002
  5166                           ;	unspecified, using default values
  5167  200002                     	org	2097154
  5168  200002  FF                 	db	255
  5169                           
  5170                           ;Config register IDLOC3 @ 0x200003
  5171                           ;	unspecified, using default values
  5172  200003                     	org	2097155
  5173  200003  FF                 	db	255
  5174                           
  5175                           ;Config register IDLOC4 @ 0x200004
  5176                           ;	unspecified, using default values
  5177  200004                     	org	2097156
  5178  200004  FF                 	db	255
  5179                           
  5180                           ;Config register IDLOC5 @ 0x200005
  5181                           ;	unspecified, using default values
  5182  200005                     	org	2097157
  5183  200005  FF                 	db	255
  5184                           
  5185                           ;Config register IDLOC6 @ 0x200006
  5186                           ;	unspecified, using default values
  5187  200006                     	org	2097158
  5188  200006  FF                 	db	255
  5189                           
  5190                           ;Config register IDLOC7 @ 0x200007
  5191                           ;	unspecified, using default values
  5192  200007                     	org	2097159
  5193  200007  FF                 	db	255
  5194                           
  5195                           	psect	config
  5196                           
  5197                           ;Config register CONFIG1L @ 0x300000
  5198                           ;	unspecified, using default values
  5199                           ;	PLL Prescaler Selection bits
  5200                           ;	PLLDIV = 0x0, unprogrammed default
  5201                           ;	System Clock Postscaler Selection bits
  5202                           ;	CPUDIV = 0x0, unprogrammed default
  5203                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5204                           ;	USBDIV = 0x0, unprogrammed default
  5205  300000                     	org	3145728
  5206  300000  00                 	db	0
  5207                           
  5208                           ;Config register CONFIG1H @ 0x300001
  5209                           ;	Oscillator Selection bits
  5210                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5211                           ;	Fail-Safe Clock Monitor Enable bit
  5212                           ;	FCMEN = 0x0, unprogrammed default
  5213                           ;	Internal/External Oscillator Switchover bit
  5214                           ;	IESO = 0x0, unprogrammed default
  5215  300001                     	org	3145729
  5216  300001  09                 	db	9
  5217                           
  5218                           ;Config register CONFIG2L @ 0x300002
  5219                           ;	unspecified, using default values
  5220                           ;	Power-up Timer Enable bit
  5221                           ;	PWRT = 0x1, unprogrammed default
  5222                           ;	Brown-out Reset Enable bits
  5223                           ;	BOR = 0x3, unprogrammed default
  5224                           ;	Brown-out Reset Voltage bits
  5225                           ;	BORV = 0x3, unprogrammed default
  5226                           ;	USB Voltage Regulator Enable bit
  5227                           ;	VREGEN = 0x0, unprogrammed default
  5228  300002                     	org	3145730
  5229  300002  1F                 	db	31
  5230                           
  5231                           ;Config register CONFIG2H @ 0x300003
  5232                           ;	Watchdog Timer Enable bit
  5233                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5234                           ;	Watchdog Timer Postscale Select bits
  5235                           ;	WDTPS = 0xF, unprogrammed default
  5236  300003                     	org	3145731
  5237  300003  1E                 	db	30
  5238                           
  5239                           ; Padding undefined space
  5240  300004                     	org	3145732
  5241  300004  FF                 	db	255
  5242                           
  5243                           ;Config register CONFIG3H @ 0x300005
  5244                           ;	CCP2 MUX bit
  5245                           ;	CCP2MX = 0x1, unprogrammed default
  5246                           ;	PORTB A/D Enable bit
  5247                           ;	PBADEN = 0x1, unprogrammed default
  5248                           ;	Low-Power Timer 1 Oscillator Enable bit
  5249                           ;	LPT1OSC = 0x0, unprogrammed default
  5250                           ;	MCLR Pin Enable bit
  5251                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  5252  300005                     	org	3145733
  5253  300005  03                 	db	3
  5254                           
  5255                           ;Config register CONFIG4L @ 0x300006
  5256                           ;	unspecified, using default values
  5257                           ;	Stack Full/Underflow Reset Enable bit
  5258                           ;	STVREN = 0x1, unprogrammed default
  5259                           ;	Single-Supply ICSP Enable bit
  5260                           ;	LVP = 0x1, unprogrammed default
  5261                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5262                           ;	ICPRT = 0x0, unprogrammed default
  5263                           ;	Extended Instruction Set Enable bit
  5264                           ;	XINST = 0x0, unprogrammed default
  5265                           ;	Background Debugger Enable bit
  5266                           ;	DEBUG = 0x1, unprogrammed default
  5267  300006                     	org	3145734
  5268  300006  85                 	db	133
  5269                           
  5270                           ; Padding undefined space
  5271  300007                     	org	3145735
  5272  300007  FF                 	db	255
  5273                           
  5274                           ;Config register CONFIG5L @ 0x300008
  5275                           ;	unspecified, using default values
  5276                           ;	Code Protection bit
  5277                           ;	CP0 = 0x1, unprogrammed default
  5278                           ;	Code Protection bit
  5279                           ;	CP1 = 0x1, unprogrammed default
  5280                           ;	Code Protection bit
  5281                           ;	CP2 = 0x1, unprogrammed default
  5282                           ;	Code Protection bit
  5283                           ;	CP3 = 0x1, unprogrammed default
  5284  300008                     	org	3145736
  5285  300008  0F                 	db	15
  5286                           
  5287                           ;Config register CONFIG5H @ 0x300009
  5288                           ;	unspecified, using default values
  5289                           ;	Boot Block Code Protection bit
  5290                           ;	CPB = 0x1, unprogrammed default
  5291                           ;	Data EEPROM Code Protection bit
  5292                           ;	CPD = 0x1, unprogrammed default
  5293  300009                     	org	3145737
  5294  300009  C0                 	db	192
  5295                           
  5296                           ;Config register CONFIG6L @ 0x30000A
  5297                           ;	unspecified, using default values
  5298                           ;	Write Protection bit
  5299                           ;	WRT0 = 0x1, unprogrammed default
  5300                           ;	Write Protection bit
  5301                           ;	WRT1 = 0x1, unprogrammed default
  5302                           ;	Write Protection bit
  5303                           ;	WRT2 = 0x1, unprogrammed default
  5304                           ;	Write Protection bit
  5305                           ;	WRT3 = 0x1, unprogrammed default
  5306  30000A                     	org	3145738
  5307  30000A  0F                 	db	15
  5308                           
  5309                           ;Config register CONFIG6H @ 0x30000B
  5310                           ;	unspecified, using default values
  5311                           ;	Configuration Register Write Protection bit
  5312                           ;	WRTC = 0x1, unprogrammed default
  5313                           ;	Boot Block Write Protection bit
  5314                           ;	WRTB = 0x1, unprogrammed default
  5315                           ;	Data EEPROM Write Protection bit
  5316                           ;	WRTD = 0x1, unprogrammed default
  5317  30000B                     	org	3145739
  5318  30000B  E0                 	db	224
  5319                           
  5320                           ;Config register CONFIG7L @ 0x30000C
  5321                           ;	unspecified, using default values
  5322                           ;	Table Read Protection bit
  5323                           ;	EBTR0 = 0x1, unprogrammed default
  5324                           ;	Table Read Protection bit
  5325                           ;	EBTR1 = 0x1, unprogrammed default
  5326                           ;	Table Read Protection bit
  5327                           ;	EBTR2 = 0x1, unprogrammed default
  5328                           ;	Table Read Protection bit
  5329                           ;	EBTR3 = 0x1, unprogrammed default
  5330  30000C                     	org	3145740
  5331  30000C  0F                 	db	15
  5332                           
  5333                           ;Config register CONFIG7H @ 0x30000D
  5334                           ;	unspecified, using default values
  5335                           ;	Boot Block Table Read Protection bit
  5336                           ;	EBTRB = 0x1, unprogrammed default
  5337  30000D                     	org	3145741
  5338  30000D  40                 	db	64
  5339                           tosu	equ	0xFFF
  5340                           tosh	equ	0xFFE
  5341                           tosl	equ	0xFFD
  5342                           stkptr	equ	0xFFC
  5343                           pclatu	equ	0xFFB
  5344                           pclath	equ	0xFFA
  5345                           pcl	equ	0xFF9
  5346                           tblptru	equ	0xFF8
  5347                           tblptrh	equ	0xFF7
  5348                           tblptrl	equ	0xFF6
  5349                           tablat	equ	0xFF5
  5350                           prodh	equ	0xFF4
  5351                           prodl	equ	0xFF3
  5352                           indf0	equ	0xFEF
  5353                           postinc0	equ	0xFEE
  5354                           postdec0	equ	0xFED
  5355                           preinc0	equ	0xFEC
  5356                           plusw0	equ	0xFEB
  5357                           fsr0h	equ	0xFEA
  5358                           fsr0l	equ	0xFE9
  5359                           wreg	equ	0xFE8
  5360                           indf1	equ	0xFE7
  5361                           postinc1	equ	0xFE6
  5362                           postdec1	equ	0xFE5
  5363                           preinc1	equ	0xFE4
  5364                           plusw1	equ	0xFE3
  5365                           fsr1h	equ	0xFE2
  5366                           fsr1l	equ	0xFE1
  5367                           bsr	equ	0xFE0
  5368                           indf2	equ	0xFDF
  5369                           postinc2	equ	0xFDE
  5370                           postdec2	equ	0xFDD
  5371                           preinc2	equ	0xFDC
  5372                           plusw2	equ	0xFDB
  5373                           fsr2h	equ	0xFDA
  5374                           fsr2l	equ	0xFD9
  5375                           status	equ	0xFD8

Data Sizes:
    Strings     165
    Constant    0
    Data        0
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     30     139
    BANK1           256      2       2
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), tx_string(BANK0[30]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), tx_string(BANK0[30]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> linha2(BANK0[16]), linha1(BANK0[16]), tx_string(BANK0[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_11(CODE[19]), STR_8(CODE[12]), STR_7(CODE[8]), STR_6(CODE[14]), 
		 -> STR_5(CODE[19]), STR_2(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_11(CODE[19]), STR_8(CODE[12]), STR_7(CODE[8]), STR_6(CODE[14]), 
		 -> STR_5(CODE[19]), STR_2(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_11(CODE[19]), STR_8(CODE[12]), STR_7(CODE[8]), STR_6(CODE[14]), 
		 -> STR_5(CODE[19]), STR_2(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_11(CODE[19]), STR_8(CODE[12]), STR_7(CODE[8]), STR_6(CODE[14]), 
		 -> STR_5(CODE[19]), STR_2(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> linha2(BANK0[16]), linha1(BANK0[16]), tx_string(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S615_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> linha2(BANK0[16]), linha1(BANK0[16]), tx_string(BANK0[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> linha2(BANK0[16]), linha1(BANK0[16]), tx_string(BANK0[30]), 

    serial_sendString@phrase	PTR const unsigned char  size(2) Largest target is 30
		 -> tx_string(BANK0[30]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> linha2(BANK0[16]), linha1(BANK0[16]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _RS232 in COMRAM

    _get_y_and_sum->_sprintf
    _get_x->_sprintf
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_Clear->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _serial_sendString->_strlen

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _RS232 in BANK0

    _RS232->_get_x
    _RS232->_get_y_and_sum
    _get_y_and_sum->_sprintf
    _get_x->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _RS232 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RS232 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RS232 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RS232 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RS232 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RS232 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RS232 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2060
                                              0 BANK1      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                _setup_Interruptions
                        _setup_RS232
 ---------------------------------------------------------------------------------
 (1) _setup_RS232                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_Interruptions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     820
                                             24 BANK0      6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                             21 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     932
                                             23 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                             23 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                             21 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RS232                                               10    10      0   28500
                                             10 BANK0     10    10      0
                              _get_x
                      _get_y_and_sum
 ---------------------------------------------------------------------------------
 (5) _get_y_and_sum                                        2     2      0   14250
                                              8 BANK0      2     2      0
                             ___wmul
                       _reset_values
                  _serial_sendString
                            _sprintf
                        i2_Lcd_Clear
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (6) _reset_values                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _get_x                                                2     2      0   14250
                                              8 BANK0      2     2      0
                             ___wmul
                  _serial_sendString
                            _sprintf
                        i2_Lcd_Clear
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (6) i2_Lcd_Write_String                                   6     4      2     664
                                              4 COMRAM     6     4      2
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) i2_Lcd_Write_Char                                     3     3      0     254
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) i2_Lcd_Set_Cursor                                     5     4      1     825
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i2_Lcd_Clear                                          0     0      0     155
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i2_Lcd_Cmd                                            2     2      0     155
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i2_Lcd_Port                                           1     1      0     124
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             16    10      6   11009
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             8     2      6    9617
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           46    40      6    9123
                                             59 COMRAM    20    14      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (9) _utoa                                                32    22     10    4919
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (10) _pad                                                11     5      6    3507
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _fputs                                               7     3      4    1537
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (12) _fputc                                               9     5      4    1037
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (13) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (10) ___lomod                                            17     1     16     412
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (10) ___lodiv                                            25     9     16     421
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (9) _atoi                                                15    13      2    1925
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (10) _isspace                                             7     5      2     259
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              6     4      2     281
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     822
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _serial_sendString                                    6     4      2     775
                                              4 COMRAM     6     4      2
                        _serial_send
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _strlen                                              4     2      2     310
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _serial_send                                          1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup_Interruptions
   _setup_RS232

 _RS232 (ROOT)
   _get_x
     ___wmul
     _serial_sendString
       _serial_send
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _fputc
             _putch
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
     i2_Lcd_Clear
       i2_Lcd_Cmd
         i2_Lcd_Port
     i2_Lcd_Set_Cursor
       i2_Lcd_Cmd
     i2_Lcd_Write_String
       i2_Lcd_Write_Char
         i2_Lcd_Port
   _get_y_and_sum
     ___wmul
     _reset_values
     _serial_sendString
     _sprintf
     i2_Lcd_Clear
     i2_Lcd_Set_Cursor
     i2_Lcd_Write_String

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2       2       7        0.8%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     1E      8B       5       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EA      20        0.0%
DATA                 0      0      EA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 06 10:54:57 2021

                           _x 006C                             _y 006A  __size_of_setup_Interruptions 0008  
                          l61 194A                            l63 1960                            l71 1CB2  
                          l80 17CC                            l65 1962                            l57 191E  
                          l59 1934                            l83 1B32                            l68 1BFE  
                          l77 183A                            l89 15DA           ___wmul@multiplicand 0003  
              ?_get_y_and_sum 0001     __size_ofi2_Lcd_Write_Char 0038                           l153 1CA4  
                         l161 174E                           l162 174E                           l156 1CC8  
                         _GIE 007F97                           _pad 1492                           wreg 000FE8  
                        l2020 17F6                          l2014 1CA6                          l2030 1832  
                        l2022 17FC                          l2040 1784                          l2032 1756  
                        l2024 1808                          l2016 17D2                          l2050 17AE  
                        l2042 178A                          l2034 175C                          l2026 181A  
                        l2018 17E4                          l2052 17B4                          l2044 179C  
                        l2036 176E                          l2028 182C                          l2060 1558  
                        l2054 17BA                          l2046 17A2                          l2038 1774  
                        l2062 1566                          l2056 17C0                          l2048 17A8  
                        l2064 1598                          l2160 1C92                          l2058 17C6  
                        l2066 159E                          l2162 1C9C                          l2164 1CC2  
                        l2710 16EA                          l2720 1708                          l2712 16EC  
                        l2722 1716                          l2714 16F4                          l2706 16DC  
                        l1940 1BFC                          l1932 1BDE                          l2724 1730  
                        l2716 16F8                          l2708 16E8                          l1934 1BE0  
                        l1950 1B14                          l1942 1AFA                          l2726 1734  
                        l2718 16FC                          l1880 192E                          l1936 1BE8  
                        l1960 1B30                          l1952 1B1C                          l1944 1B08  
                        l2728 1740                          l1882 1936                          l1874 1908  
                        l1938 1BEA                          l1954 1B1E                          l1946 1B0A  
                        l1884 1944                          l1876 1918                          l1956 1B26  
                        l1948 1B12                          l1886 194C                          l1878 1920  
                        l1958 1B28                          ?_pad 0011                          l1888 195A  
                        STR_1 085A                          STR_2 0896                          STR_3 0838  
                        STR_4 086B                          STR_5 0801                          STR_6 087C  
                        STR_7 089E                          STR_8 088A                          STR_9 0838  
                        _BRGH 007D62                          _CREN 007D5C                          u1220 1918  
                        u1221 1914                          u1230 192E                          u1231 192A  
                        u1240 1944                          u1241 1940                          u1250 195A  
                        u1251 1956                          u1340 17E4                          u1341 17E0  
                        u1350 181A                          u2207 1BF2                          u1351 1816  
                        u1360 1594                          u1370 15CA                          u2147 1722  
                        u1380 15DA                          u2157 1B16                          u1381 15D6  
                        u2167 1B2A                          u1367 158A                          u2177 1764  
                        u1377 15C0                          u2187 177C                          u2197 1792  
                        _PEIE 007F96                          _RCIE 007CED                          _RCIF 007CF5  
                        i2l61 19A6                          i2l63 19BC                          i2l71 1CC0  
                        i2l65 19BE                          i2l57 197A                          i2l59 1990  
                        i2l83 1B6A                          i2l68 1C44                          i2l77 18A0  
                        i2l89 16DA                          _SPEN 007D5F                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64             ?_Lcd_Write_String 00E4  
                        _dbuf 006E                          _hasX 0750                          _atoi 0EFE  
                        _main 16DC                          _prec 0064                          _nout 0060  
                        pad@i 0018                          pad@p 0015                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          pad@w 001A                          fsr2l 000FD9  
                        btemp 005E                          _utoa 0B36                          prodh 000FF4  
                        prodl 000FF3                          start 000E            ??_Lcd_Write_String 00E6  
             __end_of_Lcd_Cmd 1C00                  ___param_bank 000000                         ??_pad 0017  
                       ?_atoi 0008                         ?_main 0001                         STR_10 086B  
                       STR_11 0814                         STR_12 0827                         STR_13 0849  
                       ?_utoa 001C               __end_of___lodiv 12F8                         _LATE0 007C68  
                       _LATE1 007C69                         _LATD4 007C64                         _LATD5 007C65  
                       _LATD6 007C66                         _LATD7 007C67               __end_of___lomod 13C8  
                       i2l112 1C6C                         _RS232 0008                         i2l121 1AB0  
                       i2l115 1C7A                         i2l124 1C90                         i2l133 1206  
                       i2l142 0EFC                         i2l150 1632                         i2l167 1C24  
                       i2l612 12F6                         i2l605 12D6                         i2l622 13C6  
                       i2l615 13A6                         i2l915 18FA                         i2l916 1902  
                       i2l909 0B34                         i2l845 1A10                         i2l950 1BA2  
                       i2l944 1084                         i2l874 14D8                         i2l947 108C  
                       i2l884 0B6E                         i2l973 1490                         i2l981 1AF4  
                       i2l877 151A                         i2l990 1BD8                         i2l958 1A62  
                       i2l894 0D36                         i2l886 0B76                         i2l879 1556  
                       i2l984 1CCA                         _RCREG 000FAE                  vfpfcnvrt@fmt 003E  
                vfpfcnvrt@llu 0046                         _SPBRG 000FAF       __size_of_Lcd_Set_Cursor 006E  
                       _TRISD 000F95                         _TRISE 000F96                         _TXREG 000FAD  
  __size_of_serial_sendString 004E            __size_ofi2_Lcd_Cmd 0020                   ?i2_Lcd_Port 0001  
                       _flags 0066                         _get_x 108E                         _fputc 13C8  
                       _fputs 1AB2               __end_of_isdigit 1BA4                         atoi@n 0015  
                       pad@fp 0011                         atoi@s 0008                         _width 0062  
                       _putch 1CCA               __end_of_isspace 1A64                         tablat 000FF5  
                       ttemp5 005F                         ttemp6 0062                         ttemp7 0066  
                       utoa@d 001E                         utoa@i 003A                         utoa@n 0032  
                       utoa@p 002E                         utoa@w 0030                         status 000FD8  
                       wtemp8 005F               __end_of_sprintf 1A12              ___lodiv@dividend 0001  
            i2_Lcd_Set_Cursor 183C              __end_of_Lcd_Init 17CE              __end_of_Lcd_Port 1964  
             __initialization 1C46                  __end_of_atoi 108E                  __end_of_main 1756  
                __end_of_utoa 0D38               ??_get_y_and_sum 00D4         serial_sendString@size 0007  
                      ??_atoi 000A                        ??_main 0100                        ??_utoa 0026  
          __size_of_Lcd_Clear 000E                 __activetblptr 000002                        ?_RS232 0001  
            ___lodiv@quotient 0011                        ?_get_x 0001                        ?_fputc 0001  
                      ?_fputs 000A                        ?_putch 0001                        i2l2300 1492  
                      i2l2230 13F6                        i2l2310 14E4                        i2l2302 14A2  
                      i2l2240 1BB0                        i2l2232 1414                        i2l2224 13C8  
                      i2l2312 14F8                        i2l2304 14B6                        i2l2242 1BB4  
                      i2l2322 1B6C                        i2l2330 1A2A                        i2l2410 1068  
                      i2l2402 1006                        i2l2234 144A                        i2l2226 13DA  
                      i2l2250 1ABE                        i2l2314 14FC                        i2l2306 14C4  
                      i2l2244 1BCC                        i2l2332 1A58                        i2l2228 13EC  
                      i2l2252 1AD0                        i2l2316 152A                        i2l2308 14D0  
                      i2l2340 0B46                        i2l2420 08DA                        i2l2500 18DE  
                      i2l2238 1BA4                        i2l2334 1A5C                        i2l2326 1A12  
                      i2l2406 1044                        i2l2270 124E                        i2l2262 1208  
                      i2l2254 1AD4                        i2l2318 153E                        i2l2350 0BAE  
                      i2l2342 0B48                        i2l2430 0958                        i2l2422 08EC  
                      i2l2510 1C42                        i2l2502 1C28                        i2l2256 1C00  
                      i2l2328 1A16                        i2l2408 1056                        i2l2280 12BE  
                      i2l2272 125C                        i2l2264 1214                        i2l2248 1AB2  
                      i2l2352 0BB4                        i2l2360 0C9A                        i2l2344 0B62  
                      i2l2440 09DA                        i2l2432 0966                        i2l2424 08F0  
                      i2l2416 08A8                        i2l2504 1C2A                        i2l2520 1B4E  
                      i2l2512 1B36                        i2l2600 110E                        i2l2258 1C1C  
                      i2l2282 12D0                        i2l2274 126E                        i2l2266 1232  
                      i2l2290 1332                        i2l2362 0CAC                        i2l2370 0D0E  
                      i2l2354 0C2A                        i2l2346 0B9E                        i2l2338 0B36  
                      i2l2450 0A92                        i2l2434 0986                        i2l2442 09EC  
                      i2l2426 0914                        i2l2418 08CC                        i2l2506 1C30  
                      i2l2530 1B68                        i2l2522 1B56                        i2l2514 1B42  
                      i2l2610 1156                        i2l2602 1126                        i2l2540 1A9A  
                      i2l2532 1A64                        i2l2380 0F1A                        i2l2276 129C  
                      i2l2268 123A                        i2l2292 1340                        i2l2284 12F8  
                      i2l2364 0CCA                        i2l2356 0C30                        i2l2348 0BA6  
                      i2l2452 0AB6                        i2l2460 0AE4                        i2l2444 0A10  
                      i2l2436 0994                        i2l2428 094A                        i2l2508 1C32  
                      i2l2524 1B58                        i2l2516 1B44                        i2l2612 1170  
                      i2l2620 11B2                        i2l2604 113C                        i2l2534 1A6C  
                      i2l2390 0F76                        i2l2382 0F36                        i2l2374 0EFE  
                      i2l2278 12BC                        i2l2294 136E                        i2l2286 1316  
                      i2l2366 0CE4                        i2l2358 0C36                        i2l2462 0AF2  
                      i2l2454 0AC4                        i2l2446 0A5A                        i2l2550 19DA  
                      i2l2526 1B5E                        i2l2518 1B4C                        i2l2622 11D4  
                      i2l2614 117A                        i2l2606 1140                        i2l2542 1C7C  
                      i2l2630 0D4A                        i2l2536 1A84                        i2l2392 0F8C  
                      i2l2384 0F6C                        i2l2376 0F12                        i2l2296 138E  
                      i2l2288 131E                        i2l2368 0CFE                        i2l2456 0AD8  
                      i2l2552 19E2                        i2l2480 198A                        i2l2560 183E  
                      i2l2528 1B60                        i2l2624 11F0                        i2l2616 1186  
                      i2l2608 114A                        i2l2544 1C8E                        i2l2640 0DAA  
                      i2l2632 0D6C                        i2l2490 1C66                        i2l2538 1A96  
                      i2l2394 0F94                        i2l2386 0F70                        i2l2378 0F16  
                      i2l2298 13A0                        i2l2466 0AFE                        i2l2554 19FE  
                      i2l2546 19C0                        i2l2482 1992                        i2l2474 1966  
                      i2l2570 1882                        i2l2562 184E                        i2l2626 11FA  
                      i2l2618 11A4                        i2l2650 0E1C                        i2l2642 0DCC  
                      i2l2634 0D76                        i2l2492 1C68                        i2l2396 0F9C  
                      i2l2468 0B22                        i2l2548 19D2                        i2l2484 19A0  
                      i2l2476 1974                        i2l2572 1894                        i2l2564 1860  
                      i2l2580 169A                        i2l2660 0E66                        i2l2652 0E32  
                      i2l2644 0DD8                        i2l2636 0D82                        i2l2628 0D38  
                      i2l2398 0FD0                        i2l2750 0FBA                        i2l2494 18A2  
                      i2l2486 19A8                        i2l2478 197C                        i2l2558 1CB4  
                      i2l2574 189A                        i2l2566 1866                        i2l2582 169E  
                      i2l2590 10AE                        i2l2670 0ECA                        i2l2662 0E70  
                      i2l2654 0E36                        i2l2638 0D9E                        i2l2646 0DE0  
                      i2l2496 18AA                        i2l2488 19B6                        i2l2568 1870  
                      i2l2576 165E                        i2l2592 10BA                        i2l2584 108E  
                      i2l2672 0EE6                        i2l2664 0E7C                        i2l2656 0E40  
                      i2l2648 0E04                        i2l2680 1624                        i2l2498 18B8  
                      i2l2578 166A                        i2l2594 10D6                        i2l2586 10A0  
                      i2l2674 0EF0                        i2l2666 0E9A                        i2l2658 0E4C  
                      i2l2682 162C                        i2l2596 10E2                        i2l2588 10A4  
                      i2l2668 0EA8                        i2l2684 1630                        i2l2676 1606  
                      i2l2598 10EA                        i2l2678 1614                        _OSCCON 000FD3  
                   ??_Lcd_Cmd 00E1       __size_of_Lcd_Write_Char 003E                  vfprintf@cfmt 0056  
                ?_serial_send 0001                  ?i2_Lcd_Clear 0001             __end_ofi2_Lcd_Cmd 1C46  
                      ___wmul 1C00                     ??___lodiv 0011                     ??___lomod 0011  
                      _digito 0068           __size_ofi2_Lcd_Port 005C           i2Lcd_Write_String@a 0005  
         i2Lcd_Write_String@i 0009                        _linha1 00BC                        _linha2 00AC  
                      clear_0 1C50                        isa$std 000001                        pad@buf 0013  
            i2_Lcd_Write_Char 1B34                        _strlen 1BA4                        fputc@c 0001  
                      fputs@c 000E                        fputs@i 000F                        fputs@s 000A  
                   ??_isdigit 0003                  ?_setup_RS232 0001                  __mediumconst 0000  
                   ??_isspace 0003                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        putch@c 0001              __end_of_vfprintf 1904  
                      utoa@fp 001C                     ??_sprintf 005E           _setup_Interruptions 1CC2  
             Lcd_Set_Cursor@a 00E4               Lcd_Set_Cursor@b 00E3               Lcd_Set_Cursor@y 00E6  
             Lcd_Set_Cursor@z 00E5                    __accesstop 0060       __end_of__initialization 1C56  
           __end_of_Lcd_Clear 1CB4                 ___rparam_used 000001                 __end_of_RS232 165E  
              __pcstackCOMRAM 0001          ?_setup_Interruptions 0001                 __end_of_get_x 1208  
               __end_of_fputc 1492                 __end_of_fputs 1AF6                 __end_of_putch 1CCC  
 __size_ofi2_Lcd_Write_String 007E             i2Lcd_Write_Char@a 0004             i2Lcd_Write_Char@y 0003  
      serial_sendString@index 0009                       ??_RS232 00D6                _Lcd_Set_Cursor 17CE  
                   ?_Lcd_Init 0001                     ?_Lcd_Port 0001                       ??_get_x 00D4  
                     ??_fputc 0005                       ??_fputs 000E          i2Lcd_Write_Char@temp 0002  
                     ??_putch 0001                    __pbssBANK0 0060         ??_setup_Interruptions 00E0  
                     ?___wmul 0001                       _BAUDCON 000FB8          i2Lcd_Set_Cursor@temp 0008  
   __size_of_Lcd_Write_String 0084        __end_of_Lcd_Set_Cursor 183C                       ?_strlen 0001  
    __end_ofi2_Lcd_Set_Cursor 18A2            __size_of_vfpfcnvrt 028E                    ??_Lcd_Init 00E3  
                ??i2_Lcd_Port 0001                    ??_Lcd_Port 00E0              ___lomod@dividend 0001  
              _Lcd_Write_Char 1AF6                       _Lcd_Cmd 1BDA                       __Hparam 0000  
               ?_reset_values 0001                       __Lparam 0000               __size_of___wmul 0026  
                     ___lodiv 1208                       ___lomod 12F8                     ?_vfprintf 0050  
                __psmallconst 0800          __size_of_serial_send 0018            __end_ofi2_Lcd_Port 19C0  
        __size_ofi2_Lcd_Clear 000E                       __pcinit 1C46                       __ramtop 0800  
             ?_Lcd_Set_Cursor 00E3                       __ptext0 16DC                       __ptext1 1C92  
                     __ptext2 1CC2                       __ptext3 1558                       __ptext4 1AF6  
                     __ptext5 17CE                       __ptext6 1756                       __ptext7 1CA6  
                     __ptext8 1BDA                       __ptext9 1904               __size_of_strlen 0036  
                __size_of_pad 00C6                       _isdigit 1B6C                       _isspace 1A12  
                     atoi@neg 000E                       _sprintf 19C0          __size_of_setup_RS232 0014  
      __end_of_Lcd_Write_Char 1B34                __pintcode_body 15DC          end_of_initialization 1C56  
                     fputc@fp 0003                 __Lmediumconst 0000                       int_func 15DC  
                     fputs@fp 000C      __end_ofi2_Lcd_Write_Char 1B6C                ??_reset_values 0001  
           __end_of_vfpfcnvrt 0B36                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                     Lcd_Port@a 00E0  
                  ??_vfprintf 0056                       strlen@a 0003                       strlen@s 0001  
       __end_of_get_y_and_sum 0EFE                     i2_Lcd_Cmd 1C26                     _TRISCbits 000F94  
             ?_Lcd_Write_Char 0001             Lcd_Write_String@a 00E4             Lcd_Write_String@i 00E8  
                   _Lcd_Clear 1CA6                   vfpfcnvrt@ap 0040                   vfpfcnvrt@fp 003C  
              __end_of___wmul 1C26              _Lcd_Write_String 1558                    ?i2_Lcd_Cmd 0001  
               __pbitbssBANK0 0750                __end_of_strlen 1BDA           start_initialization 1C46  
             ___lodiv@divisor 0009               ___lodiv@counter 0019                   __end_of_pad 1558  
           __size_of_Lcd_Init 0078             __size_of_Lcd_Port 0060       serial_sendString@phrase 0005  
                 vfprintf@fmt 0052                    ?_Lcd_Clear 0001    __end_ofi2_Lcd_Write_String 16DC  
                    ??___wmul 0005               Lcd_Write_Char@a 00E3               Lcd_Write_Char@y 00E2  
                    ??_strlen 0003          __end_of_reset_values 1C92                 __pcstackBANK0 00CC  
               __pcstackBANK1 0100             ?i2_Lcd_Set_Cursor 0004            ??i2_Lcd_Set_Cursor 0005  
                    ?_Lcd_Cmd 0001   __end_of_setup_Interruptions 1CCA              ??_Lcd_Set_Cursor 00E4  
                   __pintcode 0008                      ?___lodiv 0001                      ?___lomod 0001  
                 ??i2_Lcd_Cmd 0002             __size_of_vfprintf 0062               ___lomod@divisor 0009  
                 __smallconst 0800                __size_of_RS232 1656               ___lomod@counter 0011  
                    ?_isdigit 0001                      ?_isspace 0001                __size_of_get_x 017A  
                    ?_sprintf 0058                __size_of_fputc 00CA                __size_of_fputs 0044  
              __size_of_putch 0002                ___wmul@product 0005             ?i2_Lcd_Write_Char 0001  
                    i2u200_40 1882                      i2u200_41 187E                      i2u201_40 1696  
                    i2u201_47 168C                      i2u202_40 16CA                      i2u210_40 0E1C  
                    i2u210_41 0E18                      i2u202_47 16C0                      i2u203_40 16DA  
                    i2u211_40 0E32                      i2u203_41 16D6                      i2u211_41 0E2E  
                    i2u204_40 10A0                      i2u212_40 1614                      i2u204_41 109C  
                    i2u212_41 1610                      i2u205_40 110E                      i2u213_40 1624  
                    i2u205_41 110A                      i2u213_41 1620                      i2u221_47 0E58  
                    i2u150_40 13EC                      i2u206_40 1126                      i2u150_41 13E8  
                    i2u206_41 1122                      i2u222_47 0E88                      i2u151_40 1414  
                    i2u207_40 113C                      i2u151_41 1410                      i2u207_41 1138  
                    i2u223_47 1162                      i2u160_40 1340                      i2u152_40 144A  
                    i2u208_40 0D4A                      i2u160_41 133C                      i2u152_41 1446  
                    i2u208_41 0D46                      i2u224_47 1192                      i2u153_40 1BCC  
                    i2u161_40 136E                      i2u209_40 0E04                      i2u153_41 1BC8  
                    i2u161_41 136A                      i2u209_41 0E00                      i2u225_47 1B50  
                    i2u154_40 1AF4                      i2u162_40 14A2                      i2u170_40 0B46  
                    i2u154_41 1AF0                      i2u162_41 149E                      i2u170_41 0B42  
                    Lcd_Cmd@a 00E2                      i2u226_47 1B62                      i2u163_40 14C4  
                    i2u171_40 0B62                      i2u155_41 120E                      i2u163_41 14C0  
                    i2u171_41 0B5E                      i2u227_47 1C38                      i2u180_40 103E  
                    i2u156_40 1232                      i2u164_40 151A                      i2u172_40 0CAC  
                    i2u180_41 1038                      i2u156_41 122E                      i2u164_41 1516  
                    i2u172_41 0CA8                      i2u181_40 1040                      i2u157_40 125C  
                    i2u149_40 13DA                      i2u165_40 152A                      i2u173_40 0CCA  
                    i2u157_41 1258                      i2u149_41 13D6                      i2u165_41 1526  
                    i2u173_41 0CC6                      i2u166_40 1B9C                      i2u182_40 1056  
                    i2u158_40 129C                      i2u174_40 0CE4                      i2u190_40 0A10  
                    i2u166_41 1B96                      i2u182_41 1052                      i2u158_41 1298  
                    i2u174_41 0CE0                      i2u190_41 0A0C                      i2u167_40 1B9E  
                    i2u183_40 1068                      i2u159_40 1316                      i2u175_40 0CFE  
                    i2u191_40 0AB6                      i2u183_41 1064                      i2u159_41 1312  
                    i2u175_41 0CFA                      i2u191_41 0AB2                      i2u168_40 1A2A  
                    i2u176_40 0D0E                      i2u184_40 08CC                      i2u192_40 1974  
                    i2u168_41 1A26                      i2u176_41 0D0A                      i2u184_41 08C8  
                    i2u192_41 1970                      i2u169_40 1A58                      i2u177_40 0F36  
                    i2u185_40 0914                      i2u193_40 198A                      i2u169_41 1A54  
                    i2u177_41 0F32                      i2u185_41 0910                      i2u193_41 1986  
                    i2u178_40 0F6C                      i2u186_40 0958                      i2u194_40 19A0  
                    i2u178_41 0F68                      i2u186_41 0954                      i2u194_41 199C  
                    i2u179_40 0F88                      i2u187_40 09D4                      i2u195_40 19B6  
                    i2u179_41 0F84                      i2u187_41 09CE                      i2u195_41 19B2  
                    i2u196_40 1C7A                      i2u188_40 09D6                      i2u196_41 1C76  
                    i2u189_40 09EC                      i2u197_40 18FA                      i2u189_41 09E8  
                    i2u197_41 18F6                      i2u198_40 1AB0                      i2u198_41 1AAC  
                    i2u199_40 184E                      i2u199_41 184A            ??i2_Lcd_Write_Char 0002  
               ??_serial_send 0001                 ??i2_Lcd_Clear 0004                   ??_Lcd_Clear 00E3  
                   _vfpfcnvrt 08A8             ___wmul@multiplier 0001              ??_Lcd_Write_Char 00E1  
               ??_setup_RS232 00E0                      _Lcd_Init 1756                     _tx_string 008E  
                    _Lcd_Port 1904      __end_of_Lcd_Write_String 15DC              __size_of_Lcd_Cmd 0026  
                    __Hrparam 0000                    vfprintf@ap 0054                      __Lrparam 0000  
                  vfprintf@fp 0050              __size_of___lodiv 00F0              __size_of___lomod 00D0  
                  ?_vfpfcnvrt 003C          serial_send@character 0001         __size_of_reset_values 0016  
         __end_of_serial_send 1C7C           __end_ofi2_Lcd_Clear 1CC2                    sprintf@fmt 005A  
                    _atoi$720 0010                      _atoi$721 0014                      _atoi$722 0012  
            __size_of_isdigit 0038              __size_of_isspace 0052                      __ptext11 0D38  
                    __ptext20 19C0                      __ptext12 1C7C                      __ptext21 18A2  
                    __ptext13 108E                      __ptext30 0EFE                      __ptext22 08A8  
                    __ptext14 165E                      __ptext31 1A12                      __ptext23 0B36  
                    __ptext15 1B34                      __ptext32 1B6C                      __ptext24 1492  
                    __ptext16 183C                      __ptext33 1C00                      __ptext25 1AB2  
                    __ptext17 1CB4                      __ptext34 1A64                      __ptext26 13C8  
                    __ptext18 1C26                      __ptext35 1BA4                      __ptext27 1CCA  
                    __ptext19 1964                      __ptext36 1C64                      __ptext28 12F8  
                    __ptext29 1208              __size_of_sprintf 0052           __end_of_setup_RS232 1CA6  
               __size_of_atoi 0190                 __size_of_main 007A        __size_of_get_y_and_sum 01C6  
               __size_of_utoa 0202                  _reset_values 1C7C                      isa$xinst 000000  
                    int$flags 005E                   i2Lcd_Port@a 0001                      _vfprintf 18A2  
                 _isspace$738 0007            i2_Lcd_Write_String 165E                      isdigit@c 0001  
           _serial_sendString 1A64            Lcd_Write_Char@temp 00E1                      intlevel2 0000  
                   sprintf@ap 00CC           ?i2_Lcd_Write_String 0005            ?_serial_sendString 0005  
           i2Lcd_Set_Cursor@a 0005             i2Lcd_Set_Cursor@b 0004             i2Lcd_Set_Cursor@y 0007  
           i2Lcd_Set_Cursor@z 0006                      isspace@c 0001     __size_ofi2_Lcd_Set_Cursor 0066  
         ??_serial_sendString 0007                    i2Lcd_Cmd@a 0003                   _serial_send 1C64  
                 i2_Lcd_Clear 1CB4          ??i2_Lcd_Write_String 0007                   ??_vfpfcnvrt 0042  
               _vfpfcnvrt$702 004E            Lcd_Set_Cursor@temp 00E7                 _get_y_and_sum 0D38  
                    sprintf@f 00CE                      sprintf@s 0058                   _setup_RS232 1C92  
   __end_of_serial_sendString 1AB2                    i2_Lcd_Port 1964  
