

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 06 22:50:35 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  0016BA                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _belt_position
    76  0016BA  0001               	dw	1
    77  0000                     _ADRESL	set	4035
    78  0000                     _ADRESH	set	4036
    79  0000                     _OSCCON	set	4051
    80  0000                     _TRISE	set	3990
    81  0000                     _TRISD	set	3989
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON1bits	set	4033
    84  0000                     _ADCON2bits	set	4032
    85  0000                     _TRISA	set	3986
    86  0000                     _LATE1	set	31849
    87  0000                     _LATE0	set	31848
    88  0000                     _LATD7	set	31847
    89  0000                     _LATD6	set	31846
    90  0000                     _LATD5	set	31845
    91  0000                     _LATD4	set	31844
    92                           
    93                           	psect	smallconst
    94  000800                     __psmallconst:
    95                           	callstack 0
    96  000800  00                 	db	0
    97  000801                     STR_2:
    98  000801  20                 	db	32
    99  000802  20                 	db	32
   100  000803  20                 	db	32
   101  000804  20                 	db	32
   102  000805  45                 	db	69	;'E'
   103  000806  53                 	db	83	;'S'
   104  000807  54                 	db	84	;'T'
   105  000808  45                 	db	69	;'E'
   106  000809  49                 	db	73	;'I'
   107  00080A  52                 	db	82	;'R'
   108  00080B  41                 	db	65	;'A'
   109  00080C  20                 	db	32
   110  00080D  20                 	db	32
   111  00080E  20                 	db	32
   112  00080F  20                 	db	32
   113  000810  20                 	db	32
   114  000811  00                 	db	0
   115  000812                     STR_1:
   116  000812  2D                 	db	45
   117  000813  2D                 	db	45
   118  000814  2D                 	db	45
   119  000815  2D                 	db	45
   120  000816  2D                 	db	45
   121  000817  2D                 	db	45
   122  000818  2D                 	db	45
   123  000819  2D                 	db	45
   124  00081A  2D                 	db	45
   125  00081B  2D                 	db	45
   126  00081C  2D                 	db	45
   127  00081D  2D                 	db	45
   128  00081E  2D                 	db	45
   129  00081F  2D                 	db	45
   130  000820  2D                 	db	45
   131  000821  2D                 	db	45
   132  000822  00                 	db	0
   133  000823  00                 	db	0	; dummy byte at the end
   134  0000                     
   135                           ; #config settings
   136                           
   137                           	psect	cinit
   138  0015DC                     __pcinit:
   139                           	callstack 0
   140  0015DC                     start_initialization:
   141                           	callstack 0
   142  0015DC                     __initialization:
   143                           	callstack 0
   144                           
   145                           ; Initialize objects allocated to COMRAM (2 bytes)
   146                           ; load TBLPTR registers with __pidataCOMRAM
   147  0015DC  0EBA               	movlw	low __pidataCOMRAM
   148  0015DE  6EF6               	movwf	tblptrl,c
   149  0015E0  0E16               	movlw	high __pidataCOMRAM
   150  0015E2  6EF7               	movwf	tblptrh,c
   151  0015E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   152  0015E6  6EF8               	movwf	tblptru,c
   153  0015E8  0009               	tblrd		*+	;fetch initializer
   154  0015EA  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   155  0015EE  0009               	tblrd		*+	;fetch initializer
   156  0015F0  CFF5 F05F          	movff	tablat,__pdataCOMRAM+1
   157                           
   158                           ; Clear objects allocated to BANK0 (32 bytes)
   159  0015F4  EE00  F060         	lfsr	0,__pbssBANK0
   160  0015F8  0E20               	movlw	32
   161  0015FA                     clear_0:
   162  0015FA  6AEE               	clrf	postinc0,c
   163  0015FC  06E8               	decf	wreg,f,c
   164  0015FE  E1FD               	bnz	clear_0
   165                           
   166                           ; Clear objects allocated to COMRAM (46 bytes)
   167  001600  EE00  F030         	lfsr	0,__pbssCOMRAM
   168  001604  0E2E               	movlw	46
   169  001606                     clear_1:
   170  001606  6AEE               	clrf	postinc0,c
   171  001608  06E8               	decf	wreg,f,c
   172  00160A  E1FD               	bnz	clear_1
   173  00160C                     end_of_initialization:
   174                           	callstack 0
   175  00160C                     __end_of__initialization:
   176                           	callstack 0
   177  00160C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   178  00160E  6EF8               	movwf	tblptru,c
   179  001610  0E08               	movlw	high __Lsmallconst
   180  001612  6EF7               	movwf	tblptrh,c
   181  001614  0100               	movlb	0
   182  001616  EFDF  F005         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185  000030                     __pbssCOMRAM:
   186                           	callstack 0
   187  000030                     _tensao:
   188                           	callstack 0
   189  000030                     	ds	4
   190  000034                     _nout:
   191                           	callstack 0
   192  000034                     	ds	2
   193  000036                     _width:
   194                           	callstack 0
   195  000036                     	ds	2
   196  000038                     _prec:
   197                           	callstack 0
   198  000038                     	ds	2
   199  00003A                     _flags:
   200                           	callstack 0
   201  00003A                     	ds	2
   202  00003C                     _linha2:
   203                           	callstack 0
   204  00003C                     	ds	16
   205  00004C                     _linha1:
   206                           	callstack 0
   207  00004C                     	ds	16
   208  00005C                     _count:
   209                           	callstack 0
   210  00005C                     	ds	2
   211                           
   212                           	psect	dataCOMRAM
   213  00005E                     __pdataCOMRAM:
   214                           	callstack 0
   215  00005E                     _belt_position:
   216                           	callstack 0
   217  00005E                     	ds	2
   218                           
   219                           	psect	bssBANK0
   220  000060                     __pbssBANK0:
   221                           	callstack 0
   222  000060                     	ds	32
   223                           
   224                           	psect	cstackCOMRAM
   225  000001                     __pcstackCOMRAM:
   226                           	callstack 0
   227  000001                     ?___wmul:
   228                           	callstack 0
   229  000001                     Lcd_Port@a:
   230                           	callstack 0
   231  000001                     ___wmul@multiplier:
   232                           	callstack 0
   233  000001                     fputc@c:
   234                           	callstack 0
   235  000001                     ___fleq@ff1:
   236                           	callstack 0
   237  000001                     ___flge@ff1:
   238                           	callstack 0
   239                           
   240                           ; 4 bytes @ 0x0
   241  000001                     	ds	1
   242  000002                     ??_Lcd_Cmd:
   243  000002                     Lcd_Write_Char@temp:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x1
   247  000002                     	ds	1
   248  000003                     Lcd_Cmd@a:
   249                           	callstack 0
   250  000003                     Lcd_Write_Char@y:
   251                           	callstack 0
   252  000003                     ___wmul@multiplicand:
   253                           	callstack 0
   254  000003                     fputc@fp:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x2
   258  000003                     	ds	1
   259  000004                     ??_Lcd_Init:
   260  000004                     Lcd_Set_Cursor@b:
   261                           	callstack 0
   262  000004                     Lcd_Write_Char@a:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x3
   266  000004                     	ds	1
   267  000005                     ??_fputc:
   268  000005                     Lcd_Set_Cursor@a:
   269                           	callstack 0
   270  000005                     Lcd_Write_String@a:
   271                           	callstack 0
   272  000005                     ___wmul@product:
   273                           	callstack 0
   274  000005                     ___fleq@ff2:
   275                           	callstack 0
   276  000005                     ___flge@ff2:
   277                           	callstack 0
   278                           
   279                           ; 4 bytes @ 0x4
   280  000005                     	ds	1
   281  000006                     Lcd_Set_Cursor@z:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x5
   285  000006                     	ds	1
   286  000007                     ?___xxtofl:
   287                           	callstack 0
   288  000007                     Lcd_Set_Cursor@y:
   289                           	callstack 0
   290  000007                     Lcd_Write_String@i:
   291                           	callstack 0
   292  000007                     ___xxtofl@val:
   293                           	callstack 0
   294                           
   295                           ; 4 bytes @ 0x6
   296  000007                     	ds	1
   297  000008                     Lcd_Set_Cursor@temp:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x7
   301  000008                     	ds	1
   302  000009                     ??___fleq:
   303  000009                     ??___flge:
   304                           
   305                           ; 1 bytes @ 0x8
   306  000009                     	ds	1
   307  00000A                     ?_vfpfcnvrt:
   308                           	callstack 0
   309  00000A                     vfpfcnvrt@fp:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x9
   313  00000A                     	ds	1
   314  00000B                     ??___xxtofl:
   315                           
   316                           ; 1 bytes @ 0xA
   317  00000B                     	ds	1
   318  00000C                     vfpfcnvrt@fmt:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xB
   322  00000C                     	ds	2
   323  00000E                     vfpfcnvrt@ap:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0xD
   327  00000E                     	ds	1
   328  00000F                     ___xxtofl@sign:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0xE
   332  00000F                     	ds	1
   333  000010                     ?_vfprintf:
   334                           	callstack 0
   335  000010                     ___xxtofl@exp:
   336                           	callstack 0
   337  000010                     vfprintf@fp:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0xF
   341  000010                     	ds	1
   342  000011                     ___xxtofl@arg:
   343                           	callstack 0
   344                           
   345                           ; 4 bytes @ 0x10
   346  000011                     	ds	1
   347  000012                     vfprintf@fmt:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x11
   351  000012                     	ds	2
   352  000014                     vfprintf@ap:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x13
   356  000014                     	ds	1
   357  000015                     ?___fldiv:
   358                           	callstack 0
   359  000015                     ___fldiv@b:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x14
   363  000015                     	ds	1
   364  000016                     vfprintf@cfmt:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x15
   368  000016                     	ds	2
   369  000018                     ?_sprintf:
   370                           	callstack 0
   371  000018                     sprintf@s:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x17
   375  000018                     	ds	1
   376  000019                     ___fldiv@a:
   377                           	callstack 0
   378                           
   379                           ; 4 bytes @ 0x18
   380  000019                     	ds	1
   381  00001A                     sprintf@fmt:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x19
   385  00001A                     	ds	2
   386  00001C                     sprintf@ap:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x1B
   390  00001C                     	ds	1
   391  00001D                     ??___fldiv:
   392                           
   393                           ; 1 bytes @ 0x1C
   394  00001D                     	ds	1
   395  00001E                     sprintf@f:
   396                           	callstack 0
   397                           
   398                           ; 6 bytes @ 0x1D
   399  00001E                     	ds	3
   400  000021                     ___fldiv@rem:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x20
   404  000021                     	ds	3
   405  000024                     print_belt@stopped:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x23
   409  000024                     	ds	1
   410  000025                     ___fldiv@sign:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x24
   414  000025                     	ds	1
   415  000026                     ___fldiv@new_exp:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x25
   419  000026                     	ds	2
   420  000028                     ___fldiv@grs:
   421                           	callstack 0
   422                           
   423                           ; 4 bytes @ 0x27
   424  000028                     	ds	4
   425  00002C                     ___fldiv@bexp:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x2B
   429  00002C                     	ds	1
   430  00002D                     ___fldiv@aexp:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x2C
   434  00002D                     	ds	1
   435  00002E                     ??_main:
   436                           
   437                           ; 1 bytes @ 0x2D
   438  00002E                     	ds	2
   439                           
   440 ;;
   441 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   442 ;;
   443 ;; *************** function _main *****************
   444 ;; Defined at:
   445 ;;		line 70 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   459 ;;      Params:         0       0       0       0       0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0
   461 ;;      Temps:          2       0       0       0       0       0       0       0       0
   462 ;;      Totals:         2       0       0       0       0       0       0       0       0
   463 ;;Total ram usage:        2 bytes
   464 ;; Hardware stack levels required when called: 6
   465 ;; This function calls:
   466 ;;		_Lcd_Init
   467 ;;		___fldiv
   468 ;;		___fleq
   469 ;;		___flge
   470 ;;		___wmul
   471 ;;		___xxtofl
   472 ;;		_print_belt
   473 ;;		_setup_ADC
   474 ;;		_sprintf
   475 ;; This function is called by:
   476 ;;		Startup code after reset
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text0
   481  000BBE                     __ptext0:
   482                           	callstack 0
   483  000BBE                     _main:
   484                           	callstack 25
   485  000BBE                     
   486                           ;main.c: 72:     TRISD = 0;
   487  000BBE  0E00               	movlw	0
   488  000BC0  6E95               	movwf	149,c	;volatile
   489                           
   490                           ;main.c: 73:     TRISE = 0;
   491  000BC2  0E00               	movlw	0
   492  000BC4  6E96               	movwf	150,c	;volatile
   493                           
   494                           ;main.c: 75:     OSCCON = 0b01100000;
   495  000BC6  0E60               	movlw	96
   496  000BC8  6ED3               	movwf	211,c	;volatile
   497  000BCA                     
   498                           ;main.c: 76:     setup_ADC();
   499  000BCA  EC3C  F00B         	call	_setup_ADC	;wreg free
   500  000BCE                     
   501                           ;main.c: 77:     Lcd_Init();
   502  000BCE  ECDE  F009         	call	_Lcd_Init	;wreg free
   503  000BD2                     
   504                           ;main.c: 78:     sprintf(linha1, "    ESTEIRA     ");
   505  000BD2  0E4C               	movlw	low _linha1
   506  000BD4  6E18               	movwf	sprintf@s^0,c
   507  000BD6  0E00               	movlw	high _linha1
   508  000BD8  6E19               	movwf	(sprintf@s+1)^0,c
   509  000BDA  0E01               	movlw	low STR_2
   510  000BDC  6E1A               	movwf	sprintf@fmt^0,c
   511  000BDE  0E08               	movlw	high STR_2
   512  000BE0  6E1B               	movwf	(sprintf@fmt+1)^0,c
   513  000BE2  ECA7  F00A         	call	_sprintf	;wreg free
   514  000BE6                     l1676:
   515                           
   516                           ;main.c: 80:         ADCON0bits.GO = 1;
   517  000BE6  82C2               	bsf	194,1,c	;volatile
   518  000BE8                     l99:
   519                           
   520                           ;main.c: 81:         while (!ADCON0bits.GODONE) {
   521  000BE8  A2C2               	btfss	194,1,c	;volatile
   522  000BEA  EFF9  F005         	goto	u1181
   523  000BEE  EFFB  F005         	goto	u1180
   524  000BF2                     u1181:
   525  000BF2  EFF4  F005         	goto	l99
   526  000BF6                     u1180:
   527  000BF6                     
   528                           ;main.c: 83:         count = (ADRESH * 0x100) + ADRESL;
   529  000BF6  50C4               	movf	196,w,c	;volatile
   530  000BF8  6E2F               	movwf	(??_main+1)^0,c
   531  000BFA  6A2E               	clrf	??_main^0,c
   532  000BFC  50C3               	movf	195,w,c	;volatile
   533  000BFE  242E               	addwf	??_main^0,w,c
   534  000C00  6E5C               	movwf	_count^0,c
   535  000C02  0E00               	movlw	0
   536  000C04  202F               	addwfc	(??_main+1)^0,w,c
   537  000C06  6E5D               	movwf	(_count+1)^0,c
   538  000C08                     
   539                           ;main.c: 84:         tensao = ((5 * count) / 1023.0);
   540  000C08  C05C  F001         	movff	_count,___wmul@multiplier
   541  000C0C  C05D  F002         	movff	_count+1,___wmul@multiplier+1
   542  000C10  0E00               	movlw	0
   543  000C12  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   544  000C14  0E05               	movlw	5
   545  000C16  6E03               	movwf	___wmul@multiplicand^0,c
   546  000C18  EC29  F00B         	call	___wmul	;wreg free
   547  000C1C  C001  F007         	movff	?___wmul,___xxtofl@val
   548  000C20  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
   549  000C24  0E00               	movlw	0
   550  000C26  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
   551  000C28  0EFF               	movlw	-1
   552  000C2A  6E09               	movwf	(___xxtofl@val+2)^0,c
   553  000C2C  6E0A               	movwf	(___xxtofl@val+3)^0,c
   554  000C2E  0E01               	movlw	1
   555  000C30  EC11  F007         	call	___xxtofl
   556  000C34  C007  F015         	movff	?___xxtofl,___fldiv@b
   557  000C38  C008  F016         	movff	?___xxtofl+1,___fldiv@b+1
   558  000C3C  C009  F017         	movff	?___xxtofl+2,___fldiv@b+2
   559  000C40  C00A  F018         	movff	?___xxtofl+3,___fldiv@b+3
   560  000C44  0E00               	movlw	0
   561  000C46  6E19               	movwf	___fldiv@a^0,c
   562  000C48  0EC0               	movlw	192
   563  000C4A  6E1A               	movwf	(___fldiv@a+1)^0,c
   564  000C4C  0E7F               	movlw	127
   565  000C4E  6E1B               	movwf	(___fldiv@a+2)^0,c
   566  000C50  0E44               	movlw	68
   567  000C52  6E1C               	movwf	(___fldiv@a+3)^0,c
   568  000C54  EC12  F004         	call	___fldiv	;wreg free
   569  000C58  C015  F030         	movff	?___fldiv,_tensao
   570  000C5C  C016  F031         	movff	?___fldiv+1,_tensao+1
   571  000C60  C017  F032         	movff	?___fldiv+2,_tensao+2
   572  000C64  C018  F033         	movff	?___fldiv+3,_tensao+3
   573  000C68                     
   574                           ;main.c: 85:         if (tensao == 0) {
   575  000C68  C030  F001         	movff	_tensao,___fleq@ff1
   576  000C6C  C031  F002         	movff	_tensao+1,___fleq@ff1+1
   577  000C70  C032  F003         	movff	_tensao+2,___fleq@ff1+2
   578  000C74  C033  F004         	movff	_tensao+3,___fleq@ff1+3
   579  000C78  0E00               	movlw	0
   580  000C7A  6E05               	movwf	___fleq@ff2^0,c
   581  000C7C  0E00               	movlw	0
   582  000C7E  6E06               	movwf	(___fleq@ff2+1)^0,c
   583  000C80  0E00               	movlw	0
   584  000C82  6E07               	movwf	(___fleq@ff2+2)^0,c
   585  000C84  0E00               	movlw	0
   586  000C86  6E08               	movwf	(___fleq@ff2+3)^0,c
   587  000C88  EC47  F009         	call	___fleq	;wreg free
   588  000C8C  A0D8               	btfss	status,0,c
   589  000C8E  EF4B  F006         	goto	u1191
   590  000C92  EF4D  F006         	goto	u1190
   591  000C96                     u1191:
   592  000C96  EF52  F006         	goto	l1686
   593  000C9A                     u1190:
   594  000C9A                     
   595                           ;main.c: 86:             print_belt(1);
   596  000C9A  0E01               	movlw	1
   597  000C9C  EC9C  F009         	call	_print_belt
   598                           
   599                           ;main.c: 87:         } else {
   600  000CA0  EFF3  F005         	goto	l1676
   601  000CA4                     l1686:
   602                           
   603                           ;main.c: 88:             print_belt(0);
   604  000CA4  0E00               	movlw	0
   605  000CA6  EC9C  F009         	call	_print_belt
   606  000CAA                     
   607                           ;main.c: 89:             if (tensao <= 1) {
   608  000CAA  0E00               	movlw	0
   609  000CAC  6E01               	movwf	___flge@ff1^0,c
   610  000CAE  0E00               	movlw	0
   611  000CB0  6E02               	movwf	(___flge@ff1+1)^0,c
   612  000CB2  0E80               	movlw	128
   613  000CB4  6E03               	movwf	(___flge@ff1+2)^0,c
   614  000CB6  0E3F               	movlw	63
   615  000CB8  6E04               	movwf	(___flge@ff1+3)^0,c
   616  000CBA  C030  F005         	movff	_tensao,___flge@ff2
   617  000CBE  C031  F006         	movff	_tensao+1,___flge@ff2+1
   618  000CC2  C032  F007         	movff	_tensao+2,___flge@ff2+2
   619  000CC6  C033  F008         	movff	_tensao+3,___flge@ff2+3
   620  000CCA  ECEB  F007         	call	___flge	;wreg free
   621  000CCE  A0D8               	btfss	status,0,c
   622  000CD0  EF6C  F006         	goto	u1201
   623  000CD4  EF6E  F006         	goto	u1200
   624  000CD8                     u1201:
   625  000CD8  EF7B  F006         	goto	l1692
   626  000CDC                     u1200:
   627  000CDC                     
   628                           ;main.c: 90:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   629  000CDC  0E06               	movlw	6
   630  000CDE  6E2F               	movwf	(??_main+1)^0,c
   631  000CE0  0E13               	movlw	19
   632  000CE2  6E2E               	movwf	??_main^0,c
   633  000CE4  0EAE               	movlw	174
   634  000CE6                     u1257:
   635  000CE6  2EE8               	decfsz	wreg,f,c
   636  000CE8  D7FE               	bra	u1257
   637  000CEA  2E2E               	decfsz	??_main^0,f,c
   638  000CEC  D7FC               	bra	u1257
   639  000CEE  2E2F               	decfsz	(??_main+1)^0,f,c
   640  000CF0  D7FA               	bra	u1257
   641                           
   642                           ;main.c: 91:             } else if (tensao <= 2) {
   643  000CF2  EFF3  F005         	goto	l1676
   644  000CF6                     l1692:
   645  000CF6  0E00               	movlw	0
   646  000CF8  6E01               	movwf	___flge@ff1^0,c
   647  000CFA  0E00               	movlw	0
   648  000CFC  6E02               	movwf	(___flge@ff1+1)^0,c
   649  000CFE  0E00               	movlw	0
   650  000D00  6E03               	movwf	(___flge@ff1+2)^0,c
   651  000D02  0E40               	movlw	64
   652  000D04  6E04               	movwf	(___flge@ff1+3)^0,c
   653  000D06  C030  F005         	movff	_tensao,___flge@ff2
   654  000D0A  C031  F006         	movff	_tensao+1,___flge@ff2+1
   655  000D0E  C032  F007         	movff	_tensao+2,___flge@ff2+2
   656  000D12  C033  F008         	movff	_tensao+3,___flge@ff2+3
   657  000D16  ECEB  F007         	call	___flge	;wreg free
   658  000D1A  A0D8               	btfss	status,0,c
   659  000D1C  EF92  F006         	goto	u1211
   660  000D20  EF94  F006         	goto	u1210
   661  000D24                     u1211:
   662  000D24  EFA1  F006         	goto	l1696
   663  000D28                     u1210:
   664  000D28                     
   665                           ;main.c: 92:                 _delay((unsigned long)((500)*(4000000/4000.0)));
   666  000D28  0E03               	movlw	3
   667  000D2A  6E2F               	movwf	(??_main+1)^0,c
   668  000D2C  0E8A               	movlw	138
   669  000D2E  6E2E               	movwf	??_main^0,c
   670  000D30  0E56               	movlw	86
   671  000D32                     u1267:
   672  000D32  2EE8               	decfsz	wreg,f,c
   673  000D34  D7FE               	bra	u1267
   674  000D36  2E2E               	decfsz	??_main^0,f,c
   675  000D38  D7FC               	bra	u1267
   676  000D3A  2E2F               	decfsz	(??_main+1)^0,f,c
   677  000D3C  D7FA               	bra	u1267
   678                           
   679                           ;main.c: 93:             } else if (tensao <= 3) {
   680  000D3E  EFF3  F005         	goto	l1676
   681  000D42                     l1696:
   682  000D42  0E00               	movlw	0
   683  000D44  6E01               	movwf	___flge@ff1^0,c
   684  000D46  0E00               	movlw	0
   685  000D48  6E02               	movwf	(___flge@ff1+1)^0,c
   686  000D4A  0E40               	movlw	64
   687  000D4C  6E03               	movwf	(___flge@ff1+2)^0,c
   688  000D4E  0E40               	movlw	64
   689  000D50  6E04               	movwf	(___flge@ff1+3)^0,c
   690  000D52  C030  F005         	movff	_tensao,___flge@ff2
   691  000D56  C031  F006         	movff	_tensao+1,___flge@ff2+1
   692  000D5A  C032  F007         	movff	_tensao+2,___flge@ff2+2
   693  000D5E  C033  F008         	movff	_tensao+3,___flge@ff2+3
   694  000D62  ECEB  F007         	call	___flge	;wreg free
   695  000D66  A0D8               	btfss	status,0,c
   696  000D68  EFB8  F006         	goto	u1221
   697  000D6C  EFBA  F006         	goto	u1220
   698  000D70                     u1221:
   699  000D70  EFC8  F006         	goto	l1700
   700  000D74                     u1220:
   701  000D74                     
   702                           ;main.c: 94:                 _delay((unsigned long)((252)*(4000000/4000.0)));
   703  000D74  0E02               	movlw	2
   704  000D76  6E2F               	movwf	(??_main+1)^0,c
   705  000D78  0E48               	movlw	72
   706  000D7A  6E2E               	movwf	??_main^0,c
   707  000D7C  0E42               	movlw	66
   708  000D7E                     u1277:
   709  000D7E  2EE8               	decfsz	wreg,f,c
   710  000D80  D7FE               	bra	u1277
   711  000D82  2E2E               	decfsz	??_main^0,f,c
   712  000D84  D7FC               	bra	u1277
   713  000D86  2E2F               	decfsz	(??_main+1)^0,f,c
   714  000D88  D7FA               	bra	u1277
   715  000D8A  D000               	nop2	
   716                           
   717                           ;main.c: 95:             } else if (tensao <= 4) {
   718  000D8C  EFF3  F005         	goto	l1676
   719  000D90                     l1700:
   720  000D90  0E00               	movlw	0
   721  000D92  6E01               	movwf	___flge@ff1^0,c
   722  000D94  0E00               	movlw	0
   723  000D96  6E02               	movwf	(___flge@ff1+1)^0,c
   724  000D98  0E80               	movlw	128
   725  000D9A  6E03               	movwf	(___flge@ff1+2)^0,c
   726  000D9C  0E40               	movlw	64
   727  000D9E  6E04               	movwf	(___flge@ff1+3)^0,c
   728  000DA0  C030  F005         	movff	_tensao,___flge@ff2
   729  000DA4  C031  F006         	movff	_tensao+1,___flge@ff2+1
   730  000DA8  C032  F007         	movff	_tensao+2,___flge@ff2+2
   731  000DAC  C033  F008         	movff	_tensao+3,___flge@ff2+3
   732  000DB0  ECEB  F007         	call	___flge	;wreg free
   733  000DB4  A0D8               	btfss	status,0,c
   734  000DB6  EFDF  F006         	goto	u1231
   735  000DBA  EFE1  F006         	goto	u1230
   736  000DBE                     u1231:
   737  000DBE  EFEA  F006         	goto	l1704
   738  000DC2                     u1230:
   739  000DC2                     
   740                           ;main.c: 96:                 _delay((unsigned long)((126)*(4000000/4000.0)));
   741  000DC2  0EA4               	movlw	164
   742  000DC4  6E2E               	movwf	??_main^0,c
   743  000DC6  0EA2               	movlw	162
   744  000DC8                     u1287:
   745  000DC8  2EE8               	decfsz	wreg,f,c
   746  000DCA  D7FE               	bra	u1287
   747  000DCC  2E2E               	decfsz	??_main^0,f,c
   748  000DCE  D7FC               	bra	u1287
   749                           
   750                           ;main.c: 97:             } else if (tensao <= 5) {
   751  000DD0  EFF3  F005         	goto	l1676
   752  000DD4                     l1704:
   753  000DD4  0E00               	movlw	0
   754  000DD6  6E01               	movwf	___flge@ff1^0,c
   755  000DD8  0E00               	movlw	0
   756  000DDA  6E02               	movwf	(___flge@ff1+1)^0,c
   757  000DDC  0EA0               	movlw	160
   758  000DDE  6E03               	movwf	(___flge@ff1+2)^0,c
   759  000DE0  0E40               	movlw	64
   760  000DE2  6E04               	movwf	(___flge@ff1+3)^0,c
   761  000DE4  C030  F005         	movff	_tensao,___flge@ff2
   762  000DE8  C031  F006         	movff	_tensao+1,___flge@ff2+1
   763  000DEC  C032  F007         	movff	_tensao+2,___flge@ff2+2
   764  000DF0  C033  F008         	movff	_tensao+3,___flge@ff2+3
   765  000DF4  ECEB  F007         	call	___flge	;wreg free
   766  000DF8  A0D8               	btfss	status,0,c
   767  000DFA  EF01  F007         	goto	u1241
   768  000DFE  EF03  F007         	goto	u1240
   769  000E02                     u1241:
   770  000E02  EF0D  F007         	goto	l107
   771  000E06                     u1240:
   772  000E06                     
   773                           ;main.c: 98:                 _delay((unsigned long)((63)*(4000000/4000.0)));
   774  000E06  0E52               	movlw	82
   775  000E08  6E2E               	movwf	??_main^0,c
   776  000E0A  0ED0               	movlw	208
   777  000E0C                     u1297:
   778  000E0C  2EE8               	decfsz	wreg,f,c
   779  000E0E  D7FE               	bra	u1297
   780  000E10  2E2E               	decfsz	??_main^0,f,c
   781  000E12  D7FC               	bra	u1297
   782  000E14  D000               	nop2	
   783  000E16  EFF3  F005         	goto	l1676
   784  000E1A                     l107:
   785  000E1A  EFF3  F005         	goto	l1676
   786  000E1E  EF00  F000         	goto	start
   787  000E22                     __end_of_main:
   788                           	callstack 0
   789                           
   790 ;; *************** function _setup_ADC *****************
   791 ;; Defined at:
   792 ;;		line 45 in file "main.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         0       0       0       0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text1
   820  001678                     __ptext1:
   821                           	callstack 0
   822  001678                     _setup_ADC:
   823                           	callstack 30
   824  001678                     
   825                           ;main.c: 46:     TRISA = 0b00000001;
   826  001678  0E01               	movlw	1
   827  00167A  6E92               	movwf	146,c	;volatile
   828                           
   829                           ;main.c: 47:     ADCON2bits.ADCS = 0b100;
   830  00167C  50C0               	movf	192,w,c	;volatile
   831  00167E  0BF8               	andlw	-8
   832  001680  0904               	iorlw	4
   833  001682  6EC0               	movwf	192,c	;volatile
   834                           
   835                           ;main.c: 48:     ADCON2bits.ACQT = 0b010;
   836  001684  50C0               	movf	192,w,c	;volatile
   837  001686  0BC7               	andlw	-57
   838  001688  0910               	iorlw	16
   839  00168A  6EC0               	movwf	192,c	;volatile
   840  00168C                     
   841                           ;main.c: 49:     ADCON2bits.ADFM = 0b1;
   842  00168C  8EC0               	bsf	192,7,c	;volatile
   843                           
   844                           ;main.c: 50:     ADCON1bits.VCFG = 0b00;
   845  00168E  0ECF               	movlw	-49
   846  001690  16C1               	andwf	193,f,c	;volatile
   847                           
   848                           ;main.c: 51:     ADCON0bits.CHS = 0b0000;
   849  001692  0EC3               	movlw	-61
   850  001694  16C2               	andwf	194,f,c	;volatile
   851  001696                     
   852                           ;main.c: 52:     ADCON0bits.ADON = 1;
   853  001696  80C2               	bsf	194,0,c	;volatile
   854  001698  0012               	return		;funcret
   855  00169A                     __end_of_setup_ADC:
   856                           	callstack 0
   857                           
   858 ;; *************** function _print_belt *****************
   859 ;; Defined at:
   860 ;;		line 55 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  stopped         1    wreg     _Bool 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  stopped         1   35[COMRAM] _Bool 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   874 ;;      Params:         0       0       0       0       0       0       0       0       0
   875 ;;      Locals:         1       0       0       0       0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0       0       0
   877 ;;      Totals:         1       0       0       0       0       0       0       0       0
   878 ;;Total ram usage:        1 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 5
   881 ;; This function calls:
   882 ;;		_Lcd_Set_Cursor
   883 ;;		_Lcd_Write_String
   884 ;;		_sprintf
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text2
   891  001338                     __ptext2:
   892                           	callstack 0
   893  001338                     _print_belt:
   894                           	callstack 25
   895                           
   896                           ;incstack = 0
   897                           ;print_belt@stopped stored from wreg
   898  001338  6E24               	movwf	print_belt@stopped^0,c
   899  00133A                     
   900                           ;main.c: 56:     Lcd_Set_Cursor(1, 1);
   901  00133A  0E01               	movlw	1
   902  00133C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   903  00133E  0E01               	movlw	1
   904  001340  EC17  F00A         	call	_Lcd_Set_Cursor
   905  001344                     
   906                           ;main.c: 57:     Lcd_Write_String(linha1);
   907  001344  0E4C               	movlw	low _linha1
   908  001346  6E05               	movwf	Lcd_Write_String@a^0,c
   909  001348  0E00               	movlw	high _linha1
   910  00134A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   911  00134C  ECCE  F00A         	call	_Lcd_Write_String	;wreg free
   912  001350                     
   913                           ;main.c: 58:     Lcd_Set_Cursor(2, 1);
   914  001350  0E01               	movlw	1
   915  001352  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   916  001354  0E02               	movlw	2
   917  001356  EC17  F00A         	call	_Lcd_Set_Cursor
   918  00135A                     
   919                           ;main.c: 59:     sprintf(linha2, "----------------");
   920  00135A  0E3C               	movlw	low _linha2
   921  00135C  6E18               	movwf	sprintf@s^0,c
   922  00135E  0E00               	movlw	high _linha2
   923  001360  6E19               	movwf	(sprintf@s+1)^0,c
   924  001362  0E12               	movlw	low STR_1
   925  001364  6E1A               	movwf	sprintf@fmt^0,c
   926  001366  0E08               	movlw	high STR_1
   927  001368  6E1B               	movwf	(sprintf@fmt+1)^0,c
   928  00136A  ECA7  F00A         	call	_sprintf	;wreg free
   929  00136E                     
   930                           ;main.c: 60:     if (!stopped) {
   931  00136E  5024               	movf	print_belt@stopped^0,w,c
   932  001370  A4D8               	btfss	status,2,c
   933  001372  EFBD  F009         	goto	u751
   934  001376  EFBF  F009         	goto	u750
   935  00137A                     u751:
   936  00137A  EFD7  F009         	goto	l1438
   937  00137E                     u750:
   938  00137E                     
   939                           ;main.c: 61:         linha2[belt_position - 1] = 62;
   940  00137E  0E3B               	movlw	low (_linha2+65535)
   941  001380  245E               	addwf	_belt_position^0,w,c
   942  001382  6ED9               	movwf	fsr2l,c
   943  001384  0E00               	movlw	high (_linha2+65535)
   944  001386  205F               	addwfc	(_belt_position+1)^0,w,c
   945  001388  6EDA               	movwf	fsr2h,c
   946  00138A  0E3E               	movlw	62
   947  00138C  6EDF               	movwf	indf2,c
   948  00138E                     
   949                           ;main.c: 62:         if (belt_position == 16) {
   950  00138E  0E10               	movlw	16
   951  001390  185E               	xorwf	_belt_position^0,w,c
   952  001392  105F               	iorwf	(_belt_position+1)^0,w,c
   953  001394  A4D8               	btfss	status,2,c
   954  001396  EFCF  F009         	goto	u761
   955  00139A  EFD1  F009         	goto	u760
   956  00139E                     u761:
   957  00139E  EFD5  F009         	goto	l1436
   958  0013A2                     u760:
   959  0013A2                     
   960                           ;main.c: 63:             belt_position = 0;
   961  0013A2  0E00               	movlw	0
   962  0013A4  6E5F               	movwf	(_belt_position+1)^0,c
   963  0013A6  0E00               	movlw	0
   964  0013A8  6E5E               	movwf	_belt_position^0,c
   965  0013AA                     l1436:
   966                           
   967                           ;main.c: 65:         belt_position++;
   968  0013AA  4A5E               	infsnz	_belt_position^0,f,c
   969  0013AC  2A5F               	incf	(_belt_position+1)^0,f,c
   970  0013AE                     l1438:
   971                           
   972                           ;main.c: 67:     Lcd_Write_String(linha2);
   973  0013AE  0E3C               	movlw	low _linha2
   974  0013B0  6E05               	movwf	Lcd_Write_String@a^0,c
   975  0013B2  0E00               	movlw	high _linha2
   976  0013B4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   977  0013B6  ECCE  F00A         	call	_Lcd_Write_String	;wreg free
   978  0013BA  0012               	return		;funcret
   979  0013BC                     __end_of_print_belt:
   980                           	callstack 0
   981                           
   982 ;; *************** function _sprintf *****************
   983 ;; Defined at:
   984 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  s               2   23[COMRAM] PTR unsigned char 
   987 ;;		 -> linha2(16), linha1(16), 
   988 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
   989 ;;		 -> STR_2(17), STR_1(17), 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  f               6   29[COMRAM] struct _IO_FILE
   992 ;;  ap              2   27[COMRAM] PTR void [1]
   993 ;;		 -> ?_sprintf(2), 
   994 ;;  ret             2    0        int 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  2   23[COMRAM] int 
   997 ;; Registers used:
   998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1004 ;;      Params:         4       0       0       0       0       0       0       0       0
  1005 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1007 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1008 ;;Total ram usage:       12 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 4
  1011 ;; This function calls:
  1012 ;;		_vfprintf
  1013 ;; This function is called by:
  1014 ;;		_print_belt
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text3
  1020  00154E                     __ptext3:
  1021                           	callstack 0
  1022  00154E                     _sprintf:
  1023                           	callstack 26
  1024  00154E  0E1C               	movlw	low (?_sprintf+4)
  1025  001550  6E1C               	movwf	sprintf@ap^0,c
  1026  001552  0E00               	movlw	high (?_sprintf+4)
  1027  001554  6E1D               	movwf	(sprintf@ap+1)^0,c
  1028  001556  C018  F01E         	movff	sprintf@s,sprintf@f
  1029  00155A  C019  F01F         	movff	sprintf@s+1,sprintf@f+1
  1030  00155E  0E00               	movlw	0
  1031  001560  6E21               	movwf	(sprintf@f+3)^0,c
  1032  001562  0E00               	movlw	0
  1033  001564  6E20               	movwf	(sprintf@f+2)^0,c
  1034  001566  0E00               	movlw	0
  1035  001568  6E23               	movwf	(sprintf@f+5)^0,c
  1036  00156A  0E00               	movlw	0
  1037  00156C  6E22               	movwf	(sprintf@f+4)^0,c
  1038  00156E  0E1E               	movlw	low sprintf@f
  1039  001570  6E10               	movwf	vfprintf@fp^0,c
  1040  001572  0E00               	movlw	high sprintf@f
  1041  001574  6E11               	movwf	(vfprintf@fp+1)^0,c
  1042  001576  C01A  F012         	movff	sprintf@fmt,vfprintf@fmt
  1043  00157A  C01B  F013         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1044  00157E  0E1C               	movlw	low sprintf@ap
  1045  001580  6E14               	movwf	vfprintf@ap^0,c
  1046  001582  0E00               	movlw	high sprintf@ap
  1047  001584  6E15               	movwf	(vfprintf@ap+1)^0,c
  1048  001586  EC4A  F00A         	call	_vfprintf	;wreg free
  1049  00158A  5020               	movf	(sprintf@f+2)^0,w,c
  1050  00158C  2418               	addwf	sprintf@s^0,w,c
  1051  00158E  6ED9               	movwf	fsr2l,c
  1052  001590  5021               	movf	(sprintf@f+3)^0,w,c
  1053  001592  2019               	addwfc	(sprintf@s+1)^0,w,c
  1054  001594  6EDA               	movwf	fsr2h,c
  1055  001596  0E00               	movlw	0
  1056  001598  6EDF               	movwf	indf2,c
  1057  00159A  0012               	return		;funcret
  1058  00159C                     __end_of_sprintf:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _vfprintf *****************
  1062 ;; Defined at:
  1063 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1066 ;;		 -> sprintf@f(6), 
  1067 ;;  fmt             2   17[COMRAM] PTR const unsigned char 
  1068 ;;		 -> STR_2(17), STR_1(17), 
  1069 ;;  ap              2   19[COMRAM] PTR PTR void 
  1070 ;;		 -> sprintf@ap(2), 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  cfmt            2   21[COMRAM] PTR unsigned char 
  1073 ;;		 -> STR_2(17), STR_1(17), 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2   15[COMRAM] int 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1083 ;;      Params:         6       0       0       0       0       0       0       0       0
  1084 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1086 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1087 ;;Total ram usage:        8 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 3
  1090 ;; This function calls:
  1091 ;;		_vfpfcnvrt
  1092 ;; This function is called by:
  1093 ;;		_sprintf
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text4
  1098  001494                     __ptext4:
  1099                           	callstack 0
  1100  001494                     _vfprintf:
  1101                           	callstack 26
  1102  001494                     
  1103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1104  001494  C012  F016         	movff	vfprintf@fmt,vfprintf@cfmt
  1105  001498  C013  F017         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1106  00149C                     
  1107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1108  00149C  0E00               	movlw	0
  1109  00149E  6E35               	movwf	(_nout+1)^0,c
  1110  0014A0  0E00               	movlw	0
  1111  0014A2  6E34               	movwf	_nout^0,c
  1112                           
  1113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1114  0014A4  EF66  F00A         	goto	l1382
  1115  0014A8                     l1380:
  1116                           
  1117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1118  0014A8  C010  F00A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1119  0014AC  C011  F00B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1120  0014B0  0E16               	movlw	low vfprintf@cfmt
  1121  0014B2  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1122  0014B4  0E00               	movlw	high vfprintf@cfmt
  1123  0014B6  6E0D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1124  0014B8  C014  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1125  0014BC  C015  F00F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1126  0014C0  EC6D  F008         	call	_vfpfcnvrt	;wreg free
  1127  0014C4  500A               	movf	?_vfpfcnvrt^0,w,c
  1128  0014C6  2634               	addwf	_nout^0,f,c
  1129  0014C8  500B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1130  0014CA  2235               	addwfc	(_nout+1)^0,f,c
  1131  0014CC                     l1382:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1134  0014CC  C016  FFF6         	movff	vfprintf@cfmt,tblptrl
  1135  0014D0  C017  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1136  0014D4                     	if	0	;tblptru may be non-zero
  1137  0014D4                     	endif
  1138  0014D4                     	if	0	;tblptru may be non-zero
  1139  0014D4                     	endif
  1140  0014D4  0008               	tblrd		*
  1141  0014D6  50F5               	movf	tablat,w,c
  1142  0014D8  0900               	iorlw	0
  1143  0014DA  A4D8               	btfss	status,2,c
  1144  0014DC  EF72  F00A         	goto	u711
  1145  0014E0  EF74  F00A         	goto	u710
  1146  0014E4                     u711:
  1147  0014E4  EF54  F00A         	goto	l1380
  1148  0014E8                     u710:
  1149  0014E8                     
  1150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1151  0014E8  C034  F010         	movff	_nout,?_vfprintf
  1152  0014EC  C035  F011         	movff	_nout+1,?_vfprintf+1
  1153  0014F0  0012               	return		;funcret
  1154  0014F2                     __end_of_vfprintf:
  1155                           	callstack 0
  1156                           
  1157 ;; *************** function _vfpfcnvrt *****************
  1158 ;; Defined at:
  1159 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  1162 ;;		 -> sprintf@f(6), 
  1163 ;;  fmt             2   11[COMRAM] PTR PTR unsigned char 
  1164 ;;		 -> vfprintf@cfmt(2), 
  1165 ;;  ap              2   13[COMRAM] PTR PTR void 
  1166 ;;		 -> sprintf@ap(2), 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  llu             8    0        unsigned long long 
  1169 ;;  ll              8    0        long long 
  1170 ;;  f               4    0        long long 
  1171 ;;  vp              3    0        PTR void 
  1172 ;;  ct              3    0        unsigned char [3]
  1173 ;;  cp              3    0        PTR unsigned char 
  1174 ;;  i               2    0        int 
  1175 ;;  done            2    0        int 
  1176 ;;  c               1    0        unsigned char 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  2    9[COMRAM] int 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1186 ;;      Params:         6       0       0       0       0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1189 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1190 ;;Total ram usage:        6 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 2
  1193 ;; This function calls:
  1194 ;;		_fputc
  1195 ;; This function is called by:
  1196 ;;		_vfprintf
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text5
  1201  0010DA                     __ptext5:
  1202                           	callstack 0
  1203  0010DA                     _vfpfcnvrt:
  1204                           	callstack 26
  1205  0010DA                     
  1206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1207  0010DA  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1208  0010DE  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1209  0010E2  CFDE FFF6          	movff	postinc2,tblptrl
  1210  0010E6  CFDD FFF7          	movff	postdec2,tblptrh
  1211  0010EA                     	if	0	;tblptru may be non-zero
  1212  0010EA                     	endif
  1213  0010EA                     	if	0	;tblptru may be non-zero
  1214  0010EA                     	endif
  1215  0010EA  0008               	tblrd		*
  1216  0010EC  50F5               	movf	tablat,w,c
  1217  0010EE  0A25               	xorlw	37
  1218  0010F0  A4D8               	btfss	status,2,c
  1219  0010F2  EF7D  F008         	goto	u691
  1220  0010F6  EF7F  F008         	goto	u690
  1221  0010FA                     u691:
  1222  0010FA  EFC6  F008         	goto	l1368
  1223  0010FE                     u690:
  1224  0010FE                     
  1225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1226  0010FE  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1227  001102  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1228  001106  2ADE               	incf	postinc2,f,c
  1229  001108  0E00               	movlw	0
  1230  00110A  22DD               	addwfc	postdec2,f,c
  1231  00110C                     
  1232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1233  00110C  0E00               	movlw	0
  1234  00110E  6E37               	movwf	(_width+1)^0,c
  1235  001110  0E00               	movlw	0
  1236  001112  6E36               	movwf	_width^0,c
  1237  001114  C036  F03A         	movff	_width,_flags
  1238  001118  C037  F03B         	movff	_width+1,_flags+1
  1239  00111C                     
  1240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1241  00111C  6838               	setf	_prec^0,c
  1242  00111E  6839               	setf	(_prec+1)^0,c
  1243  001120                     
  1244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1245  001120  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1246  001124  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1247  001128  CFDE FFF6          	movff	postinc2,tblptrl
  1248  00112C  CFDD FFF7          	movff	postdec2,tblptrh
  1249  001130                     	if	0	;tblptru may be non-zero
  1250  001130                     	endif
  1251  001130                     	if	0	;tblptru may be non-zero
  1252  001130                     	endif
  1253  001130  0008               	tblrd		*
  1254  001132  50F5               	movf	tablat,w,c
  1255  001134  0A25               	xorlw	37
  1256  001136  A4D8               	btfss	status,2,c
  1257  001138  EFA0  F008         	goto	u701
  1258  00113C  EFA2  F008         	goto	u700
  1259  001140                     u701:
  1260  001140  EFB9  F008         	goto	l1362
  1261  001144                     u700:
  1262  001144                     
  1263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1264  001144  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1265  001148  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1266  00114C  2ADE               	incf	postinc2,f,c
  1267  00114E  0E00               	movlw	0
  1268  001150  22DD               	addwfc	postdec2,f,c
  1269  001152                     
  1270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1271  001152  0E00               	movlw	0
  1272  001154  6E02               	movwf	(fputc@c+1)^0,c
  1273  001156  0E25               	movlw	37
  1274  001158  6E01               	movwf	fputc@c^0,c
  1275  00115A  C00A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1276  00115E  C00B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1277  001162  ECE2  F008         	call	_fputc	;wreg free
  1278  001166                     l1358:
  1279                           
  1280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1281  001166  0E00               	movlw	0
  1282  001168  6E0B               	movwf	(?_vfpfcnvrt+1)^0,c
  1283  00116A  0E01               	movlw	1
  1284  00116C  6E0A               	movwf	?_vfpfcnvrt^0,c
  1285  00116E  EFE1  F008         	goto	l829
  1286  001172                     l1362:
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1289  001172  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1290  001176  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1291  00117A  2ADE               	incf	postinc2,f,c
  1292  00117C  0E00               	movlw	0
  1293  00117E  22DD               	addwfc	postdec2,f,c
  1294  001180                     
  1295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1296  001180  0E00               	movlw	0
  1297  001182  6E0B               	movwf	(?_vfpfcnvrt+1)^0,c
  1298  001184  0E00               	movlw	0
  1299  001186  6E0A               	movwf	?_vfpfcnvrt^0,c
  1300  001188  EFE1  F008         	goto	l829
  1301  00118C                     l1368:
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1304  00118C  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1305  001190  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1306  001194  CFDE FFF6          	movff	postinc2,tblptrl
  1307  001198  CFDD FFF7          	movff	postdec2,tblptrh
  1308  00119C                     	if	0	;tblptru may be non-zero
  1309  00119C                     	endif
  1310  00119C                     	if	0	;tblptru may be non-zero
  1311  00119C                     	endif
  1312  00119C  0008               	tblrd		*
  1313  00119E  50F5               	movf	tablat,w,c
  1314  0011A0  6E01               	movwf	fputc@c^0,c
  1315  0011A2  6A02               	clrf	(fputc@c+1)^0,c
  1316  0011A4  C00A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1317  0011A8  C00B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1318  0011AC  ECE2  F008         	call	_fputc	;wreg free
  1319  0011B0                     
  1320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1321  0011B0  C00C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1322  0011B4  C00D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1323  0011B8  2ADE               	incf	postinc2,f,c
  1324  0011BA  0E00               	movlw	0
  1325  0011BC  22DD               	addwfc	postdec2,f,c
  1326  0011BE  EFB3  F008         	goto	l1358
  1327  0011C2                     l829:
  1328  0011C2  0012               	return		;funcret
  1329  0011C4                     __end_of_vfpfcnvrt:
  1330                           	callstack 0
  1331                           
  1332 ;; *************** function _fputc *****************
  1333 ;; Defined at:
  1334 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  c               2    0[COMRAM] int 
  1337 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1338 ;;		 -> sprintf@f(6), 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  2    0[COMRAM] int 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1350 ;;      Params:         4       0       0       0       0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1352 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1353 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1354 ;;Total ram usage:        9 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; Hardware stack levels required when called: 1
  1357 ;; This function calls:
  1358 ;;		_putch
  1359 ;; This function is called by:
  1360 ;;		_vfpfcnvrt
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text6
  1365  0011C4                     __ptext6:
  1366                           	callstack 0
  1367  0011C4                     _fputc:
  1368                           	callstack 26
  1369  0011C4  5003               	movf	fputc@fp^0,w,c
  1370  0011C6  1004               	iorwf	(fputc@fp+1)^0,w,c
  1371  0011C8  B4D8               	btfsc	status,2,c
  1372  0011CA  EFE9  F008         	goto	u651
  1373  0011CE  EFEB  F008         	goto	u650
  1374  0011D2                     u651:
  1375  0011D2  EFF4  F008         	goto	l1334
  1376  0011D6                     u650:
  1377  0011D6  5003               	movf	fputc@fp^0,w,c
  1378  0011D8  1004               	iorwf	(fputc@fp+1)^0,w,c
  1379  0011DA  A4D8               	btfss	status,2,c
  1380  0011DC  EFF2  F008         	goto	u661
  1381  0011E0  EFF4  F008         	goto	u660
  1382  0011E4                     u661:
  1383  0011E4  EFF9  F008         	goto	l1336
  1384  0011E8                     u660:
  1385  0011E8                     l1334:
  1386  0011E8  5001               	movf	fputc@c^0,w,c
  1387  0011EA  EC5E  F00B         	call	_putch
  1388  0011EE  EF46  F009         	goto	l847
  1389  0011F2                     l1336:
  1390  0011F2  EE20 F004          	lfsr	2,4
  1391  0011F6  5003               	movf	fputc@fp^0,w,c
  1392  0011F8  26D9               	addwf	fsr2l,f,c
  1393  0011FA  5004               	movf	(fputc@fp+1)^0,w,c
  1394  0011FC  22DA               	addwfc	fsr2h,f,c
  1395  0011FE  50DE               	movf	postinc2,w,c
  1396  001200  10DE               	iorwf	postinc2,w,c
  1397  001202  B4D8               	btfsc	status,2,c
  1398  001204  EF06  F009         	goto	u671
  1399  001208  EF08  F009         	goto	u670
  1400  00120C                     u671:
  1401  00120C  EF23  F009         	goto	l1340
  1402  001210                     u670:
  1403  001210  EE20 F004          	lfsr	2,4
  1404  001214  5003               	movf	fputc@fp^0,w,c
  1405  001216  26D9               	addwf	fsr2l,f,c
  1406  001218  5004               	movf	(fputc@fp+1)^0,w,c
  1407  00121A  22DA               	addwfc	fsr2h,f,c
  1408  00121C  EE10 F002          	lfsr	1,2
  1409  001220  5003               	movf	fputc@fp^0,w,c
  1410  001222  26E1               	addwf	fsr1l,f,c
  1411  001224  5004               	movf	(fputc@fp+1)^0,w,c
  1412  001226  22E2               	addwfc	fsr1h,f,c
  1413  001228  50DE               	movf	postinc2,w,c
  1414  00122A  5CE6               	subwf	postinc1,w,c
  1415  00122C  50E6               	movf	postinc1,w,c
  1416  00122E  0A80               	xorlw	128
  1417  001230  6E09               	movwf	(??_fputc+4)^0,c
  1418  001232  50DE               	movf	postinc2,w,c
  1419  001234  0A80               	xorlw	128
  1420  001236  5809               	subwfb	(??_fputc+4)^0,w,c
  1421  001238  B0D8               	btfsc	status,0,c
  1422  00123A  EF21  F009         	goto	u681
  1423  00123E  EF23  F009         	goto	u680
  1424  001242                     u681:
  1425  001242  EF46  F009         	goto	l847
  1426  001246                     u680:
  1427  001246                     l1340:
  1428  001246  EE20 F002          	lfsr	2,2
  1429  00124A  5003               	movf	fputc@fp^0,w,c
  1430  00124C  26D9               	addwf	fsr2l,f,c
  1431  00124E  5004               	movf	(fputc@fp+1)^0,w,c
  1432  001250  22DA               	addwfc	fsr2h,f,c
  1433  001252  CFDE F005          	movff	postinc2,??_fputc
  1434  001256  CFDD F006          	movff	postdec2,??_fputc+1
  1435  00125A  C003  FFD9         	movff	fputc@fp,fsr2l
  1436  00125E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1437  001262  CFDE F007          	movff	postinc2,??_fputc+2
  1438  001266  CFDD F008          	movff	postdec2,??_fputc+3
  1439  00126A  5005               	movf	??_fputc^0,w,c
  1440  00126C  2407               	addwf	(??_fputc+2)^0,w,c
  1441  00126E  6ED9               	movwf	fsr2l,c
  1442  001270  5006               	movf	(??_fputc+1)^0,w,c
  1443  001272  2008               	addwfc	(??_fputc+3)^0,w,c
  1444  001274  6EDA               	movwf	fsr2h,c
  1445  001276  C001  FFDF         	movff	fputc@c,indf2
  1446  00127A  EE20 F002          	lfsr	2,2
  1447  00127E  5003               	movf	fputc@fp^0,w,c
  1448  001280  26D9               	addwf	fsr2l,f,c
  1449  001282  5004               	movf	(fputc@fp+1)^0,w,c
  1450  001284  22DA               	addwfc	fsr2h,f,c
  1451  001286  2ADE               	incf	postinc2,f,c
  1452  001288  0E00               	movlw	0
  1453  00128A  22DD               	addwfc	postdec2,f,c
  1454  00128C                     l847:
  1455  00128C  0012               	return		;funcret
  1456  00128E                     __end_of_fputc:
  1457                           	callstack 0
  1458                           
  1459 ;; *************** function _putch *****************
  1460 ;; Defined at:
  1461 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  c               1    wreg     unsigned char 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  c               1    0[COMRAM] unsigned char 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1475 ;;      Params:         0       0       0       0       0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1478 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used: 1
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_fputc
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text7
  1489  0016BC                     __ptext7:
  1490                           	callstack 0
  1491  0016BC                     _putch:
  1492                           	callstack 26
  1493  0016BC  0012               	return		;funcret
  1494  0016BE                     __end_of_putch:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _Lcd_Write_String *****************
  1498 ;; Defined at:
  1499 ;;		line 88 in file "./lcd.h"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  a               2    4[COMRAM] PTR unsigned char 
  1502 ;;		 -> linha2(16), linha1(16), 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  i               2    6[COMRAM] int 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1514 ;;      Params:         2       0       0       0       0       0       0       0       0
  1515 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1517 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1518 ;;Total ram usage:        4 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 2
  1521 ;; This function calls:
  1522 ;;		_Lcd_Write_Char
  1523 ;; This function is called by:
  1524 ;;		_print_belt
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text8
  1529  00159C                     __ptext8:
  1530                           	callstack 0
  1531  00159C                     _Lcd_Write_String:
  1532                           	callstack 27
  1533  00159C                     
  1534                           ;./lcd.h: 89:     int i;;./lcd.h: 90:     for (i = 0; a[i] != '\0'; i++)
  1535  00159C  0E00               	movlw	0
  1536  00159E  6E08               	movwf	(Lcd_Write_String@i+1)^0,c
  1537  0015A0  0E00               	movlw	0
  1538  0015A2  6E07               	movwf	Lcd_Write_String@i^0,c
  1539  0015A4  EFDF  F00A         	goto	l1406
  1540  0015A8                     l1402:
  1541                           
  1542                           ;./lcd.h: 91:         Lcd_Write_Char(a[i]);
  1543  0015A8  5007               	movf	Lcd_Write_String@i^0,w,c
  1544  0015AA  2405               	addwf	Lcd_Write_String@a^0,w,c
  1545  0015AC  6ED9               	movwf	fsr2l,c
  1546  0015AE  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  1547  0015B0  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  1548  0015B2  6EDA               	movwf	fsr2h,c
  1549  0015B4  50DF               	movf	indf2,w,c
  1550  0015B6  EC0D  F00B         	call	_Lcd_Write_Char
  1551  0015BA  4A07               	infsnz	Lcd_Write_String@i^0,f,c
  1552  0015BC  2A08               	incf	(Lcd_Write_String@i+1)^0,f,c
  1553  0015BE                     l1406:
  1554  0015BE  5007               	movf	Lcd_Write_String@i^0,w,c
  1555  0015C0  2405               	addwf	Lcd_Write_String@a^0,w,c
  1556  0015C2  6ED9               	movwf	fsr2l,c
  1557  0015C4  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  1558  0015C6  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  1559  0015C8  6EDA               	movwf	fsr2h,c
  1560  0015CA  50DF               	movf	indf2,w,c
  1561  0015CC  A4D8               	btfss	status,2,c
  1562  0015CE  EFEB  F00A         	goto	u741
  1563  0015D2  EFED  F00A         	goto	u740
  1564  0015D6                     u741:
  1565  0015D6  EFD4  F00A         	goto	l1402
  1566  0015DA                     u740:
  1567  0015DA  0012               	return		;funcret
  1568  0015DC                     __end_of_Lcd_Write_String:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function _Lcd_Write_Char *****************
  1572 ;; Defined at:
  1573 ;;		line 73 in file "./lcd.h"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  a               1    wreg     unsigned char 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  a               1    3[COMRAM] unsigned char 
  1578 ;;  y               1    2[COMRAM] unsigned char 
  1579 ;;  temp            1    1[COMRAM] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0
  1590 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1592 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1593 ;;Total ram usage:        3 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 1
  1596 ;; This function calls:
  1597 ;;		_Lcd_Port
  1598 ;; This function is called by:
  1599 ;;		_Lcd_Write_String
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text9
  1604  00161A                     __ptext9:
  1605                           	callstack 0
  1606  00161A                     _Lcd_Write_Char:
  1607                           	callstack 27
  1608                           
  1609                           ;incstack = 0
  1610                           ;Lcd_Write_Char@a stored from wreg
  1611  00161A  6E04               	movwf	Lcd_Write_Char@a^0,c
  1612  00161C                     
  1613                           ;./lcd.h: 74:     char temp, y;;./lcd.h: 75:     temp = a & 0x0F;
  1614  00161C  5004               	movf	Lcd_Write_Char@a^0,w,c
  1615  00161E  0B0F               	andlw	15
  1616  001620  6E02               	movwf	Lcd_Write_Char@temp^0,c
  1617                           
  1618                           ;./lcd.h: 76:     y = a & 0xF0;
  1619  001622  5004               	movf	Lcd_Write_Char@a^0,w,c
  1620  001624  0BF0               	andlw	240
  1621  001626  6E03               	movwf	Lcd_Write_Char@y^0,c
  1622  001628                     
  1623                           ;./lcd.h: 77:     LATE0 = 1;
  1624  001628  808D               	bsf	3981,0,c	;volatile
  1625  00162A                     
  1626                           ;./lcd.h: 78:     Lcd_Port(y >> 4);
  1627  00162A  3803               	swapf	Lcd_Write_Char@y^0,w,c
  1628  00162C  0B0F               	andlw	15
  1629  00162E  EC79  F00A         	call	_Lcd_Port
  1630  001632                     
  1631                           ;./lcd.h: 79:     LATE1 = 1;
  1632  001632  828D               	bsf	3981,1,c	;volatile
  1633  001634                     
  1634                           ;./lcd.h: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1635  001634  0E0D               	movlw	13
  1636  001636                     u1307:
  1637  001636  2EE8               	decfsz	wreg,f,c
  1638  001638  D7FE               	bra	u1307
  1639  00163A  F000               	nop	
  1640  00163C                     
  1641                           ;./lcd.h: 81:     LATE1 = 0;
  1642  00163C  928D               	bcf	3981,1,c	;volatile
  1643  00163E                     
  1644                           ;./lcd.h: 82:     Lcd_Port(temp);
  1645  00163E  5002               	movf	Lcd_Write_Char@temp^0,w,c
  1646  001640  EC79  F00A         	call	_Lcd_Port
  1647  001644                     
  1648                           ;./lcd.h: 83:     LATE1 = 1;
  1649  001644  828D               	bsf	3981,1,c	;volatile
  1650  001646                     
  1651                           ;./lcd.h: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1652  001646  0E0D               	movlw	13
  1653  001648                     u1317:
  1654  001648  2EE8               	decfsz	wreg,f,c
  1655  00164A  D7FE               	bra	u1317
  1656  00164C  F000               	nop	
  1657  00164E                     
  1658                           ;./lcd.h: 85:     LATE1 = 0;
  1659  00164E  928D               	bcf	3981,1,c	;volatile
  1660  001650  0012               	return		;funcret
  1661  001652                     __end_of_Lcd_Write_Char:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _Lcd_Set_Cursor *****************
  1665 ;; Defined at:
  1666 ;;		line 38 in file "./lcd.h"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  a               1    wreg     unsigned char 
  1669 ;;  b               1    3[COMRAM] unsigned char 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  a               1    4[COMRAM] unsigned char 
  1672 ;;  temp            1    7[COMRAM] unsigned char 
  1673 ;;  y               1    6[COMRAM] unsigned char 
  1674 ;;  z               1    5[COMRAM] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1684 ;;      Params:         1       0       0       0       0       0       0       0       0
  1685 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1687 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1688 ;;Total ram usage:        5 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; Hardware stack levels required when called: 2
  1691 ;; This function calls:
  1692 ;;		_Lcd_Cmd
  1693 ;; This function is called by:
  1694 ;;		_print_belt
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text10
  1699  00142E                     __ptext10:
  1700                           	callstack 0
  1701  00142E                     _Lcd_Set_Cursor:
  1702                           	callstack 27
  1703                           
  1704                           ;incstack = 0
  1705                           ;Lcd_Set_Cursor@a stored from wreg
  1706  00142E  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  1707  001430                     
  1708                           ;./lcd.h: 39:     char temp, z, y;;./lcd.h: 40:     if (a == 1) {
  1709  001430  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  1710  001432  A4D8               	btfss	status,2,c
  1711  001434  EF1E  F00A         	goto	u721
  1712  001438  EF20  F00A         	goto	u720
  1713  00143C                     u721:
  1714  00143C  EF31  F00A         	goto	l1392
  1715  001440                     u720:
  1716  001440                     
  1717                           ;./lcd.h: 41:         temp = 0x80 + b - 1;
  1718  001440  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  1719  001442  0F7F               	addlw	127
  1720  001444  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  1721                           
  1722                           ;./lcd.h: 42:         z = temp >> 4;
  1723  001446  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  1724  001448  0B0F               	andlw	15
  1725  00144A  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  1726                           
  1727                           ;./lcd.h: 43:         y = temp & 0x0F;
  1728  00144C  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  1729  00144E  0B0F               	andlw	15
  1730  001450  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  1731  001452                     
  1732                           ;./lcd.h: 44:         Lcd_Cmd(z);
  1733  001452  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  1734  001454  EC4D  F00B         	call	_Lcd_Cmd
  1735  001458                     
  1736                           ;./lcd.h: 45:         Lcd_Cmd(y);
  1737  001458  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  1738  00145A  EC4D  F00B         	call	_Lcd_Cmd
  1739                           
  1740                           ;./lcd.h: 46:     } else if (a == 2) {
  1741  00145E  EF49  F00A         	goto	l57
  1742  001462                     l1392:
  1743  001462  0E02               	movlw	2
  1744  001464  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  1745  001466  A4D8               	btfss	status,2,c
  1746  001468  EF38  F00A         	goto	u731
  1747  00146C  EF3A  F00A         	goto	u730
  1748  001470                     u731:
  1749  001470  EF49  F00A         	goto	l57
  1750  001474                     u730:
  1751  001474                     
  1752                           ;./lcd.h: 47:         temp = 0xC0 + b - 1;
  1753  001474  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  1754  001476  0FBF               	addlw	191
  1755  001478  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  1756                           
  1757                           ;./lcd.h: 48:         z = temp >> 4;
  1758  00147A  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  1759  00147C  0B0F               	andlw	15
  1760  00147E  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  1761                           
  1762                           ;./lcd.h: 49:         y = temp & 0x0F;
  1763  001480  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  1764  001482  0B0F               	andlw	15
  1765  001484  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  1766  001486                     
  1767                           ;./lcd.h: 50:         Lcd_Cmd(z);
  1768  001486  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  1769  001488  EC4D  F00B         	call	_Lcd_Cmd
  1770  00148C                     
  1771                           ;./lcd.h: 51:         Lcd_Cmd(y);
  1772  00148C  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  1773  00148E  EC4D  F00B         	call	_Lcd_Cmd
  1774  001492                     l57:
  1775  001492  0012               	return		;funcret
  1776  001494                     __end_of_Lcd_Set_Cursor:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function ___xxtofl *****************
  1780 ;; Defined at:
  1781 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  sign            1    wreg     unsigned char 
  1784 ;;  val             4    6[COMRAM] long 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  sign            1   14[COMRAM] unsigned char 
  1787 ;;  arg             4   16[COMRAM] unsigned long 
  1788 ;;  exp             1   15[COMRAM] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  4    6[COMRAM] unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1798 ;;      Params:         4       0       0       0       0       0       0       0       0
  1799 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1800 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1801 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1802 ;;Total ram usage:       14 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text11
  1812  000E22                     __ptext11:
  1813                           	callstack 0
  1814  000E22                     ___xxtofl:
  1815                           	callstack 30
  1816                           
  1817                           ;incstack = 0
  1818                           ;___xxtofl@sign stored from wreg
  1819  000E22  6E0F               	movwf	___xxtofl@sign^0,c
  1820  000E24  500F               	movf	___xxtofl@sign^0,w,c
  1821  000E26  B4D8               	btfsc	status,2,c
  1822  000E28  EF18  F007         	goto	u1081
  1823  000E2C  EF1A  F007         	goto	u1080
  1824  000E30                     u1081:
  1825  000E30  EF3C  F007         	goto	l773
  1826  000E34                     u1080:
  1827  000E34  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  1828  000E36  EF21  F007         	goto	u1090
  1829  000E3A  EF1F  F007         	goto	u1091
  1830  000E3E                     u1091:
  1831  000E3E  EF3C  F007         	goto	l773
  1832  000E42                     u1090:
  1833  000E42  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  1834  000E46  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  1835  000E4A  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  1836  000E4E  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  1837  000E52  1E0B               	comf	??___xxtofl^0,f,c
  1838  000E54  1E0C               	comf	(??___xxtofl+1)^0,f,c
  1839  000E56  1E0D               	comf	(??___xxtofl+2)^0,f,c
  1840  000E58  1E0E               	comf	(??___xxtofl+3)^0,f,c
  1841  000E5A  2A0B               	incf	??___xxtofl^0,f,c
  1842  000E5C  0E00               	movlw	0
  1843  000E5E  220C               	addwfc	(??___xxtofl+1)^0,f,c
  1844  000E60  220D               	addwfc	(??___xxtofl+2)^0,f,c
  1845  000E62  220E               	addwfc	(??___xxtofl+3)^0,f,c
  1846  000E64  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  1847  000E68  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  1848  000E6C  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  1849  000E70  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  1850  000E74  EF44  F007         	goto	l1628
  1851  000E78                     l773:
  1852  000E78  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  1853  000E7C  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1854  000E80  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1855  000E84  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1856  000E88                     l1628:
  1857  000E88  5007               	movf	___xxtofl@val^0,w,c
  1858  000E8A  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  1859  000E8C  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  1860  000E8E  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  1861  000E90  A4D8               	btfss	status,2,c
  1862  000E92  EF4D  F007         	goto	u1101
  1863  000E96  EF4F  F007         	goto	u1100
  1864  000E9A                     u1101:
  1865  000E9A  EF59  F007         	goto	l1634
  1866  000E9E                     u1100:
  1867  000E9E  0E00               	movlw	0
  1868  000EA0  6E07               	movwf	?___xxtofl^0,c
  1869  000EA2  0E00               	movlw	0
  1870  000EA4  6E08               	movwf	(?___xxtofl+1)^0,c
  1871  000EA6  0E00               	movlw	0
  1872  000EA8  6E09               	movwf	(?___xxtofl+2)^0,c
  1873  000EAA  0E00               	movlw	0
  1874  000EAC  6E0A               	movwf	(?___xxtofl+3)^0,c
  1875  000EAE  EFEA  F007         	goto	l776
  1876  000EB2                     l1634:
  1877  000EB2  0E96               	movlw	150
  1878  000EB4  6E10               	movwf	___xxtofl@exp^0,c
  1879  000EB6  EF63  F007         	goto	l1638
  1880  000EBA                     l1636:
  1881  000EBA  2A10               	incf	___xxtofl@exp^0,f,c
  1882  000EBC  90D8               	bcf	status,0,c
  1883  000EBE  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  1884  000EC0  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  1885  000EC2  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  1886  000EC4  3211               	rrcf	___xxtofl@arg^0,f,c
  1887  000EC6                     l1638:
  1888  000EC6  0E00               	movlw	0
  1889  000EC8  1411               	andwf	___xxtofl@arg^0,w,c
  1890  000ECA  6E0B               	movwf	??___xxtofl^0,c
  1891  000ECC  0E00               	movlw	0
  1892  000ECE  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  1893  000ED0  6E0C               	movwf	(??___xxtofl+1)^0,c
  1894  000ED2  0E00               	movlw	0
  1895  000ED4  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  1896  000ED6  6E0D               	movwf	(??___xxtofl+2)^0,c
  1897  000ED8  0EFE               	movlw	254
  1898  000EDA  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  1899  000EDC  6E0E               	movwf	(??___xxtofl+3)^0,c
  1900  000EDE  500B               	movf	??___xxtofl^0,w,c
  1901  000EE0  100C               	iorwf	(??___xxtofl+1)^0,w,c
  1902  000EE2  100D               	iorwf	(??___xxtofl+2)^0,w,c
  1903  000EE4  100E               	iorwf	(??___xxtofl+3)^0,w,c
  1904  000EE6  A4D8               	btfss	status,2,c
  1905  000EE8  EF78  F007         	goto	u1111
  1906  000EEC  EF7A  F007         	goto	u1110
  1907  000EF0                     u1111:
  1908  000EF0  EF5D  F007         	goto	l1636
  1909  000EF4                     u1110:
  1910  000EF4  EF88  F007         	goto	l780
  1911  000EF8                     l1640:
  1912  000EF8  2A10               	incf	___xxtofl@exp^0,f,c
  1913  000EFA  0E01               	movlw	1
  1914  000EFC  2611               	addwf	___xxtofl@arg^0,f,c
  1915  000EFE  0E00               	movlw	0
  1916  000F00  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  1917  000F02  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  1918  000F04  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  1919  000F06  90D8               	bcf	status,0,c
  1920  000F08  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  1921  000F0A  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  1922  000F0C  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  1923  000F0E  3211               	rrcf	___xxtofl@arg^0,f,c
  1924  000F10                     l780:
  1925  000F10  0E00               	movlw	0
  1926  000F12  1411               	andwf	___xxtofl@arg^0,w,c
  1927  000F14  6E0B               	movwf	??___xxtofl^0,c
  1928  000F16  0E00               	movlw	0
  1929  000F18  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  1930  000F1A  6E0C               	movwf	(??___xxtofl+1)^0,c
  1931  000F1C  0E00               	movlw	0
  1932  000F1E  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  1933  000F20  6E0D               	movwf	(??___xxtofl+2)^0,c
  1934  000F22  0EFF               	movlw	255
  1935  000F24  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  1936  000F26  6E0E               	movwf	(??___xxtofl+3)^0,c
  1937  000F28  500B               	movf	??___xxtofl^0,w,c
  1938  000F2A  100C               	iorwf	(??___xxtofl+1)^0,w,c
  1939  000F2C  100D               	iorwf	(??___xxtofl+2)^0,w,c
  1940  000F2E  100E               	iorwf	(??___xxtofl+3)^0,w,c
  1941  000F30  A4D8               	btfss	status,2,c
  1942  000F32  EF9D  F007         	goto	u1121
  1943  000F36  EF9F  F007         	goto	u1120
  1944  000F3A                     u1121:
  1945  000F3A  EF7C  F007         	goto	l1640
  1946  000F3E                     u1120:
  1947  000F3E  EFA7  F007         	goto	l1648
  1948  000F42                     l1646:
  1949  000F42  0610               	decf	___xxtofl@exp^0,f,c
  1950  000F44  90D8               	bcf	status,0,c
  1951  000F46  3611               	rlcf	___xxtofl@arg^0,f,c
  1952  000F48  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  1953  000F4A  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  1954  000F4C  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  1955  000F4E                     l1648:
  1956  000F4E  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  1957  000F50  EFAC  F007         	goto	u1131
  1958  000F54  EFAE  F007         	goto	u1130
  1959  000F58                     u1131:
  1960  000F58  EFB6  F007         	goto	l787
  1961  000F5C                     u1130:
  1962  000F5C  0E02               	movlw	2
  1963  000F5E  6010               	cpfslt	___xxtofl@exp^0,c
  1964  000F60  EFB4  F007         	goto	u1141
  1965  000F64  EFB6  F007         	goto	u1140
  1966  000F68                     u1141:
  1967  000F68  EFA1  F007         	goto	l1646
  1968  000F6C                     u1140:
  1969  000F6C                     l787:
  1970  000F6C  B010               	btfsc	___xxtofl@exp^0,0,c
  1971  000F6E  EFBB  F007         	goto	u1151
  1972  000F72  EFBD  F007         	goto	u1150
  1973  000F76                     u1151:
  1974  000F76  EFBE  F007         	goto	l1654
  1975  000F7A                     u1150:
  1976  000F7A  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  1977  000F7C                     l1654:
  1978  000F7C  90D8               	bcf	status,0,c
  1979  000F7E  3210               	rrcf	___xxtofl@exp^0,f,c
  1980  000F80  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  1981  000F84  6A0C               	clrf	(??___xxtofl+1)^0,c
  1982  000F86  6A0D               	clrf	(??___xxtofl+2)^0,c
  1983  000F88  6A0E               	clrf	(??___xxtofl+3)^0,c
  1984  000F8A  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  1985  000F8E  6A0D               	clrf	(??___xxtofl+2)^0,c
  1986  000F90  6A0C               	clrf	(??___xxtofl+1)^0,c
  1987  000F92  6A0B               	clrf	??___xxtofl^0,c
  1988  000F94  500B               	movf	??___xxtofl^0,w,c
  1989  000F96  1211               	iorwf	___xxtofl@arg^0,f,c
  1990  000F98  500C               	movf	(??___xxtofl+1)^0,w,c
  1991  000F9A  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  1992  000F9C  500D               	movf	(??___xxtofl+2)^0,w,c
  1993  000F9E  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  1994  000FA0  500E               	movf	(??___xxtofl+3)^0,w,c
  1995  000FA2  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  1996  000FA4  500F               	movf	___xxtofl@sign^0,w,c
  1997  000FA6  B4D8               	btfsc	status,2,c
  1998  000FA8  EFD8  F007         	goto	u1161
  1999  000FAC  EFDA  F007         	goto	u1160
  2000  000FB0                     u1161:
  2001  000FB0  EFE2  F007         	goto	l1664
  2002  000FB4                     u1160:
  2003  000FB4  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  2004  000FB6  EFE1  F007         	goto	u1170
  2005  000FBA  EFDF  F007         	goto	u1171
  2006  000FBE                     u1171:
  2007  000FBE  EFE2  F007         	goto	l1664
  2008  000FC2                     u1170:
  2009  000FC2  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  2010  000FC4                     l1664:
  2011  000FC4  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  2012  000FC8  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  2013  000FCC  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  2014  000FD0  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  2015  000FD4                     l776:
  2016  000FD4  0012               	return		;funcret
  2017  000FD6                     __end_of___xxtofl:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function ___wmul *****************
  2021 ;; Defined at:
  2022 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  multiplier      2    0[COMRAM] unsigned int 
  2025 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  product         2    4[COMRAM] unsigned int 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  2    0[COMRAM] unsigned int 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0, prodl, prodh
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2037 ;;      Params:         4       0       0       0       0       0       0       0       0
  2038 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2040 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2041 ;;Total ram usage:        6 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text12
  2051  001652                     __ptext12:
  2052                           	callstack 0
  2053  001652                     ___wmul:
  2054                           	callstack 30
  2055  001652  5001               	movf	___wmul@multiplier^0,w,c
  2056  001654  0203               	mulwf	___wmul@multiplicand^0,c
  2057  001656  CFF3 F005          	movff	prodl,___wmul@product
  2058  00165A  CFF4 F006          	movff	prodh,___wmul@product+1
  2059  00165E  5001               	movf	___wmul@multiplier^0,w,c
  2060  001660  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2061  001662  50F3               	movf	243,w,c
  2062  001664  2606               	addwf	(___wmul@product+1)^0,f,c
  2063  001666  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2064  001668  0203               	mulwf	___wmul@multiplicand^0,c
  2065  00166A  50F3               	movf	243,w,c
  2066  00166C  2606               	addwf	(___wmul@product+1)^0,f,c
  2067  00166E  C005  F001         	movff	___wmul@product,?___wmul
  2068  001672  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2069  001676  0012               	return		;funcret
  2070  001678                     __end_of___wmul:
  2071                           	callstack 0
  2072                           
  2073 ;; *************** function ___flge *****************
  2074 ;; Defined at:
  2075 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  ff1             4    0[COMRAM] unsigned int 
  2078 ;;  ff2             4    4[COMRAM] unsigned int 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;		None               void
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2090 ;;      Params:         8       0       0       0       0       0       0       0       0
  2091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2092 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2093 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2094 ;;Total ram usage:       12 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text13
  2104  000FD6                     __ptext13:
  2105                           	callstack 0
  2106  000FD6                     ___flge:
  2107                           	callstack 30
  2108  000FD6  0E00               	movlw	0
  2109  000FD8  1401               	andwf	___flge@ff1^0,w,c
  2110  000FDA  6E09               	movwf	??___flge^0,c
  2111  000FDC  0E00               	movlw	0
  2112  000FDE  1402               	andwf	(___flge@ff1+1)^0,w,c
  2113  000FE0  6E0A               	movwf	(??___flge+1)^0,c
  2114  000FE2  0E80               	movlw	128
  2115  000FE4  1403               	andwf	(___flge@ff1+2)^0,w,c
  2116  000FE6  6E0B               	movwf	(??___flge+2)^0,c
  2117  000FE8  0E7F               	movlw	127
  2118  000FEA  1404               	andwf	(___flge@ff1+3)^0,w,c
  2119  000FEC  6E0C               	movwf	(??___flge+3)^0,c
  2120  000FEE  5009               	movf	??___flge^0,w,c
  2121  000FF0  100A               	iorwf	(??___flge+1)^0,w,c
  2122  000FF2  100B               	iorwf	(??___flge+2)^0,w,c
  2123  000FF4  100C               	iorwf	(??___flge+3)^0,w,c
  2124  000FF6  A4D8               	btfss	status,2,c
  2125  000FF8  EF00  F008         	goto	u1031
  2126  000FFC  EF02  F008         	goto	u1030
  2127  001000                     u1031:
  2128  001000  EF0A  F008         	goto	l1604
  2129  001004                     u1030:
  2130  001004  0E00               	movlw	0
  2131  001006  6E01               	movwf	___flge@ff1^0,c
  2132  001008  0E00               	movlw	0
  2133  00100A  6E02               	movwf	(___flge@ff1+1)^0,c
  2134  00100C  0E00               	movlw	0
  2135  00100E  6E03               	movwf	(___flge@ff1+2)^0,c
  2136  001010  0E00               	movlw	0
  2137  001012  6E04               	movwf	(___flge@ff1+3)^0,c
  2138  001014                     l1604:
  2139  001014  0E00               	movlw	0
  2140  001016  1405               	andwf	___flge@ff2^0,w,c
  2141  001018  6E09               	movwf	??___flge^0,c
  2142  00101A  0E00               	movlw	0
  2143  00101C  1406               	andwf	(___flge@ff2+1)^0,w,c
  2144  00101E  6E0A               	movwf	(??___flge+1)^0,c
  2145  001020  0E80               	movlw	128
  2146  001022  1407               	andwf	(___flge@ff2+2)^0,w,c
  2147  001024  6E0B               	movwf	(??___flge+2)^0,c
  2148  001026  0E7F               	movlw	127
  2149  001028  1408               	andwf	(___flge@ff2+3)^0,w,c
  2150  00102A  6E0C               	movwf	(??___flge+3)^0,c
  2151  00102C  5009               	movf	??___flge^0,w,c
  2152  00102E  100A               	iorwf	(??___flge+1)^0,w,c
  2153  001030  100B               	iorwf	(??___flge+2)^0,w,c
  2154  001032  100C               	iorwf	(??___flge+3)^0,w,c
  2155  001034  A4D8               	btfss	status,2,c
  2156  001036  EF1F  F008         	goto	u1041
  2157  00103A  EF21  F008         	goto	u1040
  2158  00103E                     u1041:
  2159  00103E  EF29  F008         	goto	l1608
  2160  001042                     u1040:
  2161  001042  0E00               	movlw	0
  2162  001044  6E05               	movwf	___flge@ff2^0,c
  2163  001046  0E00               	movlw	0
  2164  001048  6E06               	movwf	(___flge@ff2+1)^0,c
  2165  00104A  0E00               	movlw	0
  2166  00104C  6E07               	movwf	(___flge@ff2+2)^0,c
  2167  00104E  0E00               	movlw	0
  2168  001050  6E08               	movwf	(___flge@ff2+3)^0,c
  2169  001052                     l1608:
  2170  001052  AE04               	btfss	(___flge@ff1+3)^0,7,c
  2171  001054  EF2E  F008         	goto	u1051
  2172  001058  EF30  F008         	goto	u1050
  2173  00105C                     u1051:
  2174  00105C  EF39  F008         	goto	l1612
  2175  001060                     u1050:
  2176  001060  6C01               	negf	___flge@ff1^0,c
  2177  001062  1E02               	comf	(___flge@ff1+1)^0,f,c
  2178  001064  B0D8               	btfsc	status,0,c
  2179  001066  2A02               	incf	(___flge@ff1+1)^0,f,c
  2180  001068  1E03               	comf	(___flge@ff1+2)^0,f,c
  2181  00106A  B0D8               	btfsc	status,0,c
  2182  00106C  2A03               	incf	(___flge@ff1+2)^0,f,c
  2183  00106E  0E80               	movlw	128
  2184  001070  5604               	subfwb	(___flge@ff1+3)^0,f,c
  2185  001072                     l1612:
  2186  001072  AE08               	btfss	(___flge@ff2+3)^0,7,c
  2187  001074  EF3E  F008         	goto	u1061
  2188  001078  EF40  F008         	goto	u1060
  2189  00107C                     u1061:
  2190  00107C  EF49  F008         	goto	l383
  2191  001080                     u1060:
  2192  001080  6C05               	negf	___flge@ff2^0,c
  2193  001082  1E06               	comf	(___flge@ff2+1)^0,f,c
  2194  001084  B0D8               	btfsc	status,0,c
  2195  001086  2A06               	incf	(___flge@ff2+1)^0,f,c
  2196  001088  1E07               	comf	(___flge@ff2+2)^0,f,c
  2197  00108A  B0D8               	btfsc	status,0,c
  2198  00108C  2A07               	incf	(___flge@ff2+2)^0,f,c
  2199  00108E  0E80               	movlw	128
  2200  001090  5608               	subfwb	(___flge@ff2+3)^0,f,c
  2201  001092                     l383:
  2202  001092  0E00               	movlw	0
  2203  001094  1A01               	xorwf	___flge@ff1^0,f,c
  2204  001096  0E00               	movlw	0
  2205  001098  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  2206  00109A  0E00               	movlw	0
  2207  00109C  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  2208  00109E  0E80               	movlw	128
  2209  0010A0  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  2210  0010A2  0E00               	movlw	0
  2211  0010A4  1A05               	xorwf	___flge@ff2^0,f,c
  2212  0010A6  0E00               	movlw	0
  2213  0010A8  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  2214  0010AA  0E00               	movlw	0
  2215  0010AC  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  2216  0010AE  0E80               	movlw	128
  2217  0010B0  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  2218  0010B2  5005               	movf	___flge@ff2^0,w,c
  2219  0010B4  5C01               	subwf	___flge@ff1^0,w,c
  2220  0010B6  5006               	movf	(___flge@ff2+1)^0,w,c
  2221  0010B8  5802               	subwfb	(___flge@ff1+1)^0,w,c
  2222  0010BA  5007               	movf	(___flge@ff2+2)^0,w,c
  2223  0010BC  5803               	subwfb	(___flge@ff1+2)^0,w,c
  2224  0010BE  5008               	movf	(___flge@ff2+3)^0,w,c
  2225  0010C0  5804               	subwfb	(___flge@ff1+3)^0,w,c
  2226  0010C2  B0D8               	btfsc	status,0,c
  2227  0010C4  EF66  F008         	goto	u1071
  2228  0010C8  EF68  F008         	goto	u1070
  2229  0010CC                     u1071:
  2230  0010CC  EF6B  F008         	goto	l1618
  2231  0010D0                     u1070:
  2232  0010D0  90D8               	bcf	status,0,c
  2233  0010D2  EF6C  F008         	goto	l388
  2234  0010D6                     l1618:
  2235  0010D6  80D8               	bsf	status,0,c
  2236  0010D8                     l388:
  2237  0010D8  0012               	return		;funcret
  2238  0010DA                     __end_of___flge:
  2239                           	callstack 0
  2240                           
  2241 ;; *************** function ___fleq *****************
  2242 ;; Defined at:
  2243 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  ff1             4    0[COMRAM] unsigned int 
  2246 ;;  ff2             4    4[COMRAM] unsigned int 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;		None               void
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2258 ;;      Params:         8       0       0       0       0       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2260 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2261 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2262 ;;Total ram usage:       12 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text14
  2272  00128E                     __ptext14:
  2273                           	callstack 0
  2274  00128E                     ___fleq:
  2275                           	callstack 30
  2276  00128E  0E00               	movlw	0
  2277  001290  1401               	andwf	___fleq@ff1^0,w,c
  2278  001292  6E09               	movwf	??___fleq^0,c
  2279  001294  0E00               	movlw	0
  2280  001296  1402               	andwf	(___fleq@ff1+1)^0,w,c
  2281  001298  6E0A               	movwf	(??___fleq+1)^0,c
  2282  00129A  0E80               	movlw	128
  2283  00129C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  2284  00129E  6E0B               	movwf	(??___fleq+2)^0,c
  2285  0012A0  0E7F               	movlw	127
  2286  0012A2  1404               	andwf	(___fleq@ff1+3)^0,w,c
  2287  0012A4  6E0C               	movwf	(??___fleq+3)^0,c
  2288  0012A6  5009               	movf	??___fleq^0,w,c
  2289  0012A8  100A               	iorwf	(??___fleq+1)^0,w,c
  2290  0012AA  100B               	iorwf	(??___fleq+2)^0,w,c
  2291  0012AC  100C               	iorwf	(??___fleq+3)^0,w,c
  2292  0012AE  A4D8               	btfss	status,2,c
  2293  0012B0  EF5C  F009         	goto	u1001
  2294  0012B4  EF5E  F009         	goto	u1000
  2295  0012B8                     u1001:
  2296  0012B8  EF66  F009         	goto	l1588
  2297  0012BC                     u1000:
  2298  0012BC  0E00               	movlw	0
  2299  0012BE  6E01               	movwf	___fleq@ff1^0,c
  2300  0012C0  0E00               	movlw	0
  2301  0012C2  6E02               	movwf	(___fleq@ff1+1)^0,c
  2302  0012C4  0E00               	movlw	0
  2303  0012C6  6E03               	movwf	(___fleq@ff1+2)^0,c
  2304  0012C8  0E00               	movlw	0
  2305  0012CA  6E04               	movwf	(___fleq@ff1+3)^0,c
  2306  0012CC                     l1588:
  2307  0012CC  0E00               	movlw	0
  2308  0012CE  1405               	andwf	___fleq@ff2^0,w,c
  2309  0012D0  6E09               	movwf	??___fleq^0,c
  2310  0012D2  0E00               	movlw	0
  2311  0012D4  1406               	andwf	(___fleq@ff2+1)^0,w,c
  2312  0012D6  6E0A               	movwf	(??___fleq+1)^0,c
  2313  0012D8  0E80               	movlw	128
  2314  0012DA  1407               	andwf	(___fleq@ff2+2)^0,w,c
  2315  0012DC  6E0B               	movwf	(??___fleq+2)^0,c
  2316  0012DE  0E7F               	movlw	127
  2317  0012E0  1408               	andwf	(___fleq@ff2+3)^0,w,c
  2318  0012E2  6E0C               	movwf	(??___fleq+3)^0,c
  2319  0012E4  5009               	movf	??___fleq^0,w,c
  2320  0012E6  100A               	iorwf	(??___fleq+1)^0,w,c
  2321  0012E8  100B               	iorwf	(??___fleq+2)^0,w,c
  2322  0012EA  100C               	iorwf	(??___fleq+3)^0,w,c
  2323  0012EC  A4D8               	btfss	status,2,c
  2324  0012EE  EF7B  F009         	goto	u1011
  2325  0012F2  EF7D  F009         	goto	u1010
  2326  0012F6                     u1011:
  2327  0012F6  EF85  F009         	goto	l1592
  2328  0012FA                     u1010:
  2329  0012FA  0E00               	movlw	0
  2330  0012FC  6E05               	movwf	___fleq@ff2^0,c
  2331  0012FE  0E00               	movlw	0
  2332  001300  6E06               	movwf	(___fleq@ff2+1)^0,c
  2333  001302  0E00               	movlw	0
  2334  001304  6E07               	movwf	(___fleq@ff2+2)^0,c
  2335  001306  0E00               	movlw	0
  2336  001308  6E08               	movwf	(___fleq@ff2+3)^0,c
  2337  00130A                     l1592:
  2338  00130A  5005               	movf	___fleq@ff2^0,w,c
  2339  00130C  1801               	xorwf	___fleq@ff1^0,w,c
  2340  00130E  E10F               	bnz	u1020
  2341  001310  5006               	movf	(___fleq@ff2+1)^0,w,c
  2342  001312  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  2343  001314  E10C               	bnz	u1020
  2344  001316  5007               	movf	(___fleq@ff2+2)^0,w,c
  2345  001318  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  2346  00131A  E109               	bnz	u1020
  2347  00131C  5008               	movf	(___fleq@ff2+3)^0,w,c
  2348  00131E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  2349  001320  B4D8               	btfsc	status,2,c
  2350  001322  EF95  F009         	goto	u1021
  2351  001326  EF97  F009         	goto	u1020
  2352  00132A                     u1021:
  2353  00132A  EF9A  F009         	goto	l1596
  2354  00132E                     u1020:
  2355  00132E  90D8               	bcf	status,0,c
  2356  001330  EF9B  F009         	goto	l377
  2357  001334                     l1596:
  2358  001334  80D8               	bsf	status,0,c
  2359  001336                     l377:
  2360  001336  0012               	return		;funcret
  2361  001338                     __end_of___fleq:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function ___fldiv *****************
  2365 ;; Defined at:
  2366 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  b               4   20[COMRAM] unsigned int 
  2369 ;;  a               4   24[COMRAM] unsigned int 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  grs             4   39[COMRAM] unsigned long 
  2372 ;;  rem             4   32[COMRAM] unsigned long 
  2373 ;;  new_exp         2   37[COMRAM] short 
  2374 ;;  aexp            1   44[COMRAM] unsigned char 
  2375 ;;  bexp            1   43[COMRAM] unsigned char 
  2376 ;;  sign            1   36[COMRAM] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  4   20[COMRAM] unsigned char 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2386 ;;      Params:         8       0       0       0       0       0       0       0       0
  2387 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2388 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2389 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2390 ;;Total ram usage:       25 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text15
  2400  000824                     __ptext15:
  2401                           	callstack 0
  2402  000824                     ___fldiv:
  2403                           	callstack 30
  2404  000824  5018               	movf	(___fldiv@b+3)^0,w,c
  2405  000826  0B80               	andlw	128
  2406  000828  6E25               	movwf	___fldiv@sign^0,c
  2407  00082A  5018               	movf	(___fldiv@b+3)^0,w,c
  2408  00082C  2418               	addwf	(___fldiv@b+3)^0,w,c
  2409  00082E  6E2C               	movwf	___fldiv@bexp^0,c
  2410  000830  AE17               	btfss	(___fldiv@b+2)^0,7,c
  2411  000832  EF1D  F004         	goto	u771
  2412  000836  EF1F  F004         	goto	u770
  2413  00083A                     u771:
  2414  00083A  EF20  F004         	goto	l1452
  2415  00083E                     u770:
  2416  00083E  802C               	bsf	___fldiv@bexp^0,0,c
  2417  000840                     l1452:
  2418  000840  502C               	movf	___fldiv@bexp^0,w,c
  2419  000842  B4D8               	btfsc	status,2,c
  2420  000844  EF26  F004         	goto	u781
  2421  000848  EF28  F004         	goto	u780
  2422  00084C                     u781:
  2423  00084C  EF3D  F004         	goto	l1462
  2424  000850                     u780:
  2425  000850  282C               	incf	___fldiv@bexp^0,w,c
  2426  000852  A4D8               	btfss	status,2,c
  2427  000854  EF2E  F004         	goto	u791
  2428  000858  EF30  F004         	goto	u790
  2429  00085C                     u791:
  2430  00085C  EF38  F004         	goto	l1458
  2431  000860                     u790:
  2432  000860  0E00               	movlw	0
  2433  000862  6E15               	movwf	___fldiv@b^0,c
  2434  000864  0E00               	movlw	0
  2435  000866  6E16               	movwf	(___fldiv@b+1)^0,c
  2436  000868  0E00               	movlw	0
  2437  00086A  6E17               	movwf	(___fldiv@b+2)^0,c
  2438  00086C  0E00               	movlw	0
  2439  00086E  6E18               	movwf	(___fldiv@b+3)^0,c
  2440  000870                     l1458:
  2441  000870  8E17               	bsf	(___fldiv@b+2)^0,7,c
  2442  000872  0E00               	movlw	0
  2443  000874  6E18               	movwf	(___fldiv@b+3)^0,c
  2444  000876  EF45  F004         	goto	l1464
  2445  00087A                     l1462:
  2446  00087A  0E00               	movlw	0
  2447  00087C  6E15               	movwf	___fldiv@b^0,c
  2448  00087E  0E00               	movlw	0
  2449  000880  6E16               	movwf	(___fldiv@b+1)^0,c
  2450  000882  0E00               	movlw	0
  2451  000884  6E17               	movwf	(___fldiv@b+2)^0,c
  2452  000886  0E00               	movlw	0
  2453  000888  6E18               	movwf	(___fldiv@b+3)^0,c
  2454  00088A                     l1464:
  2455  00088A  501C               	movf	(___fldiv@a+3)^0,w,c
  2456  00088C  0B80               	andlw	128
  2457  00088E  1A25               	xorwf	___fldiv@sign^0,f,c
  2458  000890  501C               	movf	(___fldiv@a+3)^0,w,c
  2459  000892  241C               	addwf	(___fldiv@a+3)^0,w,c
  2460  000894  6E2D               	movwf	___fldiv@aexp^0,c
  2461  000896  AE1B               	btfss	(___fldiv@a+2)^0,7,c
  2462  000898  EF50  F004         	goto	u801
  2463  00089C  EF52  F004         	goto	u800
  2464  0008A0                     u801:
  2465  0008A0  EF53  F004         	goto	l1472
  2466  0008A4                     u800:
  2467  0008A4  802D               	bsf	___fldiv@aexp^0,0,c
  2468  0008A6                     l1472:
  2469  0008A6  502D               	movf	___fldiv@aexp^0,w,c
  2470  0008A8  B4D8               	btfsc	status,2,c
  2471  0008AA  EF59  F004         	goto	u811
  2472  0008AE  EF5B  F004         	goto	u810
  2473  0008B2                     u811:
  2474  0008B2  EF70  F004         	goto	l1482
  2475  0008B6                     u810:
  2476  0008B6  282D               	incf	___fldiv@aexp^0,w,c
  2477  0008B8  A4D8               	btfss	status,2,c
  2478  0008BA  EF61  F004         	goto	u821
  2479  0008BE  EF63  F004         	goto	u820
  2480  0008C2                     u821:
  2481  0008C2  EF6B  F004         	goto	l1478
  2482  0008C6                     u820:
  2483  0008C6  0E00               	movlw	0
  2484  0008C8  6E19               	movwf	___fldiv@a^0,c
  2485  0008CA  0E00               	movlw	0
  2486  0008CC  6E1A               	movwf	(___fldiv@a+1)^0,c
  2487  0008CE  0E00               	movlw	0
  2488  0008D0  6E1B               	movwf	(___fldiv@a+2)^0,c
  2489  0008D2  0E00               	movlw	0
  2490  0008D4  6E1C               	movwf	(___fldiv@a+3)^0,c
  2491  0008D6                     l1478:
  2492  0008D6  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  2493  0008D8  0E00               	movlw	0
  2494  0008DA  6E1C               	movwf	(___fldiv@a+3)^0,c
  2495  0008DC  EF78  F004         	goto	l1484
  2496  0008E0                     l1482:
  2497  0008E0  0E00               	movlw	0
  2498  0008E2  6E19               	movwf	___fldiv@a^0,c
  2499  0008E4  0E00               	movlw	0
  2500  0008E6  6E1A               	movwf	(___fldiv@a+1)^0,c
  2501  0008E8  0E00               	movlw	0
  2502  0008EA  6E1B               	movwf	(___fldiv@a+2)^0,c
  2503  0008EC  0E00               	movlw	0
  2504  0008EE  6E1C               	movwf	(___fldiv@a+3)^0,c
  2505  0008F0                     l1484:
  2506  0008F0  5019               	movf	___fldiv@a^0,w,c
  2507  0008F2  101A               	iorwf	(___fldiv@a+1)^0,w,c
  2508  0008F4  101B               	iorwf	(___fldiv@a+2)^0,w,c
  2509  0008F6  101C               	iorwf	(___fldiv@a+3)^0,w,c
  2510  0008F8  A4D8               	btfss	status,2,c
  2511  0008FA  EF81  F004         	goto	u831
  2512  0008FE  EF83  F004         	goto	u830
  2513  000902                     u831:
  2514  000902  EF9B  F004         	goto	l1496
  2515  000906                     u830:
  2516  000906  0E00               	movlw	0
  2517  000908  6E15               	movwf	___fldiv@b^0,c
  2518  00090A  0E00               	movlw	0
  2519  00090C  6E16               	movwf	(___fldiv@b+1)^0,c
  2520  00090E  0E00               	movlw	0
  2521  000910  6E17               	movwf	(___fldiv@b+2)^0,c
  2522  000912  0E00               	movlw	0
  2523  000914  6E18               	movwf	(___fldiv@b+3)^0,c
  2524  000916  0E80               	movlw	128
  2525  000918  1217               	iorwf	(___fldiv@b+2)^0,f,c
  2526  00091A  0E7F               	movlw	127
  2527  00091C  1218               	iorwf	(___fldiv@b+3)^0,f,c
  2528  00091E                     l1490:
  2529  00091E  5025               	movf	___fldiv@sign^0,w,c
  2530  000920  1218               	iorwf	(___fldiv@b+3)^0,f,c
  2531  000922  C015  F015         	movff	___fldiv@b,?___fldiv
  2532  000926  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  2533  00092A  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  2534  00092E  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  2535  000932  EFDE  F005         	goto	l700
  2536  000936                     l1496:
  2537  000936  502C               	movf	___fldiv@bexp^0,w,c
  2538  000938  A4D8               	btfss	status,2,c
  2539  00093A  EFA1  F004         	goto	u841
  2540  00093E  EFA3  F004         	goto	u840
  2541  000942                     u841:
  2542  000942  EFAD  F004         	goto	l1504
  2543  000946                     u840:
  2544  000946  0E00               	movlw	0
  2545  000948  6E15               	movwf	?___fldiv^0,c
  2546  00094A  0E00               	movlw	0
  2547  00094C  6E16               	movwf	(?___fldiv+1)^0,c
  2548  00094E  0E00               	movlw	0
  2549  000950  6E17               	movwf	(?___fldiv+2)^0,c
  2550  000952  0E00               	movlw	0
  2551  000954  6E18               	movwf	(?___fldiv+3)^0,c
  2552  000956  EFDE  F005         	goto	l700
  2553  00095A                     l1504:
  2554  00095A  502D               	movf	___fldiv@aexp^0,w,c
  2555  00095C  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  2556  000960  6A1E               	clrf	(??___fldiv+1)^0,c
  2557  000962  5E1D               	subwf	??___fldiv^0,f,c
  2558  000964  0E00               	movlw	0
  2559  000966  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  2560  000968  0E7F               	movlw	127
  2561  00096A  241D               	addwf	??___fldiv^0,w,c
  2562  00096C  6E26               	movwf	___fldiv@new_exp^0,c
  2563  00096E  0E00               	movlw	0
  2564  000970  201E               	addwfc	(??___fldiv+1)^0,w,c
  2565  000972  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  2566  000974  C015  F021         	movff	___fldiv@b,___fldiv@rem
  2567  000978  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  2568  00097C  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  2569  000980  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  2570  000984  0E00               	movlw	0
  2571  000986  6E15               	movwf	___fldiv@b^0,c
  2572  000988  0E00               	movlw	0
  2573  00098A  6E16               	movwf	(___fldiv@b+1)^0,c
  2574  00098C  0E00               	movlw	0
  2575  00098E  6E17               	movwf	(___fldiv@b+2)^0,c
  2576  000990  0E00               	movlw	0
  2577  000992  6E18               	movwf	(___fldiv@b+3)^0,c
  2578  000994  0E00               	movlw	0
  2579  000996  6E28               	movwf	___fldiv@grs^0,c
  2580  000998  0E00               	movlw	0
  2581  00099A  6E29               	movwf	(___fldiv@grs+1)^0,c
  2582  00099C  0E00               	movlw	0
  2583  00099E  6E2A               	movwf	(___fldiv@grs+2)^0,c
  2584  0009A0  0E00               	movlw	0
  2585  0009A2  6E2B               	movwf	(___fldiv@grs+3)^0,c
  2586  0009A4  0E00               	movlw	0
  2587  0009A6  6E2D               	movwf	___fldiv@aexp^0,c
  2588  0009A8  EF0E  F005         	goto	l702
  2589  0009AC                     l1514:
  2590  0009AC  502D               	movf	___fldiv@aexp^0,w,c
  2591  0009AE  B4D8               	btfsc	status,2,c
  2592  0009B0  EFDC  F004         	goto	u851
  2593  0009B4  EFDE  F004         	goto	u850
  2594  0009B8                     u851:
  2595  0009B8  EFF5  F004         	goto	l1522
  2596  0009BC                     u850:
  2597  0009BC  90D8               	bcf	status,0,c
  2598  0009BE  3621               	rlcf	___fldiv@rem^0,f,c
  2599  0009C0  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  2600  0009C2  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  2601  0009C4  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  2602  0009C6  90D8               	bcf	status,0,c
  2603  0009C8  3615               	rlcf	___fldiv@b^0,f,c
  2604  0009CA  3616               	rlcf	(___fldiv@b+1)^0,f,c
  2605  0009CC  3617               	rlcf	(___fldiv@b+2)^0,f,c
  2606  0009CE  3618               	rlcf	(___fldiv@b+3)^0,f,c
  2607  0009D0  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  2608  0009D2  EFED  F004         	goto	u861
  2609  0009D6  EFEF  F004         	goto	u860
  2610  0009DA                     u861:
  2611  0009DA  EFF0  F004         	goto	l705
  2612  0009DE                     u860:
  2613  0009DE  8015               	bsf	___fldiv@b^0,0,c
  2614  0009E0                     l705:
  2615  0009E0  90D8               	bcf	status,0,c
  2616  0009E2  3628               	rlcf	___fldiv@grs^0,f,c
  2617  0009E4  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  2618  0009E6  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  2619  0009E8  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  2620  0009EA                     l1522:
  2621  0009EA  5019               	movf	___fldiv@a^0,w,c
  2622  0009EC  5C21               	subwf	___fldiv@rem^0,w,c
  2623  0009EE  501A               	movf	(___fldiv@a+1)^0,w,c
  2624  0009F0  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  2625  0009F2  501B               	movf	(___fldiv@a+2)^0,w,c
  2626  0009F4  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  2627  0009F6  501C               	movf	(___fldiv@a+3)^0,w,c
  2628  0009F8  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  2629  0009FA  A0D8               	btfss	status,0,c
  2630  0009FC  EF02  F005         	goto	u871
  2631  000A00  EF04  F005         	goto	u870
  2632  000A04                     u871:
  2633  000A04  EF0D  F005         	goto	l1528
  2634  000A08                     u870:
  2635  000A08  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  2636  000A0A  5019               	movf	___fldiv@a^0,w,c
  2637  000A0C  5E21               	subwf	___fldiv@rem^0,f,c
  2638  000A0E  501A               	movf	(___fldiv@a+1)^0,w,c
  2639  000A10  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  2640  000A12  501B               	movf	(___fldiv@a+2)^0,w,c
  2641  000A14  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  2642  000A16  501C               	movf	(___fldiv@a+3)^0,w,c
  2643  000A18  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  2644  000A1A                     l1528:
  2645  000A1A  2A2D               	incf	___fldiv@aexp^0,f,c
  2646  000A1C                     l702:
  2647  000A1C  0E19               	movlw	25
  2648  000A1E  642D               	cpfsgt	___fldiv@aexp^0,c
  2649  000A20  EF14  F005         	goto	u881
  2650  000A24  EF16  F005         	goto	u880
  2651  000A28                     u881:
  2652  000A28  EFD6  F004         	goto	l1514
  2653  000A2C                     u880:
  2654  000A2C  5021               	movf	___fldiv@rem^0,w,c
  2655  000A2E  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  2656  000A30  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  2657  000A32  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  2658  000A34  B4D8               	btfsc	status,2,c
  2659  000A36  EF1F  F005         	goto	u891
  2660  000A3A  EF21  F005         	goto	u890
  2661  000A3E                     u891:
  2662  000A3E  EF39  F005         	goto	l1540
  2663  000A42                     u890:
  2664  000A42  8028               	bsf	___fldiv@grs^0,0,c
  2665  000A44  EF39  F005         	goto	l1540
  2666  000A48                     l1534:
  2667  000A48  90D8               	bcf	status,0,c
  2668  000A4A  3615               	rlcf	___fldiv@b^0,f,c
  2669  000A4C  3616               	rlcf	(___fldiv@b+1)^0,f,c
  2670  000A4E  3617               	rlcf	(___fldiv@b+2)^0,f,c
  2671  000A50  3618               	rlcf	(___fldiv@b+3)^0,f,c
  2672  000A52  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  2673  000A54  EF2E  F005         	goto	u901
  2674  000A58  EF30  F005         	goto	u900
  2675  000A5C                     u901:
  2676  000A5C  EF31  F005         	goto	l711
  2677  000A60                     u900:
  2678  000A60  8015               	bsf	___fldiv@b^0,0,c
  2679  000A62                     l711:
  2680  000A62  90D8               	bcf	status,0,c
  2681  000A64  3628               	rlcf	___fldiv@grs^0,f,c
  2682  000A66  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  2683  000A68  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  2684  000A6A  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  2685  000A6C  0626               	decf	___fldiv@new_exp^0,f,c
  2686  000A6E  A0D8               	btfss	status,0,c
  2687  000A70  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  2688  000A72                     l1540:
  2689  000A72  AE17               	btfss	(___fldiv@b+2)^0,7,c
  2690  000A74  EF3E  F005         	goto	u911
  2691  000A78  EF40  F005         	goto	u910
  2692  000A7C                     u911:
  2693  000A7C  EF24  F005         	goto	l1534
  2694  000A80                     u910:
  2695  000A80  0E00               	movlw	0
  2696  000A82  6E2D               	movwf	___fldiv@aexp^0,c
  2697  000A84  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  2698  000A86  EF47  F005         	goto	u921
  2699  000A8A  EF49  F005         	goto	u920
  2700  000A8E                     u921:
  2701  000A8E  EF6D  F005         	goto	l713
  2702  000A92                     u920:
  2703  000A92  0EFF               	movlw	255
  2704  000A94  1428               	andwf	___fldiv@grs^0,w,c
  2705  000A96  6E1D               	movwf	??___fldiv^0,c
  2706  000A98  0EFF               	movlw	255
  2707  000A9A  1429               	andwf	(___fldiv@grs+1)^0,w,c
  2708  000A9C  6E1E               	movwf	(??___fldiv+1)^0,c
  2709  000A9E  0EFF               	movlw	255
  2710  000AA0  142A               	andwf	(___fldiv@grs+2)^0,w,c
  2711  000AA2  6E1F               	movwf	(??___fldiv+2)^0,c
  2712  000AA4  0E7F               	movlw	127
  2713  000AA6  142B               	andwf	(___fldiv@grs+3)^0,w,c
  2714  000AA8  6E20               	movwf	(??___fldiv+3)^0,c
  2715  000AAA  501D               	movf	??___fldiv^0,w,c
  2716  000AAC  101E               	iorwf	(??___fldiv+1)^0,w,c
  2717  000AAE  101F               	iorwf	(??___fldiv+2)^0,w,c
  2718  000AB0  1020               	iorwf	(??___fldiv+3)^0,w,c
  2719  000AB2  B4D8               	btfsc	status,2,c
  2720  000AB4  EF5E  F005         	goto	u931
  2721  000AB8  EF60  F005         	goto	u930
  2722  000ABC                     u931:
  2723  000ABC  EF64  F005         	goto	l714
  2724  000AC0                     u930:
  2725  000AC0                     l1548:
  2726  000AC0  0E01               	movlw	1
  2727  000AC2  6E2D               	movwf	___fldiv@aexp^0,c
  2728  000AC4  EF6D  F005         	goto	l713
  2729  000AC8                     l714:
  2730  000AC8  A015               	btfss	___fldiv@b^0,0,c
  2731  000ACA  EF69  F005         	goto	u941
  2732  000ACE  EF6B  F005         	goto	u940
  2733  000AD2                     u941:
  2734  000AD2  EF6D  F005         	goto	l713
  2735  000AD6                     u940:
  2736  000AD6  EF60  F005         	goto	l1548
  2737  000ADA                     l713:
  2738  000ADA  502D               	movf	___fldiv@aexp^0,w,c
  2739  000ADC  B4D8               	btfsc	status,2,c
  2740  000ADE  EF73  F005         	goto	u951
  2741  000AE2  EF75  F005         	goto	u950
  2742  000AE6                     u951:
  2743  000AE6  EF99  F005         	goto	l1560
  2744  000AEA                     u950:
  2745  000AEA  0E01               	movlw	1
  2746  000AEC  2615               	addwf	___fldiv@b^0,f,c
  2747  000AEE  0E00               	movlw	0
  2748  000AF0  2216               	addwfc	(___fldiv@b+1)^0,f,c
  2749  000AF2  2217               	addwfc	(___fldiv@b+2)^0,f,c
  2750  000AF4  2218               	addwfc	(___fldiv@b+3)^0,f,c
  2751  000AF6  A018               	btfss	(___fldiv@b+3)^0,0,c
  2752  000AF8  EF80  F005         	goto	u961
  2753  000AFC  EF82  F005         	goto	u960
  2754  000B00                     u961:
  2755  000B00  EF99  F005         	goto	l1560
  2756  000B04                     u960:
  2757  000B04  C015  F01D         	movff	___fldiv@b,??___fldiv
  2758  000B08  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  2759  000B0C  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  2760  000B10  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  2761  000B14  3420               	rlcf	(??___fldiv+3)^0,w,c
  2762  000B16  3220               	rrcf	(??___fldiv+3)^0,f,c
  2763  000B18  321F               	rrcf	(??___fldiv+2)^0,f,c
  2764  000B1A  321E               	rrcf	(??___fldiv+1)^0,f,c
  2765  000B1C  321D               	rrcf	??___fldiv^0,f,c
  2766  000B1E  C01D  F015         	movff	??___fldiv,___fldiv@b
  2767  000B22  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  2768  000B26  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  2769  000B2A  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  2770  000B2E  4A26               	infsnz	___fldiv@new_exp^0,f,c
  2771  000B30  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  2772  000B32                     l1560:
  2773  000B32  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  2774  000B34  EFA4  F005         	goto	u971
  2775  000B38  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  2776  000B3A  E108               	bnz	u970
  2777  000B3C  2826               	incf	___fldiv@new_exp^0,w,c
  2778  000B3E  A0D8               	btfss	status,0,c
  2779  000B40  EFA4  F005         	goto	u971
  2780  000B44  EFA6  F005         	goto	u970
  2781  000B48                     u971:
  2782  000B48  EFB1  F005         	goto	l1564
  2783  000B4C                     u970:
  2784  000B4C  0E00               	movlw	0
  2785  000B4E  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  2786  000B50  6826               	setf	___fldiv@new_exp^0,c
  2787  000B52  0E00               	movlw	0
  2788  000B54  6E15               	movwf	___fldiv@b^0,c
  2789  000B56  0E00               	movlw	0
  2790  000B58  6E16               	movwf	(___fldiv@b+1)^0,c
  2791  000B5A  0E00               	movlw	0
  2792  000B5C  6E17               	movwf	(___fldiv@b+2)^0,c
  2793  000B5E  0E00               	movlw	0
  2794  000B60  6E18               	movwf	(___fldiv@b+3)^0,c
  2795  000B62                     l1564:
  2796  000B62  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  2797  000B64  EFBE  F005         	goto	u980
  2798  000B68  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  2799  000B6A  E106               	bnz	u981
  2800  000B6C  0426               	decf	___fldiv@new_exp^0,w,c
  2801  000B6E  B0D8               	btfsc	status,0,c
  2802  000B70  EFBC  F005         	goto	u981
  2803  000B74  EFBE  F005         	goto	u980
  2804  000B78                     u981:
  2805  000B78  EFCC  F005         	goto	l1568
  2806  000B7C                     u980:
  2807  000B7C  0E00               	movlw	0
  2808  000B7E  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  2809  000B80  0E00               	movlw	0
  2810  000B82  6E26               	movwf	___fldiv@new_exp^0,c
  2811  000B84  0E00               	movlw	0
  2812  000B86  6E15               	movwf	___fldiv@b^0,c
  2813  000B88  0E00               	movlw	0
  2814  000B8A  6E16               	movwf	(___fldiv@b+1)^0,c
  2815  000B8C  0E00               	movlw	0
  2816  000B8E  6E17               	movwf	(___fldiv@b+2)^0,c
  2817  000B90  0E00               	movlw	0
  2818  000B92  6E18               	movwf	(___fldiv@b+3)^0,c
  2819  000B94  0E00               	movlw	0
  2820  000B96  6E25               	movwf	___fldiv@sign^0,c
  2821  000B98                     l1568:
  2822  000B98  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  2823  000B9C  A02C               	btfss	___fldiv@bexp^0,0,c
  2824  000B9E  EFD3  F005         	goto	u991
  2825  000BA2  EFD5  F005         	goto	u990
  2826  000BA6                     u991:
  2827  000BA6  EFD8  F005         	goto	l1574
  2828  000BAA                     u990:
  2829  000BAA  8E17               	bsf	(___fldiv@b+2)^0,7,c
  2830  000BAC  EFD9  F005         	goto	l1576
  2831  000BB0                     l1574:
  2832  000BB0  9E17               	bcf	(___fldiv@b+2)^0,7,c
  2833  000BB2                     l1576:
  2834  000BB2  90D8               	bcf	status,0,c
  2835  000BB4  302C               	rrcf	___fldiv@bexp^0,w,c
  2836  000BB6  6E18               	movwf	(___fldiv@b+3)^0,c
  2837  000BB8  EF8F  F004         	goto	l1490
  2838  000BBC                     l700:
  2839  000BBC  0012               	return		;funcret
  2840  000BBE                     __end_of___fldiv:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _Lcd_Init *****************
  2844 ;; Defined at:
  2845 ;;		line 55 in file "./lcd.h"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2861 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2862 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2863 ;;Total ram usage:        1 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 2
  2866 ;; This function calls:
  2867 ;;		_Lcd_Cmd
  2868 ;;		_Lcd_Port
  2869 ;; This function is called by:
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text16
  2875  0013BC                     __ptext16:
  2876                           	callstack 0
  2877  0013BC                     _Lcd_Init:
  2878                           	callstack 28
  2879  0013BC                     
  2880                           ;./lcd.h: 56:     Lcd_Port(0x00);
  2881  0013BC  0E00               	movlw	0
  2882  0013BE  EC79  F00A         	call	_Lcd_Port
  2883  0013C2                     
  2884                           ;./lcd.h: 57:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2885  0013C2  0E1A               	movlw	26
  2886  0013C4  6E04               	movwf	??_Lcd_Init^0,c
  2887  0013C6  0EF8               	movlw	248
  2888  0013C8                     u1327:
  2889  0013C8  2EE8               	decfsz	wreg,f,c
  2890  0013CA  D7FE               	bra	u1327
  2891  0013CC  2E04               	decfsz	??_Lcd_Init^0,f,c
  2892  0013CE  D7FC               	bra	u1327
  2893  0013D0  D000               	nop2	
  2894  0013D2                     
  2895                           ;./lcd.h: 58:     Lcd_Cmd(0x03);
  2896  0013D2  0E03               	movlw	3
  2897  0013D4  EC4D  F00B         	call	_Lcd_Cmd
  2898  0013D8                     
  2899                           ;./lcd.h: 59:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2900  0013D8  0E07               	movlw	7
  2901  0013DA  6E04               	movwf	??_Lcd_Init^0,c
  2902  0013DC  0E7D               	movlw	125
  2903  0013DE                     u1337:
  2904  0013DE  2EE8               	decfsz	wreg,f,c
  2905  0013E0  D7FE               	bra	u1337
  2906  0013E2  2E04               	decfsz	??_Lcd_Init^0,f,c
  2907  0013E4  D7FC               	bra	u1337
  2908  0013E6  F000               	nop	
  2909  0013E8                     
  2910                           ;./lcd.h: 60:     Lcd_Cmd(0x03);
  2911  0013E8  0E03               	movlw	3
  2912  0013EA  EC4D  F00B         	call	_Lcd_Cmd
  2913  0013EE                     
  2914                           ;./lcd.h: 61:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2915  0013EE  0E0F               	movlw	15
  2916  0013F0  6E04               	movwf	??_Lcd_Init^0,c
  2917  0013F2  0E48               	movlw	72
  2918  0013F4                     u1347:
  2919  0013F4  2EE8               	decfsz	wreg,f,c
  2920  0013F6  D7FE               	bra	u1347
  2921  0013F8  2E04               	decfsz	??_Lcd_Init^0,f,c
  2922  0013FA  D7FC               	bra	u1347
  2923  0013FC                     
  2924                           ;./lcd.h: 62:     Lcd_Cmd(0x03);
  2925  0013FC  0E03               	movlw	3
  2926  0013FE  EC4D  F00B         	call	_Lcd_Cmd
  2927  001402                     
  2928                           ;./lcd.h: 64:     Lcd_Cmd(0x02);
  2929  001402  0E02               	movlw	2
  2930  001404  EC4D  F00B         	call	_Lcd_Cmd
  2931  001408                     
  2932                           ;./lcd.h: 65:     Lcd_Cmd(0x02);
  2933  001408  0E02               	movlw	2
  2934  00140A  EC4D  F00B         	call	_Lcd_Cmd
  2935  00140E                     
  2936                           ;./lcd.h: 66:     Lcd_Cmd(0x08);
  2937  00140E  0E08               	movlw	8
  2938  001410  EC4D  F00B         	call	_Lcd_Cmd
  2939  001414                     
  2940                           ;./lcd.h: 67:     Lcd_Cmd(0x00);
  2941  001414  0E00               	movlw	0
  2942  001416  EC4D  F00B         	call	_Lcd_Cmd
  2943  00141A                     
  2944                           ;./lcd.h: 68:     Lcd_Cmd(0x0C);
  2945  00141A  0E0C               	movlw	12
  2946  00141C  EC4D  F00B         	call	_Lcd_Cmd
  2947  001420                     
  2948                           ;./lcd.h: 69:     Lcd_Cmd(0x00);
  2949  001420  0E00               	movlw	0
  2950  001422  EC4D  F00B         	call	_Lcd_Cmd
  2951  001426                     
  2952                           ;./lcd.h: 70:     Lcd_Cmd(0x06);
  2953  001426  0E06               	movlw	6
  2954  001428  EC4D  F00B         	call	_Lcd_Cmd
  2955  00142C  0012               	return		;funcret
  2956  00142E                     __end_of_Lcd_Init:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _Lcd_Cmd *****************
  2960 ;; Defined at:
  2961 ;;		line 25 in file "./lcd.h"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  a               1    wreg     unsigned char 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  a               1    2[COMRAM] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0
  2976 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2977 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2978 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2979 ;;Total ram usage:        2 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 1
  2982 ;; This function calls:
  2983 ;;		_Lcd_Port
  2984 ;; This function is called by:
  2985 ;;		_Lcd_Set_Cursor
  2986 ;;		_Lcd_Init
  2987 ;;		_Lcd_Clear
  2988 ;;		_Lcd_Shift_Right
  2989 ;;		_Lcd_Shift_Left
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text17
  2994  00169A                     __ptext17:
  2995                           	callstack 0
  2996  00169A                     _Lcd_Cmd:
  2997                           	callstack 27
  2998                           
  2999                           ;incstack = 0
  3000                           ;Lcd_Cmd@a stored from wreg
  3001  00169A  6E03               	movwf	Lcd_Cmd@a^0,c
  3002  00169C                     
  3003                           ;./lcd.h: 26:     LATE0 = 0;
  3004  00169C  908D               	bcf	3981,0,c	;volatile
  3005  00169E                     
  3006                           ;./lcd.h: 27:     Lcd_Port(a);
  3007  00169E  5003               	movf	Lcd_Cmd@a^0,w,c
  3008  0016A0  EC79  F00A         	call	_Lcd_Port
  3009  0016A4                     
  3010                           ;./lcd.h: 28:     LATE1 = 1;
  3011  0016A4  828D               	bsf	3981,1,c	;volatile
  3012  0016A6                     
  3013                           ;./lcd.h: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3014  0016A6  0E06               	movlw	6
  3015  0016A8  6E02               	movwf	??_Lcd_Cmd^0,c
  3016  0016AA  0E30               	movlw	48
  3017  0016AC                     u1357:
  3018  0016AC  2EE8               	decfsz	wreg,f,c
  3019  0016AE  D7FE               	bra	u1357
  3020  0016B0  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  3021  0016B2  D7FC               	bra	u1357
  3022  0016B4  D000               	nop2	
  3023  0016B6                     
  3024                           ;./lcd.h: 30:     LATE1 = 0;
  3025  0016B6  928D               	bcf	3981,1,c	;volatile
  3026  0016B8  0012               	return		;funcret
  3027  0016BA                     __end_of_Lcd_Cmd:
  3028                           	callstack 0
  3029                           
  3030 ;; *************** function _Lcd_Port *****************
  3031 ;; Defined at:
  3032 ;;		line 3 in file "./lcd.h"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  a               1    wreg     unsigned char 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  a               1    0[COMRAM] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3046 ;;      Params:         0       0       0       0       0       0       0       0       0
  3047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3049 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3050 ;;Total ram usage:        1 bytes
  3051 ;; Hardware stack levels used: 1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_Lcd_Cmd
  3056 ;;		_Lcd_Init
  3057 ;;		_Lcd_Write_Char
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text18
  3062  0014F2                     __ptext18:
  3063                           	callstack 0
  3064  0014F2                     _Lcd_Port:
  3065                           	callstack 27
  3066                           
  3067                           ;incstack = 0
  3068                           ;Lcd_Port@a stored from wreg
  3069  0014F2  6E01               	movwf	Lcd_Port@a^0,c
  3070  0014F4                     
  3071                           ;./lcd.h: 4:     if (a & 1)
  3072  0014F4  A001               	btfss	Lcd_Port@a^0,0,c
  3073  0014F6  EF7F  F00A         	goto	u51
  3074  0014FA  EF81  F00A         	goto	u50
  3075  0014FE                     u51:
  3076  0014FE  EF84  F00A         	goto	l37
  3077  001502                     u50:
  3078  001502                     
  3079                           ;./lcd.h: 5:         LATD4 = 1;
  3080  001502  888C               	bsf	3980,4,c	;volatile
  3081  001504  EF85  F00A         	goto	l884
  3082  001508                     l37:
  3083                           
  3084                           ;./lcd.h: 7:         LATD4 = 0;
  3085  001508  988C               	bcf	3980,4,c	;volatile
  3086  00150A                     l884:
  3087                           
  3088                           ;./lcd.h: 9:     if (a & 2)
  3089  00150A  A201               	btfss	Lcd_Port@a^0,1,c
  3090  00150C  EF8A  F00A         	goto	u61
  3091  001510  EF8C  F00A         	goto	u60
  3092  001514                     u61:
  3093  001514  EF8F  F00A         	goto	l39
  3094  001518                     u60:
  3095  001518                     
  3096                           ;./lcd.h: 10:         LATD5 = 1;
  3097  001518  8A8C               	bsf	3980,5,c	;volatile
  3098  00151A  EF90  F00A         	goto	l888
  3099  00151E                     l39:
  3100                           
  3101                           ;./lcd.h: 12:         LATD5 = 0;
  3102  00151E  9A8C               	bcf	3980,5,c	;volatile
  3103  001520                     l888:
  3104                           
  3105                           ;./lcd.h: 14:     if (a & 4)
  3106  001520  A401               	btfss	Lcd_Port@a^0,2,c
  3107  001522  EF95  F00A         	goto	u71
  3108  001526  EF97  F00A         	goto	u70
  3109  00152A                     u71:
  3110  00152A  EF9A  F00A         	goto	l41
  3111  00152E                     u70:
  3112  00152E                     
  3113                           ;./lcd.h: 15:         LATD6 = 1;
  3114  00152E  8C8C               	bsf	3980,6,c	;volatile
  3115  001530  EF9B  F00A         	goto	l892
  3116  001534                     l41:
  3117                           
  3118                           ;./lcd.h: 17:         LATD6 = 0;
  3119  001534  9C8C               	bcf	3980,6,c	;volatile
  3120  001536                     l892:
  3121                           
  3122                           ;./lcd.h: 19:     if (a & 8)
  3123  001536  A601               	btfss	Lcd_Port@a^0,3,c
  3124  001538  EFA0  F00A         	goto	u81
  3125  00153C  EFA2  F00A         	goto	u80
  3126  001540                     u81:
  3127  001540  EFA5  F00A         	goto	l43
  3128  001544                     u80:
  3129  001544                     
  3130                           ;./lcd.h: 20:         LATD7 = 1;
  3131  001544  8E8C               	bsf	3980,7,c	;volatile
  3132  001546  EFA6  F00A         	goto	l45
  3133  00154A                     l43:
  3134                           
  3135                           ;./lcd.h: 22:         LATD7 = 0;
  3136  00154A  9E8C               	bcf	3980,7,c	;volatile
  3137  00154C                     l45:
  3138  00154C  0012               	return		;funcret
  3139  00154E                     __end_of_Lcd_Port:
  3140                           	callstack 0
  3141                           
  3142                           	psect	rparam
  3143  0000                     
  3144                           	psect	idloc
  3145                           
  3146                           ;Config register IDLOC0 @ 0x200000
  3147                           ;	unspecified, using default values
  3148  200000                     	org	2097152
  3149  200000  FF                 	db	255
  3150                           
  3151                           ;Config register IDLOC1 @ 0x200001
  3152                           ;	unspecified, using default values
  3153  200001                     	org	2097153
  3154  200001  FF                 	db	255
  3155                           
  3156                           ;Config register IDLOC2 @ 0x200002
  3157                           ;	unspecified, using default values
  3158  200002                     	org	2097154
  3159  200002  FF                 	db	255
  3160                           
  3161                           ;Config register IDLOC3 @ 0x200003
  3162                           ;	unspecified, using default values
  3163  200003                     	org	2097155
  3164  200003  FF                 	db	255
  3165                           
  3166                           ;Config register IDLOC4 @ 0x200004
  3167                           ;	unspecified, using default values
  3168  200004                     	org	2097156
  3169  200004  FF                 	db	255
  3170                           
  3171                           ;Config register IDLOC5 @ 0x200005
  3172                           ;	unspecified, using default values
  3173  200005                     	org	2097157
  3174  200005  FF                 	db	255
  3175                           
  3176                           ;Config register IDLOC6 @ 0x200006
  3177                           ;	unspecified, using default values
  3178  200006                     	org	2097158
  3179  200006  FF                 	db	255
  3180                           
  3181                           ;Config register IDLOC7 @ 0x200007
  3182                           ;	unspecified, using default values
  3183  200007                     	org	2097159
  3184  200007  FF                 	db	255
  3185                           
  3186                           	psect	config
  3187                           
  3188                           ;Config register CONFIG1L @ 0x300000
  3189                           ;	unspecified, using default values
  3190                           ;	PLL Prescaler Selection bits
  3191                           ;	PLLDIV = 0x0, unprogrammed default
  3192                           ;	System Clock Postscaler Selection bits
  3193                           ;	CPUDIV = 0x0, unprogrammed default
  3194                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3195                           ;	USBDIV = 0x0, unprogrammed default
  3196  300000                     	org	3145728
  3197  300000  00                 	db	0
  3198                           
  3199                           ;Config register CONFIG1H @ 0x300001
  3200                           ;	Oscillator Selection bits
  3201                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3202                           ;	Fail-Safe Clock Monitor Enable bit
  3203                           ;	FCMEN = 0x0, unprogrammed default
  3204                           ;	Internal/External Oscillator Switchover bit
  3205                           ;	IESO = 0x0, unprogrammed default
  3206  300001                     	org	3145729
  3207  300001  09                 	db	9
  3208                           
  3209                           ;Config register CONFIG2L @ 0x300002
  3210                           ;	unspecified, using default values
  3211                           ;	Power-up Timer Enable bit
  3212                           ;	PWRT = 0x1, unprogrammed default
  3213                           ;	Brown-out Reset Enable bits
  3214                           ;	BOR = 0x3, unprogrammed default
  3215                           ;	Brown-out Reset Voltage bits
  3216                           ;	BORV = 0x3, unprogrammed default
  3217                           ;	USB Voltage Regulator Enable bit
  3218                           ;	VREGEN = 0x0, unprogrammed default
  3219  300002                     	org	3145730
  3220  300002  1F                 	db	31
  3221                           
  3222                           ;Config register CONFIG2H @ 0x300003
  3223                           ;	Watchdog Timer Enable bit
  3224                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3225                           ;	Watchdog Timer Postscale Select bits
  3226                           ;	WDTPS = 0xF, unprogrammed default
  3227  300003                     	org	3145731
  3228  300003  1E                 	db	30
  3229                           
  3230                           ; Padding undefined space
  3231  300004                     	org	3145732
  3232  300004  FF                 	db	255
  3233                           
  3234                           ;Config register CONFIG3H @ 0x300005
  3235                           ;	CCP2 MUX bit
  3236                           ;	CCP2MX = 0x1, unprogrammed default
  3237                           ;	PORTB A/D Enable bit
  3238                           ;	PBADEN = 0x1, unprogrammed default
  3239                           ;	Low-Power Timer 1 Oscillator Enable bit
  3240                           ;	LPT1OSC = 0x0, unprogrammed default
  3241                           ;	MCLR Pin Enable bit
  3242                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3243  300005                     	org	3145733
  3244  300005  03                 	db	3
  3245                           
  3246                           ;Config register CONFIG4L @ 0x300006
  3247                           ;	unspecified, using default values
  3248                           ;	Stack Full/Underflow Reset Enable bit
  3249                           ;	STVREN = 0x1, unprogrammed default
  3250                           ;	Single-Supply ICSP Enable bit
  3251                           ;	LVP = 0x1, unprogrammed default
  3252                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3253                           ;	ICPRT = 0x0, unprogrammed default
  3254                           ;	Extended Instruction Set Enable bit
  3255                           ;	XINST = 0x0, unprogrammed default
  3256                           ;	Background Debugger Enable bit
  3257                           ;	DEBUG = 0x1, unprogrammed default
  3258  300006                     	org	3145734
  3259  300006  85                 	db	133
  3260                           
  3261                           ; Padding undefined space
  3262  300007                     	org	3145735
  3263  300007  FF                 	db	255
  3264                           
  3265                           ;Config register CONFIG5L @ 0x300008
  3266                           ;	unspecified, using default values
  3267                           ;	Code Protection bit
  3268                           ;	CP0 = 0x1, unprogrammed default
  3269                           ;	Code Protection bit
  3270                           ;	CP1 = 0x1, unprogrammed default
  3271                           ;	Code Protection bit
  3272                           ;	CP2 = 0x1, unprogrammed default
  3273                           ;	Code Protection bit
  3274                           ;	CP3 = 0x1, unprogrammed default
  3275  300008                     	org	3145736
  3276  300008  0F                 	db	15
  3277                           
  3278                           ;Config register CONFIG5H @ 0x300009
  3279                           ;	unspecified, using default values
  3280                           ;	Boot Block Code Protection bit
  3281                           ;	CPB = 0x1, unprogrammed default
  3282                           ;	Data EEPROM Code Protection bit
  3283                           ;	CPD = 0x1, unprogrammed default
  3284  300009                     	org	3145737
  3285  300009  C0                 	db	192
  3286                           
  3287                           ;Config register CONFIG6L @ 0x30000A
  3288                           ;	unspecified, using default values
  3289                           ;	Write Protection bit
  3290                           ;	WRT0 = 0x1, unprogrammed default
  3291                           ;	Write Protection bit
  3292                           ;	WRT1 = 0x1, unprogrammed default
  3293                           ;	Write Protection bit
  3294                           ;	WRT2 = 0x1, unprogrammed default
  3295                           ;	Write Protection bit
  3296                           ;	WRT3 = 0x1, unprogrammed default
  3297  30000A                     	org	3145738
  3298  30000A  0F                 	db	15
  3299                           
  3300                           ;Config register CONFIG6H @ 0x30000B
  3301                           ;	unspecified, using default values
  3302                           ;	Configuration Register Write Protection bit
  3303                           ;	WRTC = 0x1, unprogrammed default
  3304                           ;	Boot Block Write Protection bit
  3305                           ;	WRTB = 0x1, unprogrammed default
  3306                           ;	Data EEPROM Write Protection bit
  3307                           ;	WRTD = 0x1, unprogrammed default
  3308  30000B                     	org	3145739
  3309  30000B  E0                 	db	224
  3310                           
  3311                           ;Config register CONFIG7L @ 0x30000C
  3312                           ;	unspecified, using default values
  3313                           ;	Table Read Protection bit
  3314                           ;	EBTR0 = 0x1, unprogrammed default
  3315                           ;	Table Read Protection bit
  3316                           ;	EBTR1 = 0x1, unprogrammed default
  3317                           ;	Table Read Protection bit
  3318                           ;	EBTR2 = 0x1, unprogrammed default
  3319                           ;	Table Read Protection bit
  3320                           ;	EBTR3 = 0x1, unprogrammed default
  3321  30000C                     	org	3145740
  3322  30000C  0F                 	db	15
  3323                           
  3324                           ;Config register CONFIG7H @ 0x30000D
  3325                           ;	unspecified, using default values
  3326                           ;	Boot Block Table Read Protection bit
  3327                           ;	EBTRB = 0x1, unprogrammed default
  3328  30000D                     	org	3145741
  3329  30000D  40                 	db	64
  3330                           tosu	equ	0xFFF
  3331                           tosh	equ	0xFFE
  3332                           tosl	equ	0xFFD
  3333                           stkptr	equ	0xFFC
  3334                           pclatu	equ	0xFFB
  3335                           pclath	equ	0xFFA
  3336                           pcl	equ	0xFF9
  3337                           tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           prodh	equ	0xFF4
  3342                           prodl	equ	0xFF3
  3343                           indf0	equ	0xFEF
  3344                           postinc0	equ	0xFEE
  3345                           postdec0	equ	0xFED
  3346                           preinc0	equ	0xFEC
  3347                           plusw0	equ	0xFEB
  3348                           fsr0h	equ	0xFEA
  3349                           fsr0l	equ	0xFE9
  3350                           wreg	equ	0xFE8
  3351                           indf1	equ	0xFE7
  3352                           postinc1	equ	0xFE6
  3353                           postdec1	equ	0xFE5
  3354                           preinc1	equ	0xFE4
  3355                           plusw1	equ	0xFE3
  3356                           fsr1h	equ	0xFE2
  3357                           fsr1l	equ	0xFE1
  3358                           bsr	equ	0xFE0
  3359                           indf2	equ	0xFDF
  3360                           postinc2	equ	0xFDE
  3361                           postdec2	equ	0xFDD
  3362                           preinc2	equ	0xFDC
  3363                           plusw2	equ	0xFDB
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        2
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     47      95
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(COMRAM[16]), linha1(COMRAM[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(COMRAM[16]), linha1(COMRAM[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S673_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(COMRAM[16]), linha1(COMRAM[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(COMRAM[16]), linha1(COMRAM[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(COMRAM[16]), linha1(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->___fldiv
    _print_belt->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    ___xxtofl->___wmul
    ___fldiv->___xxtofl
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8678
                                             45 COMRAM     2     2      0
                           _Lcd_Init
                            ___fldiv
                             ___fleq
                             ___flge
                             ___wmul
                           ___xxtofl
                         _print_belt
                          _setup_ADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup_ADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_belt                                           1     1      0    2940
                                             35 COMRAM     1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    2059
                                             23 COMRAM    12     8      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    1558
                                             15 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    34      6    1208
                                              9 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     782
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     2      2     362
                                              4 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     120
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     497
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     942
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fleq                                              12     4      8     494
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             20 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     135
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0      75
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   ___fldiv
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___fleq
   ___flge
   ___wmul
   ___xxtofl
   _print_belt
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
   _setup_ADC
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7F      20        0.0%
DATA                 0      0      7F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 06 22:50:35 2021

             ___fldiv@aexp 002D               ___fldiv@bexp 002C               ___fldiv@sign 0025  
                       l41 1534                         l43 154A                         l60 142C  
                       l45 154C                         l37 1508                         l39 151E  
                       l63 1650                         l48 16B8                         l57 1492  
                       l69 15DA                         l93 13BA                         l88 1698  
                       l99 0BE8                         u50 1502                         u51 14FE  
                       u60 1518                         u61 1514                         u70 152E  
                       u71 152A                         u80 1544                         u81 1540  
      ___wmul@multiplicand 0003                        l107 0E1A                        l118 1676  
                      l700 0BBC                        l702 0A1C                        l711 0A62  
                      l383 1092                        l713 0ADA                        l705 09E0  
                      l377 1336                        l714 0AC8                        l388 10D8  
                      l930 169E                        l834 14E8                        l835 14F0  
                      l932 16A4                        l780 0F10                        l940 1628  
                      l773 0E78                        l829 11C2                        l934 16A6  
                      l950 163E                        l942 162A                        l847 128C  
                      l880 14F4                        l936 16B6                        l928 169C  
                      l776 0FD4                        l952 1644                        l944 1632  
                      l890 152E                        l882 1502                        l954 1646  
                      l946 1634                        l938 161C                        l858 16BC  
                      l787 0F6C                        l892 1536                        l884 150A  
                      l956 164E                        l948 163C                        l796 159A  
                      l894 1544                        l886 1518                        l888 1520  
                      u700 1144                        u701 1140                        u710 14E8  
                      u711 14E4                        u800 08A4                        u720 1440  
                      u801 08A0                        u721 143C                        u810 08B6  
                      u730 1474                        u650 11D6                        u811 08B2  
                      u731 1470                        u651 11D2                        u900 0A60  
                      u820 08C6                        u740 15DA                        u660 11E8  
                      u901 0A5C                        u821 08C2                        u741 15D6  
                      u661 11E4                        u910 0A80                        u830 0906  
                      u670 1210                        u750 137E                        u911 0A7C  
                      u831 0902                        u671 120C                        u751 137A  
                      u920 0A92                        u840 0946                        u680 1246  
                      u760 13A2                        u921 0A8E                        u841 0942  
                      u681 1242                        u761 139E                        u930 0AC0  
                      u850 09BC                        u770 083E                        u690 10FE  
                      u931 0ABC                        u851 09B8                        u771 083A  
                      u691 10FA                        u940 0AD6                        u860 09DE  
                      u780 0850                        u941 0AD2                        u861 09DA  
                      u781 084C                        u950 0AEA                        u870 0A08  
                      u790 0860                        u951 0AE6                        u871 0A04  
                      u791 085C                        u960 0B04                        u880 0A2C  
                      u961 0B00                        u881 0A28                        u970 0B4C  
                      u890 0A42                        u971 0B48                        u891 0A3E  
                      u980 0B7C                        u981 0B78                        u990 0BAA  
                      u991 0BA6                        wreg 000FE8                       l1010 13E8  
                     l1002 13BC                       l1020 140E                       l1012 13EE  
                     l1004 13C2                       l1022 1414                       l1014 13FC  
                     l1006 13D2                       l1030 1678                       l1024 141A  
                     l1016 1402                       l1008 13D8                       l1032 168C  
                     l1026 1420                       l1018 1408                       l1034 1696  
                     l1028 1426                       l1400 159C                       l1402 15A8  
                     l1330 11C4                       l1410 155E                       l1500 0946  
                     l1404 15BA                       l1340 1246                       l1332 11D6  
                     l1412 1566                       l1420 133A                       l1510 0994  
                     l1406 15BE                       l1334 11E8                       l1350 111C  
                     l1414 156E                       l1430 137E                       l1422 1344  
                     l1520 09DE                       l1512 09A4                       l1504 095A  
                     l1600 0FD6                       l1440 1652                       l1336 11F2  
                     l1352 1120                       l1344 10DA                       l1416 158A  
                     l1408 154E                       l1432 138E                       l1424 1350  
                     l1530 0A2C                       l1522 09EA                       l1514 09AC  
                     l1506 0974                       l1450 083E                       l1610 1060  
                     l1602 1004                       l1442 166E                       l1338 1210  
                     l1370 11B0                       l1354 1144                       l1362 1172  
                     l1346 10FE                       l1434 13A2                       l1426 135A  
                     l1532 0A42                       l1540 0A72                       l1524 0A08  
                     l1516 09BC                       l1508 0984                       l1460 0872  
                     l1452 0840                       l1612 1072                       l1604 1014  
                     l1364 1180                       l1356 1152                       l1348 110C  
                     l1380 14A8                       l1436 13AA                       l1428 136E  
                     l1700 0D90                       l1542 0A80                       l1534 0A48  
                     l1526 0A0A                       l1518 09D0                       l1470 08A4  
                     l1454 0850                       l1462 087A                       l1446 0824  
                     l1614 1080                       l1606 1042                       l1630 0E9E  
                     l1622 0E24                       l1390 1458                       l1358 1166  
                     l1382 14CC                       l1438 13AE                       l1702 0DC2  
                     l1552 0AEA                       l1560 0B32                       l1544 0A84  
                     l1536 0A52                       l1528 0A1A                       l1480 08D8  
                     l1472 08A6                       l1464 088A                       l1456 0860  
                     l1448 0830                       l1616 10D0                       l1608 1052  
                     l1640 0EF8                       l1624 0E34                       l1392 1462  
                     l1384 1430                       l1368 118C                       l1376 1494  
                     l1704 0DD4                       l1570 0B9C                       l1562 0B4C  
                     l1554 0AF6                       l1546 0A92                       l1538 0A60  
                     l1490 091E                       l1474 08B6                       l1482 08E0  
                     l1466 0890                       l1458 0870                       l1618 10D6  
                     l1650 0F5C                       l1642 0EFA                       l1634 0EB2  
                     l1626 0E42                       l1394 1474                       l1386 1440  
                     l1378 149C                       l1706 0E06                       l1572 0BAA  
                     l1564 0B62                       l1556 0B04                       l1548 0AC0  
                     l1492 0922                       l1484 08F0                       l1476 08C6  
                     l1468 0896                       l1660 0FB4                       l1652 0F7A  
                     l1644 0F06                       l1636 0EBA                       l1628 0E88  
                     l1396 1486                       l1388 1452                       l1574 0BB0  
                     l1566 0B7C                       l1558 0B2E                       l1486 0906  
                     l1478 08D6                       l1590 12FA                       l1662 0FC2  
                     l1654 0F7C                       l1646 0F42                       l1638 0EC6  
                     l1398 148C                       l1670 0BCA                       l1576 0BB2  
                     l1568 0B98                       l1488 0916                       l1496 0936  
                     l1592 130A                       l1584 128E                       l1664 0FC4  
                     l1656 0F80                       l1648 0F4E                       l1680 0C08  
                     l1672 0BCE                       l1498 0946                       l1594 132E  
                     l1586 12BC                       l1658 0FA4                       l1690 0CDC  
                     l1682 0C68                       l1674 0BD2                       l1596 1334  
                     l1588 12CC                       l1692 0CF6                       l1684 0C9A  
                     l1676 0BE6                       l1668 0BBE                       l1694 0D28  
                     l1686 0CA4                       l1678 0BF6                       l1696 0D42  
                     l1688 0CAA                       l1698 0D74                       STR_1 0812  
                     STR_2 0801                       u1000 12BC                       u1001 12B8  
                     u1010 12FA                       u1011 12F6                       u1020 132E  
                     u1100 0E9E                       u1021 132A                       u1101 0E9A  
                     u1030 1004                       u1110 0EF4                       u1031 1000  
                     u1111 0EF0                       u1040 1042                       u1120 0F3E  
                     u1200 0CDC                       u1041 103E                       u1121 0F3A  
                     u1201 0CD8                       u1050 1060                       u1130 0F5C  
                     u1210 0D28                       u1051 105C                       u1131 0F58  
                     u1211 0D24                       u1060 1080                       u1140 0F6C  
                     u1220 0D74                       u1061 107C                       u1141 0F68  
                     u1221 0D70                       u1070 10D0                       u1150 0F7A  
                     u1230 0DC2                       u1071 10CC                       u1151 0F76  
                     u1231 0DBE                       u1160 0FB4                       u1080 0E34  
                     u1240 0E06                       u1161 0FB0                       u1081 0E30  
                     u1241 0E02                       u1170 0FC2                       u1090 0E42  
                     u1171 0FBE                       u1091 0E3E                       u1307 1636  
                     u1180 0BF6                       u1317 1648                       u1181 0BF2  
                     u1190 0C9A                       u1327 13C8                       u1191 0C96  
                     u1337 13DE                       u1257 0CE6                       u1347 13F4  
                     u1267 0D32                       u1357 16AC                       u1277 0D7E  
                     u1287 0DC8                       u1297 0E0C          ?_Lcd_Write_String 0005  
                     _dbuf 0060                       _main 0BBE                       _prec 0038  
                     _nout 0034                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
       ??_Lcd_Write_String 0007            ___fldiv@new_exp 0026            __end_of_Lcd_Cmd 16BA  
             ___param_bank 000000                      ?_main 0001            __end_of___fldiv 0BBE  
                    _LATE0 007C68                      _LATE1 007C69                      _LATD4 007C64  
                    _LATD5 007C65                      _LATD6 007C66                      _LATD7 007C67  
             vfpfcnvrt@fmt 000C    __size_of_Lcd_Set_Cursor 0066                      _TRISA 000F92  
                    _TRISD 000F95                      _TRISE 000F96                      _flags 003A  
                    _count 005C                      _fputc 11C4                      _width 0036  
                    _putch 16BC                      tablat 000FF5                      status 000FD8  
          __end_of_sprintf 159C           __end_of_Lcd_Init 142E           __end_of_Lcd_Port 154E  
          __initialization 15DC               __end_of_main 0E22                     ??_main 002E  
            __activetblptr 000001                     ?_fputc 0001                     _ADRESH 000FC4  
                   _ADRESL 000FC3                     ?_putch 0001                     _OSCCON 000FD3  
                ??_Lcd_Cmd 0002    __size_of_Lcd_Write_Char 0038           __end_of___xxtofl 0FD6  
             vfprintf@cfmt 0016                     ___flge 0FD6                     ___fleq 128E  
                   ___wmul 1652                  ??___fldiv 001D                     _linha1 004C  
                   _linha2 003C                     clear_0 15FA                     clear_1 1606  
                   isa$std 000001                     _tensao 0030                     fputc@c 0001  
             __pdataCOMRAM 005E               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                     putch@c 0001  
         __end_of_vfprintf 14F2                  ??_sprintf 001C            Lcd_Set_Cursor@a 0005  
          Lcd_Set_Cursor@b 0004            Lcd_Set_Cursor@y 0007            Lcd_Set_Cursor@z 0006  
               ___flge@ff1 0001                 ___flge@ff2 0005               ___xxtofl@arg 0011  
             ___xxtofl@exp 0010               ___xxtofl@val 0007                 ___fleq@ff1 0001  
               ___fleq@ff2 0005                 __accesstop 0060    __end_of__initialization 160C  
            ___rparam_used 000001             __pcstackCOMRAM 0001              __end_of_fputc 128E  
            __end_of_putch 16BE             _Lcd_Set_Cursor 142E                  ?_Lcd_Init 0001  
                ?_Lcd_Port 0001                    ??_fputc 0005                    ??_putch 0001  
               __pbssBANK0 0060                    ?___flge 0001                    ?___fleq 0001  
                  ?___wmul 0001  __size_of_Lcd_Write_String 0040     __end_of_Lcd_Set_Cursor 1494  
       __size_of_setup_ADC 0022                  ?___xxtofl 0007         __size_of_vfpfcnvrt 00EA  
               ??_Lcd_Init 0004                 ??_Lcd_Port 0001             _Lcd_Write_Char 161A  
                  _Lcd_Cmd 169A                    __Hparam 0000                    __Lparam 0000  
          __size_of___flge 0104            __size_of___fleq 00AA                    ___fldiv 0824  
          __size_of___wmul 0026                  ?_vfprintf 0010               __psmallconst 0800  
                  __pcinit 15DC                    __ramtop 0800            ?_Lcd_Set_Cursor 0004  
                  __ptext0 0BBE                    __ptext1 1678                    __ptext2 1338  
                  __ptext3 154E                    __ptext4 1494                    __ptext5 10DA  
                  __ptext6 11C4                    __ptext7 16BC                    __ptext8 159C  
                  __ptext9 161A                 ??___xxtofl 000B                    _sprintf 154E  
   __end_of_Lcd_Write_Char 1652       end_of_initialization 160C                    fputc@fp 0003  
        __end_of_setup_ADC 169A          __end_of_vfpfcnvrt 11C4                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
                Lcd_Port@a 0001                 ??_vfprintf 0016                 _print_belt 1338  
            ___xxtofl@sign 000F                ___fldiv@grs 0028                ___fldiv@rem 0021  
          ?_Lcd_Write_Char 0001          Lcd_Write_String@a 0005          Lcd_Write_String@i 0007  
           __end_of___flge 10DA             __end_of___fleq 1338                vfpfcnvrt@ap 000E  
              vfpfcnvrt@fp 000A             __end_of___wmul 1678           _Lcd_Write_String 159C  
            __pidataCOMRAM 16BA        start_initialization 15DC          __size_of_Lcd_Init 0072  
        __size_of_Lcd_Port 005C                vfprintf@fmt 0012                   ??___flge 0009  
                 ??___fleq 0009              _belt_position 005E                   ??___wmul 0005  
          Lcd_Write_Char@a 0004            Lcd_Write_Char@y 0003                ?_print_belt 0001  
                ___fldiv@a 0019                  ___fldiv@b 0015                __pbssCOMRAM 0030  
        __size_of___xxtofl 01B4                   ?_Lcd_Cmd 0001           ??_Lcd_Set_Cursor 0005  
                 ?___fldiv 0015          __size_of_vfprintf 005E                __smallconst 0800  
                 ?_sprintf 0018             __size_of_fputc 00CA             __size_of_putch 0002  
           ___wmul@product 0005        __size_of_print_belt 0084                   Lcd_Cmd@a 0003  
                _setup_ADC 1678                  _vfpfcnvrt 10DA                 _ADCON0bits 000FC2  
               _ADCON1bits 000FC1                 _ADCON2bits 000FC0          ___wmul@multiplier 0001  
         ??_Lcd_Write_Char 0002                   _Lcd_Init 13BC                   _Lcd_Port 14F2  
 __end_of_Lcd_Write_String 15DC           __size_of_Lcd_Cmd 0020                   __Hrparam 0000  
        print_belt@stopped 0024                 vfprintf@ap 0014                   __Lrparam 0000  
               vfprintf@fp 0010               __Lsmallconst 0800                 ?_setup_ADC 0001  
         __size_of___fldiv 039A                 ?_vfpfcnvrt 000A                 sprintf@fmt 001A  
                 ___xxtofl 0E22                   __ptext10 142E                   __ptext11 0E22  
                 __ptext12 1652                   __ptext13 0FD6                   __ptext14 128E  
                 __ptext15 0824                   __ptext16 13BC                   __ptext17 169A  
                 __ptext18 14F2           __size_of_sprintf 004E              __size_of_main 0264  
                 isa$xinst 000000                   _vfprintf 1494               ??_print_belt 0024  
       Lcd_Write_Char@temp 0002                  sprintf@ap 001C         __end_of_print_belt 13BC  
              ??_setup_ADC 0001                ??_vfpfcnvrt 0010         Lcd_Set_Cursor@temp 0008  
                 sprintf@f 001E                   sprintf@s 0018  
