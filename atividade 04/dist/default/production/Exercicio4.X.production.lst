

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 06 11:58:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 12/02/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     _LATEbits	set	3981
   114  0000                     _EECON2	set	4007
   115  0000                     _EEDATA	set	4008
   116  0000                     _EEADR	set	4009
   117  0000                     _LATD	set	3980
   118  0000                     _TRISB	set	3987
   119  0000                     _TRISE	set	3990
   120  0000                     _TRISD	set	3989
   121  0000                     _OSCCON	set	4051
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR0H	set	4055
   124  0000                     _RD	set	32048
   125  0000                     _WREN	set	32050
   126  0000                     _WR	set	32049
   127  0000                     _INT2F	set	32641
   128  0000                     _INT1F	set	32640
   129  0000                     _INT0F	set	32657
   130  0000                     _TMR0ON	set	32431
   131  0000                     _PSA	set	32427
   132  0000                     _T0CS	set	32429
   133  0000                     _T08BIT	set	32430
   134  0000                     _TMR0IF	set	32658
   135  0000                     _TMR0IE	set	32661
   136  0000                     _INTEDG2	set	32652
   137  0000                     _INT2IF	set	32641
   138  0000                     _INT2IE	set	32644
   139  0000                     _INTEDG1	set	32653
   140  0000                     _INT1IF	set	32640
   141  0000                     _INT1IE	set	32643
   142  0000                     _INTEDG0	set	32654
   143  0000                     _INT0IF	set	32657
   144  0000                     _INT0IE	set	32660
   145  0000                     _GIE	set	32663
   146                           
   147                           	psect	smallconst
   148  000800                     __psmallconst:
   149                           	callstack 0
   150  000800  00                 	db	0
   151  000801                     STR_2:
   152  000801  41                 	db	65	;'A'
   153  000802  70                 	db	112	;'p'
   154  000803  65                 	db	101	;'e'
   155  000804  72                 	db	114	;'r'
   156  000805  74                 	db	116	;'t'
   157  000806  65                 	db	101	;'e'
   158  000807  20                 	db	32
   159  000808  70                 	db	112	;'p'
   160  000809  20                 	db	32
   161  00080A  49                 	db	73	;'I'
   162  00080B  6E                 	db	110	;'n'
   163  00080C  69                 	db	105	;'i'
   164  00080D  63                 	db	99	;'c'
   165  00080E  69                 	db	105	;'i'
   166  00080F  61                 	db	97	;'a'
   167  000810  72                 	db	114	;'r'
   168  000811  00                 	db	0
   169  000812                     STR_11:
   170  000812  56                 	db	86	;'V'
   171  000813  6F                 	db	111	;'o'
   172  000814  63                 	db	99	;'c'
   173  000815  65                 	db	101	;'e'
   174  000816  20                 	db	32
   175  000817  67                 	db	103	;'g'
   176  000818  61                 	db	97	;'a'
   177  000819  6E                 	db	110	;'n'
   178  00081A  68                 	db	104	;'h'
   179  00081B  6F                 	db	111	;'o'
   180  00081C  75                 	db	117	;'u'
   181  00081D  20                 	db	32
   182  00081E  3A                 	db	58	;':'
   183  00081F  29                 	db	41
   184  000820  00                 	db	0
   185  000821                     STR_7:
   186  000821  56                 	db	86	;'V'
   187  000822  6F                 	db	111	;'o'
   188  000823  63                 	db	99	;'c'
   189  000824  65                 	db	101	;'e'
   190  000825  20                 	db	32
   191  000826  65                 	db	101	;'e'
   192  000827  72                 	db	114	;'r'
   193  000828  72                 	db	114	;'r'
   194  000829  6F                 	db	111	;'o'
   195  00082A  75                 	db	117	;'u'
   196  00082B  20                 	db	32
   197  00082C  3A                 	db	58	;':'
   198  00082D  28                 	db	40
   199  00082E  00                 	db	0
   200  00082F                     STR_1:
   201  00082F  52                 	db	82	;'R'
   202  000830  65                 	db	101	;'e'
   203  000831  63                 	db	99	;'c'
   204  000832  6F                 	db	111	;'o'
   205  000833  72                 	db	114	;'r'
   206  000834  64                 	db	100	;'d'
   207  000835  65                 	db	101	;'e'
   208  000836  3A                 	db	58	;':'
   209  000837  20                 	db	32
   210  000838  25                 	db	37
   211  000839  64                 	db	100	;'d'
   212  00083A  00                 	db	0
   213  00083B                     STR_9:
   214  00083B  53                 	db	83	;'S'
   215  00083C  75                 	db	117	;'u'
   216  00083D  63                 	db	99	;'c'
   217  00083E  65                 	db	101	;'e'
   218  00083F  73                 	db	115	;'s'
   219  000840  73                 	db	115	;'s'
   220  000841  6F                 	db	111	;'o'
   221  000842  20                 	db	32
   222  000843  3A                 	db	58	;':'
   223  000844  29                 	db	41
   224  000845  00                 	db	0
   225  000846                     STR_6:
   226  000846  25                 	db	37
   227  000847  64                 	db	100	;'d'
   228  000848  20                 	db	32
   229  000849  64                 	db	100	;'d'
   230  00084A  65                 	db	101	;'e'
   231  00084B  20                 	db	32
   232  00084C  25                 	db	37
   233  00084D  64                 	db	100	;'d'
   234  00084E  00                 	db	0
   235  00084F                     STR_3:
   236  00084F  41                 	db	65	;'A'
   237  000850  74                 	db	116	;'t'
   238  000851  65                 	db	101	;'e'
   239  000852  6E                 	db	110	;'n'
   240  000853  63                 	db	99	;'c'
   241  000854  61                 	db	97	;'a'
   242  000855  6F                 	db	111	;'o'
   243  000856  00                 	db	0
   244  000857                     STR_5:
   245  000857  53                 	db	83	;'S'
   246  000858  75                 	db	117	;'u'
   247  000859  61                 	db	97	;'a'
   248  00085A  20                 	db	32
   249  00085B  76                 	db	118	;'v'
   250  00085C  65                 	db	101	;'e'
   251  00085D  7A                 	db	122	;'z'
   252  00085E  00                 	db	0
   253  00085F  00                 	db	0	; dummy byte at the end
   254  0000                     
   255                           ; #config settings
   256                           
   257                           	psect	cinit
   258  002748                     __pcinit:
   259                           	callstack 0
   260  002748                     start_initialization:
   261                           	callstack 0
   262  002748                     __initialization:
   263                           	callstack 0
   264                           
   265                           ; Clear objects allocated to BANK1 (73 bytes)
   266  002748  EE01  F000         	lfsr	0,__pbssBANK1
   267  00274C  0E49               	movlw	73
   268  00274E                     clear_0:
   269  00274E  6AEE               	clrf	postinc0,c
   270  002750  06E8               	decf	wreg,f,c
   271  002752  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to BANK0 (32 bytes)
   274  002754  EE00  F0C0         	lfsr	0,__pbssBANK0
   275  002758  0E20               	movlw	32
   276  00275A                     clear_1:
   277  00275A  6AEE               	clrf	postinc0,c
   278  00275C  06E8               	decf	wreg,f,c
   279  00275E  E1FD               	bnz	clear_1
   280                           
   281                           ; Clear objects allocated to COMRAM (2 bytes)
   282  002760  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   283  002762  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   284  002764                     end_of_initialization:
   285                           	callstack 0
   286  002764                     __end_of__initialization:
   287                           	callstack 0
   288  002764  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   289  002766  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290  002768  0E00               	movlw	low (__Lsmallconst shr (0+16))
   291  00276A  6EF8               	movwf	tblptru,c
   292  00276C  0E08               	movlw	high __Lsmallconst
   293  00276E  6EF7               	movwf	tblptrh,c
   294  002770  0100               	movlb	0
   295  002772  EF81  F011         	goto	_main	;jump to C main() function
   296                           
   297                           	psect	bssCOMRAM
   298  00005D                     __pbssCOMRAM:
   299                           	callstack 0
   300  00005D                     _level:
   301                           	callstack 0
   302  00005D                     	ds	1
   303  00005E                     _playerPosition:
   304                           	callstack 0
   305  00005E                     	ds	1
   306                           
   307                           	psect	bssBANK0
   308  0000C0                     __pbssBANK0:
   309                           	callstack 0
   310  0000C0                     _nout:
   311                           	callstack 0
   312  0000C0                     	ds	2
   313  0000C2                     _width:
   314                           	callstack 0
   315  0000C2                     	ds	2
   316  0000C4                     _prec:
   317                           	callstack 0
   318  0000C4                     	ds	2
   319  0000C6                     _flags:
   320                           	callstack 0
   321  0000C6                     	ds	2
   322  0000C8                     _initialized@lcd_kit$F215:
   323                           	callstack 0
   324  0000C8                     	ds	1
   325  0000C9                     _initialized:
   326                           	callstack 0
   327  0000C9                     	ds	1
   328  0000CA                     _cont:
   329                           	callstack 0
   330  0000CA                     	ds	1
   331  0000CB                     _playing:
   332                           	callstack 0
   333  0000CB                     	ds	1
   334  0000CC                     _linha1:
   335                           	callstack 0
   336  0000CC                     	ds	16
   337  0000DC                     _seed:
   338                           	callstack 0
   339  0000DC                     	ds	4
   340                           
   341                           	psect	bssBANK1
   342  000100                     __pbssBANK1:
   343                           	callstack 0
   344  000100                     _dbuf:
   345                           	callstack 0
   346  000100                     	ds	32
   347  000120                     _gameSequence:
   348                           	callstack 0
   349  000120                     	ds	25
   350  000139                     _linha2:
   351                           	callstack 0
   352  000139                     	ds	16
   353                           
   354                           	psect	cstackBANK1
   355  000149                     __pcstackBANK1:
   356                           	callstack 0
   357  000149                     ?_vfpfcnvrt:
   358                           	callstack 0
   359  000149                     vfpfcnvrt@fp:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x0
   363  000149                     	ds	2
   364  00014B                     vfpfcnvrt@fmt:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  00014B                     	ds	2
   369  00014D                     vfpfcnvrt@ap:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x4
   373  00014D                     	ds	2
   374  00014F                     ??_vfpfcnvrt:
   375                           
   376                           ; 1 bytes @ 0x6
   377  00014F                     	ds	2
   378  000151                     vfpfcnvrt@ll:
   379                           	callstack 0
   380                           
   381                           ; 8 bytes @ 0x8
   382  000151                     	ds	8
   383  000159                     ?_vfprintf:
   384                           	callstack 0
   385  000159                     vfprintf@fp:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x10
   389  000159                     	ds	2
   390  00015B                     vfprintf@fmt:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x12
   394  00015B                     	ds	2
   395  00015D                     vfprintf@ap:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x14
   399  00015D                     	ds	2
   400  00015F                     vfprintf@cfmt:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x16
   404  00015F                     	ds	2
   405  000161                     ?_sprintf:
   406                           	callstack 0
   407  000161                     sprintf@s:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x18
   411  000161                     	ds	2
   412  000163                     sprintf@fmt:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x1A
   416  000163                     	ds	4
   417  000167                     sprintf@ap:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x1E
   421  000167                     	ds	2
   422  000169                     sprintf@f:
   423                           	callstack 0
   424                           
   425                           ; 6 bytes @ 0x20
   426  000169                     	ds	6
   427  00016F                     
   428                           ; 2 bytes @ 0x26
   429  00016F                     	ds	2
   430  000171                     
   431                           ; 3 bytes @ 0x28
   432  000171                     	ds	3
   433  000174                     ??_main:
   434                           
   435                           ; 1 bytes @ 0x2B
   436  000174                     	ds	2
   437                           
   438                           	psect	cstackBANK0
   439  000060                     __pcstackBANK0:
   440                           	callstack 0
   441  000060                     ?i2_sprintf:
   442                           	callstack 0
   443  000060                     i2sprintf@s:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x0
   447  000060                     	ds	2
   448  000062                     i2sprintf@fmt:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x2
   452  000062                     	ds	6
   453  000068                     i2sprintf@ap:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x8
   457  000068                     	ds	2
   458  00006A                     i2sprintf@f:
   459                           	callstack 0
   460                           
   461                           ; 6 bytes @ 0xA
   462  00006A                     	ds	6
   463  000070                     printPlayingMessage@total:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x10
   467  000070                     	ds	1
   468  000071                     ??_checkPlayerInput:
   469                           
   470                           ; 1 bytes @ 0x11
   471  000071                     	ds	7
   472  000078                     ??_interrupcao:
   473                           
   474                           ; 1 bytes @ 0x18
   475  000078                     	ds	8
   476  000080                     ??_atraso_lcd:
   477  000080                     ?_strlen:
   478                           	callstack 0
   479  000080                     ?___aodiv:
   480                           	callstack 0
   481  000080                     ?___aomod:
   482                           	callstack 0
   483  000080                     EEPROM_WriteByte@eepromData:
   484                           	callstack 0
   485  000080                     EEPROM_ReadByte@eepromAddress:
   486                           	callstack 0
   487  000080                     clear@linha:
   488                           	callstack 0
   489  000080                     fputc@c:
   490                           	callstack 0
   491  000080                     strlen@s:
   492                           	callstack 0
   493  000080                     ___aodiv@dividend:
   494                           	callstack 0
   495  000080                     ___aomod@dividend:
   496                           	callstack 0
   497                           
   498                           ; 8 bytes @ 0x20
   499  000080                     	ds	1
   500  000081                     EEPROM_WriteByte@eepromAddress:
   501                           	callstack 0
   502  000081                     instr_wr@inst:
   503                           	callstack 0
   504  000081                     dado_wr@texto:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x21
   508  000081                     	ds	1
   509  000082                     EEPROM_WriteByte@gie_Status:
   510                           	callstack 0
   511  000082                     escreve_texto@linha:
   512                           	callstack 0
   513  000082                     clear@i:
   514                           	callstack 0
   515  000082                     fputc@fp:
   516                           	callstack 0
   517  000082                     strlen@a:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x22
   521  000082                     	ds	2
   522  000084                     ??_fputc:
   523  000084                     escreve_texto@i:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x24
   527  000084                     	ds	4
   528  000088                     ___aodiv@divisor:
   529                           	callstack 0
   530  000088                     ___aomod@divisor:
   531                           	callstack 0
   532                           
   533                           ; 8 bytes @ 0x28
   534  000088                     	ds	1
   535  000089                     fputs@s:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x29
   539  000089                     	ds	2
   540  00008B                     fputs@fp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x2B
   544  00008B                     	ds	2
   545  00008D                     fputs@c:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x2D
   549  00008D                     	ds	1
   550  00008E                     fputs@i:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x2E
   554  00008E                     	ds	2
   555  000090                     ?_pad:
   556                           	callstack 0
   557  000090                     ___aodiv@counter:
   558                           	callstack 0
   559  000090                     ___aomod@counter:
   560                           	callstack 0
   561  000090                     pad@fp:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x30
   565  000090                     	ds	1
   566  000091                     ___aodiv@sign:
   567                           	callstack 0
   568  000091                     ___aomod@sign:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x31
   572  000091                     	ds	1
   573  000092                     ?_abs:
   574                           	callstack 0
   575  000092                     pad@buf:
   576                           	callstack 0
   577  000092                     abs@a:
   578                           	callstack 0
   579  000092                     ___aodiv@quotient:
   580                           	callstack 0
   581                           
   582                           ; 8 bytes @ 0x32
   583  000092                     	ds	2
   584  000094                     ??_abs:
   585  000094                     pad@p:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x34
   589  000094                     	ds	2
   590  000096                     ??_pad:
   591                           
   592                           ; 1 bytes @ 0x36
   593  000096                     	ds	1
   594  000097                     pad@i:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x37
   598  000097                     	ds	2
   599  000099                     pad@w:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x39
   603  000099                     	ds	2
   604  00009B                     ?_dtoa:
   605                           	callstack 0
   606  00009B                     dtoa@fp:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x3B
   610  00009B                     	ds	2
   611  00009D                     dtoa@d:
   612                           	callstack 0
   613                           
   614                           ; 8 bytes @ 0x3D
   615  00009D                     	ds	8
   616  0000A5                     ??_dtoa:
   617                           
   618                           ; 1 bytes @ 0x45
   619  0000A5                     	ds	8
   620  0000AD                     _dtoa$743:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x4D
   624  0000AD                     	ds	2
   625  0000AF                     dtoa@p:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x4F
   629  0000AF                     	ds	2
   630  0000B1                     dtoa@w:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x51
   634  0000B1                     	ds	2
   635  0000B3                     dtoa@s:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x53
   639  0000B3                     	ds	2
   640  0000B5                     dtoa@n:
   641                           	callstack 0
   642                           
   643                           ; 8 bytes @ 0x55
   644  0000B5                     	ds	8
   645  0000BD                     dtoa@i:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x5D
   649  0000BD                     	ds	2
   650  0000BF                     printStartMessage@record:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x5F
   654  0000BF                     	ds	1
   655                           
   656                           	psect	cstackCOMRAM
   657  000001                     __pcstackCOMRAM:
   658                           	callstack 0
   659  000001                     ??_showGameSequence:
   660  000001                     ??i2_atraso_lcd:
   661  000001                     ?i2_strlen:
   662                           	callstack 0
   663  000001                     ?___lmul:
   664                           	callstack 0
   665  000001                     ?i2___aodiv:
   666                           	callstack 0
   667  000001                     ?i2___aomod:
   668                           	callstack 0
   669  000001                     i2EEPROM_WriteByte@eepromData:
   670                           	callstack 0
   671  000001                     i2EEPROM_ReadByte@eepromAddress:
   672                           	callstack 0
   673  000001                     srand@s:
   674                           	callstack 0
   675  000001                     i2clear@linha:
   676                           	callstack 0
   677  000001                     i2fputc@c:
   678                           	callstack 0
   679  000001                     i2strlen@s:
   680                           	callstack 0
   681  000001                     ___lmul@multiplier:
   682                           	callstack 0
   683  000001                     i2___aodiv@dividend:
   684                           	callstack 0
   685  000001                     i2___aomod@dividend:
   686                           	callstack 0
   687                           
   688                           ; 8 bytes @ 0x0
   689  000001                     	ds	1
   690  000002                     i2EEPROM_WriteByte@eepromAddress:
   691                           	callstack 0
   692  000002                     i2instr_wr@inst:
   693                           	callstack 0
   694  000002                     i2dado_wr@texto:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x1
   698  000002                     	ds	1
   699  000003                     ??_srand:
   700  000003                     showGameSequence@i:
   701                           	callstack 0
   702  000003                     i2EEPROM_WriteByte@gie_Status:
   703                           	callstack 0
   704  000003                     i2escreve_texto@linha:
   705                           	callstack 0
   706  000003                     i2clear@i:
   707                           	callstack 0
   708  000003                     i2fputc@fp:
   709                           	callstack 0
   710  000003                     i2strlen@a:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x2
   714  000003                     	ds	2
   715  000005                     ??i2_fputc:
   716  000005                     i2escreve_texto@i:
   717                           	callstack 0
   718  000005                     ___lmul@multiplicand:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x4
   722  000005                     	ds	4
   723  000009                     ___lmul@product:
   724                           	callstack 0
   725  000009                     i2___aodiv@divisor:
   726                           	callstack 0
   727  000009                     i2___aomod@divisor:
   728                           	callstack 0
   729                           
   730                           ; 8 bytes @ 0x8
   731  000009                     	ds	1
   732  00000A                     i2fputs@s:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x9
   736  00000A                     	ds	2
   737  00000C                     i2fputs@fp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0xB
   741  00000C                     	ds	1
   742  00000D                     ?_rand:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0xC
   746  00000D                     	ds	1
   747  00000E                     i2fputs@c:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0xD
   751  00000E                     	ds	1
   752  00000F                     ??_rand:
   753  00000F                     i2fputs@i:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xE
   757  00000F                     	ds	2
   758  000011                     ?i2_pad:
   759                           	callstack 0
   760  000011                     i2___aodiv@counter:
   761                           	callstack 0
   762  000011                     i2___aomod@counter:
   763                           	callstack 0
   764  000011                     i2pad@fp:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x10
   768  000011                     	ds	1
   769  000012                     i2___aodiv@sign:
   770                           	callstack 0
   771  000012                     i2___aomod@sign:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x11
   775  000012                     	ds	1
   776  000013                     ?___awmod:
   777                           	callstack 0
   778  000013                     ?i2_abs:
   779                           	callstack 0
   780  000013                     ___awmod@dividend:
   781                           	callstack 0
   782  000013                     i2pad@buf:
   783                           	callstack 0
   784  000013                     i2abs@a:
   785                           	callstack 0
   786  000013                     i2___aodiv@quotient:
   787                           	callstack 0
   788                           
   789                           ; 8 bytes @ 0x12
   790  000013                     	ds	2
   791  000015                     ??i2_abs:
   792  000015                     ___awmod@divisor:
   793                           	callstack 0
   794  000015                     i2pad@p:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x14
   798  000015                     	ds	2
   799  000017                     ??i2_pad:
   800  000017                     ___awmod@counter:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x16
   804  000017                     	ds	1
   805  000018                     ___awmod@sign:
   806                           	callstack 0
   807  000018                     i2pad@i:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x17
   811  000018                     	ds	1
   812  000019                     generateGameSequence@toc:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x18
   816  000019                     	ds	1
   817  00001A                     i2pad@w:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x19
   821  00001A                     	ds	1
   822  00001B                     generateGameSequence@i:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x1A
   826  00001B                     	ds	1
   827  00001C                     ?i2_dtoa:
   828                           	callstack 0
   829  00001C                     i2dtoa@fp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x1B
   833  00001C                     	ds	2
   834  00001E                     i2dtoa@d:
   835                           	callstack 0
   836                           
   837                           ; 8 bytes @ 0x1D
   838  00001E                     	ds	8
   839  000026                     ??i2_dtoa:
   840                           
   841                           ; 1 bytes @ 0x25
   842  000026                     	ds	8
   843  00002E                     i2_dtoa$743:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x2D
   847  00002E                     	ds	2
   848  000030                     i2dtoa@p:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x2F
   852  000030                     	ds	2
   853  000032                     i2dtoa@w:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x31
   857  000032                     	ds	2
   858  000034                     i2dtoa@s:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x33
   862  000034                     	ds	2
   863  000036                     i2dtoa@n:
   864                           	callstack 0
   865                           
   866                           ; 8 bytes @ 0x35
   867  000036                     	ds	8
   868  00003E                     i2dtoa@i:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x3D
   872  00003E                     	ds	2
   873  000040                     ?i2_vfpfcnvrt:
   874                           	callstack 0
   875  000040                     i2vfpfcnvrt@fp:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x3F
   879  000040                     	ds	2
   880  000042                     i2vfpfcnvrt@fmt:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x41
   884  000042                     	ds	2
   885  000044                     i2vfpfcnvrt@ap:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x43
   889  000044                     	ds	2
   890  000046                     ??i2_vfpfcnvrt:
   891                           
   892                           ; 1 bytes @ 0x45
   893  000046                     	ds	2
   894  000048                     i2vfpfcnvrt@ll:
   895                           	callstack 0
   896                           
   897                           ; 8 bytes @ 0x47
   898  000048                     	ds	8
   899  000050                     ?i2_vfprintf:
   900                           	callstack 0
   901  000050                     i2vfprintf@fp:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x4F
   905  000050                     	ds	2
   906  000052                     i2vfprintf@fmt:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x51
   910  000052                     	ds	2
   911  000054                     i2vfprintf@ap:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x53
   915  000054                     	ds	2
   916  000056                     i2vfprintf@cfmt:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x55
   920  000056                     	ds	2
   921  000058                     ??_printErrorMessage:
   922  000058                     ??_printSucessMessage:
   923  000058                     ??_printWinnerMessage:
   924  000058                     printPlayingMessage@position:
   925                           	callstack 0
   926  000058                     i2printStartMessage@record:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x57
   930  000058                     	ds	1
   931  000059                     
   932                           ; 1 bytes @ 0x58
   933  000059                     	ds	1
   934  00005A                     checkPlayerInput@option:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x59
   938  00005A                     	ds	1
   939  00005B                     checkPlayerInput@record:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x5A
   943  00005B                     	ds	1
   944  00005C                     checkPlayerInput@record_191:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x5B
   948  00005C                     	ds	1
   949                           
   950 ;;
   951 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   952 ;;
   953 ;; *************** function _main *****************
   954 ;; Defined at:
   955 ;;		line 87 in file "main.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  argc            2   38[BANK1 ] int 
   958 ;;  argv            3   40[BANK1 ] PTR PTR unsigned char 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  2   38[BANK1 ] int 
   963 ;; Registers used:
   964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   970 ;;      Params:         0       0       5       0       0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0       0       0
   972 ;;      Temps:          0       0       2       0       0       0       0       0       0
   973 ;;      Totals:         0       0       7       0       0       0       0       0       0
   974 ;;Total ram usage:        7 bytes
   975 ;; Hardware stack levels required when called: 20
   976 ;; This function calls:
   977 ;;		_EEPROM_WriteByte
   978 ;;		_printStartMessage
   979 ;;		_setupInt
   980 ;;		_setupTmr0
   981 ;; This function is called by:
   982 ;;		Startup code after reset
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text0
   987  002302                     __ptext0:
   988                           	callstack 0
   989  002302                     _main:
   990                           	callstack 11
   991  002302                     
   992                           ;main.c: 88: }
   993  002302  0E60               	movlw	96
   994  002304  6ED3               	movwf	211,c	;volatile
   995  002306  0E00               	movlw	0
   996  002308  6E95               	movwf	149,c	;volatile
   997  00230A  0E00               	movlw	0
   998  00230C  6E96               	movwf	150,c	;volatile
   999  00230E  0E07               	movlw	7
  1000  002310  6E93               	movwf	147,c	;volatile
  1001  002312  688C               	setf	140,c	;volatile
  1002  002314  0E0D               	movlw	13
  1003  002316  0101               	movlb	1	; () banked
  1004  002318  6F75               	movwf	(??_main+1)& (0+255),b
  1005  00231A  0EAF               	movlw	175
  1006  00231C  6F74               	movwf	??_main& (0+255),b
  1007  00231E  0EB6               	movlw	182
  1008  002320                     u3627:
  1009  002320  2EE8               	decfsz	wreg,f,c
  1010  002322  D7FE               	bra	u3627
  1011  002324  2F74               	decfsz	??_main& (0+255),f,b
  1012  002326  D7FC               	bra	u3627
  1013  002328  2F75               	decfsz	(??_main+1)& (0+255),f,b
  1014  00232A  D7FA               	bra	u3627
  1015  00232C  F000               	nop	
  1016  00232E  0E00               	movlw	0
  1017  002330  0100               	movlb	0	; () banked
  1018  002332  6FCB               	movwf	_playing& (0+255),b
  1019  002334                     
  1020                           ; BSR set to: 0
  1021  002334  0E00               	movlw	0
  1022  002336  6FCA               	movwf	_cont& (0+255),b
  1023  002338                     
  1024                           ; BSR set to: 0
  1025  002338  0E00               	movlw	0
  1026  00233A  6F80               	movwf	EEPROM_WriteByte@eepromData& (0+255),b
  1027  00233C  0E00               	movlw	0
  1028  00233E  EC4A  F012         	call	_EEPROM_WriteByte
  1029  002342  EC32  F014         	call	_setupInt	;wreg free
  1030  002346  EC73  F014         	call	_setupTmr0	;wreg free
  1031  00234A  ECAC  F00E         	call	_printStartMessage	;wreg free
  1032  00234E                     l100:
  1033  00234E  EFA7  F011         	goto	l100
  1034  002352  EF07  F000         	goto	start
  1035  002356                     __end_of_main:
  1036                           	callstack 0
  1037                           
  1038 ;; *************** function _setupTmr0 *****************
  1039 ;; Defined at:
  1040 ;;		line 35 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1054 ;;      Params:         0       0       0       0       0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1057 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1058 ;;Total ram usage:        0 bytes
  1059 ;; Hardware stack levels used: 1
  1060 ;; Hardware stack levels required when called: 11
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text1
  1069  0028E6                     __ptext1:
  1070                           	callstack 0
  1071  0028E6                     _setupTmr0:
  1072                           	callstack 19
  1073  0028E6                     
  1074                           ;main.c: 36:             checkPlayerInput(0);
  1075  0028E6  9CD5               	bcf	4053,6,c	;volatile
  1076                           
  1077                           ;main.c: 37:         }
  1078  0028E8  9AD5               	bcf	4053,5,c	;volatile
  1079                           
  1080                           ;main.c: 38:         INT0F = 0;
  1081  0028EA  86D5               	bsf	4053,3,c	;volatile
  1082  0028EC                     
  1083                           ;main.c: 39:     }
  1084  0028EC  0E3C               	movlw	60
  1085  0028EE  6ED7               	movwf	215,c	;volatile
  1086                           
  1087                           ;main.c: 40:     if (INT1F){
  1088  0028F0  0EAF               	movlw	175
  1089  0028F2  6ED6               	movwf	214,c	;volatile
  1090  0028F4                     
  1091                           ;main.c: 41:         if (playing != 1){
  1092  0028F4  8ED5               	bsf	4053,7,c	;volatile
  1093  0028F6  0012               	return		;funcret
  1094  0028F8                     __end_of_setupTmr0:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _setupInt *****************
  1098 ;; Defined at:
  1099 ;;		line 16 in file "main.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		None
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1116 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1117 ;;Total ram usage:        0 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; Hardware stack levels required when called: 11
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text2
  1128  002864                     __ptext2:
  1129                           	callstack 0
  1130  002864                     _setupInt:
  1131                           	callstack 19
  1132  002864                     
  1133                           ;main.c: 17:  }
  1134  002864  8EF2               	bsf	4082,7,c	;volatile
  1135                           
  1136                           ;main.c: 19: void setupTmr0() {
  1137  002866  88F2               	bsf	4082,4,c	;volatile
  1138                           
  1139                           ;main.c: 20:     T08BIT = 0;
  1140  002868  92F2               	bcf	4082,1,c	;volatile
  1141                           
  1142                           ;main.c: 21:     T0CS = 0;
  1143  00286A  8CF1               	bsf	4081,6,c	;volatile
  1144                           
  1145                           ;main.c: 23:     TMR0H = 0x3C;
  1146  00286C  86F0               	bsf	4080,3,c	;volatile
  1147                           
  1148                           ;main.c: 24:     TMR0L = 0xAF;
  1149  00286E  90F0               	bcf	4080,0,c	;volatile
  1150                           
  1151                           ;main.c: 25:     TMR0ON = 1;
  1152  002870  8AF1               	bsf	4081,5,c	;volatile
  1153                           
  1154                           ;main.c: 27: 
  1155  002872  88F0               	bsf	4080,4,c	;volatile
  1156                           
  1157                           ;main.c: 28: 
  1158  002874  92F0               	bcf	4080,1,c	;volatile
  1159                           
  1160                           ;main.c: 29: 
  1161  002876  88F1               	bsf	4081,4,c	;volatile
  1162                           
  1163                           ;main.c: 31:     if (INT0F){
  1164  002878  8AF2               	bsf	4082,5,c	;volatile
  1165                           
  1166                           ;main.c: 32:         if (playing != 1){
  1167  00287A  94F2               	bcf	4082,2,c	;volatile
  1168  00287C  0012               	return		;funcret
  1169  00287E                     __end_of_setupInt:
  1170                           	callstack 0
  1171                           
  1172 ;; *************** function _printStartMessage *****************
  1173 ;; Defined at:
  1174 ;;		line 32 in file "Game.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  record          1   95[BANK0 ] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1188 ;;      Params:         0       0       0       0       0       0       0       0       0
  1189 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1191 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1192 ;;Total ram usage:        1 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 19
  1195 ;; This function calls:
  1196 ;;		_EEPROM_ReadByte
  1197 ;;		_clear
  1198 ;;		_escreve_texto
  1199 ;;		_inicializa
  1200 ;;		_instr_wr
  1201 ;;		_sprintf
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text3
  1208  001D58                     __ptext3:
  1209                           	callstack 0
  1210  001D58                     _printStartMessage:
  1211                           	callstack 11
  1212  001D58                     
  1213                           ;Game.c: 33:     if (!initialized)
  1214  001D58  0100               	movlb	0	; () banked
  1215  001D5A  51C9               	movf	_initialized& (0+255),w,b
  1216  001D5C  A4D8               	btfss	status,2,c
  1217  001D5E  EFB3  F00E         	goto	u3531
  1218  001D62  EFB5  F00E         	goto	u3530
  1219  001D66                     u3531:
  1220  001D66  EFB7  F00E         	goto	l3712
  1221  001D6A                     u3530:
  1222  001D6A                     
  1223                           ; BSR set to: 0
  1224                           ;Game.c: 34:         inicializa();
  1225  001D6A  EC0C  F014         	call	_inicializa	;wreg free
  1226  001D6E                     l3712:
  1227                           
  1228                           ;Game.c: 35:     clear(linha1);
  1229  001D6E  0ECC               	movlw	low _linha1
  1230  001D70  0100               	movlb	0	; () banked
  1231  001D72  6F80               	movwf	clear@linha& (0+255),b
  1232  001D74  0E00               	movlw	high _linha1
  1233  001D76  6F81               	movwf	(clear@linha+1)& (0+255),b
  1234  001D78  EC13  F013         	call	_clear	;wreg free
  1235  001D7C                     
  1236                           ;Game.c: 36:     clear(linha2);
  1237  001D7C  0E39               	movlw	low _linha2
  1238  001D7E  0100               	movlb	0	; () banked
  1239  001D80  6F80               	movwf	clear@linha& (0+255),b
  1240  001D82  0E01               	movlw	high _linha2
  1241  001D84  6F81               	movwf	(clear@linha+1)& (0+255),b
  1242  001D86  EC13  F013         	call	_clear	;wreg free
  1243                           
  1244                           ;Game.c: 37:     byte record = EEPROM_ReadByte(0);
  1245  001D8A  0E00               	movlw	0
  1246  001D8C  ECBB  F013         	call	_EEPROM_ReadByte
  1247  001D90  0100               	movlb	0	; () banked
  1248  001D92  6FBF               	movwf	printStartMessage@record& (0+255),b
  1249  001D94                     
  1250                           ; BSR set to: 0
  1251                           ;Game.c: 38:     sprintf(linha1, "Recorde: %d", record);
  1252  001D94  0ECC               	movlw	low _linha1
  1253  001D96  0101               	movlb	1	; () banked
  1254  001D98  6F61               	movwf	sprintf@s& (0+255),b
  1255  001D9A  0E00               	movlw	high _linha1
  1256  001D9C  6F62               	movwf	(sprintf@s+1)& (0+255),b
  1257  001D9E  0E2F               	movlw	low STR_1
  1258  001DA0  6F63               	movwf	sprintf@fmt& (0+255),b
  1259  001DA2  0E08               	movlw	high STR_1
  1260  001DA4  6F64               	movwf	(sprintf@fmt+1)& (0+255),b
  1261  001DA6  C0BF  F165         	movff	printStartMessage@record,?_sprintf+4
  1262  001DAA  6B66               	clrf	(?_sprintf+5)& (0+255),b
  1263  001DAC  ECAB  F011         	call	_sprintf	;wreg free
  1264  001DB0                     
  1265                           ;Game.c: 39:     instr_wr(0x80);
  1266  001DB0  0E80               	movlw	128
  1267  001DB2  EC3F  F014         	call	_instr_wr
  1268  001DB6                     
  1269                           ;Game.c: 40:     escreve_texto(linha1);
  1270  001DB6  0ECC               	movlw	low _linha1
  1271  001DB8  0100               	movlb	0	; () banked
  1272  001DBA  6F82               	movwf	escreve_texto@linha& (0+255),b
  1273  001DBC  0E00               	movlw	high _linha1
  1274  001DBE  6F83               	movwf	(escreve_texto@linha+1)& (0+255),b
  1275  001DC0  ECD3  F012         	call	_escreve_texto	;wreg free
  1276  001DC4                     
  1277                           ;Game.c: 41:     sprintf(linha2, "Aperte p Iniciar");
  1278  001DC4  0E39               	movlw	low _linha2
  1279  001DC6  0101               	movlb	1	; () banked
  1280  001DC8  6F61               	movwf	sprintf@s& (0+255),b
  1281  001DCA  0E01               	movlw	high _linha2
  1282  001DCC  6F62               	movwf	(sprintf@s+1)& (0+255),b
  1283  001DCE  0E01               	movlw	low STR_2
  1284  001DD0  6F63               	movwf	sprintf@fmt& (0+255),b
  1285  001DD2  0E08               	movlw	high STR_2
  1286  001DD4  6F64               	movwf	(sprintf@fmt+1)& (0+255),b
  1287  001DD6  ECAB  F011         	call	_sprintf	;wreg free
  1288  001DDA                     
  1289                           ;Game.c: 42:     instr_wr(0xC0);
  1290  001DDA  0EC0               	movlw	192
  1291  001DDC  EC3F  F014         	call	_instr_wr
  1292  001DE0                     
  1293                           ;Game.c: 43:     escreve_texto(linha2);
  1294  001DE0  0E39               	movlw	low _linha2
  1295  001DE2  0100               	movlb	0	; () banked
  1296  001DE4  6F82               	movwf	escreve_texto@linha& (0+255),b
  1297  001DE6  0E01               	movlw	high _linha2
  1298  001DE8  6F83               	movwf	(escreve_texto@linha+1)& (0+255),b
  1299  001DEA  ECD3  F012         	call	_escreve_texto	;wreg free
  1300  001DEE  0012               	return		;funcret
  1301  001DF0                     __end_of_printStartMessage:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _sprintf *****************
  1305 ;; Defined at:
  1306 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  s               2   24[BANK1 ] PTR unsigned char 
  1309 ;;		 -> linha2(16), linha1(16), 
  1310 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  1311 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  1312 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  1313 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  f               6   32[BANK1 ] struct _IO_FILE
  1316 ;;  ap              2   30[BANK1 ] PTR void [1]
  1317 ;;		 -> ?_sprintf(2), 
  1318 ;;  ret             2    0        int 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  2   24[BANK1 ] int 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1328 ;;      Params:         0       0       6       0       0       0       0       0       0
  1329 ;;      Locals:         0       0       8       0       0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1331 ;;      Totals:         0       0      14       0       0       0       0       0       0
  1332 ;;Total ram usage:       14 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 18
  1335 ;; This function calls:
  1336 ;;		_vfprintf
  1337 ;; This function is called by:
  1338 ;;		_printStartMessage
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text4
  1343  002356                     __ptext4:
  1344                           	callstack 0
  1345  002356                     _sprintf:
  1346                           	callstack 11
  1347  002356  0E65               	movlw	low (?_sprintf+4)
  1348  002358  0101               	movlb	1	; () banked
  1349  00235A  6F67               	movwf	sprintf@ap& (0+255),b
  1350  00235C  0E01               	movlw	high (?_sprintf+4)
  1351  00235E  6F68               	movwf	(sprintf@ap+1)& (0+255),b
  1352  002360  C161  F169         	movff	sprintf@s,sprintf@f
  1353  002364  C162  F16A         	movff	sprintf@s+1,sprintf@f+1
  1354  002368                     
  1355                           ; BSR set to: 1
  1356  002368  0E00               	movlw	0
  1357  00236A  6F6C               	movwf	(sprintf@f+3)& (0+255),b
  1358  00236C  0E00               	movlw	0
  1359  00236E  6F6B               	movwf	(sprintf@f+2)& (0+255),b
  1360  002370                     
  1361                           ; BSR set to: 1
  1362  002370  0E00               	movlw	0
  1363  002372  6F6E               	movwf	(sprintf@f+5)& (0+255),b
  1364  002374  0E00               	movlw	0
  1365  002376  6F6D               	movwf	(sprintf@f+4)& (0+255),b
  1366  002378                     
  1367                           ; BSR set to: 1
  1368  002378  0E69               	movlw	low sprintf@f
  1369  00237A  6F59               	movwf	vfprintf@fp& (0+255),b
  1370  00237C  0E01               	movlw	high sprintf@f
  1371  00237E  6F5A               	movwf	(vfprintf@fp+1)& (0+255),b
  1372  002380  C163  F15B         	movff	sprintf@fmt,vfprintf@fmt
  1373  002384  C164  F15C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1374  002388  0E67               	movlw	low sprintf@ap
  1375  00238A  6F5D               	movwf	vfprintf@ap& (0+255),b
  1376  00238C  0E01               	movlw	high sprintf@ap
  1377  00238E  6F5E               	movwf	(vfprintf@ap+1)& (0+255),b
  1378  002390  ECB1  F010         	call	_vfprintf	;wreg free
  1379  002394  0101               	movlb	1	; () banked
  1380  002396  516B               	movf	(sprintf@f+2)& (0+255),w,b
  1381  002398  2561               	addwf	sprintf@s& (0+255),w,b
  1382  00239A  6ED9               	movwf	fsr2l,c
  1383  00239C  516C               	movf	(sprintf@f+3)& (0+255),w,b
  1384  00239E  2162               	addwfc	(sprintf@s+1)& (0+255),w,b
  1385  0023A0  6EDA               	movwf	fsr2h,c
  1386  0023A2  0E00               	movlw	0
  1387  0023A4  6EDF               	movwf	indf2,c
  1388  0023A6                     
  1389                           ; BSR set to: 1
  1390  0023A6  0012               	return		;funcret
  1391  0023A8                     __end_of_sprintf:
  1392                           	callstack 0
  1393                           
  1394 ;; *************** function _vfprintf *****************
  1395 ;; Defined at:
  1396 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  fp              2   16[BANK1 ] PTR struct _IO_FILE
  1399 ;;		 -> sprintf@f(6), 
  1400 ;;  fmt             2   18[BANK1 ] PTR const unsigned char 
  1401 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  1402 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  1403 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  1404 ;;  ap              2   20[BANK1 ] PTR PTR void 
  1405 ;;		 -> sprintf@ap(2), 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  cfmt            2   22[BANK1 ] PTR unsigned char 
  1408 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  1409 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  1410 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  2   16[BANK1 ] int 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1420 ;;      Params:         0       0       6       0       0       0       0       0       0
  1421 ;;      Locals:         0       0       2       0       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1423 ;;      Totals:         0       0       8       0       0       0       0       0       0
  1424 ;;Total ram usage:        8 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 17
  1427 ;; This function calls:
  1428 ;;		_vfpfcnvrt
  1429 ;; This function is called by:
  1430 ;;		_sprintf
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text5
  1435  002162                     __ptext5:
  1436                           	callstack 0
  1437  002162                     _vfprintf:
  1438                           	callstack 11
  1439  002162                     
  1440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1441  002162  C15B  F15F         	movff	vfprintf@fmt,vfprintf@cfmt
  1442  002166  C15C  F160         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1443  00216A                     
  1444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1445  00216A  0E00               	movlw	0
  1446  00216C  0100               	movlb	0	; () banked
  1447  00216E  6FC1               	movwf	(_nout+1)& (0+255),b
  1448  002170  0E00               	movlw	0
  1449  002172  6FC0               	movwf	_nout& (0+255),b
  1450                           
  1451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1452  002174  EFD3  F010         	goto	l3538
  1453  002178                     l3536:
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1457  002178  C159  F149         	movff	vfprintf@fp,vfpfcnvrt@fp
  1458  00217C  C15A  F14A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1459  002180  0E5F               	movlw	low vfprintf@cfmt
  1460  002182  0101               	movlb	1	; () banked
  1461  002184  6F4B               	movwf	vfpfcnvrt@fmt& (0+255),b
  1462  002186  0E01               	movlw	high vfprintf@cfmt
  1463  002188  6F4C               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1464  00218A  C15D  F14D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1465  00218E  C15E  F14E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1466  002192  EC14  F007         	call	_vfpfcnvrt	;wreg free
  1467  002196  0101               	movlb	1	; () banked
  1468  002198  5149               	movf	?_vfpfcnvrt& (0+255),w,b
  1469  00219A  0100               	movlb	0	; () banked
  1470  00219C  27C0               	addwf	_nout& (0+255),f,b
  1471  00219E  0101               	movlb	1	; () banked
  1472  0021A0  514A               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1473  0021A2  0100               	movlb	0	; () banked
  1474  0021A4  23C1               	addwfc	(_nout+1)& (0+255),f,b
  1475  0021A6                     l3538:
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1479  0021A6  C15F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1480  0021AA  C160  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1481  0021AE                     	if	0	;tblptru may be non-zero
  1482  0021AE                     	endif
  1483  0021AE                     	if	0	;tblptru may be non-zero
  1484  0021AE                     	endif
  1485  0021AE  0008               	tblrd		*
  1486  0021B0  50F5               	movf	tablat,w,c
  1487  0021B2  0900               	iorlw	0
  1488  0021B4  A4D8               	btfss	status,2,c
  1489  0021B6  EFDF  F010         	goto	u3461
  1490  0021BA  EFE1  F010         	goto	u3460
  1491  0021BE                     u3461:
  1492  0021BE  EFBC  F010         	goto	l3536
  1493  0021C2                     u3460:
  1494  0021C2                     
  1495                           ; BSR set to: 0
  1496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1497  0021C2  C0C0  F159         	movff	_nout,?_vfprintf
  1498  0021C6  C0C1  F15A         	movff	_nout+1,?_vfprintf+1
  1499  0021CA                     
  1500                           ; BSR set to: 0
  1501  0021CA  0012               	return		;funcret
  1502  0021CC                     __end_of_vfprintf:
  1503                           	callstack 0
  1504                           
  1505 ;; *************** function _vfpfcnvrt *****************
  1506 ;; Defined at:
  1507 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  1510 ;;		 -> sprintf@f(6), 
  1511 ;;  fmt             2    2[BANK1 ] PTR PTR unsigned char 
  1512 ;;		 -> vfprintf@cfmt(2), 
  1513 ;;  ap              2    4[BANK1 ] PTR PTR void 
  1514 ;;		 -> sprintf@ap(2), 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  ll              8    8[BANK1 ] long long 
  1517 ;;  llu             8    0        unsigned long long 
  1518 ;;  f               4    0        unsigned long long 
  1519 ;;  vp              3    0        PTR void 
  1520 ;;  ct              3    0        unsigned char [3]
  1521 ;;  cp              3    0        PTR unsigned char 
  1522 ;;  i               2    0        int 
  1523 ;;  done            2    0        int 
  1524 ;;  c               1    0        unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  2    0[BANK1 ] int 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1534 ;;      Params:         0       0       6       0       0       0       0       0       0
  1535 ;;      Locals:         0       0       8       0       0       0       0       0       0
  1536 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1537 ;;      Totals:         0       0      16       0       0       0       0       0       0
  1538 ;;Total ram usage:       16 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 16
  1541 ;; This function calls:
  1542 ;;		_dtoa
  1543 ;;		_fputc
  1544 ;; This function is called by:
  1545 ;;		_vfprintf
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text6
  1550  000E28                     __ptext6:
  1551                           	callstack 0
  1552  000E28                     _vfpfcnvrt:
  1553                           	callstack 11
  1554  000E28                     
  1555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1556  000E28  C14B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1557  000E2C  C14C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1558  000E30  CFDE FFF6          	movff	postinc2,tblptrl
  1559  000E34  CFDD FFF7          	movff	postdec2,tblptrh
  1560  000E38                     	if	0	;tblptru may be non-zero
  1561  000E38                     	endif
  1562  000E38                     	if	0	;tblptru may be non-zero
  1563  000E38                     	endif
  1564  000E38  0008               	tblrd		*
  1565  000E3A  50F5               	movf	tablat,w,c
  1566  000E3C  0A25               	xorlw	37
  1567  000E3E  A4D8               	btfss	status,2,c
  1568  000E40  EF24  F007         	goto	u3411
  1569  000E44  EF26  F007         	goto	u3410
  1570  000E48                     u3411:
  1571  000E48  EFD5  F007         	goto	l3516
  1572  000E4C                     u3410:
  1573  000E4C                     
  1574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1575  000E4C  C14B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1576  000E50  C14C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1577  000E54  2ADE               	incf	postinc2,f,c
  1578  000E56  0E00               	movlw	0
  1579  000E58  22DD               	addwfc	postdec2,f,c
  1580  000E5A                     
  1581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1582  000E5A  0E00               	movlw	0
  1583  000E5C  0100               	movlb	0	; () banked
  1584  000E5E  6FC3               	movwf	(_width+1)& (0+255),b
  1585  000E60  0E00               	movlw	0
  1586  000E62  6FC2               	movwf	_width& (0+255),b
  1587  000E64  C0C2  F0C6         	movff	_width,_flags
  1588  000E68  C0C3  F0C7         	movff	_width+1,_flags+1
  1589  000E6C                     
  1590                           ; BSR set to: 0
  1591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1592  000E6C  69C4               	setf	_prec& (0+255),b
  1593  000E6E  69C5               	setf	(_prec+1)& (0+255),b
  1594  000E70                     
  1595                           ; BSR set to: 0
  1596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1597  000E70  C14B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1598  000E74  C14C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1599  000E78  CFDE FFF6          	movff	postinc2,tblptrl
  1600  000E7C  CFDD FFF7          	movff	postdec2,tblptrh
  1601  000E80                     	if	0	;tblptru may be non-zero
  1602  000E80                     	endif
  1603  000E80                     	if	0	;tblptru may be non-zero
  1604  000E80                     	endif
  1605  000E80  0008               	tblrd		*
  1606  000E82  50F5               	movf	tablat,w,c
  1607  000E84  0A64               	xorlw	100
  1608  000E86  B4D8               	btfsc	status,2,c
  1609  000E88  EF48  F007         	goto	u3421
  1610  000E8C  EF4A  F007         	goto	u3420
  1611  000E90                     u3421:
  1612  000E90  EF5C  F007         	goto	l3494
  1613  000E94                     u3420:
  1614  000E94                     
  1615                           ; BSR set to: 0
  1616  000E94  C14B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1617  000E98  C14C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1618  000E9C  CFDE FFF6          	movff	postinc2,tblptrl
  1619  000EA0  CFDD FFF7          	movff	postdec2,tblptrh
  1620  000EA4                     	if	0	;tblptru may be non-zero
  1621  000EA4                     	endif
  1622  000EA4                     	if	0	;tblptru may be non-zero
  1623  000EA4                     	endif
  1624  000EA4  0008               	tblrd		*
  1625  000EA6  50F5               	movf	tablat,w,c
  1626  000EA8  0A69               	xorlw	105
  1627  000EAA  A4D8               	btfss	status,2,c
  1628  000EAC  EF5A  F007         	goto	u3431
  1629  000EB0  EF5C  F007         	goto	u3430
  1630  000EB4                     u3431:
  1631  000EB4  EF9D  F007         	goto	l3500
  1632  000EB8                     u3430:
  1633  000EB8                     l3494:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1637  000EB8  C14B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1638  000EBC  C14C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1639  000EC0  2ADE               	incf	postinc2,f,c
  1640  000EC2  0E00               	movlw	0
  1641  000EC4  22DD               	addwfc	postdec2,f,c
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1644  000EC6  C14D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1645  000ECA  C14E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1646  000ECE  CFDF F14F          	movff	indf2,??_vfpfcnvrt
  1647  000ED2  0E02               	movlw	2
  1648  000ED4  26DE               	addwf	postinc2,f,c
  1649  000ED6  CFDF F150          	movff	indf2,??_vfpfcnvrt+1
  1650  000EDA  0E00               	movlw	0
  1651  000EDC  22DD               	addwfc	postdec2,f,c
  1652  000EDE  C14F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1653  000EE2  C150  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1654  000EE6  CFDE F151          	movff	postinc2,vfpfcnvrt@ll
  1655  000EEA  CFDD F152          	movff	postdec2,vfpfcnvrt@ll+1
  1656  000EEE  0101               	movlb	1	; () banked
  1657  000EF0  0E00               	movlw	0
  1658  000EF2  BF52               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1659  000EF4  0EFF               	movlw	-1
  1660  000EF6  6F53               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1661  000EF8  6F54               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1662  000EFA  6F55               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1663  000EFC  6F56               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1664  000EFE  6F57               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1665  000F00  6F58               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1666  000F02                     
  1667                           ; BSR set to: 1
  1668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1669  000F02  C149  F09B         	movff	vfpfcnvrt@fp,dtoa@fp
  1670  000F06  C14A  F09C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1671  000F0A  C151  F09D         	movff	vfpfcnvrt@ll,dtoa@d
  1672  000F0E  C152  F09E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1673  000F12  C153  F09F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1674  000F16  C154  F0A0         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1675  000F1A  C155  F0A1         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1676  000F1E  C156  F0A2         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1677  000F22  C157  F0A3         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1678  000F26  C158  F0A4         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1679  000F2A  EC30  F004         	call	_dtoa	;wreg free
  1680  000F2E  C09B  F149         	movff	?_dtoa,?_vfpfcnvrt
  1681  000F32  C09C  F14A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1682  000F36  EFF1  F007         	goto	l983
  1683  000F3A                     l3500:
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1687  000F3A  C14B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1688  000F3E  C14C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1689  000F42  CFDE FFF6          	movff	postinc2,tblptrl
  1690  000F46  CFDD FFF7          	movff	postdec2,tblptrh
  1691  000F4A                     	if	0	;tblptru may be non-zero
  1692  000F4A                     	endif
  1693  000F4A                     	if	0	;tblptru may be non-zero
  1694  000F4A                     	endif
  1695  000F4A  0008               	tblrd		*
  1696  000F4C  50F5               	movf	tablat,w,c
  1697  000F4E  0A25               	xorlw	37
  1698  000F50  A4D8               	btfss	status,2,c
  1699  000F52  EFAD  F007         	goto	u3441
  1700  000F56  EFAF  F007         	goto	u3440
  1701  000F5A                     u3441:
  1702  000F5A  EFC7  F007         	goto	l3510
  1703  000F5E                     u3440:
  1704  000F5E                     
  1705                           ; BSR set to: 0
  1706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1707  000F5E  C14B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1708  000F62  C14C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1709  000F66  2ADE               	incf	postinc2,f,c
  1710  000F68  0E00               	movlw	0
  1711  000F6A  22DD               	addwfc	postdec2,f,c
  1712  000F6C                     
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1715  000F6C  0E00               	movlw	0
  1716  000F6E  6F81               	movwf	(fputc@c+1)& (0+255),b
  1717  000F70  0E25               	movlw	37
  1718  000F72  6F80               	movwf	fputc@c& (0+255),b
  1719  000F74  C149  F082         	movff	vfpfcnvrt@fp,fputc@fp
  1720  000F78  C14A  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1721  000F7C  ECC1  F00C         	call	_fputc	;wreg free
  1722  000F80                     l3506:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1725  000F80  0E00               	movlw	0
  1726  000F82  0101               	movlb	1	; () banked
  1727  000F84  6F4A               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1728  000F86  0E01               	movlw	1
  1729  000F88  6F49               	movwf	?_vfpfcnvrt& (0+255),b
  1730  000F8A  EFF1  F007         	goto	l983
  1731  000F8E                     l3510:
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1735  000F8E  C14B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1736  000F92  C14C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1737  000F96  2ADE               	incf	postinc2,f,c
  1738  000F98  0E00               	movlw	0
  1739  000F9A  22DD               	addwfc	postdec2,f,c
  1740  000F9C                     
  1741                           ; BSR set to: 0
  1742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1743  000F9C  0E00               	movlw	0
  1744  000F9E  0101               	movlb	1	; () banked
  1745  000FA0  6F4A               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1746  000FA2  0E00               	movlw	0
  1747  000FA4  6F49               	movwf	?_vfpfcnvrt& (0+255),b
  1748  000FA6  EFF1  F007         	goto	l983
  1749  000FAA                     l3516:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1752  000FAA  C14B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1753  000FAE  C14C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1754  000FB2  CFDE FFF6          	movff	postinc2,tblptrl
  1755  000FB6  CFDD FFF7          	movff	postdec2,tblptrh
  1756  000FBA                     	if	0	;tblptru may be non-zero
  1757  000FBA                     	endif
  1758  000FBA                     	if	0	;tblptru may be non-zero
  1759  000FBA                     	endif
  1760  000FBA  0008               	tblrd		*
  1761  000FBC  50F5               	movf	tablat,w,c
  1762  000FBE  0100               	movlb	0	; () banked
  1763  000FC0  6F80               	movwf	fputc@c& (0+255),b
  1764  000FC2  6B81               	clrf	(fputc@c+1)& (0+255),b
  1765  000FC4  C149  F082         	movff	vfpfcnvrt@fp,fputc@fp
  1766  000FC8  C14A  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1767  000FCC  ECC1  F00C         	call	_fputc	;wreg free
  1768  000FD0                     
  1769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1770  000FD0  C14B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1771  000FD4  C14C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1772  000FD8  2ADE               	incf	postinc2,f,c
  1773  000FDA  0E00               	movlw	0
  1774  000FDC  22DD               	addwfc	postdec2,f,c
  1775  000FDE  EFC0  F007         	goto	l3506
  1776  000FE2                     l983:
  1777  000FE2  0012               	return		;funcret
  1778  000FE4                     __end_of_vfpfcnvrt:
  1779                           	callstack 0
  1780                           
  1781 ;; *************** function _dtoa *****************
  1782 ;; Defined at:
  1783 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  1786 ;;		 -> sprintf@f(6), 
  1787 ;;  d               8   61[BANK0 ] long long 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  n               8   85[BANK0 ] long long 
  1790 ;;  i               2   93[BANK0 ] int 
  1791 ;;  s               2   83[BANK0 ] int 
  1792 ;;  w               2   81[BANK0 ] int 
  1793 ;;  p               2   79[BANK0 ] int 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  2   59[BANK0 ] int 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1803 ;;      Params:         0      10       0       0       0       0       0       0       0
  1804 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1805 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1806 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1807 ;;Total ram usage:       36 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 15
  1810 ;; This function calls:
  1811 ;;		___aodiv
  1812 ;;		___aomod
  1813 ;;		_abs
  1814 ;;		_pad
  1815 ;; This function is called by:
  1816 ;;		_vfpfcnvrt
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text7
  1821  000860                     __ptext7:
  1822                           	callstack 0
  1823  000860                     _dtoa:
  1824                           	callstack 11
  1825  000860                     
  1826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1827  000860  C09D  F0B5         	movff	dtoa@d,dtoa@n
  1828  000864  C09E  F0B6         	movff	dtoa@d+1,dtoa@n+1
  1829  000868  C09F  F0B7         	movff	dtoa@d+2,dtoa@n+2
  1830  00086C  C0A0  F0B8         	movff	dtoa@d+3,dtoa@n+3
  1831  000870  C0A1  F0B9         	movff	dtoa@d+4,dtoa@n+4
  1832  000874  C0A2  F0BA         	movff	dtoa@d+5,dtoa@n+5
  1833  000878  C0A3  F0BB         	movff	dtoa@d+6,dtoa@n+6
  1834  00087C  C0A4  F0BC         	movff	dtoa@d+7,dtoa@n+7
  1835  000880                     
  1836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1837  000880  0100               	movlb	0	; () banked
  1838  000882  BFBC               	btfsc	(dtoa@n+7)& (0+255),7,b
  1839  000884  EF46  F004         	goto	u3221
  1840  000888  EF49  F004         	goto	u3220
  1841  00088C                     u3221:
  1842  00088C  0E01               	movlw	1
  1843  00088E  EF4A  F004         	goto	u3230
  1844  000892                     u3220:
  1845  000892  0E00               	movlw	0
  1846  000894                     u3230:
  1847  000894  6FB3               	movwf	dtoa@s& (0+255),b
  1848  000896  6BB4               	clrf	(dtoa@s+1)& (0+255),b
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1851  000898  51B3               	movf	dtoa@s& (0+255),w,b
  1852  00089A  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  1853  00089C  B4D8               	btfsc	status,2,c
  1854  00089E  EF53  F004         	goto	u3241
  1855  0008A2  EF55  F004         	goto	u3240
  1856  0008A6                     u3241:
  1857  0008A6  EF65  F004         	goto	l3384
  1858  0008AA                     u3240:
  1859  0008AA                     
  1860                           ; BSR set to: 0
  1861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1862  0008AA  1FBC               	comf	(dtoa@n+7)& (0+255),f,b
  1863  0008AC  1FBB               	comf	(dtoa@n+6)& (0+255),f,b
  1864  0008AE  1FBA               	comf	(dtoa@n+5)& (0+255),f,b
  1865  0008B0  1FB9               	comf	(dtoa@n+4)& (0+255),f,b
  1866  0008B2  1FB8               	comf	(dtoa@n+3)& (0+255),f,b
  1867  0008B4  1FB7               	comf	(dtoa@n+2)& (0+255),f,b
  1868  0008B6  1FB6               	comf	(dtoa@n+1)& (0+255),f,b
  1869  0008B8  6DB5               	negf	dtoa@n& (0+255),b
  1870  0008BA  0E00               	movlw	0
  1871  0008BC  23B6               	addwfc	(dtoa@n+1)& (0+255),f,b
  1872  0008BE  23B7               	addwfc	(dtoa@n+2)& (0+255),f,b
  1873  0008C0  23B8               	addwfc	(dtoa@n+3)& (0+255),f,b
  1874  0008C2  23B9               	addwfc	(dtoa@n+4)& (0+255),f,b
  1875  0008C4  23BA               	addwfc	(dtoa@n+5)& (0+255),f,b
  1876  0008C6  23BB               	addwfc	(dtoa@n+6)& (0+255),f,b
  1877  0008C8  23BC               	addwfc	(dtoa@n+7)& (0+255),f,b
  1878  0008CA                     l3384:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1882  0008CA  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  1883  0008CC  EF6A  F004         	goto	u3251
  1884  0008D0  EF6C  F004         	goto	u3250
  1885  0008D4                     u3251:
  1886  0008D4  EF6D  F004         	goto	l3388
  1887  0008D8                     u3250:
  1888  0008D8                     
  1889                           ; BSR set to: 0
  1890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1891  0008D8  93C6               	bcf	_flags& (0+255),1,b
  1892  0008DA                     l3388:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1896  0008DA  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  1897  0008DC  EF7A  F004         	goto	u3260
  1898  0008E0  51C5               	movf	(_prec+1)& (0+255),w,b
  1899  0008E2  E106               	bnz	u3261
  1900  0008E4  05C4               	decf	_prec& (0+255),w,b
  1901  0008E6  B0D8               	btfsc	status,0,c
  1902  0008E8  EF78  F004         	goto	u3261
  1903  0008EC  EF7A  F004         	goto	u3260
  1904  0008F0                     u3261:
  1905  0008F0  EF80  F004         	goto	l956
  1906  0008F4                     u3260:
  1907  0008F4                     
  1908                           ; BSR set to: 0
  1909  0008F4  0E00               	movlw	0
  1910  0008F6  6FB0               	movwf	(dtoa@p+1)& (0+255),b
  1911  0008F8  0E01               	movlw	1
  1912  0008FA  6FAF               	movwf	dtoa@p& (0+255),b
  1913  0008FC  EF84  F004         	goto	l958
  1914  000900                     l956:
  1915                           
  1916                           ; BSR set to: 0
  1917  000900  C0C4  F0AF         	movff	_prec,dtoa@p
  1918  000904  C0C5  F0B0         	movff	_prec+1,dtoa@p+1
  1919  000908                     l958:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1923  000908  C0C2  F0B1         	movff	_width,dtoa@w
  1924  00090C  C0C3  F0B2         	movff	_width+1,dtoa@w+1
  1925  000910                     
  1926                           ; BSR set to: 0
  1927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1928  000910  51B3               	movf	dtoa@s& (0+255),w,b
  1929  000912  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  1930  000914  A4D8               	btfss	status,2,c
  1931  000916  EF8F  F004         	goto	u3271
  1932  00091A  EF91  F004         	goto	u3270
  1933  00091E                     u3271:
  1934  00091E  EF98  F004         	goto	l3396
  1935  000922                     u3270:
  1936  000922                     
  1937                           ; BSR set to: 0
  1938  000922  A5C6               	btfss	_flags& (0+255),2,b
  1939  000924  EF96  F004         	goto	u3281
  1940  000928  EF98  F004         	goto	u3280
  1941  00092C                     u3281:
  1942  00092C  EF9B  F004         	goto	l3398
  1943  000930                     u3280:
  1944  000930                     l3396:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1948  000930  07B1               	decf	dtoa@w& (0+255),f,b
  1949  000932  A0D8               	btfss	status,0,c
  1950  000934  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  1951  000936                     l3398:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1955  000936  0E00               	movlw	0
  1956  000938  6FBE               	movwf	(dtoa@i+1)& (0+255),b
  1957  00093A  0E1F               	movlw	31
  1958  00093C  6FBD               	movwf	dtoa@i& (0+255),b
  1959  00093E                     
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1962  00093E  0E00               	movlw	0
  1963  000940  0101               	movlb	1	; () banked
  1964  000942  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1967  000944  EF21  F005         	goto	l3412
  1968  000948                     l3402:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1972  000948  07BD               	decf	dtoa@i& (0+255),f,b
  1973  00094A  A0D8               	btfss	status,0,c
  1974  00094C  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  1975  00094E                     
  1976                           ; BSR set to: 0
  1977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1978  00094E  0E00               	movlw	low _dbuf
  1979  000950  25BD               	addwf	dtoa@i& (0+255),w,b
  1980  000952  6ED9               	movwf	fsr2l,c
  1981  000954  0E01               	movlw	high _dbuf
  1982  000956  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  1983  000958  6EDA               	movwf	fsr2h,c
  1984  00095A  C0B5  F080         	movff	dtoa@n,___aomod@dividend
  1985  00095E  C0B6  F081         	movff	dtoa@n+1,___aomod@dividend+1
  1986  000962  C0B7  F082         	movff	dtoa@n+2,___aomod@dividend+2
  1987  000966  C0B8  F083         	movff	dtoa@n+3,___aomod@dividend+3
  1988  00096A  C0B9  F084         	movff	dtoa@n+4,___aomod@dividend+4
  1989  00096E  C0BA  F085         	movff	dtoa@n+5,___aomod@dividend+5
  1990  000972  C0BB  F086         	movff	dtoa@n+6,___aomod@dividend+6
  1991  000976  C0BC  F087         	movff	dtoa@n+7,___aomod@dividend+7
  1992  00097A  0E0A               	movlw	10
  1993  00097C  6F88               	movwf	___aomod@divisor& (0+255),b
  1994  00097E  0E00               	movlw	0
  1995  000980  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  1996  000982  0E00               	movlw	0
  1997  000984  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  1998  000986  0E00               	movlw	0
  1999  000988  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  2000  00098A  0E00               	movlw	0
  2001  00098C  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  2002  00098E  0E00               	movlw	0
  2003  000990  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  2004  000992  0E00               	movlw	0
  2005  000994  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  2006  000996  0E00               	movlw	0
  2007  000998  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  2008  00099A  EC55  F00A         	call	___aomod	;wreg free
  2009  00099E  C080  F0A5         	movff	?___aomod,??_dtoa
  2010  0009A2  C081  F0A6         	movff	?___aomod+1,??_dtoa+1
  2011  0009A6  C082  F0A7         	movff	?___aomod+2,??_dtoa+2
  2012  0009AA  C083  F0A8         	movff	?___aomod+3,??_dtoa+3
  2013  0009AE  C084  F0A9         	movff	?___aomod+4,??_dtoa+4
  2014  0009B2  C085  F0AA         	movff	?___aomod+5,??_dtoa+5
  2015  0009B6  C086  F0AB         	movff	?___aomod+6,??_dtoa+6
  2016  0009BA  C087  F0AC         	movff	?___aomod+7,??_dtoa+7
  2017  0009BE  C0A5  F092         	movff	??_dtoa,abs@a
  2018  0009C2  C0A7  F093         	movff	??_dtoa+2,abs@a+1
  2019  0009C6  ECB2  F012         	call	_abs	;wreg free
  2020  0009CA  0100               	movlb	0	; () banked
  2021  0009CC  5192               	movf	?_abs& (0+255),w,b
  2022  0009CE  0F30               	addlw	48
  2023  0009D0  6EDF               	movwf	indf2,c
  2024  0009D2                     
  2025                           ; BSR set to: 0
  2026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2027  0009D2  07AF               	decf	dtoa@p& (0+255),f,b
  2028  0009D4  A0D8               	btfss	status,0,c
  2029  0009D6  07B0               	decf	(dtoa@p+1)& (0+255),f,b
  2030  0009D8                     
  2031                           ; BSR set to: 0
  2032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2033  0009D8  07B1               	decf	dtoa@w& (0+255),f,b
  2034  0009DA  A0D8               	btfss	status,0,c
  2035  0009DC  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  2036  0009DE                     
  2037                           ; BSR set to: 0
  2038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2039  0009DE  C0B5  F080         	movff	dtoa@n,___aodiv@dividend
  2040  0009E2  C0B6  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  2041  0009E6  C0B7  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  2042  0009EA  C0B8  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  2043  0009EE  C0B9  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  2044  0009F2  C0BA  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  2045  0009F6  C0BB  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  2046  0009FA  C0BC  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  2047  0009FE  0E0A               	movlw	10
  2048  000A00  6F88               	movwf	___aodiv@divisor& (0+255),b
  2049  000A02  0E00               	movlw	0
  2050  000A04  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  2051  000A06  0E00               	movlw	0
  2052  000A08  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2053  000A0A  0E00               	movlw	0
  2054  000A0C  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2055  000A0E  0E00               	movlw	0
  2056  000A10  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2057  000A12  0E00               	movlw	0
  2058  000A14  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2059  000A16  0E00               	movlw	0
  2060  000A18  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2061  000A1A  0E00               	movlw	0
  2062  000A1C  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2063  000A1E  ECCC  F008         	call	___aodiv	;wreg free
  2064  000A22  C080  F0B5         	movff	?___aodiv,dtoa@n
  2065  000A26  C081  F0B6         	movff	?___aodiv+1,dtoa@n+1
  2066  000A2A  C082  F0B7         	movff	?___aodiv+2,dtoa@n+2
  2067  000A2E  C083  F0B8         	movff	?___aodiv+3,dtoa@n+3
  2068  000A32  C084  F0B9         	movff	?___aodiv+4,dtoa@n+4
  2069  000A36  C085  F0BA         	movff	?___aodiv+5,dtoa@n+5
  2070  000A3A  C086  F0BB         	movff	?___aodiv+6,dtoa@n+6
  2071  000A3E  C087  F0BC         	movff	?___aodiv+7,dtoa@n+7
  2072  000A42                     l3412:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2075  000A42  0100               	movlb	0	; () banked
  2076  000A44  BFBE               	btfsc	(dtoa@i+1)& (0+255),7,b
  2077  000A46  EF2D  F005         	goto	u3291
  2078  000A4A  51BE               	movf	(dtoa@i+1)& (0+255),w,b
  2079  000A4C  E108               	bnz	u3290
  2080  000A4E  05BD               	decf	dtoa@i& (0+255),w,b
  2081  000A50  A0D8               	btfss	status,0,c
  2082  000A52  EF2D  F005         	goto	u3291
  2083  000A56  EF2F  F005         	goto	u3290
  2084  000A5A                     u3291:
  2085  000A5A  EF5F  F005         	goto	l3422
  2086  000A5E                     u3290:
  2087  000A5E                     
  2088                           ; BSR set to: 0
  2089  000A5E  51B5               	movf	dtoa@n& (0+255),w,b
  2090  000A60  11B6               	iorwf	(dtoa@n+1)& (0+255),w,b
  2091  000A62  11B7               	iorwf	(dtoa@n+2)& (0+255),w,b
  2092  000A64  11B8               	iorwf	(dtoa@n+3)& (0+255),w,b
  2093  000A66  11B9               	iorwf	(dtoa@n+4)& (0+255),w,b
  2094  000A68  11BA               	iorwf	(dtoa@n+5)& (0+255),w,b
  2095  000A6A  11BB               	iorwf	(dtoa@n+6)& (0+255),w,b
  2096  000A6C  11BC               	iorwf	(dtoa@n+7)& (0+255),w,b
  2097  000A6E  A4D8               	btfss	status,2,c
  2098  000A70  EF3C  F005         	goto	u3301
  2099  000A74  EF3E  F005         	goto	u3300
  2100  000A78                     u3301:
  2101  000A78  EFA4  F004         	goto	l3402
  2102  000A7C                     u3300:
  2103  000A7C                     
  2104                           ; BSR set to: 0
  2105  000A7C  BFB0               	btfsc	(dtoa@p+1)& (0+255),7,b
  2106  000A7E  EF4B  F005         	goto	u3310
  2107  000A82  51B0               	movf	(dtoa@p+1)& (0+255),w,b
  2108  000A84  E106               	bnz	u3311
  2109  000A86  05AF               	decf	dtoa@p& (0+255),w,b
  2110  000A88  B0D8               	btfsc	status,0,c
  2111  000A8A  EF49  F005         	goto	u3311
  2112  000A8E  EF4B  F005         	goto	u3310
  2113  000A92                     u3311:
  2114  000A92  EFA4  F004         	goto	l3402
  2115  000A96                     u3310:
  2116  000A96                     
  2117                           ; BSR set to: 0
  2118  000A96  BFB2               	btfsc	(dtoa@w+1)& (0+255),7,b
  2119  000A98  EF56  F005         	goto	u3321
  2120  000A9C  51B2               	movf	(dtoa@w+1)& (0+255),w,b
  2121  000A9E  E108               	bnz	u3320
  2122  000AA0  05B1               	decf	dtoa@w& (0+255),w,b
  2123  000AA2  A0D8               	btfss	status,0,c
  2124  000AA4  EF56  F005         	goto	u3321
  2125  000AA8  EF58  F005         	goto	u3320
  2126  000AAC                     u3321:
  2127  000AAC  EF5F  F005         	goto	l3422
  2128  000AB0                     u3320:
  2129  000AB0                     
  2130                           ; BSR set to: 0
  2131  000AB0  B3C6               	btfsc	_flags& (0+255),1,b
  2132  000AB2  EF5D  F005         	goto	u3331
  2133  000AB6  EF5F  F005         	goto	u3330
  2134  000ABA                     u3331:
  2135  000ABA  EFA4  F004         	goto	l3402
  2136  000ABE                     u3330:
  2137  000ABE                     l3422:
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2141  000ABE  51B3               	movf	dtoa@s& (0+255),w,b
  2142  000AC0  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2143  000AC2  A4D8               	btfss	status,2,c
  2144  000AC4  EF66  F005         	goto	u3341
  2145  000AC8  EF68  F005         	goto	u3340
  2146  000ACC                     u3341:
  2147  000ACC  EF6F  F005         	goto	l3426
  2148  000AD0                     u3340:
  2149  000AD0                     
  2150                           ; BSR set to: 0
  2151  000AD0  A5C6               	btfss	_flags& (0+255),2,b
  2152  000AD2  EF6D  F005         	goto	u3351
  2153  000AD6  EF6F  F005         	goto	u3350
  2154  000ADA                     u3351:
  2155  000ADA  EF8D  F005         	goto	l3436
  2156  000ADE                     u3350:
  2157  000ADE                     l3426:
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2161  000ADE  07BD               	decf	dtoa@i& (0+255),f,b
  2162  000AE0  A0D8               	btfss	status,0,c
  2163  000AE2  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  2164  000AE4                     
  2165                           ; BSR set to: 0
  2166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2167  000AE4  51B3               	movf	dtoa@s& (0+255),w,b
  2168  000AE6  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2169  000AE8  A4D8               	btfss	status,2,c
  2170  000AEA  EF79  F005         	goto	u3361
  2171  000AEE  EF7B  F005         	goto	u3360
  2172  000AF2                     u3361:
  2173  000AF2  EF81  F005         	goto	l3432
  2174  000AF6                     u3360:
  2175  000AF6                     
  2176                           ; BSR set to: 0
  2177  000AF6  0E00               	movlw	0
  2178  000AF8  6FAE               	movwf	(_dtoa$743+1)& (0+255),b
  2179  000AFA  0E2B               	movlw	43
  2180  000AFC  6FAD               	movwf	_dtoa$743& (0+255),b
  2181  000AFE  EF85  F005         	goto	l3434
  2182  000B02                     l3432:
  2183                           
  2184                           ; BSR set to: 0
  2185  000B02  0E00               	movlw	0
  2186  000B04  6FAE               	movwf	(_dtoa$743+1)& (0+255),b
  2187  000B06  0E2D               	movlw	45
  2188  000B08  6FAD               	movwf	_dtoa$743& (0+255),b
  2189  000B0A                     l3434:
  2190                           
  2191                           ; BSR set to: 0
  2192  000B0A  0E00               	movlw	low _dbuf
  2193  000B0C  25BD               	addwf	dtoa@i& (0+255),w,b
  2194  000B0E  6ED9               	movwf	fsr2l,c
  2195  000B10  0E01               	movlw	high _dbuf
  2196  000B12  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2197  000B14  6EDA               	movwf	fsr2h,c
  2198  000B16  C0AD  FFDF         	movff	_dtoa$743,indf2
  2199  000B1A                     l3436:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2203  000B1A  C09B  F090         	movff	dtoa@fp,pad@fp
  2204  000B1E  C09C  F091         	movff	dtoa@fp+1,pad@fp+1
  2205  000B22  0E00               	movlw	low _dbuf
  2206  000B24  25BD               	addwf	dtoa@i& (0+255),w,b
  2207  000B26  6F92               	movwf	pad@buf& (0+255),b
  2208  000B28  0E01               	movlw	high _dbuf
  2209  000B2A  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2210  000B2C  6F93               	movwf	(pad@buf+1)& (0+255),b
  2211  000B2E  C0B1  F094         	movff	dtoa@w,pad@p
  2212  000B32  C0B2  F095         	movff	dtoa@w+1,pad@p+1
  2213  000B36  EC27  F00D         	call	_pad	;wreg free
  2214  000B3A  C090  F09B         	movff	?_pad,?_dtoa
  2215  000B3E  C091  F09C         	movff	?_pad+1,?_dtoa+1
  2216  000B42  0012               	return		;funcret
  2217  000B44                     __end_of_dtoa:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function _pad *****************
  2221 ;; Defined at:
  2222 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  fp              2   48[BANK0 ] PTR struct _IO_FILE
  2225 ;;		 -> sprintf@f(6), 
  2226 ;;  buf             2   50[BANK0 ] PTR unsigned char 
  2227 ;;		 -> dbuf(32), 
  2228 ;;  p               2   52[BANK0 ] int 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  w               2   57[BANK0 ] int 
  2231 ;;  i               2   55[BANK0 ] int 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  2   48[BANK0 ] int 
  2234 ;; Registers used:
  2235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2241 ;;      Params:         0       6       0       0       0       0       0       0       0
  2242 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2243 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2244 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2245 ;;Total ram usage:       11 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 14
  2248 ;; This function calls:
  2249 ;;		_fputc
  2250 ;;		_fputs
  2251 ;;		_strlen
  2252 ;; This function is called by:
  2253 ;;		_dtoa
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text8
  2258  001A4E                     __ptext8:
  2259                           	callstack 0
  2260  001A4E                     _pad:
  2261                           	callstack 11
  2262  001A4E                     
  2263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2264  001A4E  0100               	movlb	0	; () banked
  2265  001A50  A1C6               	btfss	_flags& (0+255),0,b
  2266  001A52  EF2D  F00D         	goto	u3021
  2267  001A56  EF2F  F00D         	goto	u3020
  2268  001A5A                     u3021:
  2269  001A5A  EF39  F00D         	goto	l3294
  2270  001A5E                     u3020:
  2271  001A5E                     
  2272                           ; BSR set to: 0
  2273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2274  001A5E  C092  F089         	movff	pad@buf,fputs@s
  2275  001A62  C093  F08A         	movff	pad@buf+1,fputs@s+1
  2276  001A66  C090  F08B         	movff	pad@fp,fputs@fp
  2277  001A6A  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  2278  001A6E  EC26  F012         	call	_fputs	;wreg free
  2279  001A72                     l3294:
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2282  001A72  0100               	movlb	0	; () banked
  2283  001A74  BF95               	btfsc	(pad@p+1)& (0+255),7,b
  2284  001A76  EF3F  F00D         	goto	u3031
  2285  001A7A  EF41  F00D         	goto	u3030
  2286  001A7E                     u3031:
  2287  001A7E  EF47  F00D         	goto	l3298
  2288  001A82                     u3030:
  2289  001A82                     
  2290                           ; BSR set to: 0
  2291  001A82  C094  F099         	movff	pad@p,pad@w
  2292  001A86  C095  F09A         	movff	pad@p+1,pad@w+1
  2293  001A8A  EF4B  F00D         	goto	l945
  2294  001A8E                     l3298:
  2295                           
  2296                           ; BSR set to: 0
  2297  001A8E  0E00               	movlw	0
  2298  001A90  6F9A               	movwf	(pad@w+1)& (0+255),b
  2299  001A92  0E00               	movlw	0
  2300  001A94  6F99               	movwf	pad@w& (0+255),b
  2301  001A96                     l945:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2305  001A96  0E00               	movlw	0
  2306  001A98  6F98               	movwf	(pad@i+1)& (0+255),b
  2307  001A9A  0E00               	movlw	0
  2308  001A9C  6F97               	movwf	pad@i& (0+255),b
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2311  001A9E  EF5E  F00D         	goto	l3304
  2312  001AA2                     l3300:
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2316  001AA2  0E00               	movlw	0
  2317  001AA4  6F81               	movwf	(fputc@c+1)& (0+255),b
  2318  001AA6  0E20               	movlw	32
  2319  001AA8  6F80               	movwf	fputc@c& (0+255),b
  2320  001AAA  C090  F082         	movff	pad@fp,fputc@fp
  2321  001AAE  C091  F083         	movff	pad@fp+1,fputc@fp+1
  2322  001AB2  ECC1  F00C         	call	_fputc	;wreg free
  2323  001AB6                     
  2324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2325  001AB6  0100               	movlb	0	; () banked
  2326  001AB8  4B97               	infsnz	pad@i& (0+255),f,b
  2327  001ABA  2B98               	incf	(pad@i+1)& (0+255),f,b
  2328  001ABC                     l3304:
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2332  001ABC  5199               	movf	pad@w& (0+255),w,b
  2333  001ABE  5D97               	subwf	pad@i& (0+255),w,b
  2334  001AC0  5198               	movf	(pad@i+1)& (0+255),w,b
  2335  001AC2  0A80               	xorlw	128
  2336  001AC4  6F96               	movwf	??_pad& (0+255),b
  2337  001AC6  519A               	movf	(pad@w+1)& (0+255),w,b
  2338  001AC8  0A80               	xorlw	128
  2339  001ACA  5996               	subwfb	??_pad& (0+255),w,b
  2340  001ACC  A0D8               	btfss	status,0,c
  2341  001ACE  EF6B  F00D         	goto	u3041
  2342  001AD2  EF6D  F00D         	goto	u3040
  2343  001AD6                     u3041:
  2344  001AD6  EF51  F00D         	goto	l3300
  2345  001ADA                     u3040:
  2346  001ADA                     
  2347                           ; BSR set to: 0
  2348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2349  001ADA  B1C6               	btfsc	_flags& (0+255),0,b
  2350  001ADC  EF72  F00D         	goto	u3051
  2351  001AE0  EF74  F00D         	goto	u3050
  2352  001AE4                     u3051:
  2353  001AE4  EF7E  F00D         	goto	l3308
  2354  001AE8                     u3050:
  2355  001AE8                     
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2358  001AE8  C092  F089         	movff	pad@buf,fputs@s
  2359  001AEC  C093  F08A         	movff	pad@buf+1,fputs@s+1
  2360  001AF0  C090  F08B         	movff	pad@fp,fputs@fp
  2361  001AF4  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  2362  001AF8  EC26  F012         	call	_fputs	;wreg free
  2363  001AFC                     l3308:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2366  001AFC  C092  F080         	movff	pad@buf,strlen@s
  2367  001B00  C093  F081         	movff	pad@buf+1,strlen@s+1
  2368  001B04  EC4F  F013         	call	_strlen	;wreg free
  2369  001B08  0100               	movlb	0	; () banked
  2370  001B0A  5199               	movf	pad@w& (0+255),w,b
  2371  001B0C  2580               	addwf	?_strlen& (0+255),w,b
  2372  001B0E  6F90               	movwf	?_pad& (0+255),b
  2373  001B10  519A               	movf	(pad@w+1)& (0+255),w,b
  2374  001B12  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  2375  001B14  6F91               	movwf	(?_pad+1)& (0+255),b
  2376  001B16                     
  2377                           ; BSR set to: 0
  2378  001B16  0012               	return		;funcret
  2379  001B18                     __end_of_pad:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _strlen *****************
  2383 ;; Defined at:
  2384 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  s               2   32[BANK0 ] PTR const unsigned char 
  2387 ;;		 -> dbuf(32), 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  a               2   34[BANK0 ] PTR const unsigned char 
  2390 ;;		 -> dbuf(32), 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  2   32[BANK0 ] unsigned int 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2400 ;;      Params:         0       2       0       0       0       0       0       0       0
  2401 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2403 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2404 ;;Total ram usage:        4 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 11
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_pad
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text9
  2415  00269E                     __ptext9:
  2416                           	callstack 0
  2417  00269E                     _strlen:
  2418                           	callstack 13
  2419  00269E  C080  F082         	movff	strlen@s,strlen@a
  2420  0026A2  C081  F083         	movff	strlen@s+1,strlen@a+1
  2421  0026A6  EF58  F013         	goto	l3098
  2422  0026AA                     l3096:
  2423  0026AA  0100               	movlb	0	; () banked
  2424  0026AC  4B80               	infsnz	strlen@s& (0+255),f,b
  2425  0026AE  2B81               	incf	(strlen@s+1)& (0+255),f,b
  2426  0026B0                     l3098:
  2427  0026B0  C080  FFD9         	movff	strlen@s,fsr2l
  2428  0026B4  C081  FFDA         	movff	strlen@s+1,fsr2h
  2429  0026B8  50DF               	movf	indf2,w,c
  2430  0026BA  A4D8               	btfss	status,2,c
  2431  0026BC  EF62  F013         	goto	u2701
  2432  0026C0  EF64  F013         	goto	u2700
  2433  0026C4                     u2701:
  2434  0026C4  EF55  F013         	goto	l3096
  2435  0026C8                     u2700:
  2436  0026C8  0100               	movlb	0	; () banked
  2437  0026CA  5182               	movf	strlen@a& (0+255),w,b
  2438  0026CC  5D80               	subwf	strlen@s& (0+255),w,b
  2439  0026CE  6F80               	movwf	?_strlen& (0+255),b
  2440  0026D0  5183               	movf	(strlen@a+1)& (0+255),w,b
  2441  0026D2  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  2442  0026D4  6F81               	movwf	(?_strlen+1)& (0+255),b
  2443  0026D6                     
  2444                           ; BSR set to: 0
  2445  0026D6  0012               	return		;funcret
  2446  0026D8                     __end_of_strlen:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _fputs *****************
  2450 ;; Defined at:
  2451 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  s               2   41[BANK0 ] PTR const unsigned char 
  2454 ;;		 -> dbuf(32), 
  2455 ;;  fp              2   43[BANK0 ] PTR struct _IO_FILE
  2456 ;;		 -> sprintf@f(6), 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  i               2   46[BANK0 ] int 
  2459 ;;  c               1   45[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2   41[BANK0 ] int 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2469 ;;      Params:         0       4       0       0       0       0       0       0       0
  2470 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2472 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2473 ;;Total ram usage:        7 bytes
  2474 ;; Hardware stack levels used: 1
  2475 ;; Hardware stack levels required when called: 13
  2476 ;; This function calls:
  2477 ;;		_fputc
  2478 ;; This function is called by:
  2479 ;;		_pad
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text10
  2484  00244C                     __ptext10:
  2485                           	callstack 0
  2486  00244C                     _fputs:
  2487                           	callstack 11
  2488  00244C  0E00               	movlw	0
  2489  00244E  0100               	movlb	0	; () banked
  2490  002450  6F8F               	movwf	(fputs@i+1)& (0+255),b
  2491  002452  0E00               	movlw	0
  2492  002454  6F8E               	movwf	fputs@i& (0+255),b
  2493  002456  EF39  F012         	goto	l3092
  2494  00245A                     l3088:
  2495                           
  2496                           ; BSR set to: 0
  2497  00245A  C08D  F080         	movff	fputs@c,fputc@c
  2498  00245E  6B81               	clrf	(fputc@c+1)& (0+255),b
  2499  002460  C08B  F082         	movff	fputs@fp,fputc@fp
  2500  002464  C08C  F083         	movff	fputs@fp+1,fputc@fp+1
  2501  002468  ECC1  F00C         	call	_fputc	;wreg free
  2502  00246C  0100               	movlb	0	; () banked
  2503  00246E  4B8E               	infsnz	fputs@i& (0+255),f,b
  2504  002470  2B8F               	incf	(fputs@i+1)& (0+255),f,b
  2505  002472                     l3092:
  2506                           
  2507                           ; BSR set to: 0
  2508  002472  518E               	movf	fputs@i& (0+255),w,b
  2509  002474  2589               	addwf	fputs@s& (0+255),w,b
  2510  002476  6ED9               	movwf	fsr2l,c
  2511  002478  518F               	movf	(fputs@i+1)& (0+255),w,b
  2512  00247A  218A               	addwfc	(fputs@s+1)& (0+255),w,b
  2513  00247C  6EDA               	movwf	fsr2h,c
  2514  00247E  50DF               	movf	indf2,w,c
  2515  002480  6F8D               	movwf	fputs@c& (0+255),b
  2516  002482  518D               	movf	fputs@c& (0+255),w,b
  2517  002484  A4D8               	btfss	status,2,c
  2518  002486  EF47  F012         	goto	u2691
  2519  00248A  EF49  F012         	goto	u2690
  2520  00248E                     u2691:
  2521  00248E  EF2D  F012         	goto	l3088
  2522  002492                     u2690:
  2523  002492                     
  2524                           ; BSR set to: 0
  2525  002492  0012               	return		;funcret
  2526  002494                     __end_of_fputs:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _fputc *****************
  2530 ;; Defined at:
  2531 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  c               2   32[BANK0 ] int 
  2534 ;;  fp              2   34[BANK0 ] PTR struct _IO_FILE
  2535 ;;		 -> sprintf@f(6), 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  2   32[BANK0 ] int 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2547 ;;      Params:         0       4       0       0       0       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2549 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2550 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2551 ;;Total ram usage:        9 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 12
  2554 ;; This function calls:
  2555 ;;		_putch
  2556 ;; This function is called by:
  2557 ;;		_pad
  2558 ;;		_vfpfcnvrt
  2559 ;;		_fputs
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text11
  2564  001982                     __ptext11:
  2565                           	callstack 0
  2566  001982                     _fputc:
  2567                           	callstack 14
  2568  001982  0100               	movlb	0	; () banked
  2569  001984  5182               	movf	fputc@fp& (0+255),w,b
  2570  001986  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  2571  001988  B4D8               	btfsc	status,2,c
  2572  00198A  EFC9  F00C         	goto	u2631
  2573  00198E  EFCB  F00C         	goto	u2630
  2574  001992                     u2631:
  2575  001992  EFD4  F00C         	goto	l3058
  2576  001996                     u2630:
  2577  001996                     
  2578                           ; BSR set to: 0
  2579  001996  5182               	movf	fputc@fp& (0+255),w,b
  2580  001998  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  2581  00199A  A4D8               	btfss	status,2,c
  2582  00199C  EFD2  F00C         	goto	u2641
  2583  0019A0  EFD4  F00C         	goto	u2640
  2584  0019A4                     u2641:
  2585  0019A4  EFD9  F00C         	goto	l3060
  2586  0019A8                     u2640:
  2587  0019A8                     l3058:
  2588                           
  2589                           ; BSR set to: 0
  2590  0019A8  5180               	movf	fputc@c& (0+255),w,b
  2591  0019AA  EC84  F014         	call	_putch
  2592  0019AE  EF26  F00D         	goto	l1009
  2593  0019B2                     l3060:
  2594                           
  2595                           ; BSR set to: 0
  2596  0019B2  EE20 F004          	lfsr	2,4
  2597  0019B6  5182               	movf	fputc@fp& (0+255),w,b
  2598  0019B8  26D9               	addwf	fsr2l,f,c
  2599  0019BA  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2600  0019BC  22DA               	addwfc	fsr2h,f,c
  2601  0019BE  50DE               	movf	postinc2,w,c
  2602  0019C0  10DE               	iorwf	postinc2,w,c
  2603  0019C2  B4D8               	btfsc	status,2,c
  2604  0019C4  EFE6  F00C         	goto	u2651
  2605  0019C8  EFE8  F00C         	goto	u2650
  2606  0019CC                     u2651:
  2607  0019CC  EF03  F00D         	goto	l3064
  2608  0019D0                     u2650:
  2609  0019D0                     
  2610                           ; BSR set to: 0
  2611  0019D0  EE20 F004          	lfsr	2,4
  2612  0019D4  5182               	movf	fputc@fp& (0+255),w,b
  2613  0019D6  26D9               	addwf	fsr2l,f,c
  2614  0019D8  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2615  0019DA  22DA               	addwfc	fsr2h,f,c
  2616  0019DC  EE10 F002          	lfsr	1,2
  2617  0019E0  5182               	movf	fputc@fp& (0+255),w,b
  2618  0019E2  26E1               	addwf	fsr1l,f,c
  2619  0019E4  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2620  0019E6  22E2               	addwfc	fsr1h,f,c
  2621  0019E8  50DE               	movf	postinc2,w,c
  2622  0019EA  5CE6               	subwf	postinc1,w,c
  2623  0019EC  50E6               	movf	postinc1,w,c
  2624  0019EE  0A80               	xorlw	128
  2625  0019F0  6F88               	movwf	(??_fputc+4)& (0+255),b
  2626  0019F2  50DE               	movf	postinc2,w,c
  2627  0019F4  0A80               	xorlw	128
  2628  0019F6  5988               	subwfb	(??_fputc+4)& (0+255),w,b
  2629  0019F8  B0D8               	btfsc	status,0,c
  2630  0019FA  EF01  F00D         	goto	u2661
  2631  0019FE  EF03  F00D         	goto	u2660
  2632  001A02                     u2661:
  2633  001A02  EF26  F00D         	goto	l1009
  2634  001A06                     u2660:
  2635  001A06                     l3064:
  2636                           
  2637                           ; BSR set to: 0
  2638  001A06  EE20 F002          	lfsr	2,2
  2639  001A0A  5182               	movf	fputc@fp& (0+255),w,b
  2640  001A0C  26D9               	addwf	fsr2l,f,c
  2641  001A0E  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2642  001A10  22DA               	addwfc	fsr2h,f,c
  2643  001A12  CFDE F084          	movff	postinc2,??_fputc
  2644  001A16  CFDD F085          	movff	postdec2,??_fputc+1
  2645  001A1A  C082  FFD9         	movff	fputc@fp,fsr2l
  2646  001A1E  C083  FFDA         	movff	fputc@fp+1,fsr2h
  2647  001A22  CFDE F086          	movff	postinc2,??_fputc+2
  2648  001A26  CFDD F087          	movff	postdec2,??_fputc+3
  2649  001A2A  5184               	movf	??_fputc& (0+255),w,b
  2650  001A2C  2586               	addwf	(??_fputc+2)& (0+255),w,b
  2651  001A2E  6ED9               	movwf	fsr2l,c
  2652  001A30  5185               	movf	(??_fputc+1)& (0+255),w,b
  2653  001A32  2187               	addwfc	(??_fputc+3)& (0+255),w,b
  2654  001A34  6EDA               	movwf	fsr2h,c
  2655  001A36  C080  FFDF         	movff	fputc@c,indf2
  2656  001A3A  EE20 F002          	lfsr	2,2
  2657  001A3E  5182               	movf	fputc@fp& (0+255),w,b
  2658  001A40  26D9               	addwf	fsr2l,f,c
  2659  001A42  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2660  001A44  22DA               	addwfc	fsr2h,f,c
  2661  001A46  2ADE               	incf	postinc2,f,c
  2662  001A48  0E00               	movlw	0
  2663  001A4A  22DD               	addwfc	postdec2,f,c
  2664  001A4C                     l1009:
  2665  001A4C  0012               	return		;funcret
  2666  001A4E                     __end_of_fputc:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function _putch *****************
  2670 ;; Defined at:
  2671 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  c               1    wreg     unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  c               1    0[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2685 ;;      Params:         0       0       0       0       0       0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2688 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2689 ;;Total ram usage:        0 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 11
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_fputc
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text12
  2700  002908                     __ptext12:
  2701                           	callstack 0
  2702  002908                     _putch:
  2703                           	callstack 14
  2704  002908  0012               	return		;funcret
  2705  00290A                     __end_of_putch:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _abs *****************
  2709 ;; Defined at:
  2710 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  a               2   50[BANK0 ] int 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2   50[BANK0 ] int 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2724 ;;      Params:         0       2       0       0       0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2726 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2727 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2728 ;;Total ram usage:        4 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 11
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_dtoa
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text13
  2739  002564                     __ptext13:
  2740                           	callstack 0
  2741  002564                     _abs:
  2742                           	callstack 14
  2743  002564  0100               	movlb	0	; () banked
  2744  002566  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  2745  002568  EFC0  F012         	goto	u3060
  2746  00256C  5193               	movf	(abs@a+1)& (0+255),w,b
  2747  00256E  E106               	bnz	u3061
  2748  002570  0592               	decf	abs@a& (0+255),w,b
  2749  002572  B0D8               	btfsc	status,0,c
  2750  002574  EFBE  F012         	goto	u3061
  2751  002578  EFC0  F012         	goto	u3060
  2752  00257C                     u3061:
  2753  00257C  EFCE  F012         	goto	l994
  2754  002580                     u3060:
  2755  002580                     
  2756                           ; BSR set to: 0
  2757  002580  C092  F094         	movff	abs@a,??_abs
  2758  002584  C093  F095         	movff	abs@a+1,??_abs+1
  2759  002588  1F94               	comf	??_abs& (0+255),f,b
  2760  00258A  1F95               	comf	(??_abs+1)& (0+255),f,b
  2761  00258C  4B94               	infsnz	??_abs& (0+255),f,b
  2762  00258E  2B95               	incf	(??_abs+1)& (0+255),f,b
  2763  002590  C094  F092         	movff	??_abs,?_abs
  2764  002594  C095  F093         	movff	??_abs+1,?_abs+1
  2765  002598  EFD2  F012         	goto	l997
  2766  00259C                     l994:
  2767                           
  2768                           ; BSR set to: 0
  2769  00259C  C092  F092         	movff	abs@a,?_abs
  2770  0025A0  C093  F093         	movff	abs@a+1,?_abs+1
  2771  0025A4                     l997:
  2772                           
  2773                           ; BSR set to: 0
  2774  0025A4  0012               	return		;funcret
  2775  0025A6                     __end_of_abs:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function ___aomod *****************
  2779 ;; Defined at:
  2780 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  dividend        8   32[BANK0 ] long long 
  2783 ;;  divisor         8   40[BANK0 ] long long 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  sign            1   49[BANK0 ] unsigned char 
  2786 ;;  counter         1   48[BANK0 ] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  8   32[BANK0 ] long long 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2796 ;;      Params:         0      16       0       0       0       0       0       0       0
  2797 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2799 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2800 ;;Total ram usage:       18 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 11
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_dtoa
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text14
  2811  0014AA                     __ptext14:
  2812                           	callstack 0
  2813  0014AA                     ___aomod:
  2814                           	callstack 14
  2815  0014AA  0E00               	movlw	0
  2816  0014AC  0100               	movlb	0	; () banked
  2817  0014AE  6F91               	movwf	___aomod@sign& (0+255),b
  2818  0014B0                     
  2819                           ; BSR set to: 0
  2820  0014B0  BF87               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  2821  0014B2  EF5F  F00A         	goto	u2960
  2822  0014B6  EF5D  F00A         	goto	u2961
  2823  0014BA                     u2961:
  2824  0014BA  EF71  F00A         	goto	l3262
  2825  0014BE                     u2960:
  2826  0014BE                     
  2827                           ; BSR set to: 0
  2828  0014BE  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  2829  0014C0  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  2830  0014C2  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  2831  0014C4  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  2832  0014C6  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  2833  0014C8  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  2834  0014CA  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  2835  0014CC  6D80               	negf	___aomod@dividend& (0+255),b
  2836  0014CE  0E00               	movlw	0
  2837  0014D0  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2838  0014D2  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2839  0014D4  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2840  0014D6  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2841  0014D8  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2842  0014DA  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2843  0014DC  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2844  0014DE                     
  2845                           ; BSR set to: 0
  2846  0014DE  0E01               	movlw	1
  2847  0014E0  6F91               	movwf	___aomod@sign& (0+255),b
  2848  0014E2                     l3262:
  2849                           
  2850                           ; BSR set to: 0
  2851  0014E2  BF8F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  2852  0014E4  EF78  F00A         	goto	u2970
  2853  0014E8  EF76  F00A         	goto	u2971
  2854  0014EC                     u2971:
  2855  0014EC  EF88  F00A         	goto	l3266
  2856  0014F0                     u2970:
  2857  0014F0                     
  2858                           ; BSR set to: 0
  2859  0014F0  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  2860  0014F2  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  2861  0014F4  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  2862  0014F6  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  2863  0014F8  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  2864  0014FA  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  2865  0014FC  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  2866  0014FE  6D88               	negf	___aomod@divisor& (0+255),b
  2867  001500  0E00               	movlw	0
  2868  001502  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2869  001504  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2870  001506  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2871  001508  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2872  00150A  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2873  00150C  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2874  00150E  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2875  001510                     l3266:
  2876                           
  2877                           ; BSR set to: 0
  2878  001510  5188               	movf	___aomod@divisor& (0+255),w,b
  2879  001512  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2880  001514  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2881  001516  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2882  001518  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2883  00151A  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2884  00151C  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2885  00151E  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2886  001520  B4D8               	btfsc	status,2,c
  2887  001522  EF95  F00A         	goto	u2981
  2888  001526  EF97  F00A         	goto	u2980
  2889  00152A                     u2981:
  2890  00152A  EFDF  F00A         	goto	l3282
  2891  00152E                     u2980:
  2892  00152E                     
  2893                           ; BSR set to: 0
  2894  00152E  0E01               	movlw	1
  2895  001530  6F90               	movwf	___aomod@counter& (0+255),b
  2896  001532  EFA5  F00A         	goto	l3272
  2897  001536                     l3270:
  2898                           
  2899                           ; BSR set to: 0
  2900  001536  90D8               	bcf	status,0,c
  2901  001538  3788               	rlcf	___aomod@divisor& (0+255),f,b
  2902  00153A  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2903  00153C  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2904  00153E  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2905  001540  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2906  001542  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2907  001544  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2908  001546  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2909  001548  2B90               	incf	___aomod@counter& (0+255),f,b
  2910  00154A                     l3272:
  2911                           
  2912                           ; BSR set to: 0
  2913  00154A  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2914  00154C  EFAA  F00A         	goto	u2991
  2915  001550  EFAC  F00A         	goto	u2990
  2916  001554                     u2991:
  2917  001554  EF9B  F00A         	goto	l3270
  2918  001558                     u2990:
  2919  001558                     l3274:
  2920                           
  2921                           ; BSR set to: 0
  2922  001558  5188               	movf	___aomod@divisor& (0+255),w,b
  2923  00155A  5D80               	subwf	___aomod@dividend& (0+255),w,b
  2924  00155C  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  2925  00155E  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2926  001560  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2927  001562  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2928  001564  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2929  001566  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2930  001568  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2931  00156A  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2932  00156C  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2933  00156E  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2934  001570  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2935  001572  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2936  001574  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2937  001576  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2938  001578  A0D8               	btfss	status,0,c
  2939  00157A  EFC1  F00A         	goto	u3001
  2940  00157E  EFC3  F00A         	goto	u3000
  2941  001582                     u3001:
  2942  001582  EFD3  F00A         	goto	l3278
  2943  001586                     u3000:
  2944  001586                     
  2945                           ; BSR set to: 0
  2946  001586  5188               	movf	___aomod@divisor& (0+255),w,b
  2947  001588  5F80               	subwf	___aomod@dividend& (0+255),f,b
  2948  00158A  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  2949  00158C  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2950  00158E  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2951  001590  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2952  001592  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2953  001594  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2954  001596  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2955  001598  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2956  00159A  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2957  00159C  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2958  00159E  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2959  0015A0  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2960  0015A2  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2961  0015A4  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2962  0015A6                     l3278:
  2963                           
  2964                           ; BSR set to: 0
  2965  0015A6  90D8               	bcf	status,0,c
  2966  0015A8  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2967  0015AA  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2968  0015AC  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2969  0015AE  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2970  0015B0  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2971  0015B2  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2972  0015B4  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2973  0015B6  3388               	rrcf	___aomod@divisor& (0+255),f,b
  2974  0015B8                     
  2975                           ; BSR set to: 0
  2976  0015B8  2F90               	decfsz	___aomod@counter& (0+255),f,b
  2977  0015BA  EFAC  F00A         	goto	l3274
  2978  0015BE                     l3282:
  2979                           
  2980                           ; BSR set to: 0
  2981  0015BE  5191               	movf	___aomod@sign& (0+255),w,b
  2982  0015C0  B4D8               	btfsc	status,2,c
  2983  0015C2  EFE5  F00A         	goto	u3011
  2984  0015C6  EFE7  F00A         	goto	u3010
  2985  0015CA                     u3011:
  2986  0015CA  EFF7  F00A         	goto	l3286
  2987  0015CE                     u3010:
  2988  0015CE                     
  2989                           ; BSR set to: 0
  2990  0015CE  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  2991  0015D0  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  2992  0015D2  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  2993  0015D4  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  2994  0015D6  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  2995  0015D8  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  2996  0015DA  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  2997  0015DC  6D80               	negf	___aomod@dividend& (0+255),b
  2998  0015DE  0E00               	movlw	0
  2999  0015E0  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3000  0015E2  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3001  0015E4  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3002  0015E6  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3003  0015E8  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3004  0015EA  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3005  0015EC  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3006  0015EE                     l3286:
  3007                           
  3008                           ; BSR set to: 0
  3009  0015EE  C080  F080         	movff	___aomod@dividend,?___aomod
  3010  0015F2  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  3011  0015F6  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  3012  0015FA  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  3013  0015FE  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  3014  001602  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  3015  001606  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  3016  00160A  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  3017  00160E                     
  3018                           ; BSR set to: 0
  3019  00160E  0012               	return		;funcret
  3020  001610                     __end_of___aomod:
  3021                           	callstack 0
  3022                           
  3023 ;; *************** function ___aodiv *****************
  3024 ;; Defined at:
  3025 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  dividend        8   32[BANK0 ] long long 
  3028 ;;  divisor         8   40[BANK0 ] long long 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  quotient        8   50[BANK0 ] long long 
  3031 ;;  sign            1   49[BANK0 ] unsigned char 
  3032 ;;  counter         1   48[BANK0 ] unsigned char 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  8   32[BANK0 ] long long 
  3035 ;; Registers used:
  3036 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3042 ;;      Params:         0      16       0       0       0       0       0       0       0
  3043 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3045 ;;      Totals:         0      26       0       0       0       0       0       0       0
  3046 ;;Total ram usage:       26 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 11
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_dtoa
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text15
  3057  001198                     __ptext15:
  3058                           	callstack 0
  3059  001198                     ___aodiv:
  3060                           	callstack 14
  3061  001198  0E00               	movlw	0
  3062  00119A  0100               	movlb	0	; () banked
  3063  00119C  6F91               	movwf	___aodiv@sign& (0+255),b
  3064  00119E                     
  3065                           ; BSR set to: 0
  3066  00119E  BF8F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3067  0011A0  EFD6  F008         	goto	u2890
  3068  0011A4  EFD4  F008         	goto	u2891
  3069  0011A8                     u2891:
  3070  0011A8  EFE8  F008         	goto	l3218
  3071  0011AC                     u2890:
  3072  0011AC                     
  3073                           ; BSR set to: 0
  3074  0011AC  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3075  0011AE  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3076  0011B0  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3077  0011B2  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3078  0011B4  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3079  0011B6  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3080  0011B8  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3081  0011BA  6D88               	negf	___aodiv@divisor& (0+255),b
  3082  0011BC  0E00               	movlw	0
  3083  0011BE  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3084  0011C0  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3085  0011C2  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3086  0011C4  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3087  0011C6  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3088  0011C8  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3089  0011CA  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3090  0011CC                     
  3091                           ; BSR set to: 0
  3092  0011CC  0E01               	movlw	1
  3093  0011CE  6F91               	movwf	___aodiv@sign& (0+255),b
  3094  0011D0                     l3218:
  3095                           
  3096                           ; BSR set to: 0
  3097  0011D0  BF87               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3098  0011D2  EFEF  F008         	goto	u2900
  3099  0011D6  EFED  F008         	goto	u2901
  3100  0011DA                     u2901:
  3101  0011DA  EF01  F009         	goto	l3224
  3102  0011DE                     u2900:
  3103  0011DE                     
  3104                           ; BSR set to: 0
  3105  0011DE  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3106  0011E0  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3107  0011E2  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3108  0011E4  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3109  0011E6  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3110  0011E8  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3111  0011EA  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3112  0011EC  6D80               	negf	___aodiv@dividend& (0+255),b
  3113  0011EE  0E00               	movlw	0
  3114  0011F0  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3115  0011F2  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3116  0011F4  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3117  0011F6  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3118  0011F8  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3119  0011FA  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3120  0011FC  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3121  0011FE                     
  3122                           ; BSR set to: 0
  3123  0011FE  0E01               	movlw	1
  3124  001200  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  3125  001202                     l3224:
  3126                           
  3127                           ; BSR set to: 0
  3128  001202  EE20  F092         	lfsr	2,___aodiv@quotient
  3129  001206  0E07               	movlw	7
  3130  001208                     u2911:
  3131  001208  6ADE               	clrf	postinc2,c
  3132  00120A  06E8               	decf	wreg,f,c
  3133  00120C  E2FD               	bc	u2911
  3134  00120E                     
  3135                           ; BSR set to: 0
  3136  00120E  5188               	movf	___aodiv@divisor& (0+255),w,b
  3137  001210  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3138  001212  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3139  001214  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3140  001216  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3141  001218  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3142  00121A  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3143  00121C  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3144  00121E  B4D8               	btfsc	status,2,c
  3145  001220  EF14  F009         	goto	u2921
  3146  001224  EF16  F009         	goto	u2920
  3147  001228                     u2921:
  3148  001228  EF68  F009         	goto	l3246
  3149  00122C                     u2920:
  3150  00122C                     
  3151                           ; BSR set to: 0
  3152  00122C  0E01               	movlw	1
  3153  00122E  6F90               	movwf	___aodiv@counter& (0+255),b
  3154  001230  EF24  F009         	goto	l3232
  3155  001234                     l3230:
  3156                           
  3157                           ; BSR set to: 0
  3158  001234  90D8               	bcf	status,0,c
  3159  001236  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  3160  001238  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3161  00123A  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3162  00123C  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3163  00123E  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3164  001240  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3165  001242  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3166  001244  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3167  001246  2B90               	incf	___aodiv@counter& (0+255),f,b
  3168  001248                     l3232:
  3169                           
  3170                           ; BSR set to: 0
  3171  001248  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3172  00124A  EF29  F009         	goto	u2931
  3173  00124E  EF2B  F009         	goto	u2930
  3174  001252                     u2931:
  3175  001252  EF1A  F009         	goto	l3230
  3176  001256                     u2930:
  3177  001256                     l3234:
  3178                           
  3179                           ; BSR set to: 0
  3180  001256  90D8               	bcf	status,0,c
  3181  001258  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  3182  00125A  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3183  00125C  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3184  00125E  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3185  001260  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3186  001262  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3187  001264  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3188  001266  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3189  001268                     
  3190                           ; BSR set to: 0
  3191  001268  5188               	movf	___aodiv@divisor& (0+255),w,b
  3192  00126A  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  3193  00126C  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3194  00126E  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3195  001270  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3196  001272  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3197  001274  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3198  001276  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3199  001278  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3200  00127A  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3201  00127C  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3202  00127E  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3203  001280  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3204  001282  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3205  001284  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3206  001286  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3207  001288  A0D8               	btfss	status,0,c
  3208  00128A  EF49  F009         	goto	u2941
  3209  00128E  EF4B  F009         	goto	u2940
  3210  001292                     u2941:
  3211  001292  EF5C  F009         	goto	l3242
  3212  001296                     u2940:
  3213  001296                     
  3214                           ; BSR set to: 0
  3215  001296  5188               	movf	___aodiv@divisor& (0+255),w,b
  3216  001298  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  3217  00129A  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3218  00129C  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3219  00129E  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3220  0012A0  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3221  0012A2  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3222  0012A4  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3223  0012A6  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3224  0012A8  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3225  0012AA  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3226  0012AC  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3227  0012AE  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3228  0012B0  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3229  0012B2  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3230  0012B4  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3231  0012B6                     
  3232                           ; BSR set to: 0
  3233  0012B6  8192               	bsf	___aodiv@quotient& (0+255),0,b
  3234  0012B8                     l3242:
  3235                           
  3236                           ; BSR set to: 0
  3237  0012B8  90D8               	bcf	status,0,c
  3238  0012BA  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3239  0012BC  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3240  0012BE  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3241  0012C0  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3242  0012C2  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3243  0012C4  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3244  0012C6  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3245  0012C8  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  3246  0012CA                     
  3247                           ; BSR set to: 0
  3248  0012CA  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  3249  0012CC  EF2B  F009         	goto	l3234
  3250  0012D0                     l3246:
  3251                           
  3252                           ; BSR set to: 0
  3253  0012D0  5191               	movf	___aodiv@sign& (0+255),w,b
  3254  0012D2  B4D8               	btfsc	status,2,c
  3255  0012D4  EF6E  F009         	goto	u2951
  3256  0012D8  EF70  F009         	goto	u2950
  3257  0012DC                     u2951:
  3258  0012DC  EF80  F009         	goto	l3250
  3259  0012E0                     u2950:
  3260  0012E0                     
  3261                           ; BSR set to: 0
  3262  0012E0  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3263  0012E2  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3264  0012E4  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3265  0012E6  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3266  0012E8  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3267  0012EA  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3268  0012EC  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3269  0012EE  6D92               	negf	___aodiv@quotient& (0+255),b
  3270  0012F0  0E00               	movlw	0
  3271  0012F2  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3272  0012F4  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3273  0012F6  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3274  0012F8  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3275  0012FA  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3276  0012FC  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3277  0012FE  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3278  001300                     l3250:
  3279                           
  3280                           ; BSR set to: 0
  3281  001300  C092  F080         	movff	___aodiv@quotient,?___aodiv
  3282  001304  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  3283  001308  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  3284  00130C  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  3285  001310  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  3286  001314  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  3287  001318  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  3288  00131C  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  3289  001320                     
  3290                           ; BSR set to: 0
  3291  001320  0012               	return		;funcret
  3292  001322                     __end_of___aodiv:
  3293                           	callstack 0
  3294                           
  3295 ;; *************** function _inicializa *****************
  3296 ;; Defined at:
  3297 ;;		line 26 in file "lcd.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3311 ;;      Params:         0       0       0       0       0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; Hardware stack levels required when called: 13
  3318 ;; This function calls:
  3319 ;;		_instr_wr
  3320 ;; This function is called by:
  3321 ;;		_printStartMessage
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text16
  3326  002818                     __ptext16:
  3327                           	callstack 0
  3328  002818                     _inicializa:
  3329                           	callstack 16
  3330  002818                     
  3331                           ;lcd.c: 27:     instr_wr(0x38);
  3332  002818  0E38               	movlw	56
  3333  00281A  EC3F  F014         	call	_instr_wr
  3334                           
  3335                           ;lcd.c: 28:     instr_wr(0x38);
  3336  00281E  0E38               	movlw	56
  3337  002820  EC3F  F014         	call	_instr_wr
  3338                           
  3339                           ;lcd.c: 29:     instr_wr(0x0E);
  3340  002824  0E0E               	movlw	14
  3341  002826  EC3F  F014         	call	_instr_wr
  3342                           
  3343                           ;lcd.c: 30:     instr_wr(0x06);
  3344  00282A  0E06               	movlw	6
  3345  00282C  EC3F  F014         	call	_instr_wr
  3346                           
  3347                           ;lcd.c: 31:     instr_wr(0x01);
  3348  002830  0E01               	movlw	1
  3349  002832  EC3F  F014         	call	_instr_wr
  3350  002836                     
  3351                           ;lcd.c: 32:     initialized = 1;
  3352  002836  0E01               	movlw	1
  3353  002838  0100               	movlb	0	; () banked
  3354  00283A  6FC8               	movwf	_initialized@lcd_kit$F215& (0+255),b
  3355  00283C                     
  3356                           ; BSR set to: 0
  3357  00283C  0012               	return		;funcret
  3358  00283E                     __end_of_inicializa:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function _instr_wr *****************
  3362 ;; Defined at:
  3363 ;;		line 8 in file "lcd.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  inst            1    wreg     unsigned char 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  inst            1   33[BANK0 ] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0
  3378 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3380 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3381 ;;Total ram usage:        1 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 12
  3384 ;; This function calls:
  3385 ;;		_atraso_lcd
  3386 ;; This function is called by:
  3387 ;;		_printStartMessage
  3388 ;;		_inicializa
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text17
  3393  00287E                     __ptext17:
  3394                           	callstack 0
  3395  00287E                     _instr_wr:
  3396                           	callstack 17
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;incstack = 0
  3400                           ;instr_wr@inst stored from wreg
  3401  00287E  0100               	movlb	0	; () banked
  3402  002880  6F81               	movwf	instr_wr@inst& (0+255),b
  3403  002882                     
  3404                           ;lcd.c: 9:     LATEbits.LATE1 = 1;
  3405  002882  828D               	bsf	141,1,c	;volatile
  3406                           
  3407                           ;lcd.c: 10:     LATEbits.LATE0 = 0;
  3408  002884  908D               	bcf	141,0,c	;volatile
  3409                           
  3410                           ;lcd.c: 11:     LATEbits.LATE2 = 0;
  3411  002886  948D               	bcf	141,2,c	;volatile
  3412  002888                     
  3413                           ;lcd.c: 12:     LATD = inst;
  3414  002888  C081  FF8C         	movff	instr_wr@inst,3980	;volatile
  3415  00288C                     
  3416                           ;lcd.c: 13:     LATEbits.LATE1 = 0;
  3417  00288C  928D               	bcf	141,1,c	;volatile
  3418  00288E                     
  3419                           ;lcd.c: 14:     atraso_lcd();
  3420  00288E  EC55  F014         	call	_atraso_lcd	;wreg free
  3421  002892  0012               	return		;funcret
  3422  002894                     __end_of_instr_wr:
  3423                           	callstack 0
  3424                           
  3425 ;; *************** function _escreve_texto *****************
  3426 ;; Defined at:
  3427 ;;		line 35 in file "lcd.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  linha           2   34[BANK0 ] PTR unsigned char 
  3430 ;;		 -> linha2(16), linha1(16), 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  i               2   36[BANK0 ] int 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3442 ;;      Params:         0       2       0       0       0       0       0       0       0
  3443 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3445 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3446 ;;Total ram usage:        4 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 13
  3449 ;; This function calls:
  3450 ;;		_dado_wr
  3451 ;; This function is called by:
  3452 ;;		_printStartMessage
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text18
  3457  0025A6                     __ptext18:
  3458                           	callstack 0
  3459  0025A6                     _escreve_texto:
  3460                           	callstack 16
  3461  0025A6                     
  3462                           ;lcd.c: 36:     for (int i = 0; i < 16; i++) {
  3463  0025A6  0E00               	movlw	0
  3464  0025A8  0100               	movlb	0	; () banked
  3465  0025AA  6F85               	movwf	(escreve_texto@i+1)& (0+255),b
  3466  0025AC  0E00               	movlw	0
  3467  0025AE  6F84               	movwf	escreve_texto@i& (0+255),b
  3468  0025B0                     l2726:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;lcd.c: 37:         dado_wr(linha[i]);
  3472  0025B0  5184               	movf	escreve_texto@i& (0+255),w,b
  3473  0025B2  2582               	addwf	escreve_texto@linha& (0+255),w,b
  3474  0025B4  6ED9               	movwf	fsr2l,c
  3475  0025B6  5185               	movf	(escreve_texto@i+1)& (0+255),w,b
  3476  0025B8  2183               	addwfc	(escreve_texto@linha+1)& (0+255),w,b
  3477  0025BA  6EDA               	movwf	fsr2h,c
  3478  0025BC  50DF               	movf	indf2,w,c
  3479  0025BE  EC4A  F014         	call	_dado_wr
  3480  0025C2                     
  3481                           ;lcd.c: 38:     }
  3482  0025C2  0100               	movlb	0	; () banked
  3483  0025C4  4B84               	infsnz	escreve_texto@i& (0+255),f,b
  3484  0025C6  2B85               	incf	(escreve_texto@i+1)& (0+255),f,b
  3485  0025C8                     
  3486                           ; BSR set to: 0
  3487  0025C8  BF85               	btfsc	(escreve_texto@i+1)& (0+255),7,b
  3488  0025CA  EFF0  F012         	goto	u2341
  3489  0025CE  5185               	movf	(escreve_texto@i+1)& (0+255),w,b
  3490  0025D0  E109               	bnz	u2340
  3491  0025D2  0E10               	movlw	16
  3492  0025D4  5D84               	subwf	escreve_texto@i& (0+255),w,b
  3493  0025D6  A0D8               	btfss	status,0,c
  3494  0025D8  EFF0  F012         	goto	u2341
  3495  0025DC  EFF2  F012         	goto	u2340
  3496  0025E0                     u2341:
  3497  0025E0  EFD8  F012         	goto	l2726
  3498  0025E4                     u2340:
  3499  0025E4                     
  3500                           ; BSR set to: 0
  3501  0025E4  0012               	return		;funcret
  3502  0025E6                     __end_of_escreve_texto:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function _dado_wr *****************
  3506 ;; Defined at:
  3507 ;;		line 17 in file "lcd.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  texto           1    wreg     unsigned char 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  texto           1   33[BANK0 ] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3521 ;;      Params:         0       0       0       0       0       0       0       0       0
  3522 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3524 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3525 ;;Total ram usage:        1 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 12
  3528 ;; This function calls:
  3529 ;;		_atraso_lcd
  3530 ;; This function is called by:
  3531 ;;		_escreve_texto
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text19
  3536  002894                     __ptext19:
  3537                           	callstack 0
  3538  002894                     _dado_wr:
  3539                           	callstack 16
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;incstack = 0
  3543                           ;dado_wr@texto stored from wreg
  3544  002894  0100               	movlb	0	; () banked
  3545  002896  6F81               	movwf	dado_wr@texto& (0+255),b
  3546  002898                     
  3547                           ;lcd.c: 18:     LATEbits.LATE1 = 1;
  3548  002898  828D               	bsf	141,1,c	;volatile
  3549                           
  3550                           ;lcd.c: 19:     LATEbits.LATE0 = 1;
  3551  00289A  808D               	bsf	141,0,c	;volatile
  3552                           
  3553                           ;lcd.c: 20:     LATEbits.LATE2 = 0;
  3554  00289C  948D               	bcf	141,2,c	;volatile
  3555  00289E                     
  3556                           ;lcd.c: 21:     LATD = texto;
  3557  00289E  C081  FF8C         	movff	dado_wr@texto,3980	;volatile
  3558  0028A2                     
  3559                           ;lcd.c: 22:     LATEbits.LATE1 = 0;
  3560  0028A2  928D               	bcf	141,1,c	;volatile
  3561  0028A4                     
  3562                           ;lcd.c: 23:     atraso_lcd();
  3563  0028A4  EC55  F014         	call	_atraso_lcd	;wreg free
  3564  0028A8  0012               	return		;funcret
  3565  0028AA                     __end_of_dado_wr:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function _atraso_lcd *****************
  3569 ;; Defined at:
  3570 ;;		line 4 in file "lcd.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3584 ;;      Params:         0       0       0       0       0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3586 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3587 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3588 ;;Total ram usage:        1 bytes
  3589 ;; Hardware stack levels used: 1
  3590 ;; Hardware stack levels required when called: 11
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_instr_wr
  3595 ;;		_dado_wr
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text20
  3600  0028AA                     __ptext20:
  3601                           	callstack 0
  3602  0028AA                     _atraso_lcd:
  3603                           	callstack 17
  3604  0028AA                     
  3605                           ;lcd.c: 5:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3606  0028AA  0E14               	movlw	20
  3607  0028AC  0100               	movlb	0	; () banked
  3608  0028AE  6F80               	movwf	??_atraso_lcd& (0+255),b
  3609  0028B0  0E79               	movlw	121
  3610  0028B2                     u3637:
  3611  0028B2  2EE8               	decfsz	wreg,f,c
  3612  0028B4  D7FE               	bra	u3637
  3613  0028B6  2F80               	decfsz	??_atraso_lcd& (0+255),f,b
  3614  0028B8  D7FC               	bra	u3637
  3615  0028BA  D000               	nop2	
  3616  0028BC  0012               	return		;funcret
  3617  0028BE                     __end_of_atraso_lcd:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _clear *****************
  3621 ;; Defined at:
  3622 ;;		line 41 in file "lcd.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  linha           2   32[BANK0 ] PTR unsigned char 
  3625 ;;		 -> linha2(16), linha1(16), 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  i               2   34[BANK0 ] int 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3637 ;;      Params:         0       2       0       0       0       0       0       0       0
  3638 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3640 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3641 ;;Total ram usage:        4 bytes
  3642 ;; Hardware stack levels used: 1
  3643 ;; Hardware stack levels required when called: 11
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_printStartMessage
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text21
  3652  002626                     __ptext21:
  3653                           	callstack 0
  3654  002626                     _clear:
  3655                           	callstack 18
  3656  002626                     
  3657                           ;lcd.c: 41: void clear(char linha[16]);lcd.c: 42: {;lcd.c: 43:     for (int i = 0; i < 1
      +                          6; i++) {
  3658  002626  0E00               	movlw	0
  3659  002628  0100               	movlb	0	; () banked
  3660  00262A  6F83               	movwf	(clear@i+1)& (0+255),b
  3661  00262C  0E00               	movlw	0
  3662  00262E  6F82               	movwf	clear@i& (0+255),b
  3663  002630                     l2702:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;lcd.c: 44:         linha[i] = 0;
  3667  002630  5182               	movf	clear@i& (0+255),w,b
  3668  002632  2580               	addwf	clear@linha& (0+255),w,b
  3669  002634  6ED9               	movwf	fsr2l,c
  3670  002636  5183               	movf	(clear@i+1)& (0+255),w,b
  3671  002638  2181               	addwfc	(clear@linha+1)& (0+255),w,b
  3672  00263A  6EDA               	movwf	fsr2h,c
  3673  00263C  0E00               	movlw	0
  3674  00263E  6EDF               	movwf	indf2,c
  3675  002640                     
  3676                           ; BSR set to: 0
  3677                           ;lcd.c: 45:     }
  3678  002640  4B82               	infsnz	clear@i& (0+255),f,b
  3679  002642  2B83               	incf	(clear@i+1)& (0+255),f,b
  3680  002644                     
  3681                           ; BSR set to: 0
  3682  002644  BF83               	btfsc	(clear@i+1)& (0+255),7,b
  3683  002646  EF2E  F013         	goto	u2331
  3684  00264A  5183               	movf	(clear@i+1)& (0+255),w,b
  3685  00264C  E109               	bnz	u2330
  3686  00264E  0E10               	movlw	16
  3687  002650  5D82               	subwf	clear@i& (0+255),w,b
  3688  002652  A0D8               	btfss	status,0,c
  3689  002654  EF2E  F013         	goto	u2331
  3690  002658  EF30  F013         	goto	u2330
  3691  00265C                     u2331:
  3692  00265C  EF18  F013         	goto	l2702
  3693  002660                     u2330:
  3694  002660                     
  3695                           ; BSR set to: 0
  3696  002660  0012               	return		;funcret
  3697  002662                     __end_of_clear:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _EEPROM_ReadByte *****************
  3701 ;; Defined at:
  3702 ;;		line 24 in file "Game.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  eepromAddres    1    wreg     unsigned char 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  eepromAddres    1   32[BANK0 ] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      unsigned char 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0
  3717 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3719 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3720 ;;Total ram usage:        1 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 11
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_printStartMessage
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text22
  3731  002776                     __ptext22:
  3732                           	callstack 0
  3733  002776                     _EEPROM_ReadByte:
  3734                           	callstack 18
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;incstack = 0
  3738                           ;EEPROM_ReadByte@eepromAddress stored from wreg
  3739  002776  0100               	movlb	0	; () banked
  3740  002778  6F80               	movwf	EEPROM_ReadByte@eepromAddress& (0+255),b
  3741  00277A                     l160:
  3742  00277A  B0A6               	btfsc	4006,0,c	;volsfr
  3743  00277C  EFC2  F013         	goto	u2311
  3744  002780  EFC4  F013         	goto	u2310
  3745  002784                     u2311:
  3746  002784  EFBD  F013         	goto	l160
  3747  002788                     u2310:
  3748  002788  B2A6               	btfsc	4006,1,c	;volsfr
  3749  00278A  EFC9  F013         	goto	u2321
  3750  00278E  EFCB  F013         	goto	u2320
  3751  002792                     u2321:
  3752  002792  EFBD  F013         	goto	l160
  3753  002796                     u2320:
  3754  002796                     
  3755                           ;Game.c: 27:     EEADR = eepromAddress;
  3756  002796  C080  FFA9         	movff	EEPROM_ReadByte@eepromAddress,4009	;volatile
  3757  00279A                     
  3758                           ;Game.c: 28:     RD = 1;
  3759  00279A  80A6               	bsf	4006,0,c	;volsfr
  3760  00279C                     
  3761                           ;Game.c: 29:     return(EEDATA);
  3762  00279C  50A8               	movf	168,w,c	;volatile
  3763  00279E  0012               	return		;funcret
  3764  0027A0                     __end_of_EEPROM_ReadByte:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _EEPROM_WriteByte *****************
  3768 ;; Defined at:
  3769 ;;		line 7 in file "Game.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  eepromAddres    1    wreg     unsigned char 
  3772 ;;  eepromData      1   32[BANK0 ] unsigned char 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  eepromAddres    1   33[BANK0 ] unsigned char 
  3775 ;;  gie_Status      1   34[BANK0 ] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3785 ;;      Params:         0       1       0       0       0       0       0       0       0
  3786 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3788 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3789 ;;Total ram usage:        3 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 11
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text23
  3800  002494                     __ptext23:
  3801                           	callstack 0
  3802  002494                     _EEPROM_WriteByte:
  3803                           	callstack 19
  3804                           
  3805                           ;incstack = 0
  3806                           ;EEPROM_WriteByte@eepromAddress stored from wreg
  3807  002494  0100               	movlb	0	; () banked
  3808  002496  6F81               	movwf	EEPROM_WriteByte@eepromAddress& (0+255),b
  3809  002498                     l154:
  3810  002498  B2A6               	btfsc	4006,1,c	;volsfr
  3811  00249A  EF51  F012         	goto	u2471
  3812  00249E  EF53  F012         	goto	u2470
  3813  0024A2                     u2471:
  3814  0024A2  EF4C  F012         	goto	l154
  3815  0024A6                     u2470:
  3816  0024A6                     
  3817                           ;Game.c: 12:     EEADR=eepromAddress;
  3818  0024A6  C081  FFA9         	movff	EEPROM_WriteByte@eepromAddress,4009	;volatile
  3819  0024AA                     
  3820                           ;Game.c: 13:     EEDATA=eepromData;
  3821  0024AA  C080  FFA8         	movff	EEPROM_WriteByte@eepromData,4008	;volatile
  3822  0024AE                     
  3823                           ;Game.c: 14:     WREN=1;
  3824  0024AE  84A6               	bsf	4006,2,c	;volsfr
  3825  0024B0                     
  3826                           ;Game.c: 15:     gie_Status = GIE;
  3827  0024B0  0E00               	movlw	0
  3828  0024B2  BEF2               	btfsc	4082,7,c	;volatile
  3829  0024B4  0E01               	movlw	1
  3830  0024B6  0100               	movlb	0	; () banked
  3831  0024B8  6F82               	movwf	EEPROM_WriteByte@gie_Status& (0+255),b
  3832  0024BA                     
  3833                           ; BSR set to: 0
  3834                           ;Game.c: 16:     GIE = 0;
  3835  0024BA  9EF2               	bcf	4082,7,c	;volatile
  3836  0024BC                     
  3837                           ; BSR set to: 0
  3838                           ;Game.c: 17:     EECON2=0x55;
  3839  0024BC  0E55               	movlw	85
  3840  0024BE  6EA7               	movwf	167,c	;volsfr
  3841  0024C0                     
  3842                           ; BSR set to: 0
  3843                           ;Game.c: 18:     EECON2=0xaa;
  3844  0024C0  0EAA               	movlw	170
  3845  0024C2  6EA7               	movwf	167,c	;volsfr
  3846  0024C4                     
  3847                           ; BSR set to: 0
  3848                           ;Game.c: 19:     WR=1;
  3849  0024C4  82A6               	bsf	4006,1,c	;volsfr
  3850  0024C6                     
  3851                           ; BSR set to: 0
  3852                           ;Game.c: 20:     GIE = gie_Status;
  3853  0024C6  B182               	btfsc	EEPROM_WriteByte@gie_Status& (0+255),0,b
  3854  0024C8  EF68  F012         	goto	u2481
  3855  0024CC  EF6B  F012         	goto	u2480
  3856  0024D0                     u2481:
  3857  0024D0  8EF2               	bsf	4082,7,c	;volatile
  3858  0024D2  EF6C  F012         	goto	u2495
  3859  0024D6                     u2480:
  3860  0024D6  9EF2               	bcf	4082,7,c	;volatile
  3861  0024D8                     u2495:
  3862  0024D8                     
  3863                           ;Game.c: 21:     WREN=0;
  3864  0024D8  94A6               	bcf	4006,2,c	;volsfr
  3865  0024DA  0012               	return		;funcret
  3866  0024DC                     __end_of_EEPROM_WriteByte:
  3867                           	callstack 0
  3868                           
  3869 ;; *************** function _interrupcao *****************
  3870 ;; Defined at:
  3871 ;;		line 46 in file "main.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3887 ;;      Temps:          0       8       0       0       0       0       0       0       0
  3888 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3889 ;;Total ram usage:        8 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 10
  3892 ;; This function calls:
  3893 ;;		_checkPlayerInput
  3894 ;;		_initGame
  3895 ;; This function is called by:
  3896 ;;		Interrupt level 2
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	intcode
  3901  000008                     __pintcode:
  3902                           	callstack 0
  3903  000008                     _interrupcao:
  3904                           	callstack 11
  3905                           
  3906                           ;incstack = 0
  3907  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3908  00000A  EDBA  F00B         	call	int_func,f	;refresh shadow registers
  3909                           
  3910                           	psect	intcode_body
  3911  001774                     __pintcode_body:
  3912                           	callstack 11
  3913  001774                     int_func:
  3914                           	callstack 11
  3915  001774  0006               	pop		; remove dummy address from shadow register refresh
  3916  001776  CFE1 F078          	movff	fsr1l,??_interrupcao
  3917  00177A  CFE2 F079          	movff	fsr1h,??_interrupcao+1
  3918  00177E  CFD9 F07A          	movff	fsr2l,??_interrupcao+2
  3919  001782  CFDA F07B          	movff	fsr2h,??_interrupcao+3
  3920  001786  CFF6 F07C          	movff	tblptrl,??_interrupcao+4
  3921  00178A  CFF7 F07D          	movff	tblptrh,??_interrupcao+5
  3922  00178E  CFF8 F07E          	movff	tblptru,??_interrupcao+6
  3923  001792  CFF5 F07F          	movff	tablat,??_interrupcao+7
  3924  001796                     
  3925                           ;main.c: 47:         INT1F = 0;
  3926  001796  A2F2               	btfss	4082,1,c	;volatile
  3927  001798  EFD0  F00B         	goto	i2u354_41
  3928  00179C  EFD2  F00B         	goto	i2u354_40
  3929  0017A0                     i2u354_41:
  3930  0017A0  EFE3  F00B         	goto	i2l3738
  3931  0017A4                     i2u354_40:
  3932  0017A4                     
  3933                           ;main.c: 48:     }
  3934  0017A4  0100               	movlb	0	; () banked
  3935  0017A6  05CB               	decf	_playing& (0+255),w,b
  3936  0017A8  B4D8               	btfsc	status,2,c
  3937  0017AA  EFD9  F00B         	goto	i2u355_41
  3938  0017AE  EFDB  F00B         	goto	i2u355_40
  3939  0017B2                     i2u355_41:
  3940  0017B2  EFDF  F00B         	goto	i2l3734
  3941  0017B6                     i2u355_40:
  3942  0017B6                     
  3943                           ; BSR set to: 0
  3944                           ;main.c: 49:     if (INT2F){
  3945  0017B6  ECD0  F013         	call	_initGame	;wreg free
  3946                           
  3947                           ;main.c: 50:         if (playing != 1){
  3948  0017BA  EFE2  F00B         	goto	i2l3736
  3949  0017BE                     i2l3734:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;main.c: 52:         }
  3953  0017BE  0E00               	movlw	0
  3954  0017C0  EC3F  F00C         	call	_checkPlayerInput
  3955  0017C4                     i2l3736:
  3956                           
  3957                           ;main.c: 54:             checkPlayerInput(2);
  3958  0017C4  92F2               	bcf	4082,1,c	;volatile
  3959  0017C6                     i2l3738:
  3960                           
  3961                           ;main.c: 56:         INT2F = 0;
  3962  0017C6  A0F0               	btfss	4080,0,c	;volatile
  3963  0017C8  EFE8  F00B         	goto	i2u356_41
  3964  0017CC  EFEA  F00B         	goto	i2u356_40
  3965  0017D0                     i2u356_41:
  3966  0017D0  EFFB  F00B         	goto	i2l3748
  3967  0017D4                     i2u356_40:
  3968  0017D4                     
  3969                           ;main.c: 57:     }
  3970  0017D4  0100               	movlb	0	; () banked
  3971  0017D6  05CB               	decf	_playing& (0+255),w,b
  3972  0017D8  B4D8               	btfsc	status,2,c
  3973  0017DA  EFF1  F00B         	goto	i2u357_41
  3974  0017DE  EFF3  F00B         	goto	i2u357_40
  3975  0017E2                     i2u357_41:
  3976  0017E2  EFF7  F00B         	goto	i2l3744
  3977  0017E6                     i2u357_40:
  3978  0017E6                     
  3979                           ; BSR set to: 0
  3980                           ;main.c: 58:     if (TMR0IF){
  3981  0017E6  ECD0  F013         	call	_initGame	;wreg free
  3982                           
  3983                           ;main.c: 59:         if(cont == 255){
  3984  0017EA  EFFA  F00B         	goto	i2l3746
  3985  0017EE                     i2l3744:
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;main.c: 61:         }
  3989  0017EE  0E01               	movlw	1
  3990  0017F0  EC3F  F00C         	call	_checkPlayerInput
  3991  0017F4                     i2l3746:
  3992                           
  3993                           ;main.c: 63:             cont++;
  3994  0017F4  90F0               	bcf	4080,0,c	;volatile
  3995  0017F6                     i2l3748:
  3996                           
  3997                           ;main.c: 65:         TMR0H = 0x3C;
  3998  0017F6  A2F0               	btfss	4080,1,c	;volatile
  3999  0017F8  EF00  F00C         	goto	i2u358_41
  4000  0017FC  EF02  F00C         	goto	i2u358_40
  4001  001800                     i2u358_41:
  4002  001800  EF13  F00C         	goto	i2l3758
  4003  001804                     i2u358_40:
  4004  001804                     
  4005                           ;main.c: 66:         TMR0L = 0xAF;
  4006  001804  0100               	movlb	0	; () banked
  4007  001806  05CB               	decf	_playing& (0+255),w,b
  4008  001808  B4D8               	btfsc	status,2,c
  4009  00180A  EF09  F00C         	goto	i2u359_41
  4010  00180E  EF0B  F00C         	goto	i2u359_40
  4011  001812                     i2u359_41:
  4012  001812  EF0F  F00C         	goto	i2l3754
  4013  001816                     i2u359_40:
  4014  001816                     
  4015                           ; BSR set to: 0
  4016                           ;main.c: 67:         TMR0IF = 0;
  4017  001816  ECD0  F013         	call	_initGame	;wreg free
  4018                           
  4019                           ;main.c: 68:     }
  4020  00181A  EF12  F00C         	goto	i2l3756
  4021  00181E                     i2l3754:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;main.c: 70: 
  4025  00181E  0E02               	movlw	2
  4026  001820  EC3F  F00C         	call	_checkPlayerInput
  4027  001824                     i2l3756:
  4028                           
  4029                           ;main.c: 72:     OSCCON = 0b01100000;
  4030  001824  92F0               	bcf	4080,1,c	;volatile
  4031  001826                     i2l3758:
  4032                           
  4033                           ;main.c: 74:     TRISE = 0x00;
  4034  001826  A4F2               	btfss	4082,2,c	;volatile
  4035  001828  EF18  F00C         	goto	i2u360_41
  4036  00182C  EF1A  F00C         	goto	i2u360_40
  4037  001830                     i2u360_41:
  4038  001830  EF2D  F00C         	goto	i2l95
  4039  001834                     i2u360_40:
  4040  001834                     
  4041                           ;main.c: 75:     TRISB = 0b00000111;
  4042  001834  0100               	movlb	0	; () banked
  4043  001836  29CA               	incf	_cont& (0+255),w,b
  4044  001838  A4D8               	btfss	status,2,c
  4045  00183A  EF21  F00C         	goto	i2u361_41
  4046  00183E  EF23  F00C         	goto	i2u361_40
  4047  001842                     i2u361_41:
  4048  001842  EF27  F00C         	goto	i2l3764
  4049  001846                     i2u361_40:
  4050  001846                     
  4051                           ; BSR set to: 0
  4052                           ;main.c: 76:     LATD = 0b11111111;
  4053  001846  0E00               	movlw	0
  4054  001848  6FCA               	movwf	_cont& (0+255),b
  4055                           
  4056                           ;main.c: 77:     _delay((unsigned long)((500)*(20000000/4000.0)));
  4057  00184A  EF28  F00C         	goto	i2l3766
  4058  00184E                     i2l3764:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;main.c: 79:     cont = 0;
  4062  00184E  2BCA               	incf	_cont& (0+255),f,b
  4063  001850                     i2l3766:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;main.c: 81:     setupInt();
  4067  001850  0E3C               	movlw	60
  4068  001852  6ED7               	movwf	215,c	;volatile
  4069  001854                     
  4070                           ; BSR set to: 0
  4071                           ;main.c: 82:     setupTmr0();
  4072  001854  0EAF               	movlw	175
  4073  001856  6ED6               	movwf	214,c	;volatile
  4074  001858                     
  4075                           ; BSR set to: 0
  4076                           ;main.c: 83:     printStartMessage();
  4077  001858  94F2               	bcf	4082,2,c	;volatile
  4078  00185A                     i2l95:
  4079  00185A  C07F  FFF5         	movff	??_interrupcao+7,tablat
  4080  00185E  C07E  FFF8         	movff	??_interrupcao+6,tblptru
  4081  001862  C07D  FFF7         	movff	??_interrupcao+5,tblptrh
  4082  001866  C07C  FFF6         	movff	??_interrupcao+4,tblptrl
  4083  00186A  C07B  FFDA         	movff	??_interrupcao+3,fsr2h
  4084  00186E  C07A  FFD9         	movff	??_interrupcao+2,fsr2l
  4085  001872  C079  FFE2         	movff	??_interrupcao+1,fsr1h
  4086  001876  C078  FFE1         	movff	??_interrupcao,fsr1l
  4087  00187A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4088  00187C  0011               	retfie		f
  4089  00187E                     __end_of_interrupcao:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function _initGame *****************
  4093 ;; Defined at:
  4094 ;;		line 122 in file "Game.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4108 ;;      Params:         0       0       0       0       0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4111 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4112 ;;Total ram usage:        0 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 9
  4115 ;; This function calls:
  4116 ;;		_generateGameSequence
  4117 ;;		_printAttentionMessage
  4118 ;;		_printPlayingMessage
  4119 ;;		_showGameSequence
  4120 ;; This function is called by:
  4121 ;;		_interrupcao
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text25
  4126  0027A0                     __ptext25:
  4127                           	callstack 0
  4128  0027A0                     _initGame:
  4129                           	callstack 11
  4130  0027A0                     
  4131                           ;Game.c: 123:     LATD = 0b11111111;
  4132  0027A0  688C               	setf	140,c	;volatile
  4133  0027A2                     
  4134                           ;Game.c: 124:     playing = 1;
  4135  0027A2  0E01               	movlw	1
  4136  0027A4  0100               	movlb	0	; () banked
  4137  0027A6  6FCB               	movwf	_playing& (0+255),b
  4138                           
  4139                           ;Game.c: 125:     level = 1;
  4140  0027A8  0E01               	movlw	1
  4141  0027AA  6E5D               	movwf	_level^0,c
  4142                           
  4143                           ;Game.c: 126:     playerPosition = 0;
  4144  0027AC  0E00               	movlw	0
  4145  0027AE  6E5E               	movwf	_playerPosition^0,c
  4146  0027B0                     
  4147                           ; BSR set to: 0
  4148                           ;Game.c: 127:     generateGameSequence();
  4149  0027B0  ECD4  F011         	call	_generateGameSequence	;wreg free
  4150  0027B4                     
  4151                           ;Game.c: 128:     printAttentionMessage();
  4152  0027B4  EC1B  F011         	call	_printAttentionMessage	;wreg free
  4153  0027B8                     
  4154                           ;Game.c: 129:     showGameSequence();
  4155  0027B8  EC02  F010         	call	_showGameSequence	;wreg free
  4156  0027BC                     
  4157                           ;Game.c: 130:     printPlayingMessage(1, level);
  4158  0027BC  C05D  F070         	movff	_level,printPlayingMessage@total
  4159  0027C0  0E01               	movlw	1
  4160  0027C2  EC3E  F010         	call	_printPlayingMessage
  4161  0027C6  0012               	return		;funcret
  4162  0027C8                     __end_of_initGame:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function _generateGameSequence *****************
  4166 ;; Defined at:
  4167 ;;		line 104 in file "Game.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;		None
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  toc             2   24[COMRAM] int 
  4172 ;;  i               1   26[COMRAM] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0
  4183 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4185 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4186 ;;Total ram usage:        3 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 2
  4189 ;; This function calls:
  4190 ;;		___awmod
  4191 ;;		_rand
  4192 ;;		_srand
  4193 ;; This function is called by:
  4194 ;;		_initGame
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text26
  4199  0023A8                     __ptext26:
  4200                           	callstack 0
  4201  0023A8                     _generateGameSequence:
  4202                           	callstack 17
  4203  0023A8                     
  4204                           ;Game.c: 105:     byte i;;Game.c: 106:     int toc = cont;
  4205  0023A8  C0CA  F019         	movff	_cont,generateGameSequence@toc
  4206  0023AC  6A1A               	clrf	(generateGameSequence@toc+1)^0,c
  4207  0023AE                     
  4208                           ;Game.c: 107:     srand(toc);
  4209  0023AE  C019  F001         	movff	generateGameSequence@toc,srand@s
  4210  0023B2  C01A  F002         	movff	generateGameSequence@toc+1,srand@s+1
  4211  0023B6  ECE4  F013         	call	_srand	;wreg free
  4212  0023BA                     
  4213                           ;Game.c: 108:     for(i = 0 ; i < 25 ; i++){
  4214  0023BA  0E00               	movlw	0
  4215  0023BC  6E1B               	movwf	generateGameSequence@i^0,c
  4216  0023BE                     i2l2808:
  4217                           
  4218                           ;Game.c: 109:         gameSequence[i] = (rand() % 3);
  4219  0023BE  0E20               	movlw	low _gameSequence
  4220  0023C0  241B               	addwf	generateGameSequence@i^0,w,c
  4221  0023C2  6ED9               	movwf	fsr2l,c
  4222  0023C4  6ADA               	clrf	fsr2h,c
  4223  0023C6  0E01               	movlw	high _gameSequence
  4224  0023C8  22DA               	addwfc	fsr2h,f,c
  4225  0023CA  EC7A  F010         	call	_rand	;wreg free
  4226  0023CE  C00D  F013         	movff	?_rand,___awmod@dividend
  4227  0023D2  C00E  F014         	movff	?_rand+1,___awmod@dividend+1
  4228  0023D6  0E00               	movlw	0
  4229  0023D8  6E16               	movwf	(___awmod@divisor+1)^0,c
  4230  0023DA  0E03               	movlw	3
  4231  0023DC  6E15               	movwf	___awmod@divisor^0,c
  4232  0023DE  EC54  F00E         	call	___awmod	;wreg free
  4233  0023E2  5013               	movf	?___awmod^0,w,c
  4234  0023E4  6EDF               	movwf	indf2,c
  4235  0023E6                     
  4236                           ;Game.c: 110:     }
  4237  0023E6  2A1B               	incf	generateGameSequence@i^0,f,c
  4238  0023E8  0E18               	movlw	24
  4239  0023EA  641B               	cpfsgt	generateGameSequence@i^0,c
  4240  0023EC  EFFA  F011         	goto	i2u235_41
  4241  0023F0  EFFC  F011         	goto	i2u235_40
  4242  0023F4                     i2u235_41:
  4243  0023F4  EFDF  F011         	goto	i2l2808
  4244  0023F8                     i2u235_40:
  4245  0023F8  0012               	return		;funcret
  4246  0023FA                     __end_of_generateGameSequence:
  4247                           	callstack 0
  4248                           
  4249 ;; *************** function _srand *****************
  4250 ;; Defined at:
  4251 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  s               2    0[COMRAM] unsigned int 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4265 ;;      Params:         2       0       0       0       0       0       0       0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4267 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4268 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4269 ;;Total ram usage:        6 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		_generateGameSequence
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text27
  4279  0027C8                     __ptext27:
  4280                           	callstack 0
  4281  0027C8                     _srand:
  4282                           	callstack 18
  4283  0027C8  0EFF               	movlw	255
  4284  0027CA  6E03               	movwf	??_srand^0,c
  4285  0027CC  0EFF               	movlw	255
  4286  0027CE  6E04               	movwf	(??_srand+1)^0,c
  4287  0027D0  C001  F005         	movff	srand@s,??_srand+2
  4288  0027D4  C002  F006         	movff	srand@s+1,??_srand+3
  4289  0027D8  5003               	movf	??_srand^0,w,c
  4290  0027DA  2605               	addwf	(??_srand+2)^0,f,c
  4291  0027DC  5004               	movf	(??_srand+1)^0,w,c
  4292  0027DE  2206               	addwfc	(??_srand+3)^0,f,c
  4293  0027E0  C005  F0DC         	movff	??_srand+2,_seed
  4294  0027E4  C006  F0DD         	movff	??_srand+3,_seed+1
  4295  0027E8  0100               	movlb	0	; () banked
  4296  0027EA  6BDE               	clrf	(_seed+2)& (0+255),b
  4297  0027EC  6BDF               	clrf	(_seed+3)& (0+255),b
  4298  0027EE                     
  4299                           ; BSR set to: 0
  4300  0027EE  0012               	return		;funcret
  4301  0027F0                     __end_of_srand:
  4302                           	callstack 0
  4303                           
  4304 ;; *************** function _rand *****************
  4305 ;; Defined at:
  4306 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  2   12[COMRAM] int 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4320 ;;      Params:         2       0       0       0       0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4322 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4323 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4324 ;;Total ram usage:        6 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 1
  4327 ;; This function calls:
  4328 ;;		___lmul
  4329 ;; This function is called by:
  4330 ;;		_generateGameSequence
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text28
  4335  0020F4                     __ptext28:
  4336                           	callstack 0
  4337  0020F4                     _rand:
  4338                           	callstack 17
  4339  0020F4  C0DC  F001         	movff	_seed,___lmul@multiplier
  4340  0020F8  C0DD  F002         	movff	_seed+1,___lmul@multiplier+1
  4341  0020FC  C0DE  F003         	movff	_seed+2,___lmul@multiplier+2
  4342  002100  C0DF  F004         	movff	_seed+3,___lmul@multiplier+3
  4343  002104  0E2D               	movlw	45
  4344  002106  6E05               	movwf	___lmul@multiplicand^0,c
  4345  002108  0E7F               	movlw	127
  4346  00210A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4347  00210C  0E95               	movlw	149
  4348  00210E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4349  002110  0E4C               	movlw	76
  4350  002112  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4351  002114  ECE6  F010         	call	___lmul	;wreg free
  4352  002118  0E01               	movlw	1
  4353  00211A  2401               	addwf	?___lmul^0,w,c
  4354  00211C  0100               	movlb	0	; () banked
  4355  00211E  6FDC               	movwf	_seed& (0+255),b
  4356  002120  0E00               	movlw	0
  4357  002122  2002               	addwfc	(?___lmul+1)^0,w,c
  4358  002124  6FDD               	movwf	(_seed+1)& (0+255),b
  4359  002126  0E00               	movlw	0
  4360  002128  2003               	addwfc	(?___lmul+2)^0,w,c
  4361  00212A  6FDE               	movwf	(_seed+2)& (0+255),b
  4362  00212C  0E00               	movlw	0
  4363  00212E  2004               	addwfc	(?___lmul+3)^0,w,c
  4364  002130  6FDF               	movwf	(_seed+3)& (0+255),b
  4365  002132                     
  4366                           ; BSR set to: 0
  4367  002132  C0DC  F00F         	movff	_seed,??_rand
  4368  002136  C0DD  F010         	movff	_seed+1,??_rand+1
  4369  00213A  C0DE  F011         	movff	_seed+2,??_rand+2
  4370  00213E  C0DF  F012         	movff	_seed+3,??_rand+3
  4371  002142  0E12               	movlw	18
  4372  002144  EFA9  F010         	goto	i2u219_40
  4373  002148                     i2u219_45:
  4374  002148  90D8               	bcf	status,0,c
  4375  00214A  3212               	rrcf	(??_rand+3)^0,f,c
  4376  00214C  3211               	rrcf	(??_rand+2)^0,f,c
  4377  00214E  3210               	rrcf	(??_rand+1)^0,f,c
  4378  002150  320F               	rrcf	??_rand^0,f,c
  4379  002152                     i2u219_40:
  4380  002152  2EE8               	decfsz	wreg,f,c
  4381  002154  EFA4  F010         	goto	i2u219_45
  4382  002158  C00F  F00D         	movff	??_rand,?_rand
  4383  00215C  C010  F00E         	movff	??_rand+1,?_rand+1
  4384  002160                     
  4385                           ; BSR set to: 0
  4386  002160  0012               	return		;funcret
  4387  002162                     __end_of_rand:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function ___lmul *****************
  4391 ;; Defined at:
  4392 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  multiplier      4    0[COMRAM] unsigned long 
  4395 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  product         4    8[COMRAM] unsigned long 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  4    0[COMRAM] unsigned long 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4407 ;;      Params:         8       0       0       0       0       0       0       0       0
  4408 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4410 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4411 ;;Total ram usage:       12 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_rand
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text29
  4421  0021CC                     __ptext29:
  4422                           	callstack 0
  4423  0021CC                     ___lmul:
  4424                           	callstack 17
  4425  0021CC  0E00               	movlw	0
  4426  0021CE  6E09               	movwf	___lmul@product^0,c
  4427  0021D0  0E00               	movlw	0
  4428  0021D2  6E0A               	movwf	(___lmul@product+1)^0,c
  4429  0021D4  0E00               	movlw	0
  4430  0021D6  6E0B               	movwf	(___lmul@product+2)^0,c
  4431  0021D8  0E00               	movlw	0
  4432  0021DA  6E0C               	movwf	(___lmul@product+3)^0,c
  4433  0021DC                     i2l2486:
  4434  0021DC  A001               	btfss	___lmul@multiplier^0,0,c
  4435  0021DE  EFF3  F010         	goto	i2u212_41
  4436  0021E2  EFF5  F010         	goto	i2u212_40
  4437  0021E6                     i2u212_41:
  4438  0021E6  EFFD  F010         	goto	i2l2490
  4439  0021EA                     i2u212_40:
  4440  0021EA  5005               	movf	___lmul@multiplicand^0,w,c
  4441  0021EC  2609               	addwf	___lmul@product^0,f,c
  4442  0021EE  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4443  0021F0  220A               	addwfc	(___lmul@product+1)^0,f,c
  4444  0021F2  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4445  0021F4  220B               	addwfc	(___lmul@product+2)^0,f,c
  4446  0021F6  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4447  0021F8  220C               	addwfc	(___lmul@product+3)^0,f,c
  4448  0021FA                     i2l2490:
  4449  0021FA  90D8               	bcf	status,0,c
  4450  0021FC  3605               	rlcf	___lmul@multiplicand^0,f,c
  4451  0021FE  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4452  002200  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4453  002202  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4454  002204  90D8               	bcf	status,0,c
  4455  002206  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4456  002208  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4457  00220A  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4458  00220C  3201               	rrcf	___lmul@multiplier^0,f,c
  4459  00220E  5001               	movf	___lmul@multiplier^0,w,c
  4460  002210  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4461  002212  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4462  002214  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4463  002216  A4D8               	btfss	status,2,c
  4464  002218  EF10  F011         	goto	i2u213_41
  4465  00221C  EF12  F011         	goto	i2u213_40
  4466  002220                     i2u213_41:
  4467  002220  EFEE  F010         	goto	i2l2486
  4468  002224                     i2u213_40:
  4469  002224  C009  F001         	movff	___lmul@product,?___lmul
  4470  002228  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4471  00222C  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4472  002230  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4473  002234  0012               	return		;funcret
  4474  002236                     __end_of___lmul:
  4475                           	callstack 0
  4476                           
  4477 ;; *************** function ___awmod *****************
  4478 ;; Defined at:
  4479 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  dividend        2   18[COMRAM] int 
  4482 ;;  divisor         2   20[COMRAM] int 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  sign            1   23[COMRAM] unsigned char 
  4485 ;;  counter         1   22[COMRAM] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  2   18[COMRAM] int 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4495 ;;      Params:         4       0       0       0       0       0       0       0       0
  4496 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4498 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4499 ;;Total ram usage:        6 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_generateGameSequence
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text30
  4509  001CA8                     __ptext30:
  4510                           	callstack 0
  4511  001CA8                     ___awmod:
  4512                           	callstack 18
  4513  001CA8  0E00               	movlw	0
  4514  001CAA  6E18               	movwf	___awmod@sign^0,c
  4515  001CAC  BE14               	btfsc	(___awmod@dividend+1)^0,7,c
  4516  001CAE  EF5D  F00E         	goto	i2u220_40
  4517  001CB2  EF5B  F00E         	goto	i2u220_41
  4518  001CB6                     i2u220_41:
  4519  001CB6  EF63  F00E         	goto	i2l2592
  4520  001CBA                     i2u220_40:
  4521  001CBA  6C13               	negf	___awmod@dividend^0,c
  4522  001CBC  1E14               	comf	(___awmod@dividend+1)^0,f,c
  4523  001CBE  B0D8               	btfsc	status,0,c
  4524  001CC0  2A14               	incf	(___awmod@dividend+1)^0,f,c
  4525  001CC2  0E01               	movlw	1
  4526  001CC4  6E18               	movwf	___awmod@sign^0,c
  4527  001CC6                     i2l2592:
  4528  001CC6  BE16               	btfsc	(___awmod@divisor+1)^0,7,c
  4529  001CC8  EF6A  F00E         	goto	i2u221_40
  4530  001CCC  EF68  F00E         	goto	i2u221_41
  4531  001CD0                     i2u221_41:
  4532  001CD0  EF6E  F00E         	goto	i2l2596
  4533  001CD4                     i2u221_40:
  4534  001CD4  6C15               	negf	___awmod@divisor^0,c
  4535  001CD6  1E16               	comf	(___awmod@divisor+1)^0,f,c
  4536  001CD8  B0D8               	btfsc	status,0,c
  4537  001CDA  2A16               	incf	(___awmod@divisor+1)^0,f,c
  4538  001CDC                     i2l2596:
  4539  001CDC  5015               	movf	___awmod@divisor^0,w,c
  4540  001CDE  1016               	iorwf	(___awmod@divisor+1)^0,w,c
  4541  001CE0  B4D8               	btfsc	status,2,c
  4542  001CE2  EF75  F00E         	goto	i2u222_41
  4543  001CE6  EF77  F00E         	goto	i2u222_40
  4544  001CEA                     i2u222_41:
  4545  001CEA  EF9B  F00E         	goto	i2l2612
  4546  001CEE                     i2u222_40:
  4547  001CEE  0E01               	movlw	1
  4548  001CF0  6E17               	movwf	___awmod@counter^0,c
  4549  001CF2  EF7F  F00E         	goto	i2l2602
  4550  001CF6                     i2l2600:
  4551  001CF6  90D8               	bcf	status,0,c
  4552  001CF8  3615               	rlcf	___awmod@divisor^0,f,c
  4553  001CFA  3616               	rlcf	(___awmod@divisor+1)^0,f,c
  4554  001CFC  2A17               	incf	___awmod@counter^0,f,c
  4555  001CFE                     i2l2602:
  4556  001CFE  AE16               	btfss	(___awmod@divisor+1)^0,7,c
  4557  001D00  EF84  F00E         	goto	i2u223_41
  4558  001D04  EF86  F00E         	goto	i2u223_40
  4559  001D08                     i2u223_41:
  4560  001D08  EF7B  F00E         	goto	i2l2600
  4561  001D0C                     i2u223_40:
  4562  001D0C                     i2l2604:
  4563  001D0C  5015               	movf	___awmod@divisor^0,w,c
  4564  001D0E  5C13               	subwf	___awmod@dividend^0,w,c
  4565  001D10  5016               	movf	(___awmod@divisor+1)^0,w,c
  4566  001D12  5814               	subwfb	(___awmod@dividend+1)^0,w,c
  4567  001D14  A0D8               	btfss	status,0,c
  4568  001D16  EF8F  F00E         	goto	i2u224_41
  4569  001D1A  EF91  F00E         	goto	i2u224_40
  4570  001D1E                     i2u224_41:
  4571  001D1E  EF95  F00E         	goto	i2l2608
  4572  001D22                     i2u224_40:
  4573  001D22  5015               	movf	___awmod@divisor^0,w,c
  4574  001D24  5E13               	subwf	___awmod@dividend^0,f,c
  4575  001D26  5016               	movf	(___awmod@divisor+1)^0,w,c
  4576  001D28  5A14               	subwfb	(___awmod@dividend+1)^0,f,c
  4577  001D2A                     i2l2608:
  4578  001D2A  90D8               	bcf	status,0,c
  4579  001D2C  3216               	rrcf	(___awmod@divisor+1)^0,f,c
  4580  001D2E  3215               	rrcf	___awmod@divisor^0,f,c
  4581  001D30  2E17               	decfsz	___awmod@counter^0,f,c
  4582  001D32  EF86  F00E         	goto	i2l2604
  4583  001D36                     i2l2612:
  4584  001D36  5018               	movf	___awmod@sign^0,w,c
  4585  001D38  B4D8               	btfsc	status,2,c
  4586  001D3A  EFA1  F00E         	goto	i2u225_41
  4587  001D3E  EFA3  F00E         	goto	i2u225_40
  4588  001D42                     i2u225_41:
  4589  001D42  EFA7  F00E         	goto	i2l2616
  4590  001D46                     i2u225_40:
  4591  001D46  6C13               	negf	___awmod@dividend^0,c
  4592  001D48  1E14               	comf	(___awmod@dividend+1)^0,f,c
  4593  001D4A  B0D8               	btfsc	status,0,c
  4594  001D4C  2A14               	incf	(___awmod@dividend+1)^0,f,c
  4595  001D4E                     i2l2616:
  4596  001D4E  C013  F013         	movff	___awmod@dividend,?___awmod
  4597  001D52  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  4598  001D56  0012               	return		;funcret
  4599  001D58                     __end_of___awmod:
  4600                           	callstack 0
  4601                           
  4602 ;; *************** function _checkPlayerInput *****************
  4603 ;; Defined at:
  4604 ;;		line 133 in file "Game.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  option          1    wreg     unsigned char 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  option          1   89[COMRAM] unsigned char 
  4609 ;;  record          1   90[COMRAM] unsigned char 
  4610 ;;  record          1   91[COMRAM] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4620 ;;      Params:         0       0       0       0       0       0       0       0       0
  4621 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4622 ;;      Temps:          0       7       0       0       0       0       0       0       0
  4623 ;;      Totals:         3       7       0       0       0       0       0       0       0
  4624 ;;Total ram usage:       10 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; Hardware stack levels required when called: 9
  4627 ;; This function calls:
  4628 ;;		_printAttentionMessage
  4629 ;;		_printErrorMessage
  4630 ;;		_printPlayingMessage
  4631 ;;		_printSucessMessage
  4632 ;;		_printWinnerMessage
  4633 ;;		_showGameSequence
  4634 ;;		i2_EEPROM_ReadByte
  4635 ;;		i2_EEPROM_WriteByte
  4636 ;;		i2_printStartMessage
  4637 ;; This function is called by:
  4638 ;;		_interrupcao
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text31
  4643  00187E                     __ptext31:
  4644                           	callstack 0
  4645  00187E                     _checkPlayerInput:
  4646                           	callstack 11
  4647                           
  4648                           ;incstack = 0
  4649                           ;checkPlayerInput@option stored from wreg
  4650  00187E  6E5A               	movwf	checkPlayerInput@option^0,c
  4651  001880                     
  4652                           ;Game.c: 134:     if (option == gameSequence[playerPosition]){
  4653  001880  0E20               	movlw	low _gameSequence
  4654  001882  245E               	addwf	_playerPosition^0,w,c
  4655  001884  6ED9               	movwf	fsr2l,c
  4656  001886  6ADA               	clrf	fsr2h,c
  4657  001888  0E01               	movlw	high _gameSequence
  4658  00188A  22DA               	addwfc	fsr2h,f,c
  4659  00188C  505A               	movf	checkPlayerInput@option^0,w,c
  4660  00188E  18DE               	xorwf	postinc2,w,c
  4661  001890  A4D8               	btfss	status,2,c
  4662  001892  EF4D  F00C         	goto	i2u348_41
  4663  001896  EF4F  F00C         	goto	i2u348_40
  4664  00189A                     i2u348_41:
  4665  00189A  EF95  F00C         	goto	i2l3696
  4666  00189E                     i2u348_40:
  4667  00189E                     
  4668                           ;Game.c: 135:         playerPosition ++;
  4669  00189E  2A5E               	incf	_playerPosition^0,f,c
  4670  0018A0                     
  4671                           ;Game.c: 136:         if (playerPosition == 25){
  4672  0018A0  0E19               	movlw	25
  4673  0018A2  185E               	xorwf	_playerPosition^0,w,c
  4674  0018A4  A4D8               	btfss	status,2,c
  4675  0018A6  EF57  F00C         	goto	i2u349_41
  4676  0018AA  EF59  F00C         	goto	i2u349_40
  4677  0018AE                     i2u349_41:
  4678  0018AE  EF75  F00C         	goto	i2l3680
  4679  0018B2                     i2u349_40:
  4680  0018B2                     
  4681                           ;Game.c: 137:             printSucessMessage();
  4682  0018B2  EC80  F00F         	call	_printSucessMessage	;wreg free
  4683                           
  4684                           ;Game.c: 138:             printWinnerMessage();
  4685  0018B6  EC3F  F00F         	call	_printWinnerMessage	;wreg free
  4686  0018BA                     
  4687                           ;Game.c: 139:             byte record = EEPROM_ReadByte(0);
  4688  0018BA  0E00               	movlw	0
  4689  0018BC  ECF8  F013         	call	i2_EEPROM_ReadByte
  4690  0018C0  6E5B               	movwf	checkPlayerInput@record^0,c
  4691  0018C2                     
  4692                           ;Game.c: 140:             if (25 > record)
  4693  0018C2  0E19               	movlw	25
  4694  0018C4  605B               	cpfslt	checkPlayerInput@record^0,c
  4695  0018C6  EF67  F00C         	goto	i2u350_41
  4696  0018CA  EF69  F00C         	goto	i2u350_40
  4697  0018CE                     i2u350_41:
  4698  0018CE  EF6E  F00C         	goto	i2l3676
  4699  0018D2                     i2u350_40:
  4700  0018D2                     
  4701                           ;Game.c: 141:                 EEPROM_WriteByte(0, 25);
  4702  0018D2  0E19               	movlw	25
  4703  0018D4  6E01               	movwf	i2EEPROM_WriteByte@eepromData^0,c
  4704  0018D6  0E00               	movlw	0
  4705  0018D8  EC6E  F012         	call	i2_EEPROM_WriteByte
  4706  0018DC                     i2l3676:
  4707                           
  4708                           ;Game.c: 142:             playing = 0;
  4709  0018DC  0E00               	movlw	0
  4710  0018DE  0100               	movlb	0	; () banked
  4711  0018E0  6FCB               	movwf	_playing& (0+255),b
  4712  0018E2                     
  4713                           ; BSR set to: 0
  4714                           ;Game.c: 143:             printStartMessage();
  4715  0018E2  ECF8  F00E         	call	i2_printStartMessage	;wreg free
  4716                           
  4717                           ;Game.c: 144:         }
  4718  0018E6  EFC0  F00C         	goto	i2l207
  4719  0018EA                     i2l3680:
  4720  0018EA  505D               	movf	_level^0,w,c
  4721  0018EC  185E               	xorwf	_playerPosition^0,w,c
  4722  0018EE  A4D8               	btfss	status,2,c
  4723  0018F0  EF7C  F00C         	goto	i2u351_41
  4724  0018F4  EF7E  F00C         	goto	i2u351_40
  4725  0018F8                     i2u351_41:
  4726  0018F8  EF8E  F00C         	goto	i2l3694
  4727  0018FC                     i2u351_40:
  4728  0018FC                     
  4729                           ;Game.c: 146:             level++;
  4730  0018FC  2A5D               	incf	_level^0,f,c
  4731  0018FE                     
  4732                           ;Game.c: 147:             playerPosition = 0;
  4733  0018FE  0E00               	movlw	0
  4734  001900  6E5E               	movwf	_playerPosition^0,c
  4735  001902                     
  4736                           ;Game.c: 148:             printSucessMessage();
  4737  001902  EC80  F00F         	call	_printSucessMessage	;wreg free
  4738  001906                     
  4739                           ;Game.c: 149:             printAttentionMessage();
  4740  001906  EC1B  F011         	call	_printAttentionMessage	;wreg free
  4741  00190A                     
  4742                           ;Game.c: 150:             showGameSequence();
  4743  00190A  EC02  F010         	call	_showGameSequence	;wreg free
  4744  00190E                     
  4745                           ;Game.c: 151:             printPlayingMessage(playerPosition + 1, level);
  4746  00190E  C05D  F070         	movff	_level,printPlayingMessage@total
  4747  001912  285E               	incf	_playerPosition^0,w,c
  4748  001914  EC3E  F010         	call	_printPlayingMessage
  4749                           
  4750                           ;Game.c: 152:         }
  4751  001918  EFC0  F00C         	goto	i2l207
  4752  00191C                     i2l3694:
  4753                           
  4754                           ;Game.c: 154:             printPlayingMessage(playerPosition + 1, level);
  4755  00191C  C05D  F070         	movff	_level,printPlayingMessage@total
  4756  001920  285E               	incf	_playerPosition^0,w,c
  4757  001922  EC3E  F010         	call	_printPlayingMessage
  4758  001926  EFC0  F00C         	goto	i2l207
  4759  00192A                     i2l3696:
  4760                           
  4761                           ;Game.c: 158:         printErrorMessage();
  4762  00192A  ECC1  F00F         	call	_printErrorMessage	;wreg free
  4763  00192E                     
  4764                           ;Game.c: 159:         byte record = EEPROM_ReadByte(0);
  4765  00192E  0E00               	movlw	0
  4766  001930  ECF8  F013         	call	i2_EEPROM_ReadByte
  4767  001934  6E5C               	movwf	checkPlayerInput@record_191^0,c
  4768  001936                     
  4769                           ;Game.c: 160:         if (level - 1 > record)
  4770  001936  0EFF               	movlw	255
  4771  001938  0100               	movlb	0	; () banked
  4772  00193A  6F71               	movwf	??_checkPlayerInput& (0+255),b
  4773  00193C  0EFF               	movlw	255
  4774  00193E  6F72               	movwf	(??_checkPlayerInput+1)& (0+255),b
  4775  001940  505D               	movf	_level^0,w,c
  4776  001942  6F73               	movwf	(??_checkPlayerInput+2)& (0+255),b
  4777  001944  6B74               	clrf	(??_checkPlayerInput+3)& (0+255),b
  4778  001946  5171               	movf	??_checkPlayerInput& (0+255),w,b
  4779  001948  2773               	addwf	(??_checkPlayerInput+2)& (0+255),f,b
  4780  00194A  5172               	movf	(??_checkPlayerInput+1)& (0+255),w,b
  4781  00194C  2374               	addwfc	(??_checkPlayerInput+3)& (0+255),f,b
  4782  00194E  505C               	movf	checkPlayerInput@record_191^0,w,c
  4783  001950  6F75               	movwf	(??_checkPlayerInput+4)& (0+255),b
  4784  001952  6B76               	clrf	(??_checkPlayerInput+5)& (0+255),b
  4785  001954  5173               	movf	(??_checkPlayerInput+2)& (0+255),w,b
  4786  001956  5D75               	subwf	(??_checkPlayerInput+4)& (0+255),w,b
  4787  001958  5176               	movf	(??_checkPlayerInput+5)& (0+255),w,b
  4788  00195A  0A80               	xorlw	128
  4789  00195C  6F77               	movwf	(??_checkPlayerInput+6)& (0+255),b
  4790  00195E  5174               	movf	(??_checkPlayerInput+3)& (0+255),w,b
  4791  001960  0A80               	xorlw	128
  4792  001962  5977               	subwfb	(??_checkPlayerInput+6)& (0+255),w,b
  4793  001964  B0D8               	btfsc	status,0,c
  4794  001966  EFB7  F00C         	goto	i2u352_41
  4795  00196A  EFB9  F00C         	goto	i2u352_40
  4796  00196E                     i2u352_41:
  4797  00196E  EF6E  F00C         	goto	i2l3676
  4798  001972                     i2u352_40:
  4799  001972                     
  4800                           ; BSR set to: 0
  4801                           ;Game.c: 161:             EEPROM_WriteByte(0, level - 1);
  4802  001972  045D               	decf	_level^0,w,c
  4803  001974  6E01               	movwf	i2EEPROM_WriteByte@eepromData^0,c
  4804  001976  0E00               	movlw	0
  4805  001978  EC6E  F012         	call	i2_EEPROM_WriteByte
  4806  00197C  EF6E  F00C         	goto	i2l3676
  4807  001980                     i2l207:
  4808  001980  0012               	return		;funcret
  4809  001982                     __end_of_checkPlayerInput:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function i2_printStartMessage *****************
  4813 ;; Defined at:
  4814 ;;		line 32 in file "Game.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  record          1   87[COMRAM] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0
  4829 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4831 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4832 ;;Total ram usage:        1 bytes
  4833 ;; Hardware stack levels used: 1
  4834 ;; Hardware stack levels required when called: 8
  4835 ;; This function calls:
  4836 ;;		i2_EEPROM_ReadByte
  4837 ;;		i2_clear
  4838 ;;		i2_escreve_texto
  4839 ;;		i2_inicializa
  4840 ;;		i2_instr_wr
  4841 ;;		i2_sprintf
  4842 ;; This function is called by:
  4843 ;;		_checkPlayerInput
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text32
  4848  001DF0                     __ptext32:
  4849                           	callstack 0
  4850  001DF0                     i2_printStartMessage:
  4851                           	callstack 11
  4852  001DF0                     
  4853                           ;Game.c: 33:     if (!initialized)
  4854  001DF0  0100               	movlb	0	; () banked
  4855  001DF2  51C9               	movf	_initialized& (0+255),w,b
  4856  001DF4  A4D8               	btfss	status,2,c
  4857  001DF6  EFFF  F00E         	goto	i2u347_41
  4858  001DFA  EF01  F00F         	goto	i2u347_40
  4859  001DFE                     i2u347_41:
  4860  001DFE  EF03  F00F         	goto	i2l3634
  4861  001E02                     i2u347_40:
  4862  001E02                     
  4863                           ; BSR set to: 0
  4864                           ;Game.c: 34:         inicializa();
  4865  001E02  EC1F  F014         	call	i2_inicializa	;wreg free
  4866  001E06                     i2l3634:
  4867                           
  4868                           ;Game.c: 35:     clear(linha1);
  4869  001E06  0ECC               	movlw	low _linha1
  4870  001E08  6E01               	movwf	i2clear@linha^0,c
  4871  001E0A  0E00               	movlw	high _linha1
  4872  001E0C  6E02               	movwf	(i2clear@linha+1)^0,c
  4873  001E0E  EC6C  F013         	call	i2_clear	;wreg free
  4874  001E12                     
  4875                           ;Game.c: 36:     clear(linha2);
  4876  001E12  0E39               	movlw	low _linha2
  4877  001E14  6E01               	movwf	i2clear@linha^0,c
  4878  001E16  0E01               	movlw	high _linha2
  4879  001E18  6E02               	movwf	(i2clear@linha+1)^0,c
  4880  001E1A  EC6C  F013         	call	i2_clear	;wreg free
  4881                           
  4882                           ;Game.c: 37:     byte record = EEPROM_ReadByte(0);
  4883  001E1E  0E00               	movlw	0
  4884  001E20  ECF8  F013         	call	i2_EEPROM_ReadByte
  4885  001E24  6E58               	movwf	i2printStartMessage@record^0,c
  4886  001E26                     
  4887                           ;Game.c: 38:     sprintf(linha1, "Recorde: %d", record);
  4888  001E26  0ECC               	movlw	low _linha1
  4889  001E28  0100               	movlb	0	; () banked
  4890  001E2A  6F60               	movwf	i2sprintf@s& (0+255),b
  4891  001E2C  0E00               	movlw	high _linha1
  4892  001E2E  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  4893  001E30  0E2F               	movlw	low STR_1
  4894  001E32  6F62               	movwf	i2sprintf@fmt& (0+255),b
  4895  001E34  0E08               	movlw	high STR_1
  4896  001E36  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  4897  001E38  C058  F064         	movff	i2printStartMessage@record,?i2_sprintf+4
  4898  001E3C  6B65               	clrf	(?i2_sprintf+5)& (0+255),b
  4899  001E3E  ECFD  F011         	call	i2_sprintf	;wreg free
  4900  001E42                     
  4901                           ;Game.c: 39:     instr_wr(0x80);
  4902  001E42  0E80               	movlw	128
  4903  001E44  EC5F  F014         	call	i2_instr_wr
  4904  001E48                     
  4905                           ;Game.c: 40:     escreve_texto(linha1);
  4906  001E48  0ECC               	movlw	low _linha1
  4907  001E4A  6E03               	movwf	i2escreve_texto@linha^0,c
  4908  001E4C  0E00               	movlw	high _linha1
  4909  001E4E  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  4910  001E50  EC31  F013         	call	i2_escreve_texto	;wreg free
  4911  001E54                     
  4912                           ;Game.c: 41:     sprintf(linha2, "Aperte p Iniciar");
  4913  001E54  0E39               	movlw	low _linha2
  4914  001E56  0100               	movlb	0	; () banked
  4915  001E58  6F60               	movwf	i2sprintf@s& (0+255),b
  4916  001E5A  0E01               	movlw	high _linha2
  4917  001E5C  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  4918  001E5E  0E01               	movlw	low STR_2
  4919  001E60  6F62               	movwf	i2sprintf@fmt& (0+255),b
  4920  001E62  0E08               	movlw	high STR_2
  4921  001E64  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  4922  001E66  ECFD  F011         	call	i2_sprintf	;wreg free
  4923  001E6A                     
  4924                           ;Game.c: 42:     instr_wr(0xC0);
  4925  001E6A  0EC0               	movlw	192
  4926  001E6C  EC5F  F014         	call	i2_instr_wr
  4927  001E70                     
  4928                           ;Game.c: 43:     escreve_texto(linha2);
  4929  001E70  0E39               	movlw	low _linha2
  4930  001E72  6E03               	movwf	i2escreve_texto@linha^0,c
  4931  001E74  0E01               	movlw	high _linha2
  4932  001E76  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  4933  001E78  EC31  F013         	call	i2_escreve_texto	;wreg free
  4934  001E7C  0012               	return		;funcret
  4935  001E7E                     __end_ofi2_printStartMessage:
  4936                           	callstack 0
  4937                           
  4938 ;; *************** function i2_inicializa *****************
  4939 ;; Defined at:
  4940 ;;		line 26 in file "lcd.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4957 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4958 ;;Total ram usage:        0 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 2
  4961 ;; This function calls:
  4962 ;;		i2_instr_wr
  4963 ;; This function is called by:
  4964 ;;		i2_printStartMessage
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text33
  4969  00283E                     __ptext33:
  4970                           	callstack 0
  4971  00283E                     i2_inicializa:
  4972                           	callstack 16
  4973  00283E                     
  4974                           ;lcd.c: 27:     instr_wr(0x38);
  4975  00283E  0E38               	movlw	56
  4976  002840  EC5F  F014         	call	i2_instr_wr
  4977                           
  4978                           ;lcd.c: 28:     instr_wr(0x38);
  4979  002844  0E38               	movlw	56
  4980  002846  EC5F  F014         	call	i2_instr_wr
  4981                           
  4982                           ;lcd.c: 29:     instr_wr(0x0E);
  4983  00284A  0E0E               	movlw	14
  4984  00284C  EC5F  F014         	call	i2_instr_wr
  4985                           
  4986                           ;lcd.c: 30:     instr_wr(0x06);
  4987  002850  0E06               	movlw	6
  4988  002852  EC5F  F014         	call	i2_instr_wr
  4989                           
  4990                           ;lcd.c: 31:     instr_wr(0x01);
  4991  002856  0E01               	movlw	1
  4992  002858  EC5F  F014         	call	i2_instr_wr
  4993  00285C                     
  4994                           ;lcd.c: 32:     initialized = 1;
  4995  00285C  0E01               	movlw	1
  4996  00285E  0100               	movlb	0	; () banked
  4997  002860  6FC8               	movwf	_initialized@lcd_kit$F215& (0+255),b
  4998  002862                     
  4999                           ; BSR set to: 0
  5000  002862  0012               	return		;funcret
  5001  002864                     __end_ofi2_inicializa:
  5002                           	callstack 0
  5003                           
  5004 ;; *************** function i2_EEPROM_ReadByte *****************
  5005 ;; Defined at:
  5006 ;;		line 24 in file "Game.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  eepromAddres    1    wreg     unsigned char 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  eepromAddres    1    0[COMRAM] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      unsigned char 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0
  5021 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5023 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5024 ;;Total ram usage:        1 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_checkPlayerInput
  5030 ;;		i2_printStartMessage
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text34
  5035  0027F0                     __ptext34:
  5036                           	callstack 0
  5037  0027F0                     i2_EEPROM_ReadByte:
  5038                           	callstack 18
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;incstack = 0
  5042                           ;i2EEPROM_ReadByte@eepromAddress stored from wreg
  5043  0027F0  6E01               	movwf	i2EEPROM_ReadByte@eepromAddress^0,c
  5044  0027F2                     i2l160:
  5045  0027F2  B0A6               	btfsc	4006,0,c	;volsfr
  5046  0027F4  EFFE  F013         	goto	i2u227_41
  5047  0027F8  EF00  F014         	goto	i2u227_40
  5048  0027FC                     i2u227_41:
  5049  0027FC  EFF9  F013         	goto	i2l160
  5050  002800                     i2u227_40:
  5051  002800  B2A6               	btfsc	4006,1,c	;volsfr
  5052  002802  EF05  F014         	goto	i2u228_41
  5053  002806  EF07  F014         	goto	i2u228_40
  5054  00280A                     i2u228_41:
  5055  00280A  EFF9  F013         	goto	i2l160
  5056  00280E                     i2u228_40:
  5057  00280E                     
  5058                           ;Game.c: 27:     EEADR = eepromAddress;
  5059  00280E  C001  FFA9         	movff	i2EEPROM_ReadByte@eepromAddress,4009	;volatile
  5060  002812                     
  5061                           ;Game.c: 28:     RD = 1;
  5062  002812  80A6               	bsf	4006,0,c	;volsfr
  5063  002814                     
  5064                           ;Game.c: 29:     return(EEDATA);
  5065  002814  50A8               	movf	168,w,c	;volatile
  5066  002816  0012               	return		;funcret
  5067  002818                     __end_ofi2_EEPROM_ReadByte:
  5068                           	callstack 0
  5069                           
  5070 ;; *************** function i2_EEPROM_WriteByte *****************
  5071 ;; Defined at:
  5072 ;;		line 7 in file "Game.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  eepromAddres    1    wreg     unsigned char 
  5075 ;;  eepromData      1    0[COMRAM] unsigned char 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  eepromAddres    1    1[COMRAM] unsigned char 
  5078 ;;  gie_Status      1    2[COMRAM] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5088 ;;      Params:         1       0       0       0       0       0       0       0       0
  5089 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5091 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5092 ;;Total ram usage:        3 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_checkPlayerInput
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text35
  5102  0024DC                     __ptext35:
  5103                           	callstack 0
  5104  0024DC                     i2_EEPROM_WriteByte:
  5105                           	callstack 19
  5106                           
  5107                           ;incstack = 0
  5108                           ;i2EEPROM_WriteByte@eepromAddress stored from wreg
  5109  0024DC  6E02               	movwf	i2EEPROM_WriteByte@eepromAddress^0,c
  5110  0024DE                     i2l154:
  5111  0024DE  B2A6               	btfsc	4006,1,c	;volsfr
  5112  0024E0  EF74  F012         	goto	i2u238_41
  5113  0024E4  EF76  F012         	goto	i2u238_40
  5114  0024E8                     i2u238_41:
  5115  0024E8  EF6F  F012         	goto	i2l154
  5116  0024EC                     i2u238_40:
  5117  0024EC                     
  5118                           ;Game.c: 12:     EEADR=eepromAddress;
  5119  0024EC  C002  FFA9         	movff	i2EEPROM_WriteByte@eepromAddress,4009	;volatile
  5120  0024F0                     
  5121                           ;Game.c: 13:     EEDATA=eepromData;
  5122  0024F0  C001  FFA8         	movff	i2EEPROM_WriteByte@eepromData,4008	;volatile
  5123  0024F4                     
  5124                           ;Game.c: 14:     WREN=1;
  5125  0024F4  84A6               	bsf	4006,2,c	;volsfr
  5126  0024F6                     
  5127                           ;Game.c: 15:     gie_Status = GIE;
  5128  0024F6  0E00               	movlw	0
  5129  0024F8  BEF2               	btfsc	4082,7,c	;volatile
  5130  0024FA  0E01               	movlw	1
  5131  0024FC  6E03               	movwf	i2EEPROM_WriteByte@gie_Status^0,c
  5132  0024FE                     
  5133                           ;Game.c: 16:     GIE = 0;
  5134  0024FE  9EF2               	bcf	4082,7,c	;volatile
  5135  002500                     
  5136                           ;Game.c: 17:     EECON2=0x55;
  5137  002500  0E55               	movlw	85
  5138  002502  6EA7               	movwf	167,c	;volsfr
  5139  002504                     
  5140                           ;Game.c: 18:     EECON2=0xaa;
  5141  002504  0EAA               	movlw	170
  5142  002506  6EA7               	movwf	167,c	;volsfr
  5143  002508                     
  5144                           ;Game.c: 19:     WR=1;
  5145  002508  82A6               	bsf	4006,1,c	;volsfr
  5146  00250A                     
  5147                           ;Game.c: 20:     GIE = gie_Status;
  5148  00250A  B003               	btfsc	i2EEPROM_WriteByte@gie_Status^0,0,c
  5149  00250C  EF8A  F012         	goto	i2u239_41
  5150  002510  EF8D  F012         	goto	i2u239_40
  5151  002514                     i2u239_41:
  5152  002514  8EF2               	bsf	4082,7,c	;volatile
  5153  002516  EF8E  F012         	goto	i2u240_45
  5154  00251A                     i2u239_40:
  5155  00251A  9EF2               	bcf	4082,7,c	;volatile
  5156  00251C                     i2u240_45:
  5157  00251C                     
  5158                           ;Game.c: 21:     WREN=0;
  5159  00251C  94A6               	bcf	4006,2,c	;volsfr
  5160  00251E  0012               	return		;funcret
  5161  002520                     __end_ofi2_EEPROM_WriteByte:
  5162                           	callstack 0
  5163                           
  5164 ;; *************** function _showGameSequence *****************
  5165 ;; Defined at:
  5166 ;;		line 113 in file "Game.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;		None
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  i               1    2[COMRAM] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5180 ;;      Params:         0       0       0       0       0       0       0       0       0
  5181 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5182 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5183 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5184 ;;Total ram usage:        3 bytes
  5185 ;; Hardware stack levels used: 1
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_initGame
  5190 ;;		_checkPlayerInput
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text36
  5195  002004                     __ptext36:
  5196                           	callstack 0
  5197  002004                     _showGameSequence:
  5198                           	callstack 19
  5199  002004                     
  5200                           ;Game.c: 114:     for (byte i = 0; i < level; i++){
  5201  002004  0E00               	movlw	0
  5202  002006  6E03               	movwf	showGameSequence@i^0,c
  5203  002008  EF34  F010         	goto	i2l2826
  5204  00200C                     i2l2816:
  5205                           
  5206                           ;Game.c: 115:         LATD = 0b11111111 ^ (1 << gameSequence[i]);
  5207  00200C  0E20               	movlw	low _gameSequence
  5208  00200E  2403               	addwf	showGameSequence@i^0,w,c
  5209  002010  6ED9               	movwf	fsr2l,c
  5210  002012  6ADA               	clrf	fsr2h,c
  5211  002014  0E01               	movlw	high _gameSequence
  5212  002016  22DA               	addwfc	fsr2h,f,c
  5213  002018  50DF               	movf	indf2,w,c
  5214  00201A  6E01               	movwf	??_showGameSequence^0,c
  5215  00201C  0E01               	movlw	1
  5216  00201E  6E02               	movwf	(??_showGameSequence+1)^0,c
  5217  002020  2A01               	incf	??_showGameSequence^0,f,c
  5218  002022  EF15  F010         	goto	i2u236_44
  5219  002026                     i2u236_45:
  5220  002026  90D8               	bcf	status,0,c
  5221  002028  3602               	rlcf	(??_showGameSequence+1)^0,f,c
  5222  00202A                     i2u236_44:
  5223  00202A  2E01               	decfsz	??_showGameSequence^0,f,c
  5224  00202C  EF13  F010         	goto	i2u236_45
  5225  002030  5002               	movf	(??_showGameSequence+1)^0,w,c
  5226  002032  0AFF               	xorlw	255
  5227  002034  6E8C               	movwf	140,c	;volatile
  5228  002036                     
  5229                           ;Game.c: 116:         _delay((unsigned long)((800)*(20000000/4000.0)));
  5230  002036  0E15               	movlw	21
  5231  002038  6E02               	movwf	(??_showGameSequence+1)^0,c
  5232  00203A  0E4B               	movlw	75
  5233  00203C  6E01               	movwf	??_showGameSequence^0,c
  5234  00203E  0EBE               	movlw	190
  5235  002040                     i2u364_47:
  5236  002040  2EE8               	decfsz	wreg,f,c
  5237  002042  D7FE               	bra	i2u364_47
  5238  002044  2E01               	decfsz	??_showGameSequence^0,f,c
  5239  002046  D7FC               	bra	i2u364_47
  5240  002048  2E02               	decfsz	(??_showGameSequence+1)^0,f,c
  5241  00204A  D7FA               	bra	i2u364_47
  5242  00204C  D000               	nop2	
  5243  00204E                     
  5244                           ;Game.c: 117:         LATD = 0b11111111;
  5245  00204E  688C               	setf	140,c	;volatile
  5246  002050                     
  5247                           ;Game.c: 118:         _delay((unsigned long)((200)*(20000000/4000.0)));
  5248  002050  0E06               	movlw	6
  5249  002052  6E02               	movwf	(??_showGameSequence+1)^0,c
  5250  002054  0E13               	movlw	19
  5251  002056  6E01               	movwf	??_showGameSequence^0,c
  5252  002058  0EAE               	movlw	174
  5253  00205A                     i2u365_47:
  5254  00205A  2EE8               	decfsz	wreg,f,c
  5255  00205C  D7FE               	bra	i2u365_47
  5256  00205E  2E01               	decfsz	??_showGameSequence^0,f,c
  5257  002060  D7FC               	bra	i2u365_47
  5258  002062  2E02               	decfsz	(??_showGameSequence+1)^0,f,c
  5259  002064  D7FA               	bra	i2u365_47
  5260  002066                     
  5261                           ;Game.c: 119:     }
  5262  002066  2A03               	incf	showGameSequence@i^0,f,c
  5263  002068                     i2l2826:
  5264  002068  505D               	movf	_level^0,w,c
  5265  00206A  5C03               	subwf	showGameSequence@i^0,w,c
  5266  00206C  A0D8               	btfss	status,0,c
  5267  00206E  EF3B  F010         	goto	i2u237_41
  5268  002072  EF3D  F010         	goto	i2u237_40
  5269  002076                     i2u237_41:
  5270  002076  EF06  F010         	goto	i2l2816
  5271  00207A                     i2u237_40:
  5272  00207A  0012               	return		;funcret
  5273  00207C                     __end_of_showGameSequence:
  5274                           	callstack 0
  5275                           
  5276 ;; *************** function _printWinnerMessage *****************
  5277 ;; Defined at:
  5278 ;;		line 92 in file "Game.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5292 ;;      Params:         0       0       0       0       0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5294 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5295 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5296 ;;Total ram usage:        2 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 8
  5299 ;; This function calls:
  5300 ;;		i2_clear
  5301 ;;		i2_escreve_texto
  5302 ;;		i2_instr_wr
  5303 ;;		i2_sprintf
  5304 ;; This function is called by:
  5305 ;;		_checkPlayerInput
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text37
  5310  001E7E                     __ptext37:
  5311                           	callstack 0
  5312  001E7E                     _printWinnerMessage:
  5313                           	callstack 11
  5314  001E7E                     
  5315                           ;Game.c: 93:     clear(linha1);
  5316  001E7E  0ECC               	movlw	low _linha1
  5317  001E80  6E01               	movwf	i2clear@linha^0,c
  5318  001E82  0E00               	movlw	high _linha1
  5319  001E84  6E02               	movwf	(i2clear@linha+1)^0,c
  5320  001E86  EC6C  F013         	call	i2_clear	;wreg free
  5321                           
  5322                           ;Game.c: 94:     clear(linha2);
  5323  001E8A  0E39               	movlw	low _linha2
  5324  001E8C  6E01               	movwf	i2clear@linha^0,c
  5325  001E8E  0E01               	movlw	high _linha2
  5326  001E90  6E02               	movwf	(i2clear@linha+1)^0,c
  5327  001E92  EC6C  F013         	call	i2_clear	;wreg free
  5328  001E96                     
  5329                           ;Game.c: 95:     sprintf(linha1, "Voce ganhou :)");
  5330  001E96  0ECC               	movlw	low _linha1
  5331  001E98  0100               	movlb	0	; () banked
  5332  001E9A  6F60               	movwf	i2sprintf@s& (0+255),b
  5333  001E9C  0E00               	movlw	high _linha1
  5334  001E9E  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5335  001EA0  0E12               	movlw	low STR_11
  5336  001EA2  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5337  001EA4  0E08               	movlw	high STR_11
  5338  001EA6  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5339  001EA8  ECFD  F011         	call	i2_sprintf	;wreg free
  5340  001EAC                     
  5341                           ;Game.c: 96:     instr_wr(0x80);
  5342  001EAC  0E80               	movlw	128
  5343  001EAE  EC5F  F014         	call	i2_instr_wr
  5344  001EB2                     
  5345                           ;Game.c: 97:     escreve_texto(linha1);
  5346  001EB2  0ECC               	movlw	low _linha1
  5347  001EB4  6E03               	movwf	i2escreve_texto@linha^0,c
  5348  001EB6  0E00               	movlw	high _linha1
  5349  001EB8  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5350  001EBA  EC31  F013         	call	i2_escreve_texto	;wreg free
  5351  001EBE                     
  5352                           ;Game.c: 98:     sprintf(linha2, "");
  5353  001EBE  0E39               	movlw	low _linha2
  5354  001EC0  0100               	movlb	0	; () banked
  5355  001EC2  6F60               	movwf	i2sprintf@s& (0+255),b
  5356  001EC4  0E01               	movlw	high _linha2
  5357  001EC6  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5358  001EC8  0E2E               	movlw	low (STR_7+13)
  5359  001ECA  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5360  001ECC  0E08               	movlw	high (STR_7+13)
  5361  001ECE  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5362  001ED0  ECFD  F011         	call	i2_sprintf	;wreg free
  5363                           
  5364                           ;Game.c: 99:     instr_wr(0xC0);
  5365  001ED4  0EC0               	movlw	192
  5366  001ED6  EC5F  F014         	call	i2_instr_wr
  5367  001EDA                     
  5368                           ;Game.c: 100:     escreve_texto(linha2);
  5369  001EDA  0E39               	movlw	low _linha2
  5370  001EDC  6E03               	movwf	i2escreve_texto@linha^0,c
  5371  001EDE  0E01               	movlw	high _linha2
  5372  001EE0  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5373  001EE2  EC31  F013         	call	i2_escreve_texto	;wreg free
  5374  001EE6                     
  5375                           ;Game.c: 101:     _delay((unsigned long)((500)*(20000000/4000.0)));
  5376  001EE6  0E0D               	movlw	13
  5377  001EE8  6E59               	movwf	(??_printWinnerMessage+1)^0,c
  5378  001EEA  0EAF               	movlw	175
  5379  001EEC  6E58               	movwf	??_printWinnerMessage^0,c
  5380  001EEE  0EB6               	movlw	182
  5381  001EF0                     i2u366_47:
  5382  001EF0  2EE8               	decfsz	wreg,f,c
  5383  001EF2  D7FE               	bra	i2u366_47
  5384  001EF4  2E58               	decfsz	??_printWinnerMessage^0,f,c
  5385  001EF6  D7FC               	bra	i2u366_47
  5386  001EF8  2E59               	decfsz	(??_printWinnerMessage+1)^0,f,c
  5387  001EFA  D7FA               	bra	i2u366_47
  5388  001EFC  D000               	nop2	
  5389  001EFE  0012               	return		;funcret
  5390  001F00                     __end_of_printWinnerMessage:
  5391                           	callstack 0
  5392                           
  5393 ;; *************** function _printSucessMessage *****************
  5394 ;; Defined at:
  5395 ;;		line 80 in file "Game.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;		None
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;		None
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      void 
  5402 ;; Registers used:
  5403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5409 ;;      Params:         0       0       0       0       0       0       0       0       0
  5410 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5411 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5412 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5413 ;;Total ram usage:        2 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 8
  5416 ;; This function calls:
  5417 ;;		i2_clear
  5418 ;;		i2_escreve_texto
  5419 ;;		i2_instr_wr
  5420 ;;		i2_sprintf
  5421 ;; This function is called by:
  5422 ;;		_checkPlayerInput
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text38
  5427  001F00                     __ptext38:
  5428                           	callstack 0
  5429  001F00                     _printSucessMessage:
  5430                           	callstack 11
  5431  001F00                     
  5432                           ;Game.c: 81:     clear(linha1);
  5433  001F00  0ECC               	movlw	low _linha1
  5434  001F02  6E01               	movwf	i2clear@linha^0,c
  5435  001F04  0E00               	movlw	high _linha1
  5436  001F06  6E02               	movwf	(i2clear@linha+1)^0,c
  5437  001F08  EC6C  F013         	call	i2_clear	;wreg free
  5438                           
  5439                           ;Game.c: 82:     clear(linha2);
  5440  001F0C  0E39               	movlw	low _linha2
  5441  001F0E  6E01               	movwf	i2clear@linha^0,c
  5442  001F10  0E01               	movlw	high _linha2
  5443  001F12  6E02               	movwf	(i2clear@linha+1)^0,c
  5444  001F14  EC6C  F013         	call	i2_clear	;wreg free
  5445  001F18                     
  5446                           ;Game.c: 83:     sprintf(linha1, "Sucesso :)");
  5447  001F18  0ECC               	movlw	low _linha1
  5448  001F1A  0100               	movlb	0	; () banked
  5449  001F1C  6F60               	movwf	i2sprintf@s& (0+255),b
  5450  001F1E  0E00               	movlw	high _linha1
  5451  001F20  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5452  001F22  0E3B               	movlw	low STR_9
  5453  001F24  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5454  001F26  0E08               	movlw	high STR_9
  5455  001F28  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5456  001F2A  ECFD  F011         	call	i2_sprintf	;wreg free
  5457  001F2E                     
  5458                           ;Game.c: 84:     instr_wr(0x80);
  5459  001F2E  0E80               	movlw	128
  5460  001F30  EC5F  F014         	call	i2_instr_wr
  5461  001F34                     
  5462                           ;Game.c: 85:     escreve_texto(linha1);
  5463  001F34  0ECC               	movlw	low _linha1
  5464  001F36  6E03               	movwf	i2escreve_texto@linha^0,c
  5465  001F38  0E00               	movlw	high _linha1
  5466  001F3A  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5467  001F3C  EC31  F013         	call	i2_escreve_texto	;wreg free
  5468  001F40                     
  5469                           ;Game.c: 86:     sprintf(linha2, "");
  5470  001F40  0E39               	movlw	low _linha2
  5471  001F42  0100               	movlb	0	; () banked
  5472  001F44  6F60               	movwf	i2sprintf@s& (0+255),b
  5473  001F46  0E01               	movlw	high _linha2
  5474  001F48  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5475  001F4A  0E2E               	movlw	low (STR_7+13)
  5476  001F4C  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5477  001F4E  0E08               	movlw	high (STR_7+13)
  5478  001F50  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5479  001F52  ECFD  F011         	call	i2_sprintf	;wreg free
  5480                           
  5481                           ;Game.c: 87:     instr_wr(0xC0);
  5482  001F56  0EC0               	movlw	192
  5483  001F58  EC5F  F014         	call	i2_instr_wr
  5484  001F5C                     
  5485                           ;Game.c: 88:     escreve_texto(linha2);
  5486  001F5C  0E39               	movlw	low _linha2
  5487  001F5E  6E03               	movwf	i2escreve_texto@linha^0,c
  5488  001F60  0E01               	movlw	high _linha2
  5489  001F62  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5490  001F64  EC31  F013         	call	i2_escreve_texto	;wreg free
  5491  001F68                     
  5492                           ;Game.c: 89:     _delay((unsigned long)((500)*(20000000/4000.0)));
  5493  001F68  0E0D               	movlw	13
  5494  001F6A  6E59               	movwf	(??_printSucessMessage+1)^0,c
  5495  001F6C  0EAF               	movlw	175
  5496  001F6E  6E58               	movwf	??_printSucessMessage^0,c
  5497  001F70  0EB6               	movlw	182
  5498  001F72                     i2u367_47:
  5499  001F72  2EE8               	decfsz	wreg,f,c
  5500  001F74  D7FE               	bra	i2u367_47
  5501  001F76  2E58               	decfsz	??_printSucessMessage^0,f,c
  5502  001F78  D7FC               	bra	i2u367_47
  5503  001F7A  2E59               	decfsz	(??_printSucessMessage+1)^0,f,c
  5504  001F7C  D7FA               	bra	i2u367_47
  5505  001F7E  D000               	nop2	
  5506  001F80  0012               	return		;funcret
  5507  001F82                     __end_of_printSucessMessage:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function _printPlayingMessage *****************
  5511 ;; Defined at:
  5512 ;;		line 57 in file "Game.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  position        1    wreg     unsigned char 
  5515 ;;  total           1   16[BANK0 ] unsigned char 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  position        1   87[COMRAM] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5527 ;;      Params:         0       1       0       0       0       0       0       0       0
  5528 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5530 ;;      Totals:         1       1       0       0       0       0       0       0       0
  5531 ;;Total ram usage:        2 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 8
  5534 ;; This function calls:
  5535 ;;		i2_clear
  5536 ;;		i2_escreve_texto
  5537 ;;		i2_instr_wr
  5538 ;;		i2_sprintf
  5539 ;; This function is called by:
  5540 ;;		_initGame
  5541 ;;		_checkPlayerInput
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text39
  5546  00207C                     __ptext39:
  5547                           	callstack 0
  5548  00207C                     _printPlayingMessage:
  5549                           	callstack 11
  5550                           
  5551                           ;incstack = 0
  5552                           ;printPlayingMessage@position stored from wreg
  5553  00207C  6E58               	movwf	printPlayingMessage@position^0,c
  5554  00207E                     
  5555                           ;Game.c: 58:     clear(linha1);
  5556  00207E  0ECC               	movlw	low _linha1
  5557  002080  6E01               	movwf	i2clear@linha^0,c
  5558  002082  0E00               	movlw	high _linha1
  5559  002084  6E02               	movwf	(i2clear@linha+1)^0,c
  5560  002086  EC6C  F013         	call	i2_clear	;wreg free
  5561                           
  5562                           ;Game.c: 59:     clear(linha2);
  5563  00208A  0E39               	movlw	low _linha2
  5564  00208C  6E01               	movwf	i2clear@linha^0,c
  5565  00208E  0E01               	movlw	high _linha2
  5566  002090  6E02               	movwf	(i2clear@linha+1)^0,c
  5567  002092  EC6C  F013         	call	i2_clear	;wreg free
  5568  002096                     
  5569                           ;Game.c: 60:     sprintf(linha1, "Sua vez");
  5570  002096  0ECC               	movlw	low _linha1
  5571  002098  0100               	movlb	0	; () banked
  5572  00209A  6F60               	movwf	i2sprintf@s& (0+255),b
  5573  00209C  0E00               	movlw	high _linha1
  5574  00209E  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5575  0020A0  0E57               	movlw	low STR_5
  5576  0020A2  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5577  0020A4  0E08               	movlw	high STR_5
  5578  0020A6  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5579  0020A8  ECFD  F011         	call	i2_sprintf	;wreg free
  5580  0020AC                     
  5581                           ;Game.c: 61:     instr_wr(0x80);
  5582  0020AC  0E80               	movlw	128
  5583  0020AE  EC5F  F014         	call	i2_instr_wr
  5584  0020B2                     
  5585                           ;Game.c: 62:     escreve_texto(linha1);
  5586  0020B2  0ECC               	movlw	low _linha1
  5587  0020B4  6E03               	movwf	i2escreve_texto@linha^0,c
  5588  0020B6  0E00               	movlw	high _linha1
  5589  0020B8  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5590  0020BA  EC31  F013         	call	i2_escreve_texto	;wreg free
  5591  0020BE                     
  5592                           ;Game.c: 63:     sprintf(linha2, "%d de %d", position, total);
  5593  0020BE  0E39               	movlw	low _linha2
  5594  0020C0  0100               	movlb	0	; () banked
  5595  0020C2  6F60               	movwf	i2sprintf@s& (0+255),b
  5596  0020C4  0E01               	movlw	high _linha2
  5597  0020C6  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5598  0020C8  0E46               	movlw	low STR_6
  5599  0020CA  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5600  0020CC  0E08               	movlw	high STR_6
  5601  0020CE  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5602  0020D0  C058  F064         	movff	printPlayingMessage@position,?i2_sprintf+4
  5603  0020D4  6B65               	clrf	(?i2_sprintf+5)& (0+255),b
  5604  0020D6  C070  F066         	movff	printPlayingMessage@total,?i2_sprintf+6
  5605  0020DA  6B67               	clrf	(?i2_sprintf+7)& (0+255),b
  5606  0020DC  ECFD  F011         	call	i2_sprintf	;wreg free
  5607                           
  5608                           ;Game.c: 64:     instr_wr(0xC0);
  5609  0020E0  0EC0               	movlw	192
  5610  0020E2  EC5F  F014         	call	i2_instr_wr
  5611  0020E6                     
  5612                           ;Game.c: 65:     escreve_texto(linha2);
  5613  0020E6  0E39               	movlw	low _linha2
  5614  0020E8  6E03               	movwf	i2escreve_texto@linha^0,c
  5615  0020EA  0E01               	movlw	high _linha2
  5616  0020EC  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5617  0020EE  EC31  F013         	call	i2_escreve_texto	;wreg free
  5618  0020F2  0012               	return		;funcret
  5619  0020F4                     __end_of_printPlayingMessage:
  5620                           	callstack 0
  5621                           
  5622 ;; *************** function _printErrorMessage *****************
  5623 ;; Defined at:
  5624 ;;		line 68 in file "Game.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5638 ;;      Params:         0       0       0       0       0       0       0       0       0
  5639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5640 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5641 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5642 ;;Total ram usage:        2 bytes
  5643 ;; Hardware stack levels used: 1
  5644 ;; Hardware stack levels required when called: 8
  5645 ;; This function calls:
  5646 ;;		i2_clear
  5647 ;;		i2_escreve_texto
  5648 ;;		i2_instr_wr
  5649 ;;		i2_sprintf
  5650 ;; This function is called by:
  5651 ;;		_checkPlayerInput
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text40
  5656  001F82                     __ptext40:
  5657                           	callstack 0
  5658  001F82                     _printErrorMessage:
  5659                           	callstack 11
  5660  001F82                     
  5661                           ;Game.c: 69:     clear(linha1);
  5662  001F82  0ECC               	movlw	low _linha1
  5663  001F84  6E01               	movwf	i2clear@linha^0,c
  5664  001F86  0E00               	movlw	high _linha1
  5665  001F88  6E02               	movwf	(i2clear@linha+1)^0,c
  5666  001F8A  EC6C  F013         	call	i2_clear	;wreg free
  5667                           
  5668                           ;Game.c: 70:     clear(linha2);
  5669  001F8E  0E39               	movlw	low _linha2
  5670  001F90  6E01               	movwf	i2clear@linha^0,c
  5671  001F92  0E01               	movlw	high _linha2
  5672  001F94  6E02               	movwf	(i2clear@linha+1)^0,c
  5673  001F96  EC6C  F013         	call	i2_clear	;wreg free
  5674  001F9A                     
  5675                           ;Game.c: 71:     sprintf(linha1, "Voce errou :(");
  5676  001F9A  0ECC               	movlw	low _linha1
  5677  001F9C  0100               	movlb	0	; () banked
  5678  001F9E  6F60               	movwf	i2sprintf@s& (0+255),b
  5679  001FA0  0E00               	movlw	high _linha1
  5680  001FA2  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5681  001FA4  0E21               	movlw	low STR_7
  5682  001FA6  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5683  001FA8  0E08               	movlw	high STR_7
  5684  001FAA  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5685  001FAC  ECFD  F011         	call	i2_sprintf	;wreg free
  5686  001FB0                     
  5687                           ;Game.c: 72:     instr_wr(0x80);
  5688  001FB0  0E80               	movlw	128
  5689  001FB2  EC5F  F014         	call	i2_instr_wr
  5690  001FB6                     
  5691                           ;Game.c: 73:     escreve_texto(linha1);
  5692  001FB6  0ECC               	movlw	low _linha1
  5693  001FB8  6E03               	movwf	i2escreve_texto@linha^0,c
  5694  001FBA  0E00               	movlw	high _linha1
  5695  001FBC  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5696  001FBE  EC31  F013         	call	i2_escreve_texto	;wreg free
  5697  001FC2                     
  5698                           ;Game.c: 74:     sprintf(linha2, "");
  5699  001FC2  0E39               	movlw	low _linha2
  5700  001FC4  0100               	movlb	0	; () banked
  5701  001FC6  6F60               	movwf	i2sprintf@s& (0+255),b
  5702  001FC8  0E01               	movlw	high _linha2
  5703  001FCA  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5704  001FCC  0E2E               	movlw	low (STR_7+13)
  5705  001FCE  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5706  001FD0  0E08               	movlw	high (STR_7+13)
  5707  001FD2  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5708  001FD4  ECFD  F011         	call	i2_sprintf	;wreg free
  5709                           
  5710                           ;Game.c: 75:     instr_wr(0xC0);
  5711  001FD8  0EC0               	movlw	192
  5712  001FDA  EC5F  F014         	call	i2_instr_wr
  5713  001FDE                     
  5714                           ;Game.c: 76:     escreve_texto(linha2);
  5715  001FDE  0E39               	movlw	low _linha2
  5716  001FE0  6E03               	movwf	i2escreve_texto@linha^0,c
  5717  001FE2  0E01               	movlw	high _linha2
  5718  001FE4  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5719  001FE6  EC31  F013         	call	i2_escreve_texto	;wreg free
  5720  001FEA                     
  5721                           ;Game.c: 77:     _delay((unsigned long)((500)*(20000000/4000.0)));
  5722  001FEA  0E0D               	movlw	13
  5723  001FEC  6E59               	movwf	(??_printErrorMessage+1)^0,c
  5724  001FEE  0EAF               	movlw	175
  5725  001FF0  6E58               	movwf	??_printErrorMessage^0,c
  5726  001FF2  0EB6               	movlw	182
  5727  001FF4                     i2u368_47:
  5728  001FF4  2EE8               	decfsz	wreg,f,c
  5729  001FF6  D7FE               	bra	i2u368_47
  5730  001FF8  2E58               	decfsz	??_printErrorMessage^0,f,c
  5731  001FFA  D7FC               	bra	i2u368_47
  5732  001FFC  2E59               	decfsz	(??_printErrorMessage+1)^0,f,c
  5733  001FFE  D7FA               	bra	i2u368_47
  5734  002000  D000               	nop2	
  5735  002002  0012               	return		;funcret
  5736  002004                     __end_of_printErrorMessage:
  5737                           	callstack 0
  5738                           
  5739 ;; *************** function _printAttentionMessage *****************
  5740 ;; Defined at:
  5741 ;;		line 46 in file "Game.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;		None
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;		None
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      void 
  5748 ;; Registers used:
  5749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5755 ;;      Params:         0       0       0       0       0       0       0       0       0
  5756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5758 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5759 ;;Total ram usage:        0 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; Hardware stack levels required when called: 8
  5762 ;; This function calls:
  5763 ;;		i2_clear
  5764 ;;		i2_escreve_texto
  5765 ;;		i2_instr_wr
  5766 ;;		i2_sprintf
  5767 ;; This function is called by:
  5768 ;;		_initGame
  5769 ;;		_checkPlayerInput
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text41
  5774  002236                     __ptext41:
  5775                           	callstack 0
  5776  002236                     _printAttentionMessage:
  5777                           	callstack 11
  5778  002236                     
  5779                           ;Game.c: 47:     clear(linha1);
  5780  002236  0ECC               	movlw	low _linha1
  5781  002238  6E01               	movwf	i2clear@linha^0,c
  5782  00223A  0E00               	movlw	high _linha1
  5783  00223C  6E02               	movwf	(i2clear@linha+1)^0,c
  5784  00223E  EC6C  F013         	call	i2_clear	;wreg free
  5785                           
  5786                           ;Game.c: 48:     clear(linha2);
  5787  002242  0E39               	movlw	low _linha2
  5788  002244  6E01               	movwf	i2clear@linha^0,c
  5789  002246  0E01               	movlw	high _linha2
  5790  002248  6E02               	movwf	(i2clear@linha+1)^0,c
  5791  00224A  EC6C  F013         	call	i2_clear	;wreg free
  5792  00224E                     
  5793                           ;Game.c: 49:     sprintf(linha1, "Atencao");
  5794  00224E  0ECC               	movlw	low _linha1
  5795  002250  0100               	movlb	0	; () banked
  5796  002252  6F60               	movwf	i2sprintf@s& (0+255),b
  5797  002254  0E00               	movlw	high _linha1
  5798  002256  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5799  002258  0E4F               	movlw	low STR_3
  5800  00225A  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5801  00225C  0E08               	movlw	high STR_3
  5802  00225E  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5803  002260  ECFD  F011         	call	i2_sprintf	;wreg free
  5804  002264                     
  5805                           ;Game.c: 50:     instr_wr(0x80);
  5806  002264  0E80               	movlw	128
  5807  002266  EC5F  F014         	call	i2_instr_wr
  5808  00226A                     
  5809                           ;Game.c: 51:     escreve_texto(linha1);
  5810  00226A  0ECC               	movlw	low _linha1
  5811  00226C  6E03               	movwf	i2escreve_texto@linha^0,c
  5812  00226E  0E00               	movlw	high _linha1
  5813  002270  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5814  002272  EC31  F013         	call	i2_escreve_texto	;wreg free
  5815  002276                     
  5816                           ;Game.c: 52:     sprintf(linha2, "");
  5817  002276  0E39               	movlw	low _linha2
  5818  002278  0100               	movlb	0	; () banked
  5819  00227A  6F60               	movwf	i2sprintf@s& (0+255),b
  5820  00227C  0E01               	movlw	high _linha2
  5821  00227E  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5822  002280  0E2E               	movlw	low (STR_7+13)
  5823  002282  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5824  002284  0E08               	movlw	high (STR_7+13)
  5825  002286  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5826  002288  ECFD  F011         	call	i2_sprintf	;wreg free
  5827                           
  5828                           ;Game.c: 53:     instr_wr(0xC0);
  5829  00228C  0EC0               	movlw	192
  5830  00228E  EC5F  F014         	call	i2_instr_wr
  5831  002292                     
  5832                           ;Game.c: 54:     escreve_texto(linha2);
  5833  002292  0E39               	movlw	low _linha2
  5834  002294  6E03               	movwf	i2escreve_texto@linha^0,c
  5835  002296  0E01               	movlw	high _linha2
  5836  002298  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5837  00229A  EC31  F013         	call	i2_escreve_texto	;wreg free
  5838  00229E  0012               	return		;funcret
  5839  0022A0                     __end_of_printAttentionMessage:
  5840                           	callstack 0
  5841                           
  5842 ;; *************** function i2_sprintf *****************
  5843 ;; Defined at:
  5844 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5847 ;;		 -> linha2(16), linha1(16), 
  5848 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5849 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  5850 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  5851 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  f               6   10[BANK0 ] struct _IO_FILE
  5854 ;;  ap              2    8[BANK0 ] PTR void [1]
  5855 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  5856 ;;  ret             2    0        int 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  2    0[BANK0 ] int 
  5859 ;; Registers used:
  5860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5866 ;;      Params:         0       8       0       0       0       0       0       0       0
  5867 ;;      Locals:         0       8       0       0       0       0       0       0       0
  5868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5869 ;;      Totals:         0      16       0       0       0       0       0       0       0
  5870 ;;Total ram usage:       16 bytes
  5871 ;; Hardware stack levels used: 1
  5872 ;; Hardware stack levels required when called: 7
  5873 ;; This function calls:
  5874 ;;		i2_vfprintf
  5875 ;; This function is called by:
  5876 ;;		_printAttentionMessage
  5877 ;;		_printPlayingMessage
  5878 ;;		_printErrorMessage
  5879 ;;		_printSucessMessage
  5880 ;;		_printWinnerMessage
  5881 ;;		i2_printStartMessage
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text42
  5886  0023FA                     __ptext42:
  5887                           	callstack 0
  5888  0023FA                     i2_sprintf:
  5889                           	callstack 11
  5890  0023FA  0E64               	movlw	low (?i2_sprintf+4)
  5891  0023FC  0100               	movlb	0	; () banked
  5892  0023FE  6F68               	movwf	i2sprintf@ap& (0+255),b
  5893  002400  0E00               	movlw	high (?i2_sprintf+4)
  5894  002402  6F69               	movwf	(i2sprintf@ap+1)& (0+255),b
  5895  002404  C060  F06A         	movff	i2sprintf@s,i2sprintf@f
  5896  002408  C061  F06B         	movff	i2sprintf@s+1,i2sprintf@f+1
  5897  00240C                     
  5898                           ; BSR set to: 0
  5899  00240C  0E00               	movlw	0
  5900  00240E  6F6D               	movwf	(i2sprintf@f+3)& (0+255),b
  5901  002410  0E00               	movlw	0
  5902  002412  6F6C               	movwf	(i2sprintf@f+2)& (0+255),b
  5903  002414                     
  5904                           ; BSR set to: 0
  5905  002414  0E00               	movlw	0
  5906  002416  6F6F               	movwf	(i2sprintf@f+5)& (0+255),b
  5907  002418  0E00               	movlw	0
  5908  00241A  6F6E               	movwf	(i2sprintf@f+4)& (0+255),b
  5909  00241C                     
  5910                           ; BSR set to: 0
  5911  00241C  0E6A               	movlw	low i2sprintf@f
  5912  00241E  6E50               	movwf	i2vfprintf@fp^0,c
  5913  002420  0E00               	movlw	high i2sprintf@f
  5914  002422  6E51               	movwf	(i2vfprintf@fp+1)^0,c
  5915  002424  C062  F052         	movff	i2sprintf@fmt,i2vfprintf@fmt
  5916  002428  C063  F053         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  5917  00242C  0E68               	movlw	low i2sprintf@ap
  5918  00242E  6E54               	movwf	i2vfprintf@ap^0,c
  5919  002430  0E00               	movlw	high i2sprintf@ap
  5920  002432  6E55               	movwf	(i2vfprintf@ap+1)^0,c
  5921  002434  EC50  F011         	call	i2_vfprintf	;wreg free
  5922  002438  0100               	movlb	0	; () banked
  5923  00243A  516C               	movf	(i2sprintf@f+2)& (0+255),w,b
  5924  00243C  2560               	addwf	i2sprintf@s& (0+255),w,b
  5925  00243E  6ED9               	movwf	fsr2l,c
  5926  002440  516D               	movf	(i2sprintf@f+3)& (0+255),w,b
  5927  002442  2161               	addwfc	(i2sprintf@s+1)& (0+255),w,b
  5928  002444  6EDA               	movwf	fsr2h,c
  5929  002446  0E00               	movlw	0
  5930  002448  6EDF               	movwf	indf2,c
  5931  00244A                     
  5932                           ; BSR set to: 0
  5933  00244A  0012               	return		;funcret
  5934  00244C                     __end_ofi2_sprintf:
  5935                           	callstack 0
  5936                           
  5937 ;; *************** function i2_vfprintf *****************
  5938 ;; Defined at:
  5939 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5942 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  5943 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5944 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  5945 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  5946 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  5947 ;;  ap              2   83[COMRAM] PTR PTR void 
  5948 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5951 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  5952 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  5953 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  2   79[COMRAM] int 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5963 ;;      Params:         6       0       0       0       0       0       0       0       0
  5964 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5966 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5967 ;;Total ram usage:        8 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; Hardware stack levels required when called: 6
  5970 ;; This function calls:
  5971 ;;		i2_vfpfcnvrt
  5972 ;; This function is called by:
  5973 ;;		i2_sprintf
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text43
  5978  0022A0                     __ptext43:
  5979                           	callstack 0
  5980  0022A0                     i2_vfprintf:
  5981                           	callstack 11
  5982  0022A0                     
  5983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5984  0022A0  C052  F056         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  5985  0022A4  C053  F057         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  5986  0022A8                     
  5987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5988  0022A8  0E00               	movlw	0
  5989  0022AA  0100               	movlb	0	; () banked
  5990  0022AC  6FC1               	movwf	(_nout+1)& (0+255),b
  5991  0022AE  0E00               	movlw	0
  5992  0022B0  6FC0               	movwf	_nout& (0+255),b
  5993                           
  5994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5995  0022B2  EF6E  F011         	goto	i2l3530
  5996  0022B6                     i2l3528:
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6000  0022B6  C050  F040         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  6001  0022BA  C051  F041         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  6002  0022BE  0E56               	movlw	low i2vfprintf@cfmt
  6003  0022C0  6E42               	movwf	i2vfpfcnvrt@fmt^0,c
  6004  0022C2  0E00               	movlw	high i2vfprintf@cfmt
  6005  0022C4  6E43               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  6006  0022C6  C054  F044         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  6007  0022CA  C055  F045         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  6008  0022CE  ECF2  F007         	call	i2_vfpfcnvrt	;wreg free
  6009  0022D2  5040               	movf	?i2_vfpfcnvrt^0,w,c
  6010  0022D4  0100               	movlb	0	; () banked
  6011  0022D6  27C0               	addwf	_nout& (0+255),f,b
  6012  0022D8  5041               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  6013  0022DA  23C1               	addwfc	(_nout+1)& (0+255),f,b
  6014  0022DC                     i2l3530:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6018  0022DC  C056  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  6019  0022E0  C057  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  6020  0022E4                     	if	0	;tblptru may be non-zero
  6021  0022E4                     	endif
  6022  0022E4                     	if	0	;tblptru may be non-zero
  6023  0022E4                     	endif
  6024  0022E4  0008               	tblrd		*
  6025  0022E6  50F5               	movf	tablat,w,c
  6026  0022E8  0900               	iorlw	0
  6027  0022EA  A4D8               	btfss	status,2,c
  6028  0022EC  EF7A  F011         	goto	i2u345_41
  6029  0022F0  EF7C  F011         	goto	i2u345_40
  6030  0022F4                     i2u345_41:
  6031  0022F4  EF5B  F011         	goto	i2l3528
  6032  0022F8                     i2u345_40:
  6033  0022F8                     
  6034                           ; BSR set to: 0
  6035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6036  0022F8  C0C0  F050         	movff	_nout,?i2_vfprintf
  6037  0022FC  C0C1  F051         	movff	_nout+1,?i2_vfprintf+1
  6038  002300                     
  6039                           ; BSR set to: 0
  6040  002300  0012               	return		;funcret
  6041  002302                     __end_ofi2_vfprintf:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function i2_vfpfcnvrt *****************
  6045 ;; Defined at:
  6046 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6049 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6050 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6051 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  6052 ;;  ap              2   67[COMRAM] PTR PTR void 
  6053 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  ll              8   71[COMRAM] long long 
  6056 ;;  llu             8    0        unsigned long long 
  6057 ;;  f               4    0        unsigned long long 
  6058 ;;  vp              3    0        PTR void 
  6059 ;;  ct              3    0        unsigned char [3]
  6060 ;;  cp              3    0        PTR unsigned char 
  6061 ;;  i               2    0        int 
  6062 ;;  done            2    0        int 
  6063 ;;  c               1    0        unsigned char 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  2   63[COMRAM] int 
  6066 ;; Registers used:
  6067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6073 ;;      Params:         6       0       0       0       0       0       0       0       0
  6074 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6075 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6076 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6077 ;;Total ram usage:       16 bytes
  6078 ;; Hardware stack levels used: 1
  6079 ;; Hardware stack levels required when called: 5
  6080 ;; This function calls:
  6081 ;;		i2_dtoa
  6082 ;;		i2_fputc
  6083 ;; This function is called by:
  6084 ;;		i2_vfprintf
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text44
  6089  000FE4                     __ptext44:
  6090                           	callstack 0
  6091  000FE4                     i2_vfpfcnvrt:
  6092                           	callstack 11
  6093  000FE4                     
  6094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6095  000FE4  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6096  000FE8  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6097  000FEC  CFDE FFF6          	movff	postinc2,tblptrl
  6098  000FF0  CFDD FFF7          	movff	postdec2,tblptrh
  6099  000FF4                     	if	0	;tblptru may be non-zero
  6100  000FF4                     	endif
  6101  000FF4                     	if	0	;tblptru may be non-zero
  6102  000FF4                     	endif
  6103  000FF4  0008               	tblrd		*
  6104  000FF6  50F5               	movf	tablat,w,c
  6105  000FF8  0A25               	xorlw	37
  6106  000FFA  A4D8               	btfss	status,2,c
  6107  000FFC  EF02  F008         	goto	i2u337_41
  6108  001000  EF04  F008         	goto	i2u337_40
  6109  001004                     i2u337_41:
  6110  001004  EFB0  F008         	goto	i2l3474
  6111  001008                     i2u337_40:
  6112  001008                     
  6113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6114  001008  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6115  00100C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6116  001010  2ADE               	incf	postinc2,f,c
  6117  001012  0E00               	movlw	0
  6118  001014  22DD               	addwfc	postdec2,f,c
  6119  001016                     
  6120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6121  001016  0E00               	movlw	0
  6122  001018  0100               	movlb	0	; () banked
  6123  00101A  6FC3               	movwf	(_width+1)& (0+255),b
  6124  00101C  0E00               	movlw	0
  6125  00101E  6FC2               	movwf	_width& (0+255),b
  6126  001020  C0C2  F0C6         	movff	_width,_flags
  6127  001024  C0C3  F0C7         	movff	_width+1,_flags+1
  6128  001028                     
  6129                           ; BSR set to: 0
  6130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6131  001028  69C4               	setf	_prec& (0+255),b
  6132  00102A  69C5               	setf	(_prec+1)& (0+255),b
  6133  00102C                     
  6134                           ; BSR set to: 0
  6135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6136  00102C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6137  001030  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6138  001034  CFDE FFF6          	movff	postinc2,tblptrl
  6139  001038  CFDD FFF7          	movff	postdec2,tblptrh
  6140  00103C                     	if	0	;tblptru may be non-zero
  6141  00103C                     	endif
  6142  00103C                     	if	0	;tblptru may be non-zero
  6143  00103C                     	endif
  6144  00103C  0008               	tblrd		*
  6145  00103E  50F5               	movf	tablat,w,c
  6146  001040  0A64               	xorlw	100
  6147  001042  B4D8               	btfsc	status,2,c
  6148  001044  EF26  F008         	goto	i2u338_41
  6149  001048  EF28  F008         	goto	i2u338_40
  6150  00104C                     i2u338_41:
  6151  00104C  EF3A  F008         	goto	i2l3452
  6152  001050                     i2u338_40:
  6153  001050                     
  6154                           ; BSR set to: 0
  6155  001050  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6156  001054  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6157  001058  CFDE FFF6          	movff	postinc2,tblptrl
  6158  00105C  CFDD FFF7          	movff	postdec2,tblptrh
  6159  001060                     	if	0	;tblptru may be non-zero
  6160  001060                     	endif
  6161  001060                     	if	0	;tblptru may be non-zero
  6162  001060                     	endif
  6163  001060  0008               	tblrd		*
  6164  001062  50F5               	movf	tablat,w,c
  6165  001064  0A69               	xorlw	105
  6166  001066  A4D8               	btfss	status,2,c
  6167  001068  EF38  F008         	goto	i2u339_41
  6168  00106C  EF3A  F008         	goto	i2u339_40
  6169  001070                     i2u339_41:
  6170  001070  EF7A  F008         	goto	i2l3458
  6171  001074                     i2u339_40:
  6172  001074                     i2l3452:
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6176  001074  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6177  001078  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6178  00107C  2ADE               	incf	postinc2,f,c
  6179  00107E  0E00               	movlw	0
  6180  001080  22DD               	addwfc	postdec2,f,c
  6181                           
  6182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6183  001082  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6184  001086  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6185  00108A  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  6186  00108E  0E02               	movlw	2
  6187  001090  26DE               	addwf	postinc2,f,c
  6188  001092  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  6189  001096  0E00               	movlw	0
  6190  001098  22DD               	addwfc	postdec2,f,c
  6191  00109A  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6192  00109E  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6193  0010A2  CFDE F048          	movff	postinc2,i2vfpfcnvrt@ll
  6194  0010A6  CFDD F049          	movff	postdec2,i2vfpfcnvrt@ll+1
  6195  0010AA  0E00               	movlw	0
  6196  0010AC  BE49               	btfsc	(i2vfpfcnvrt@ll+1)^0,7,c
  6197  0010AE  0EFF               	movlw	-1
  6198  0010B0  6E4A               	movwf	(i2vfpfcnvrt@ll+2)^0,c
  6199  0010B2  6E4B               	movwf	(i2vfpfcnvrt@ll+3)^0,c
  6200  0010B4  6E4C               	movwf	(i2vfpfcnvrt@ll+4)^0,c
  6201  0010B6  6E4D               	movwf	(i2vfpfcnvrt@ll+5)^0,c
  6202  0010B8  6E4E               	movwf	(i2vfpfcnvrt@ll+6)^0,c
  6203  0010BA  6E4F               	movwf	(i2vfpfcnvrt@ll+7)^0,c
  6204  0010BC                     
  6205                           ; BSR set to: 0
  6206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6207  0010BC  C040  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  6208  0010C0  C041  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  6209  0010C4  C048  F01E         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  6210  0010C8  C049  F01F         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  6211  0010CC  C04A  F020         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  6212  0010D0  C04B  F021         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  6213  0010D4  C04C  F022         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  6214  0010D8  C04D  F023         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  6215  0010DC  C04E  F024         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  6216  0010E0  C04F  F025         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  6217  0010E4  ECA2  F005         	call	i2_dtoa	;wreg free
  6218  0010E8  C01C  F040         	movff	?i2_dtoa,?i2_vfpfcnvrt
  6219  0010EC  C01D  F041         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  6220  0010F0  EFCB  F008         	goto	i2l983
  6221  0010F4                     i2l3458:
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6225  0010F4  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6226  0010F8  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6227  0010FC  CFDE FFF6          	movff	postinc2,tblptrl
  6228  001100  CFDD FFF7          	movff	postdec2,tblptrh
  6229  001104                     	if	0	;tblptru may be non-zero
  6230  001104                     	endif
  6231  001104                     	if	0	;tblptru may be non-zero
  6232  001104                     	endif
  6233  001104  0008               	tblrd		*
  6234  001106  50F5               	movf	tablat,w,c
  6235  001108  0A25               	xorlw	37
  6236  00110A  A4D8               	btfss	status,2,c
  6237  00110C  EF8A  F008         	goto	i2u340_41
  6238  001110  EF8C  F008         	goto	i2u340_40
  6239  001114                     i2u340_41:
  6240  001114  EFA3  F008         	goto	i2l3468
  6241  001118                     i2u340_40:
  6242  001118                     
  6243                           ; BSR set to: 0
  6244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6245  001118  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6246  00111C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6247  001120  2ADE               	incf	postinc2,f,c
  6248  001122  0E00               	movlw	0
  6249  001124  22DD               	addwfc	postdec2,f,c
  6250  001126                     
  6251                           ; BSR set to: 0
  6252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6253  001126  0E00               	movlw	0
  6254  001128  6E02               	movwf	(i2fputc@c+1)^0,c
  6255  00112A  0E25               	movlw	37
  6256  00112C  6E01               	movwf	i2fputc@c^0,c
  6257  00112E  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6258  001132  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6259  001136  EC8C  F00D         	call	i2_fputc	;wreg free
  6260  00113A                     i2l3464:
  6261                           
  6262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6263  00113A  0E00               	movlw	0
  6264  00113C  6E41               	movwf	(?i2_vfpfcnvrt+1)^0,c
  6265  00113E  0E01               	movlw	1
  6266  001140  6E40               	movwf	?i2_vfpfcnvrt^0,c
  6267  001142  EFCB  F008         	goto	i2l983
  6268  001146                     i2l3468:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6272  001146  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6273  00114A  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6274  00114E  2ADE               	incf	postinc2,f,c
  6275  001150  0E00               	movlw	0
  6276  001152  22DD               	addwfc	postdec2,f,c
  6277  001154                     
  6278                           ; BSR set to: 0
  6279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6280  001154  0E00               	movlw	0
  6281  001156  6E41               	movwf	(?i2_vfpfcnvrt+1)^0,c
  6282  001158  0E00               	movlw	0
  6283  00115A  6E40               	movwf	?i2_vfpfcnvrt^0,c
  6284  00115C  EFCB  F008         	goto	i2l983
  6285  001160                     i2l3474:
  6286                           
  6287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6288  001160  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6289  001164  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6290  001168  CFDE FFF6          	movff	postinc2,tblptrl
  6291  00116C  CFDD FFF7          	movff	postdec2,tblptrh
  6292  001170                     	if	0	;tblptru may be non-zero
  6293  001170                     	endif
  6294  001170                     	if	0	;tblptru may be non-zero
  6295  001170                     	endif
  6296  001170  0008               	tblrd		*
  6297  001172  50F5               	movf	tablat,w,c
  6298  001174  6E01               	movwf	i2fputc@c^0,c
  6299  001176  6A02               	clrf	(i2fputc@c+1)^0,c
  6300  001178  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6301  00117C  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6302  001180  EC8C  F00D         	call	i2_fputc	;wreg free
  6303  001184                     
  6304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6305  001184  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6306  001188  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6307  00118C  2ADE               	incf	postinc2,f,c
  6308  00118E  0E00               	movlw	0
  6309  001190  22DD               	addwfc	postdec2,f,c
  6310  001192  EF9D  F008         	goto	i2l3464
  6311  001196                     i2l983:
  6312  001196  0012               	return		;funcret
  6313  001198                     __end_ofi2_vfpfcnvrt:
  6314                           	callstack 0
  6315                           
  6316 ;; *************** function i2_dtoa *****************
  6317 ;; Defined at:
  6318 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6321 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6322 ;;  d               8   29[COMRAM] long long 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  n               8   53[COMRAM] long long 
  6325 ;;  i               2   61[COMRAM] int 
  6326 ;;  s               2   51[COMRAM] int 
  6327 ;;  w               2   49[COMRAM] int 
  6328 ;;  p               2   47[COMRAM] int 
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  2   27[COMRAM] int 
  6331 ;; Registers used:
  6332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6338 ;;      Params:        10       0       0       0       0       0       0       0       0
  6339 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6340 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6341 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6342 ;;Total ram usage:       36 bytes
  6343 ;; Hardware stack levels used: 1
  6344 ;; Hardware stack levels required when called: 4
  6345 ;; This function calls:
  6346 ;;		i2___aodiv
  6347 ;;		i2___aomod
  6348 ;;		i2_abs
  6349 ;;		i2_pad
  6350 ;; This function is called by:
  6351 ;;		i2_vfpfcnvrt
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text45
  6356  000B44                     __ptext45:
  6357                           	callstack 0
  6358  000B44                     i2_dtoa:
  6359                           	callstack 11
  6360  000B44                     
  6361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6362  000B44  C01E  F036         	movff	i2dtoa@d,i2dtoa@n
  6363  000B48  C01F  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  6364  000B4C  C020  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  6365  000B50  C021  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  6366  000B54  C022  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  6367  000B58  C023  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  6368  000B5C  C024  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  6369  000B60  C025  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  6370  000B64                     
  6371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6372  000B64  BE3D               	btfsc	(i2dtoa@n+7)^0,7,c
  6373  000B66  EFB7  F005         	goto	i2u307_41
  6374  000B6A  EFBA  F005         	goto	i2u307_40
  6375  000B6E                     i2u307_41:
  6376  000B6E  0E01               	movlw	1
  6377  000B70  EFBB  F005         	goto	i2u308_40
  6378  000B74                     i2u307_40:
  6379  000B74  0E00               	movlw	0
  6380  000B76                     i2u308_40:
  6381  000B76  6E34               	movwf	i2dtoa@s^0,c
  6382  000B78  6A35               	clrf	(i2dtoa@s+1)^0,c
  6383                           
  6384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6385  000B7A  5034               	movf	i2dtoa@s^0,w,c
  6386  000B7C  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  6387  000B7E  B4D8               	btfsc	status,2,c
  6388  000B80  EFC4  F005         	goto	i2u309_41
  6389  000B84  EFC6  F005         	goto	i2u309_40
  6390  000B88                     i2u309_41:
  6391  000B88  EFD6  F005         	goto	i2l3322
  6392  000B8C                     i2u309_40:
  6393  000B8C                     
  6394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6395  000B8C  1E3D               	comf	(i2dtoa@n+7)^0,f,c
  6396  000B8E  1E3C               	comf	(i2dtoa@n+6)^0,f,c
  6397  000B90  1E3B               	comf	(i2dtoa@n+5)^0,f,c
  6398  000B92  1E3A               	comf	(i2dtoa@n+4)^0,f,c
  6399  000B94  1E39               	comf	(i2dtoa@n+3)^0,f,c
  6400  000B96  1E38               	comf	(i2dtoa@n+2)^0,f,c
  6401  000B98  1E37               	comf	(i2dtoa@n+1)^0,f,c
  6402  000B9A  6C36               	negf	i2dtoa@n^0,c
  6403  000B9C  0E00               	movlw	0
  6404  000B9E  2237               	addwfc	(i2dtoa@n+1)^0,f,c
  6405  000BA0  2238               	addwfc	(i2dtoa@n+2)^0,f,c
  6406  000BA2  2239               	addwfc	(i2dtoa@n+3)^0,f,c
  6407  000BA4  223A               	addwfc	(i2dtoa@n+4)^0,f,c
  6408  000BA6  223B               	addwfc	(i2dtoa@n+5)^0,f,c
  6409  000BA8  223C               	addwfc	(i2dtoa@n+6)^0,f,c
  6410  000BAA  223D               	addwfc	(i2dtoa@n+7)^0,f,c
  6411  000BAC                     i2l3322:
  6412                           
  6413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6414  000BAC  0100               	movlb	0	; () banked
  6415  000BAE  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  6416  000BB0  EFDC  F005         	goto	i2u310_41
  6417  000BB4  EFDE  F005         	goto	i2u310_40
  6418  000BB8                     i2u310_41:
  6419  000BB8  EFDF  F005         	goto	i2l3326
  6420  000BBC                     i2u310_40:
  6421  000BBC                     
  6422                           ; BSR set to: 0
  6423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6424  000BBC  93C6               	bcf	_flags& (0+255),1,b
  6425  000BBE                     i2l3326:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6429  000BBE  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  6430  000BC0  EFEC  F005         	goto	i2u311_40
  6431  000BC4  51C5               	movf	(_prec+1)& (0+255),w,b
  6432  000BC6  E106               	bnz	i2u311_41
  6433  000BC8  05C4               	decf	_prec& (0+255),w,b
  6434  000BCA  B0D8               	btfsc	status,0,c
  6435  000BCC  EFEA  F005         	goto	i2u311_41
  6436  000BD0  EFEC  F005         	goto	i2u311_40
  6437  000BD4                     i2u311_41:
  6438  000BD4  EFF2  F005         	goto	i2l956
  6439  000BD8                     i2u311_40:
  6440  000BD8                     
  6441                           ; BSR set to: 0
  6442  000BD8  0E00               	movlw	0
  6443  000BDA  6E31               	movwf	(i2dtoa@p+1)^0,c
  6444  000BDC  0E01               	movlw	1
  6445  000BDE  6E30               	movwf	i2dtoa@p^0,c
  6446  000BE0  EFF6  F005         	goto	i2l958
  6447  000BE4                     i2l956:
  6448                           
  6449                           ; BSR set to: 0
  6450  000BE4  C0C4  F030         	movff	_prec,i2dtoa@p
  6451  000BE8  C0C5  F031         	movff	_prec+1,i2dtoa@p+1
  6452  000BEC                     i2l958:
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6456  000BEC  C0C2  F032         	movff	_width,i2dtoa@w
  6457  000BF0  C0C3  F033         	movff	_width+1,i2dtoa@w+1
  6458  000BF4                     
  6459                           ; BSR set to: 0
  6460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6461  000BF4  5034               	movf	i2dtoa@s^0,w,c
  6462  000BF6  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  6463  000BF8  A4D8               	btfss	status,2,c
  6464  000BFA  EF01  F006         	goto	i2u312_41
  6465  000BFE  EF03  F006         	goto	i2u312_40
  6466  000C02                     i2u312_41:
  6467  000C02  EF0A  F006         	goto	i2l3334
  6468  000C06                     i2u312_40:
  6469  000C06                     
  6470                           ; BSR set to: 0
  6471  000C06  A5C6               	btfss	_flags& (0+255),2,b
  6472  000C08  EF08  F006         	goto	i2u313_41
  6473  000C0C  EF0A  F006         	goto	i2u313_40
  6474  000C10                     i2u313_41:
  6475  000C10  EF0D  F006         	goto	i2l3336
  6476  000C14                     i2u313_40:
  6477  000C14                     i2l3334:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  6481  000C14  0632               	decf	i2dtoa@w^0,f,c
  6482  000C16  A0D8               	btfss	status,0,c
  6483  000C18  0633               	decf	(i2dtoa@w+1)^0,f,c
  6484  000C1A                     i2l3336:
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6488  000C1A  0E00               	movlw	0
  6489  000C1C  6E3F               	movwf	(i2dtoa@i+1)^0,c
  6490  000C1E  0E1F               	movlw	31
  6491  000C20  6E3E               	movwf	i2dtoa@i^0,c
  6492  000C22                     
  6493                           ; BSR set to: 0
  6494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6495  000C22  0E00               	movlw	0
  6496  000C24  0101               	movlb	1	; () banked
  6497  000C26  6F1F               	movwf	(_dbuf+31)& (0+255),b
  6498                           
  6499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6500  000C28  EF92  F006         	goto	i2l3350
  6501  000C2C                     i2l3340:
  6502                           
  6503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  6504  000C2C  063E               	decf	i2dtoa@i^0,f,c
  6505  000C2E  A0D8               	btfss	status,0,c
  6506  000C30  063F               	decf	(i2dtoa@i+1)^0,f,c
  6507  000C32                     
  6508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6509  000C32  0E00               	movlw	low _dbuf
  6510  000C34  243E               	addwf	i2dtoa@i^0,w,c
  6511  000C36  6ED9               	movwf	fsr2l,c
  6512  000C38  0E01               	movlw	high _dbuf
  6513  000C3A  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  6514  000C3C  6EDA               	movwf	fsr2h,c
  6515  000C3E  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  6516  000C42  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  6517  000C46  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  6518  000C4A  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  6519  000C4E  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  6520  000C52  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  6521  000C56  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  6522  000C5A  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  6523  000C5E  0E0A               	movlw	10
  6524  000C60  6E09               	movwf	i2___aomod@divisor^0,c
  6525  000C62  0E00               	movlw	0
  6526  000C64  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  6527  000C66  0E00               	movlw	0
  6528  000C68  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  6529  000C6A  0E00               	movlw	0
  6530  000C6C  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  6531  000C6E  0E00               	movlw	0
  6532  000C70  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  6533  000C72  0E00               	movlw	0
  6534  000C74  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  6535  000C76  0E00               	movlw	0
  6536  000C78  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  6537  000C7A  0E00               	movlw	0
  6538  000C7C  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  6539  000C7E  EC08  F00B         	call	i2___aomod	;wreg free
  6540  000C82  C001  F026         	movff	?i2___aomod,??i2_dtoa
  6541  000C86  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  6542  000C8A  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  6543  000C8E  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  6544  000C92  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  6545  000C96  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  6546  000C9A  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  6547  000C9E  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  6548  000CA2  C026  F013         	movff	??i2_dtoa,i2abs@a
  6549  000CA6  C028  F014         	movff	??i2_dtoa+2,i2abs@a+1
  6550  000CAA  ECF3  F012         	call	i2_abs	;wreg free
  6551  000CAE  5013               	movf	?i2_abs^0,w,c
  6552  000CB0  0F30               	addlw	48
  6553  000CB2  6EDF               	movwf	indf2,c
  6554  000CB4                     
  6555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  6556  000CB4  0630               	decf	i2dtoa@p^0,f,c
  6557  000CB6  A0D8               	btfss	status,0,c
  6558  000CB8  0631               	decf	(i2dtoa@p+1)^0,f,c
  6559  000CBA                     
  6560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  6561  000CBA  0632               	decf	i2dtoa@w^0,f,c
  6562  000CBC  A0D8               	btfss	status,0,c
  6563  000CBE  0633               	decf	(i2dtoa@w+1)^0,f,c
  6564  000CC0                     
  6565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6566  000CC0  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  6567  000CC4  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  6568  000CC8  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  6569  000CCC  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  6570  000CD0  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  6571  000CD4  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  6572  000CD8  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  6573  000CDC  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  6574  000CE0  0E0A               	movlw	10
  6575  000CE2  6E09               	movwf	i2___aodiv@divisor^0,c
  6576  000CE4  0E00               	movlw	0
  6577  000CE6  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  6578  000CE8  0E00               	movlw	0
  6579  000CEA  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  6580  000CEC  0E00               	movlw	0
  6581  000CEE  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  6582  000CF0  0E00               	movlw	0
  6583  000CF2  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  6584  000CF4  0E00               	movlw	0
  6585  000CF6  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  6586  000CF8  0E00               	movlw	0
  6587  000CFA  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  6588  000CFC  0E00               	movlw	0
  6589  000CFE  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  6590  000D00  EC91  F009         	call	i2___aodiv	;wreg free
  6591  000D04  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  6592  000D08  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  6593  000D0C  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  6594  000D10  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  6595  000D14  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  6596  000D18  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  6597  000D1C  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  6598  000D20  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  6599  000D24                     i2l3350:
  6600                           
  6601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6602  000D24  BE3F               	btfsc	(i2dtoa@i+1)^0,7,c
  6603  000D26  EF9D  F006         	goto	i2u314_41
  6604  000D2A  503F               	movf	(i2dtoa@i+1)^0,w,c
  6605  000D2C  E108               	bnz	i2u314_40
  6606  000D2E  043E               	decf	i2dtoa@i^0,w,c
  6607  000D30  A0D8               	btfss	status,0,c
  6608  000D32  EF9D  F006         	goto	i2u314_41
  6609  000D36  EF9F  F006         	goto	i2u314_40
  6610  000D3A                     i2u314_41:
  6611  000D3A  EFD0  F006         	goto	i2l3360
  6612  000D3E                     i2u314_40:
  6613  000D3E  5036               	movf	i2dtoa@n^0,w,c
  6614  000D40  1037               	iorwf	(i2dtoa@n+1)^0,w,c
  6615  000D42  1038               	iorwf	(i2dtoa@n+2)^0,w,c
  6616  000D44  1039               	iorwf	(i2dtoa@n+3)^0,w,c
  6617  000D46  103A               	iorwf	(i2dtoa@n+4)^0,w,c
  6618  000D48  103B               	iorwf	(i2dtoa@n+5)^0,w,c
  6619  000D4A  103C               	iorwf	(i2dtoa@n+6)^0,w,c
  6620  000D4C  103D               	iorwf	(i2dtoa@n+7)^0,w,c
  6621  000D4E  A4D8               	btfss	status,2,c
  6622  000D50  EFAC  F006         	goto	i2u315_41
  6623  000D54  EFAE  F006         	goto	i2u315_40
  6624  000D58                     i2u315_41:
  6625  000D58  EF16  F006         	goto	i2l3340
  6626  000D5C                     i2u315_40:
  6627  000D5C  BE31               	btfsc	(i2dtoa@p+1)^0,7,c
  6628  000D5E  EFBB  F006         	goto	i2u316_40
  6629  000D62  5031               	movf	(i2dtoa@p+1)^0,w,c
  6630  000D64  E106               	bnz	i2u316_41
  6631  000D66  0430               	decf	i2dtoa@p^0,w,c
  6632  000D68  B0D8               	btfsc	status,0,c
  6633  000D6A  EFB9  F006         	goto	i2u316_41
  6634  000D6E  EFBB  F006         	goto	i2u316_40
  6635  000D72                     i2u316_41:
  6636  000D72  EF16  F006         	goto	i2l3340
  6637  000D76                     i2u316_40:
  6638  000D76  BE33               	btfsc	(i2dtoa@w+1)^0,7,c
  6639  000D78  EFC6  F006         	goto	i2u317_41
  6640  000D7C  5033               	movf	(i2dtoa@w+1)^0,w,c
  6641  000D7E  E108               	bnz	i2u317_40
  6642  000D80  0432               	decf	i2dtoa@w^0,w,c
  6643  000D82  A0D8               	btfss	status,0,c
  6644  000D84  EFC6  F006         	goto	i2u317_41
  6645  000D88  EFC8  F006         	goto	i2u317_40
  6646  000D8C                     i2u317_41:
  6647  000D8C  EFD0  F006         	goto	i2l3360
  6648  000D90                     i2u317_40:
  6649  000D90  0100               	movlb	0	; () banked
  6650  000D92  B3C6               	btfsc	_flags& (0+255),1,b
  6651  000D94  EFCE  F006         	goto	i2u318_41
  6652  000D98  EFD0  F006         	goto	i2u318_40
  6653  000D9C                     i2u318_41:
  6654  000D9C  EF16  F006         	goto	i2l3340
  6655  000DA0                     i2u318_40:
  6656  000DA0                     i2l3360:
  6657                           
  6658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6659  000DA0  5034               	movf	i2dtoa@s^0,w,c
  6660  000DA2  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  6661  000DA4  A4D8               	btfss	status,2,c
  6662  000DA6  EFD7  F006         	goto	i2u319_41
  6663  000DAA  EFD9  F006         	goto	i2u319_40
  6664  000DAE                     i2u319_41:
  6665  000DAE  EFE1  F006         	goto	i2l3364
  6666  000DB2                     i2u319_40:
  6667  000DB2  0100               	movlb	0	; () banked
  6668  000DB4  A5C6               	btfss	_flags& (0+255),2,b
  6669  000DB6  EFDF  F006         	goto	i2u320_41
  6670  000DBA  EFE1  F006         	goto	i2u320_40
  6671  000DBE                     i2u320_41:
  6672  000DBE  EFFF  F006         	goto	i2l3374
  6673  000DC2                     i2u320_40:
  6674  000DC2                     i2l3364:
  6675                           
  6676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  6677  000DC2  063E               	decf	i2dtoa@i^0,f,c
  6678  000DC4  A0D8               	btfss	status,0,c
  6679  000DC6  063F               	decf	(i2dtoa@i+1)^0,f,c
  6680  000DC8                     
  6681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6682  000DC8  5034               	movf	i2dtoa@s^0,w,c
  6683  000DCA  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  6684  000DCC  A4D8               	btfss	status,2,c
  6685  000DCE  EFEB  F006         	goto	i2u321_41
  6686  000DD2  EFED  F006         	goto	i2u321_40
  6687  000DD6                     i2u321_41:
  6688  000DD6  EFF3  F006         	goto	i2l3370
  6689  000DDA                     i2u321_40:
  6690  000DDA  0E00               	movlw	0
  6691  000DDC  6E2F               	movwf	(i2_dtoa$743+1)^0,c
  6692  000DDE  0E2B               	movlw	43
  6693  000DE0  6E2E               	movwf	i2_dtoa$743^0,c
  6694  000DE2  EFF7  F006         	goto	i2l3372
  6695  000DE6                     i2l3370:
  6696  000DE6  0E00               	movlw	0
  6697  000DE8  6E2F               	movwf	(i2_dtoa$743+1)^0,c
  6698  000DEA  0E2D               	movlw	45
  6699  000DEC  6E2E               	movwf	i2_dtoa$743^0,c
  6700  000DEE                     i2l3372:
  6701  000DEE  0E00               	movlw	low _dbuf
  6702  000DF0  243E               	addwf	i2dtoa@i^0,w,c
  6703  000DF2  6ED9               	movwf	fsr2l,c
  6704  000DF4  0E01               	movlw	high _dbuf
  6705  000DF6  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  6706  000DF8  6EDA               	movwf	fsr2h,c
  6707  000DFA  C02E  FFDF         	movff	i2_dtoa$743,indf2
  6708  000DFE                     i2l3374:
  6709                           
  6710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6711  000DFE  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  6712  000E02  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  6713  000E06  0E00               	movlw	low _dbuf
  6714  000E08  243E               	addwf	i2dtoa@i^0,w,c
  6715  000E0A  6E13               	movwf	i2pad@buf^0,c
  6716  000E0C  0E01               	movlw	high _dbuf
  6717  000E0E  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  6718  000E10  6E14               	movwf	(i2pad@buf+1)^0,c
  6719  000E12  C032  F015         	movff	i2dtoa@w,i2pad@p
  6720  000E16  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  6721  000E1A  ECF1  F00D         	call	i2_pad	;wreg free
  6722  000E1E  C011  F01C         	movff	?i2_pad,?i2_dtoa
  6723  000E22  C012  F01D         	movff	?i2_pad+1,?i2_dtoa+1
  6724  000E26  0012               	return		;funcret
  6725  000E28                     __end_ofi2_dtoa:
  6726                           	callstack 0
  6727                           
  6728 ;; *************** function i2_pad *****************
  6729 ;; Defined at:
  6730 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6733 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6734 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6735 ;;		 -> dbuf(32), 
  6736 ;;  p               2   20[COMRAM] int 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  w               2   25[COMRAM] int 
  6739 ;;  i               2   23[COMRAM] int 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  2   16[COMRAM] int 
  6742 ;; Registers used:
  6743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6749 ;;      Params:         6       0       0       0       0       0       0       0       0
  6750 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6751 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6752 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6753 ;;Total ram usage:       11 bytes
  6754 ;; Hardware stack levels used: 1
  6755 ;; Hardware stack levels required when called: 3
  6756 ;; This function calls:
  6757 ;;		i2_fputc
  6758 ;;		i2_fputs
  6759 ;;		i2_strlen
  6760 ;; This function is called by:
  6761 ;;		i2_dtoa
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text46
  6766  001BE2                     __ptext46:
  6767                           	callstack 0
  6768  001BE2                     i2_pad:
  6769                           	callstack 11
  6770  001BE2                     
  6771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6772  001BE2  0100               	movlb	0	; () banked
  6773  001BE4  A1C6               	btfss	_flags& (0+255),0,b
  6774  001BE6  EFF7  F00D         	goto	i2u284_41
  6775  001BEA  EFF9  F00D         	goto	i2u284_40
  6776  001BEE                     i2u284_41:
  6777  001BEE  EF03  F00E         	goto	i2l3188
  6778  001BF2                     i2u284_40:
  6779  001BF2                     
  6780                           ; BSR set to: 0
  6781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6782  001BF2  C013  F00A         	movff	i2pad@buf,i2fputs@s
  6783  001BF6  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  6784  001BFA  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  6785  001BFE  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  6786  001C02  EC90  F012         	call	i2_fputs	;wreg free
  6787  001C06                     i2l3188:
  6788                           
  6789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6790  001C06  BE16               	btfsc	(i2pad@p+1)^0,7,c
  6791  001C08  EF08  F00E         	goto	i2u285_41
  6792  001C0C  EF0A  F00E         	goto	i2u285_40
  6793  001C10                     i2u285_41:
  6794  001C10  EF10  F00E         	goto	i2l3192
  6795  001C14                     i2u285_40:
  6796  001C14  C015  F01A         	movff	i2pad@p,i2pad@w
  6797  001C18  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  6798  001C1C  EF14  F00E         	goto	i2l945
  6799  001C20                     i2l3192:
  6800  001C20  0E00               	movlw	0
  6801  001C22  6E1B               	movwf	(i2pad@w+1)^0,c
  6802  001C24  0E00               	movlw	0
  6803  001C26  6E1A               	movwf	i2pad@w^0,c
  6804  001C28                     i2l945:
  6805                           
  6806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6807  001C28  0E00               	movlw	0
  6808  001C2A  6E19               	movwf	(i2pad@i+1)^0,c
  6809  001C2C  0E00               	movlw	0
  6810  001C2E  6E18               	movwf	i2pad@i^0,c
  6811                           
  6812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6813  001C30  EF26  F00E         	goto	i2l3198
  6814  001C34                     i2l3194:
  6815                           
  6816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6817  001C34  0E00               	movlw	0
  6818  001C36  6E02               	movwf	(i2fputc@c+1)^0,c
  6819  001C38  0E20               	movlw	32
  6820  001C3A  6E01               	movwf	i2fputc@c^0,c
  6821  001C3C  C011  F003         	movff	i2pad@fp,i2fputc@fp
  6822  001C40  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  6823  001C44  EC8C  F00D         	call	i2_fputc	;wreg free
  6824  001C48                     
  6825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6826  001C48  4A18               	infsnz	i2pad@i^0,f,c
  6827  001C4A  2A19               	incf	(i2pad@i+1)^0,f,c
  6828  001C4C                     i2l3198:
  6829                           
  6830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6831  001C4C  501A               	movf	i2pad@w^0,w,c
  6832  001C4E  5C18               	subwf	i2pad@i^0,w,c
  6833  001C50  5019               	movf	(i2pad@i+1)^0,w,c
  6834  001C52  0A80               	xorlw	128
  6835  001C54  6E17               	movwf	??i2_pad^0,c
  6836  001C56  501B               	movf	(i2pad@w+1)^0,w,c
  6837  001C58  0A80               	xorlw	128
  6838  001C5A  5817               	subwfb	??i2_pad^0,w,c
  6839  001C5C  A0D8               	btfss	status,0,c
  6840  001C5E  EF33  F00E         	goto	i2u286_41
  6841  001C62  EF35  F00E         	goto	i2u286_40
  6842  001C66                     i2u286_41:
  6843  001C66  EF1A  F00E         	goto	i2l3194
  6844  001C6A                     i2u286_40:
  6845  001C6A                     
  6846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6847  001C6A  0100               	movlb	0	; () banked
  6848  001C6C  B1C6               	btfsc	_flags& (0+255),0,b
  6849  001C6E  EF3B  F00E         	goto	i2u287_41
  6850  001C72  EF3D  F00E         	goto	i2u287_40
  6851  001C76                     i2u287_41:
  6852  001C76  EF47  F00E         	goto	i2l3202
  6853  001C7A                     i2u287_40:
  6854  001C7A                     
  6855                           ; BSR set to: 0
  6856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6857  001C7A  C013  F00A         	movff	i2pad@buf,i2fputs@s
  6858  001C7E  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  6859  001C82  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  6860  001C86  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  6861  001C8A  EC90  F012         	call	i2_fputs	;wreg free
  6862  001C8E                     i2l3202:
  6863                           
  6864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6865  001C8E  C013  F001         	movff	i2pad@buf,i2strlen@s
  6866  001C92  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
  6867  001C96  EC89  F013         	call	i2_strlen	;wreg free
  6868  001C9A  501A               	movf	i2pad@w^0,w,c
  6869  001C9C  2401               	addwf	?i2_strlen^0,w,c
  6870  001C9E  6E11               	movwf	?i2_pad^0,c
  6871  001CA0  501B               	movf	(i2pad@w+1)^0,w,c
  6872  001CA2  2002               	addwfc	(?i2_strlen+1)^0,w,c
  6873  001CA4  6E12               	movwf	(?i2_pad+1)^0,c
  6874  001CA6  0012               	return		;funcret
  6875  001CA8                     __end_ofi2_pad:
  6876                           	callstack 0
  6877                           
  6878 ;; *************** function i2_strlen *****************
  6879 ;; Defined at:
  6880 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6883 ;;		 -> dbuf(32), 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6886 ;;		 -> dbuf(32), 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  2    0[COMRAM] unsigned int 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6896 ;;      Params:         2       0       0       0       0       0       0       0       0
  6897 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6899 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6900 ;;Total ram usage:        4 bytes
  6901 ;; Hardware stack levels used: 1
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		i2_pad
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text47
  6910  002712                     __ptext47:
  6911                           	callstack 0
  6912  002712                     i2_strlen:
  6913                           	callstack 13
  6914  002712  C001  F003         	movff	i2strlen@s,i2strlen@a
  6915  002716  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  6916  00271A  EF91  F013         	goto	i2l3080
  6917  00271E                     i2l3078:
  6918  00271E  4A01               	infsnz	i2strlen@s^0,f,c
  6919  002720  2A02               	incf	(i2strlen@s+1)^0,f,c
  6920  002722                     i2l3080:
  6921  002722  C001  FFD9         	movff	i2strlen@s,fsr2l
  6922  002726  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  6923  00272A  50DF               	movf	indf2,w,c
  6924  00272C  A4D8               	btfss	status,2,c
  6925  00272E  EF9B  F013         	goto	i2u268_41
  6926  002732  EF9D  F013         	goto	i2u268_40
  6927  002736                     i2u268_41:
  6928  002736  EF8F  F013         	goto	i2l3078
  6929  00273A                     i2u268_40:
  6930  00273A  5003               	movf	i2strlen@a^0,w,c
  6931  00273C  5C01               	subwf	i2strlen@s^0,w,c
  6932  00273E  6E01               	movwf	?i2_strlen^0,c
  6933  002740  5004               	movf	(i2strlen@a+1)^0,w,c
  6934  002742  5802               	subwfb	(i2strlen@s+1)^0,w,c
  6935  002744  6E02               	movwf	(?i2_strlen+1)^0,c
  6936  002746  0012               	return		;funcret
  6937  002748                     __end_ofi2_strlen:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function i2_fputs *****************
  6941 ;; Defined at:
  6942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6945 ;;		 -> dbuf(32), 
  6946 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6947 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;  i               2   14[COMRAM] int 
  6950 ;;  c               1   13[COMRAM] unsigned char 
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  2    9[COMRAM] int 
  6953 ;; Registers used:
  6954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6960 ;;      Params:         4       0       0       0       0       0       0       0       0
  6961 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6963 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6964 ;;Total ram usage:        7 bytes
  6965 ;; Hardware stack levels used: 1
  6966 ;; Hardware stack levels required when called: 2
  6967 ;; This function calls:
  6968 ;;		i2_fputc
  6969 ;; This function is called by:
  6970 ;;		i2_pad
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text48
  6975  002520                     __ptext48:
  6976                           	callstack 0
  6977  002520                     i2_fputs:
  6978                           	callstack 11
  6979  002520  0E00               	movlw	0
  6980  002522  6E10               	movwf	(i2fputs@i+1)^0,c
  6981  002524  0E00               	movlw	0
  6982  002526  6E0F               	movwf	i2fputs@i^0,c
  6983  002528  EFA1  F012         	goto	i2l3074
  6984  00252C                     i2l3070:
  6985  00252C  C00E  F001         	movff	i2fputs@c,i2fputc@c
  6986  002530  6A02               	clrf	(i2fputc@c+1)^0,c
  6987  002532  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  6988  002536  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  6989  00253A  EC8C  F00D         	call	i2_fputc	;wreg free
  6990  00253E  4A0F               	infsnz	i2fputs@i^0,f,c
  6991  002540  2A10               	incf	(i2fputs@i+1)^0,f,c
  6992  002542                     i2l3074:
  6993  002542  500F               	movf	i2fputs@i^0,w,c
  6994  002544  240A               	addwf	i2fputs@s^0,w,c
  6995  002546  6ED9               	movwf	fsr2l,c
  6996  002548  5010               	movf	(i2fputs@i+1)^0,w,c
  6997  00254A  200B               	addwfc	(i2fputs@s+1)^0,w,c
  6998  00254C  6EDA               	movwf	fsr2h,c
  6999  00254E  50DF               	movf	indf2,w,c
  7000  002550  6E0E               	movwf	i2fputs@c^0,c
  7001  002552  500E               	movf	i2fputs@c^0,w,c
  7002  002554  A4D8               	btfss	status,2,c
  7003  002556  EFAF  F012         	goto	i2u267_41
  7004  00255A  EFB1  F012         	goto	i2u267_40
  7005  00255E                     i2u267_41:
  7006  00255E  EF96  F012         	goto	i2l3070
  7007  002562                     i2u267_40:
  7008  002562  0012               	return		;funcret
  7009  002564                     __end_ofi2_fputs:
  7010                           	callstack 0
  7011                           
  7012 ;; *************** function i2_fputc *****************
  7013 ;; Defined at:
  7014 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  c               2    0[COMRAM] int 
  7017 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7018 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  2    0[COMRAM] int 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7030 ;;      Params:         4       0       0       0       0       0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7032 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7033 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7034 ;;Total ram usage:        9 bytes
  7035 ;; Hardware stack levels used: 1
  7036 ;; Hardware stack levels required when called: 1
  7037 ;; This function calls:
  7038 ;;		i2_putch
  7039 ;; This function is called by:
  7040 ;;		i2_pad
  7041 ;;		i2_vfpfcnvrt
  7042 ;;		i2_fputs
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text49
  7047  001B18                     __ptext49:
  7048                           	callstack 0
  7049  001B18                     i2_fputc:
  7050                           	callstack 14
  7051  001B18  5003               	movf	i2fputc@fp^0,w,c
  7052  001B1A  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  7053  001B1C  B4D8               	btfsc	status,2,c
  7054  001B1E  EF93  F00D         	goto	i2u259_41
  7055  001B22  EF95  F00D         	goto	i2u259_40
  7056  001B26                     i2u259_41:
  7057  001B26  EF9E  F00D         	goto	i2l3044
  7058  001B2A                     i2u259_40:
  7059  001B2A  5003               	movf	i2fputc@fp^0,w,c
  7060  001B2C  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  7061  001B2E  A4D8               	btfss	status,2,c
  7062  001B30  EF9C  F00D         	goto	i2u260_41
  7063  001B34  EF9E  F00D         	goto	i2u260_40
  7064  001B38                     i2u260_41:
  7065  001B38  EFA3  F00D         	goto	i2l3046
  7066  001B3C                     i2u260_40:
  7067  001B3C                     i2l3044:
  7068  001B3C  5001               	movf	i2fputc@c^0,w,c
  7069  001B3E  EC85  F014         	call	i2_putch
  7070  001B42  EFF0  F00D         	goto	i2l1009
  7071  001B46                     i2l3046:
  7072  001B46  EE20 F004          	lfsr	2,4
  7073  001B4A  5003               	movf	i2fputc@fp^0,w,c
  7074  001B4C  26D9               	addwf	fsr2l,f,c
  7075  001B4E  5004               	movf	(i2fputc@fp+1)^0,w,c
  7076  001B50  22DA               	addwfc	fsr2h,f,c
  7077  001B52  50DE               	movf	postinc2,w,c
  7078  001B54  10DE               	iorwf	postinc2,w,c
  7079  001B56  B4D8               	btfsc	status,2,c
  7080  001B58  EFB0  F00D         	goto	i2u261_41
  7081  001B5C  EFB2  F00D         	goto	i2u261_40
  7082  001B60                     i2u261_41:
  7083  001B60  EFCD  F00D         	goto	i2l3050
  7084  001B64                     i2u261_40:
  7085  001B64  EE20 F004          	lfsr	2,4
  7086  001B68  5003               	movf	i2fputc@fp^0,w,c
  7087  001B6A  26D9               	addwf	fsr2l,f,c
  7088  001B6C  5004               	movf	(i2fputc@fp+1)^0,w,c
  7089  001B6E  22DA               	addwfc	fsr2h,f,c
  7090  001B70  EE10 F002          	lfsr	1,2
  7091  001B74  5003               	movf	i2fputc@fp^0,w,c
  7092  001B76  26E1               	addwf	fsr1l,f,c
  7093  001B78  5004               	movf	(i2fputc@fp+1)^0,w,c
  7094  001B7A  22E2               	addwfc	fsr1h,f,c
  7095  001B7C  50DE               	movf	postinc2,w,c
  7096  001B7E  5CE6               	subwf	postinc1,w,c
  7097  001B80  50E6               	movf	postinc1,w,c
  7098  001B82  0A80               	xorlw	128
  7099  001B84  6E09               	movwf	(??i2_fputc+4)^0,c
  7100  001B86  50DE               	movf	postinc2,w,c
  7101  001B88  0A80               	xorlw	128
  7102  001B8A  5809               	subwfb	(??i2_fputc+4)^0,w,c
  7103  001B8C  B0D8               	btfsc	status,0,c
  7104  001B8E  EFCB  F00D         	goto	i2u262_41
  7105  001B92  EFCD  F00D         	goto	i2u262_40
  7106  001B96                     i2u262_41:
  7107  001B96  EFF0  F00D         	goto	i2l1009
  7108  001B9A                     i2u262_40:
  7109  001B9A                     i2l3050:
  7110  001B9A  EE20 F002          	lfsr	2,2
  7111  001B9E  5003               	movf	i2fputc@fp^0,w,c
  7112  001BA0  26D9               	addwf	fsr2l,f,c
  7113  001BA2  5004               	movf	(i2fputc@fp+1)^0,w,c
  7114  001BA4  22DA               	addwfc	fsr2h,f,c
  7115  001BA6  CFDE F005          	movff	postinc2,??i2_fputc
  7116  001BAA  CFDD F006          	movff	postdec2,??i2_fputc+1
  7117  001BAE  C003  FFD9         	movff	i2fputc@fp,fsr2l
  7118  001BB2  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  7119  001BB6  CFDE F007          	movff	postinc2,??i2_fputc+2
  7120  001BBA  CFDD F008          	movff	postdec2,??i2_fputc+3
  7121  001BBE  5005               	movf	??i2_fputc^0,w,c
  7122  001BC0  2407               	addwf	(??i2_fputc+2)^0,w,c
  7123  001BC2  6ED9               	movwf	fsr2l,c
  7124  001BC4  5006               	movf	(??i2_fputc+1)^0,w,c
  7125  001BC6  2008               	addwfc	(??i2_fputc+3)^0,w,c
  7126  001BC8  6EDA               	movwf	fsr2h,c
  7127  001BCA  C001  FFDF         	movff	i2fputc@c,indf2
  7128  001BCE  EE20 F002          	lfsr	2,2
  7129  001BD2  5003               	movf	i2fputc@fp^0,w,c
  7130  001BD4  26D9               	addwf	fsr2l,f,c
  7131  001BD6  5004               	movf	(i2fputc@fp+1)^0,w,c
  7132  001BD8  22DA               	addwfc	fsr2h,f,c
  7133  001BDA  2ADE               	incf	postinc2,f,c
  7134  001BDC  0E00               	movlw	0
  7135  001BDE  22DD               	addwfc	postdec2,f,c
  7136  001BE0                     i2l1009:
  7137  001BE0  0012               	return		;funcret
  7138  001BE2                     __end_ofi2_fputc:
  7139                           	callstack 0
  7140                           
  7141 ;; *************** function i2_putch *****************
  7142 ;; Defined at:
  7143 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  c               1    wreg     unsigned char 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  c               1  (no storage) unsigned char 
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		wreg
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7157 ;;      Params:         0       0       0       0       0       0       0       0       0
  7158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7160 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7161 ;;Total ram usage:        0 bytes
  7162 ;; Hardware stack levels used: 1
  7163 ;; This function calls:
  7164 ;;		Nothing
  7165 ;; This function is called by:
  7166 ;;		i2_fputc
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           
  7170                           	psect	text50
  7171  00290A                     __ptext50:
  7172                           	callstack 0
  7173  00290A                     i2_putch:
  7174                           	callstack 14
  7175  00290A  0012               	return		;funcret
  7176  00290C                     __end_ofi2_putch:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function i2_abs *****************
  7180 ;; Defined at:
  7181 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  a               2   18[COMRAM] int 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;		None
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  2   18[COMRAM] int 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7195 ;;      Params:         2       0       0       0       0       0       0       0       0
  7196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7197 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7198 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7199 ;;Total ram usage:        4 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		i2_dtoa
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           	psect	text51
  7209  0025E6                     __ptext51:
  7210                           	callstack 0
  7211  0025E6                     i2_abs:
  7212                           	callstack 14
  7213  0025E6  BE14               	btfsc	(i2abs@a+1)^0,7,c
  7214  0025E8  EF00  F013         	goto	i2u288_40
  7215  0025EC  5014               	movf	(i2abs@a+1)^0,w,c
  7216  0025EE  E106               	bnz	i2u288_41
  7217  0025F0  0413               	decf	i2abs@a^0,w,c
  7218  0025F2  B0D8               	btfsc	status,0,c
  7219  0025F4  EFFE  F012         	goto	i2u288_41
  7220  0025F8  EF00  F013         	goto	i2u288_40
  7221  0025FC                     i2u288_41:
  7222  0025FC  EF0E  F013         	goto	i2l994
  7223  002600                     i2u288_40:
  7224  002600  C013  F015         	movff	i2abs@a,??i2_abs
  7225  002604  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  7226  002608  1E15               	comf	??i2_abs^0,f,c
  7227  00260A  1E16               	comf	(??i2_abs+1)^0,f,c
  7228  00260C  4A15               	infsnz	??i2_abs^0,f,c
  7229  00260E  2A16               	incf	(??i2_abs+1)^0,f,c
  7230  002610  C015  F013         	movff	??i2_abs,?i2_abs
  7231  002614  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  7232  002618  EF12  F013         	goto	i2l997
  7233  00261C                     i2l994:
  7234  00261C  C013  F013         	movff	i2abs@a,?i2_abs
  7235  002620  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  7236  002624                     i2l997:
  7237  002624  0012               	return		;funcret
  7238  002626                     __end_ofi2_abs:
  7239                           	callstack 0
  7240                           
  7241 ;; *************** function i2___aomod *****************
  7242 ;; Defined at:
  7243 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  dividend        8    0[COMRAM] long long 
  7246 ;;  divisor         8    8[COMRAM] long long 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  sign            1   17[COMRAM] unsigned char 
  7249 ;;  counter         1   16[COMRAM] unsigned char 
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  8    0[COMRAM] long long 
  7252 ;; Registers used:
  7253 ;;		wreg, status,2, status,0
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7259 ;;      Params:        16       0       0       0       0       0       0       0       0
  7260 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7262 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7263 ;;Total ram usage:       18 bytes
  7264 ;; Hardware stack levels used: 1
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		i2_dtoa
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text52
  7273  001610                     __ptext52:
  7274                           	callstack 0
  7275  001610                     i2___aomod:
  7276                           	callstack 14
  7277  001610  0E00               	movlw	0
  7278  001612  6E12               	movwf	i2___aomod@sign^0,c
  7279  001614  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
  7280  001616  EF11  F00B         	goto	i2u278_40
  7281  00161A  EF0F  F00B         	goto	i2u278_41
  7282  00161E                     i2u278_41:
  7283  00161E  EF23  F00B         	goto	i2l3156
  7284  001622                     i2u278_40:
  7285  001622  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  7286  001624  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  7287  001626  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  7288  001628  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  7289  00162A  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  7290  00162C  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  7291  00162E  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  7292  001630  6C01               	negf	i2___aomod@dividend^0,c
  7293  001632  0E00               	movlw	0
  7294  001634  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  7295  001636  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  7296  001638  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  7297  00163A  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  7298  00163C  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  7299  00163E  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  7300  001640  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  7301  001642  0E01               	movlw	1
  7302  001644  6E12               	movwf	i2___aomod@sign^0,c
  7303  001646                     i2l3156:
  7304  001646  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
  7305  001648  EF2A  F00B         	goto	i2u279_40
  7306  00164C  EF28  F00B         	goto	i2u279_41
  7307  001650                     i2u279_41:
  7308  001650  EF3A  F00B         	goto	i2l3160
  7309  001654                     i2u279_40:
  7310  001654  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  7311  001656  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  7312  001658  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  7313  00165A  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  7314  00165C  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  7315  00165E  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  7316  001660  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  7317  001662  6C09               	negf	i2___aomod@divisor^0,c
  7318  001664  0E00               	movlw	0
  7319  001666  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  7320  001668  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  7321  00166A  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  7322  00166C  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  7323  00166E  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  7324  001670  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  7325  001672  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  7326  001674                     i2l3160:
  7327  001674  5009               	movf	i2___aomod@divisor^0,w,c
  7328  001676  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  7329  001678  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  7330  00167A  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  7331  00167C  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  7332  00167E  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  7333  001680  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  7334  001682  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  7335  001684  B4D8               	btfsc	status,2,c
  7336  001686  EF47  F00B         	goto	i2u280_41
  7337  00168A  EF49  F00B         	goto	i2u280_40
  7338  00168E                     i2u280_41:
  7339  00168E  EF91  F00B         	goto	i2l3176
  7340  001692                     i2u280_40:
  7341  001692  0E01               	movlw	1
  7342  001694  6E11               	movwf	i2___aomod@counter^0,c
  7343  001696  EF57  F00B         	goto	i2l3166
  7344  00169A                     i2l3164:
  7345  00169A  90D8               	bcf	status,0,c
  7346  00169C  3609               	rlcf	i2___aomod@divisor^0,f,c
  7347  00169E  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  7348  0016A0  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  7349  0016A2  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  7350  0016A4  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  7351  0016A6  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  7352  0016A8  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  7353  0016AA  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  7354  0016AC  2A11               	incf	i2___aomod@counter^0,f,c
  7355  0016AE                     i2l3166:
  7356  0016AE  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  7357  0016B0  EF5C  F00B         	goto	i2u281_41
  7358  0016B4  EF5E  F00B         	goto	i2u281_40
  7359  0016B8                     i2u281_41:
  7360  0016B8  EF4D  F00B         	goto	i2l3164
  7361  0016BC                     i2u281_40:
  7362  0016BC                     i2l3168:
  7363  0016BC  5009               	movf	i2___aomod@divisor^0,w,c
  7364  0016BE  5C01               	subwf	i2___aomod@dividend^0,w,c
  7365  0016C0  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  7366  0016C2  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  7367  0016C4  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  7368  0016C6  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  7369  0016C8  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  7370  0016CA  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  7371  0016CC  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  7372  0016CE  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  7373  0016D0  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  7374  0016D2  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  7375  0016D4  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  7376  0016D6  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  7377  0016D8  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  7378  0016DA  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  7379  0016DC  A0D8               	btfss	status,0,c
  7380  0016DE  EF73  F00B         	goto	i2u282_41
  7381  0016E2  EF75  F00B         	goto	i2u282_40
  7382  0016E6                     i2u282_41:
  7383  0016E6  EF85  F00B         	goto	i2l3172
  7384  0016EA                     i2u282_40:
  7385  0016EA  5009               	movf	i2___aomod@divisor^0,w,c
  7386  0016EC  5E01               	subwf	i2___aomod@dividend^0,f,c
  7387  0016EE  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  7388  0016F0  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  7389  0016F2  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  7390  0016F4  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  7391  0016F6  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  7392  0016F8  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  7393  0016FA  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  7394  0016FC  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  7395  0016FE  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  7396  001700  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  7397  001702  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  7398  001704  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  7399  001706  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  7400  001708  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  7401  00170A                     i2l3172:
  7402  00170A  90D8               	bcf	status,0,c
  7403  00170C  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  7404  00170E  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  7405  001710  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  7406  001712  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  7407  001714  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  7408  001716  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  7409  001718  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  7410  00171A  3209               	rrcf	i2___aomod@divisor^0,f,c
  7411  00171C  2E11               	decfsz	i2___aomod@counter^0,f,c
  7412  00171E  EF5E  F00B         	goto	i2l3168
  7413  001722                     i2l3176:
  7414  001722  5012               	movf	i2___aomod@sign^0,w,c
  7415  001724  B4D8               	btfsc	status,2,c
  7416  001726  EF97  F00B         	goto	i2u283_41
  7417  00172A  EF99  F00B         	goto	i2u283_40
  7418  00172E                     i2u283_41:
  7419  00172E  EFA9  F00B         	goto	i2l3180
  7420  001732                     i2u283_40:
  7421  001732  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  7422  001734  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  7423  001736  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  7424  001738  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  7425  00173A  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  7426  00173C  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  7427  00173E  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  7428  001740  6C01               	negf	i2___aomod@dividend^0,c
  7429  001742  0E00               	movlw	0
  7430  001744  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  7431  001746  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  7432  001748  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  7433  00174A  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  7434  00174C  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  7435  00174E  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  7436  001750  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  7437  001752                     i2l3180:
  7438  001752  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  7439  001756  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  7440  00175A  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  7441  00175E  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  7442  001762  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  7443  001766  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  7444  00176A  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  7445  00176E  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  7446  001772  0012               	return		;funcret
  7447  001774                     __end_ofi2___aomod:
  7448                           	callstack 0
  7449                           
  7450 ;; *************** function i2___aodiv *****************
  7451 ;; Defined at:
  7452 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  dividend        8    0[COMRAM] long long 
  7455 ;;  divisor         8    8[COMRAM] long long 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  quotient        8   18[COMRAM] long long 
  7458 ;;  sign            1   17[COMRAM] unsigned char 
  7459 ;;  counter         1   16[COMRAM] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  8    0[COMRAM] long long 
  7462 ;; Registers used:
  7463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7469 ;;      Params:        16       0       0       0       0       0       0       0       0
  7470 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7472 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7473 ;;Total ram usage:       26 bytes
  7474 ;; Hardware stack levels used: 1
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		i2_dtoa
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text53
  7483  001322                     __ptext53:
  7484                           	callstack 0
  7485  001322                     i2___aodiv:
  7486                           	callstack 14
  7487  001322  0E00               	movlw	0
  7488  001324  6E12               	movwf	i2___aodiv@sign^0,c
  7489  001326  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
  7490  001328  EF9A  F009         	goto	i2u271_40
  7491  00132C  EF98  F009         	goto	i2u271_41
  7492  001330                     i2u271_41:
  7493  001330  EFAC  F009         	goto	i2l3112
  7494  001334                     i2u271_40:
  7495  001334  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  7496  001336  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  7497  001338  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  7498  00133A  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  7499  00133C  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  7500  00133E  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  7501  001340  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  7502  001342  6C09               	negf	i2___aodiv@divisor^0,c
  7503  001344  0E00               	movlw	0
  7504  001346  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  7505  001348  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  7506  00134A  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  7507  00134C  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  7508  00134E  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  7509  001350  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  7510  001352  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  7511  001354  0E01               	movlw	1
  7512  001356  6E12               	movwf	i2___aodiv@sign^0,c
  7513  001358                     i2l3112:
  7514  001358  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
  7515  00135A  EFB3  F009         	goto	i2u272_40
  7516  00135E  EFB1  F009         	goto	i2u272_41
  7517  001362                     i2u272_41:
  7518  001362  EFC5  F009         	goto	i2l3118
  7519  001366                     i2u272_40:
  7520  001366  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  7521  001368  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  7522  00136A  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  7523  00136C  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  7524  00136E  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  7525  001370  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  7526  001372  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  7527  001374  6C01               	negf	i2___aodiv@dividend^0,c
  7528  001376  0E00               	movlw	0
  7529  001378  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  7530  00137A  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  7531  00137C  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  7532  00137E  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  7533  001380  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  7534  001382  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  7535  001384  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  7536  001386  0E01               	movlw	1
  7537  001388  1A12               	xorwf	i2___aodiv@sign^0,f,c
  7538  00138A                     i2l3118:
  7539  00138A  EE20  F013         	lfsr	2,i2___aodiv@quotient
  7540  00138E  0E07               	movlw	7
  7541  001390                     i2u273_41:
  7542  001390  6ADE               	clrf	postinc2,c
  7543  001392  06E8               	decf	wreg,f,c
  7544  001394  E2FD               	bc	i2u273_41
  7545  001396  5009               	movf	i2___aodiv@divisor^0,w,c
  7546  001398  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  7547  00139A  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  7548  00139C  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  7549  00139E  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  7550  0013A0  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  7551  0013A2  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  7552  0013A4  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  7553  0013A6  B4D8               	btfsc	status,2,c
  7554  0013A8  EFD8  F009         	goto	i2u274_41
  7555  0013AC  EFDA  F009         	goto	i2u274_40
  7556  0013B0                     i2u274_41:
  7557  0013B0  EF2C  F00A         	goto	i2l3140
  7558  0013B4                     i2u274_40:
  7559  0013B4  0E01               	movlw	1
  7560  0013B6  6E11               	movwf	i2___aodiv@counter^0,c
  7561  0013B8  EFE8  F009         	goto	i2l3126
  7562  0013BC                     i2l3124:
  7563  0013BC  90D8               	bcf	status,0,c
  7564  0013BE  3609               	rlcf	i2___aodiv@divisor^0,f,c
  7565  0013C0  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  7566  0013C2  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  7567  0013C4  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  7568  0013C6  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  7569  0013C8  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  7570  0013CA  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  7571  0013CC  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  7572  0013CE  2A11               	incf	i2___aodiv@counter^0,f,c
  7573  0013D0                     i2l3126:
  7574  0013D0  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  7575  0013D2  EFED  F009         	goto	i2u275_41
  7576  0013D6  EFEF  F009         	goto	i2u275_40
  7577  0013DA                     i2u275_41:
  7578  0013DA  EFDE  F009         	goto	i2l3124
  7579  0013DE                     i2u275_40:
  7580  0013DE                     i2l3128:
  7581  0013DE  90D8               	bcf	status,0,c
  7582  0013E0  3613               	rlcf	i2___aodiv@quotient^0,f,c
  7583  0013E2  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  7584  0013E4  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  7585  0013E6  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  7586  0013E8  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  7587  0013EA  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  7588  0013EC  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  7589  0013EE  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  7590  0013F0  5009               	movf	i2___aodiv@divisor^0,w,c
  7591  0013F2  5C01               	subwf	i2___aodiv@dividend^0,w,c
  7592  0013F4  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  7593  0013F6  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  7594  0013F8  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  7595  0013FA  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  7596  0013FC  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  7597  0013FE  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  7598  001400  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  7599  001402  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  7600  001404  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  7601  001406  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  7602  001408  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  7603  00140A  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  7604  00140C  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  7605  00140E  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  7606  001410  A0D8               	btfss	status,0,c
  7607  001412  EF0D  F00A         	goto	i2u276_41
  7608  001416  EF0F  F00A         	goto	i2u276_40
  7609  00141A                     i2u276_41:
  7610  00141A  EF20  F00A         	goto	i2l3136
  7611  00141E                     i2u276_40:
  7612  00141E  5009               	movf	i2___aodiv@divisor^0,w,c
  7613  001420  5E01               	subwf	i2___aodiv@dividend^0,f,c
  7614  001422  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  7615  001424  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  7616  001426  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  7617  001428  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  7618  00142A  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  7619  00142C  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  7620  00142E  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  7621  001430  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  7622  001432  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  7623  001434  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  7624  001436  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  7625  001438  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  7626  00143A  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  7627  00143C  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  7628  00143E  8013               	bsf	i2___aodiv@quotient^0,0,c
  7629  001440                     i2l3136:
  7630  001440  90D8               	bcf	status,0,c
  7631  001442  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  7632  001444  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  7633  001446  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  7634  001448  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  7635  00144A  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  7636  00144C  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  7637  00144E  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  7638  001450  3209               	rrcf	i2___aodiv@divisor^0,f,c
  7639  001452  2E11               	decfsz	i2___aodiv@counter^0,f,c
  7640  001454  EFEF  F009         	goto	i2l3128
  7641  001458                     i2l3140:
  7642  001458  5012               	movf	i2___aodiv@sign^0,w,c
  7643  00145A  B4D8               	btfsc	status,2,c
  7644  00145C  EF32  F00A         	goto	i2u277_41
  7645  001460  EF34  F00A         	goto	i2u277_40
  7646  001464                     i2u277_41:
  7647  001464  EF44  F00A         	goto	i2l3144
  7648  001468                     i2u277_40:
  7649  001468  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  7650  00146A  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  7651  00146C  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  7652  00146E  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  7653  001470  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  7654  001472  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  7655  001474  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  7656  001476  6C13               	negf	i2___aodiv@quotient^0,c
  7657  001478  0E00               	movlw	0
  7658  00147A  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  7659  00147C  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  7660  00147E  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  7661  001480  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  7662  001482  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  7663  001484  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  7664  001486  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  7665  001488                     i2l3144:
  7666  001488  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  7667  00148C  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  7668  001490  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  7669  001494  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  7670  001498  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  7671  00149C  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  7672  0014A0  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  7673  0014A4  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  7674  0014A8  0012               	return		;funcret
  7675  0014AA                     __end_ofi2___aodiv:
  7676                           	callstack 0
  7677                           
  7678 ;; *************** function i2_instr_wr *****************
  7679 ;; Defined at:
  7680 ;;		line 8 in file "lcd.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;  inst            1    wreg     unsigned char 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  inst            1    1[COMRAM] unsigned char 
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  1    wreg      void 
  7687 ;; Registers used:
  7688 ;;		wreg, cstack
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7694 ;;      Params:         0       0       0       0       0       0       0       0       0
  7695 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7697 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7698 ;;Total ram usage:        1 bytes
  7699 ;; Hardware stack levels used: 1
  7700 ;; Hardware stack levels required when called: 1
  7701 ;; This function calls:
  7702 ;;		i2_atraso_lcd
  7703 ;; This function is called by:
  7704 ;;		_printAttentionMessage
  7705 ;;		_printPlayingMessage
  7706 ;;		_printErrorMessage
  7707 ;;		_printSucessMessage
  7708 ;;		_printWinnerMessage
  7709 ;;		i2_printStartMessage
  7710 ;;		i2_inicializa
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text54
  7715  0028BE                     __ptext54:
  7716                           	callstack 0
  7717  0028BE                     i2_instr_wr:
  7718                           	callstack 17
  7719                           
  7720                           ;incstack = 0
  7721                           ;i2instr_wr@inst stored from wreg
  7722  0028BE  6E02               	movwf	i2instr_wr@inst^0,c
  7723  0028C0                     
  7724                           ;lcd.c: 9:     LATEbits.LATE1 = 1;
  7725  0028C0  828D               	bsf	141,1,c	;volatile
  7726                           
  7727                           ;lcd.c: 10:     LATEbits.LATE0 = 0;
  7728  0028C2  908D               	bcf	141,0,c	;volatile
  7729                           
  7730                           ;lcd.c: 11:     LATEbits.LATE2 = 0;
  7731  0028C4  948D               	bcf	141,2,c	;volatile
  7732  0028C6                     
  7733                           ;lcd.c: 12:     LATD = inst;
  7734  0028C6  C002  FF8C         	movff	i2instr_wr@inst,3980	;volatile
  7735  0028CA                     
  7736                           ;lcd.c: 13:     LATEbits.LATE1 = 0;
  7737  0028CA  928D               	bcf	141,1,c	;volatile
  7738  0028CC                     
  7739                           ;lcd.c: 14:     atraso_lcd();
  7740  0028CC  EC7C  F014         	call	i2_atraso_lcd	;wreg free
  7741  0028D0  0012               	return		;funcret
  7742  0028D2                     __end_ofi2_instr_wr:
  7743                           	callstack 0
  7744                           
  7745 ;; *************** function i2_escreve_texto *****************
  7746 ;; Defined at:
  7747 ;;		line 35 in file "lcd.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;  linha           2    2[COMRAM] PTR unsigned char 
  7750 ;;		 -> linha2(16), linha1(16), 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;  i               2    4[COMRAM] int 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7762 ;;      Params:         2       0       0       0       0       0       0       0       0
  7763 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7765 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7766 ;;Total ram usage:        4 bytes
  7767 ;; Hardware stack levels used: 1
  7768 ;; Hardware stack levels required when called: 2
  7769 ;; This function calls:
  7770 ;;		i2_dado_wr
  7771 ;; This function is called by:
  7772 ;;		_printAttentionMessage
  7773 ;;		_printPlayingMessage
  7774 ;;		_printErrorMessage
  7775 ;;		_printSucessMessage
  7776 ;;		_printWinnerMessage
  7777 ;;		i2_printStartMessage
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           	psect	text55
  7782  002662                     __ptext55:
  7783                           	callstack 0
  7784  002662                     i2_escreve_texto:
  7785                           	callstack 16
  7786  002662                     
  7787                           ;lcd.c: 36:     for (int i = 0; i < 16; i++) {
  7788  002662  0E00               	movlw	0
  7789  002664  6E06               	movwf	(i2escreve_texto@i+1)^0,c
  7790  002666  0E00               	movlw	0
  7791  002668  6E05               	movwf	i2escreve_texto@i^0,c
  7792  00266A                     i2l2650:
  7793                           
  7794                           ;lcd.c: 37:         dado_wr(linha[i]);
  7795  00266A  5005               	movf	i2escreve_texto@i^0,w,c
  7796  00266C  2403               	addwf	i2escreve_texto@linha^0,w,c
  7797  00266E  6ED9               	movwf	fsr2l,c
  7798  002670  5006               	movf	(i2escreve_texto@i+1)^0,w,c
  7799  002672  2004               	addwfc	(i2escreve_texto@linha+1)^0,w,c
  7800  002674  6EDA               	movwf	fsr2h,c
  7801  002676  50DF               	movf	indf2,w,c
  7802  002678  EC69  F014         	call	i2_dado_wr
  7803  00267C                     
  7804                           ;lcd.c: 38:     }
  7805  00267C  4A05               	infsnz	i2escreve_texto@i^0,f,c
  7806  00267E  2A06               	incf	(i2escreve_texto@i+1)^0,f,c
  7807  002680  BE06               	btfsc	(i2escreve_texto@i+1)^0,7,c
  7808  002682  EF4C  F013         	goto	i2u229_41
  7809  002686  5006               	movf	(i2escreve_texto@i+1)^0,w,c
  7810  002688  E109               	bnz	i2u229_40
  7811  00268A  0E10               	movlw	16
  7812  00268C  5C05               	subwf	i2escreve_texto@i^0,w,c
  7813  00268E  A0D8               	btfss	status,0,c
  7814  002690  EF4C  F013         	goto	i2u229_41
  7815  002694  EF4E  F013         	goto	i2u229_40
  7816  002698                     i2u229_41:
  7817  002698  EF35  F013         	goto	i2l2650
  7818  00269C                     i2u229_40:
  7819  00269C  0012               	return		;funcret
  7820  00269E                     __end_ofi2_escreve_texto:
  7821                           	callstack 0
  7822                           
  7823 ;; *************** function i2_dado_wr *****************
  7824 ;; Defined at:
  7825 ;;		line 17 in file "lcd.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  texto           1    wreg     unsigned char 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  texto           1    1[COMRAM] unsigned char 
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  1    wreg      void 
  7832 ;; Registers used:
  7833 ;;		wreg, cstack
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7839 ;;      Params:         0       0       0       0       0       0       0       0       0
  7840 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7842 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7843 ;;Total ram usage:        1 bytes
  7844 ;; Hardware stack levels used: 1
  7845 ;; Hardware stack levels required when called: 1
  7846 ;; This function calls:
  7847 ;;		i2_atraso_lcd
  7848 ;; This function is called by:
  7849 ;;		i2_escreve_texto
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text56
  7854  0028D2                     __ptext56:
  7855                           	callstack 0
  7856  0028D2                     i2_dado_wr:
  7857                           	callstack 16
  7858                           
  7859                           ;incstack = 0
  7860                           ;i2dado_wr@texto stored from wreg
  7861  0028D2  6E02               	movwf	i2dado_wr@texto^0,c
  7862  0028D4                     
  7863                           ;lcd.c: 18:     LATEbits.LATE1 = 1;
  7864  0028D4  828D               	bsf	141,1,c	;volatile
  7865                           
  7866                           ;lcd.c: 19:     LATEbits.LATE0 = 1;
  7867  0028D6  808D               	bsf	141,0,c	;volatile
  7868                           
  7869                           ;lcd.c: 20:     LATEbits.LATE2 = 0;
  7870  0028D8  948D               	bcf	141,2,c	;volatile
  7871  0028DA                     
  7872                           ;lcd.c: 21:     LATD = texto;
  7873  0028DA  C002  FF8C         	movff	i2dado_wr@texto,3980	;volatile
  7874  0028DE                     
  7875                           ;lcd.c: 22:     LATEbits.LATE1 = 0;
  7876  0028DE  928D               	bcf	141,1,c	;volatile
  7877  0028E0                     
  7878                           ;lcd.c: 23:     atraso_lcd();
  7879  0028E0  EC7C  F014         	call	i2_atraso_lcd	;wreg free
  7880  0028E4  0012               	return		;funcret
  7881  0028E6                     __end_ofi2_dado_wr:
  7882                           	callstack 0
  7883                           
  7884 ;; *************** function i2_atraso_lcd *****************
  7885 ;; Defined at:
  7886 ;;		line 4 in file "lcd.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;		None
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1    wreg      void 
  7893 ;; Registers used:
  7894 ;;		wreg
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7902 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7903 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7904 ;;Total ram usage:        1 bytes
  7905 ;; Hardware stack levels used: 1
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		i2_instr_wr
  7910 ;;		i2_dado_wr
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text57
  7915  0028F8                     __ptext57:
  7916                           	callstack 0
  7917  0028F8                     i2_atraso_lcd:
  7918                           	callstack 17
  7919  0028F8                     
  7920                           ;lcd.c: 5:     _delay((unsigned long)((3)*(20000000/4000.0)));
  7921  0028F8  0E14               	movlw	20
  7922  0028FA  6E01               	movwf	??i2_atraso_lcd^0,c
  7923  0028FC  0E7A               	movlw	122
  7924  0028FE                     i2u369_47:
  7925  0028FE  2EE8               	decfsz	wreg,f,c
  7926  002900  D7FE               	bra	i2u369_47
  7927  002902  2E01               	decfsz	??i2_atraso_lcd^0,f,c
  7928  002904  D7FC               	bra	i2u369_47
  7929  002906  0012               	return		;funcret
  7930  002908                     __end_ofi2_atraso_lcd:
  7931                           	callstack 0
  7932                           
  7933 ;; *************** function i2_clear *****************
  7934 ;; Defined at:
  7935 ;;		line 41 in file "lcd.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  linha           2    0[COMRAM] PTR unsigned char 
  7938 ;;		 -> linha2(16), linha1(16), 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  i               2    2[COMRAM] int 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      void 
  7943 ;; Registers used:
  7944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7950 ;;      Params:         2       0       0       0       0       0       0       0       0
  7951 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7953 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7954 ;;Total ram usage:        4 bytes
  7955 ;; Hardware stack levels used: 1
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_printAttentionMessage
  7960 ;;		_printPlayingMessage
  7961 ;;		_printErrorMessage
  7962 ;;		_printSucessMessage
  7963 ;;		_printWinnerMessage
  7964 ;;		i2_printStartMessage
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text58
  7969  0026D8                     __ptext58:
  7970                           	callstack 0
  7971  0026D8                     i2_clear:
  7972                           	callstack 18
  7973  0026D8                     
  7974                           ;lcd.c: 41: void clear(char linha[16]);lcd.c: 42: {;lcd.c: 43:     for (int i = 0; i < 1
      +                          6; i++) {
  7975  0026D8  0E00               	movlw	0
  7976  0026DA  6E04               	movwf	(i2clear@i+1)^0,c
  7977  0026DC  0E00               	movlw	0
  7978  0026DE  6E03               	movwf	i2clear@i^0,c
  7979  0026E0                     i2l2662:
  7980                           
  7981                           ;lcd.c: 44:         linha[i] = 0;
  7982  0026E0  5003               	movf	i2clear@i^0,w,c
  7983  0026E2  2401               	addwf	i2clear@linha^0,w,c
  7984  0026E4  6ED9               	movwf	fsr2l,c
  7985  0026E6  5004               	movf	(i2clear@i+1)^0,w,c
  7986  0026E8  2002               	addwfc	(i2clear@linha+1)^0,w,c
  7987  0026EA  6EDA               	movwf	fsr2h,c
  7988  0026EC  0E00               	movlw	0
  7989  0026EE  6EDF               	movwf	indf2,c
  7990  0026F0                     
  7991                           ;lcd.c: 45:     }
  7992  0026F0  4A03               	infsnz	i2clear@i^0,f,c
  7993  0026F2  2A04               	incf	(i2clear@i+1)^0,f,c
  7994  0026F4  BE04               	btfsc	(i2clear@i+1)^0,7,c
  7995  0026F6  EF86  F013         	goto	i2u230_41
  7996  0026FA  5004               	movf	(i2clear@i+1)^0,w,c
  7997  0026FC  E109               	bnz	i2u230_40
  7998  0026FE  0E10               	movlw	16
  7999  002700  5C03               	subwf	i2clear@i^0,w,c
  8000  002702  A0D8               	btfss	status,0,c
  8001  002704  EF86  F013         	goto	i2u230_41
  8002  002708  EF88  F013         	goto	i2u230_40
  8003  00270C                     i2u230_41:
  8004  00270C  EF70  F013         	goto	i2l2662
  8005  002710                     i2u230_40:
  8006  002710  0012               	return		;funcret
  8007  002712                     __end_ofi2_clear:
  8008                           	callstack 0
  8009                           
  8010                           	psect	rparam
  8011  0000                     
  8012                           	psect	temp
  8013  00005F                     btemp:
  8014                           	callstack 0
  8015  00005F                     	ds	1
  8016  0000                     int$flags	set	btemp
  8017  0000                     wtemp8	set	btemp+1
  8018  0000                     ttemp5	set	btemp+1
  8019  0000                     ttemp6	set	btemp+4
  8020  0000                     ttemp7	set	btemp+8
  8021                           
  8022                           	psect	idloc
  8023                           
  8024                           ;Config register IDLOC0 @ 0x200000
  8025                           ;	unspecified, using default values
  8026  200000                     	org	2097152
  8027  200000  FF                 	db	255
  8028                           
  8029                           ;Config register IDLOC1 @ 0x200001
  8030                           ;	unspecified, using default values
  8031  200001                     	org	2097153
  8032  200001  FF                 	db	255
  8033                           
  8034                           ;Config register IDLOC2 @ 0x200002
  8035                           ;	unspecified, using default values
  8036  200002                     	org	2097154
  8037  200002  FF                 	db	255
  8038                           
  8039                           ;Config register IDLOC3 @ 0x200003
  8040                           ;	unspecified, using default values
  8041  200003                     	org	2097155
  8042  200003  FF                 	db	255
  8043                           
  8044                           ;Config register IDLOC4 @ 0x200004
  8045                           ;	unspecified, using default values
  8046  200004                     	org	2097156
  8047  200004  FF                 	db	255
  8048                           
  8049                           ;Config register IDLOC5 @ 0x200005
  8050                           ;	unspecified, using default values
  8051  200005                     	org	2097157
  8052  200005  FF                 	db	255
  8053                           
  8054                           ;Config register IDLOC6 @ 0x200006
  8055                           ;	unspecified, using default values
  8056  200006                     	org	2097158
  8057  200006  FF                 	db	255
  8058                           
  8059                           ;Config register IDLOC7 @ 0x200007
  8060                           ;	unspecified, using default values
  8061  200007                     	org	2097159
  8062  200007  FF                 	db	255
  8063                           
  8064                           	psect	config
  8065                           
  8066                           ;Config register CONFIG1L @ 0x300000
  8067                           ;	unspecified, using default values
  8068                           ;	PLL Prescaler Selection bits
  8069                           ;	PLLDIV = 0x0, unprogrammed default
  8070                           ;	System Clock Postscaler Selection bits
  8071                           ;	CPUDIV = 0x0, unprogrammed default
  8072                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8073                           ;	USBDIV = 0x0, unprogrammed default
  8074  300000                     	org	3145728
  8075  300000  00                 	db	0
  8076                           
  8077                           ;Config register CONFIG1H @ 0x300001
  8078                           ;	Oscillator Selection bits
  8079                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8080                           ;	Fail-Safe Clock Monitor Enable bit
  8081                           ;	FCMEN = 0x0, unprogrammed default
  8082                           ;	Internal/External Oscillator Switchover bit
  8083                           ;	IESO = 0x0, unprogrammed default
  8084  300001                     	org	3145729
  8085  300001  09                 	db	9
  8086                           
  8087                           ;Config register CONFIG2L @ 0x300002
  8088                           ;	unspecified, using default values
  8089                           ;	Power-up Timer Enable bit
  8090                           ;	PWRT = 0x1, unprogrammed default
  8091                           ;	Brown-out Reset Enable bits
  8092                           ;	BOR = 0x3, unprogrammed default
  8093                           ;	Brown-out Reset Voltage bits
  8094                           ;	BORV = 0x3, unprogrammed default
  8095                           ;	USB Voltage Regulator Enable bit
  8096                           ;	VREGEN = 0x0, unprogrammed default
  8097  300002                     	org	3145730
  8098  300002  1F                 	db	31
  8099                           
  8100                           ;Config register CONFIG2H @ 0x300003
  8101                           ;	Watchdog Timer Enable bit
  8102                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8103                           ;	Watchdog Timer Postscale Select bits
  8104                           ;	WDTPS = 0xF, unprogrammed default
  8105  300003                     	org	3145731
  8106  300003  1E                 	db	30
  8107                           
  8108                           ; Padding undefined space
  8109  300004                     	org	3145732
  8110  300004  FF                 	db	255
  8111                           
  8112                           ;Config register CONFIG3H @ 0x300005
  8113                           ;	CCP2 MUX bit
  8114                           ;	CCP2MX = 0x1, unprogrammed default
  8115                           ;	PORTB A/D Enable bit
  8116                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8117                           ;	Low-Power Timer 1 Oscillator Enable bit
  8118                           ;	LPT1OSC = 0x0, unprogrammed default
  8119                           ;	MCLR Pin Enable bit
  8120                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8121  300005                     	org	3145733
  8122  300005  01                 	db	1
  8123                           
  8124                           ;Config register CONFIG4L @ 0x300006
  8125                           ;	unspecified, using default values
  8126                           ;	Stack Full/Underflow Reset Enable bit
  8127                           ;	STVREN = 0x1, unprogrammed default
  8128                           ;	Single-Supply ICSP Enable bit
  8129                           ;	LVP = 0x1, unprogrammed default
  8130                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8131                           ;	ICPRT = 0x0, unprogrammed default
  8132                           ;	Extended Instruction Set Enable bit
  8133                           ;	XINST = 0x0, unprogrammed default
  8134                           ;	Background Debugger Enable bit
  8135                           ;	DEBUG = 0x1, unprogrammed default
  8136  300006                     	org	3145734
  8137  300006  85                 	db	133
  8138                           
  8139                           ; Padding undefined space
  8140  300007                     	org	3145735
  8141  300007  FF                 	db	255
  8142                           
  8143                           ;Config register CONFIG5L @ 0x300008
  8144                           ;	unspecified, using default values
  8145                           ;	Code Protection bit
  8146                           ;	CP0 = 0x1, unprogrammed default
  8147                           ;	Code Protection bit
  8148                           ;	CP1 = 0x1, unprogrammed default
  8149                           ;	Code Protection bit
  8150                           ;	CP2 = 0x1, unprogrammed default
  8151                           ;	Code Protection bit
  8152                           ;	CP3 = 0x1, unprogrammed default
  8153  300008                     	org	3145736
  8154  300008  0F                 	db	15
  8155                           
  8156                           ;Config register CONFIG5H @ 0x300009
  8157                           ;	unspecified, using default values
  8158                           ;	Boot Block Code Protection bit
  8159                           ;	CPB = 0x1, unprogrammed default
  8160                           ;	Data EEPROM Code Protection bit
  8161                           ;	CPD = 0x1, unprogrammed default
  8162  300009                     	org	3145737
  8163  300009  C0                 	db	192
  8164                           
  8165                           ;Config register CONFIG6L @ 0x30000A
  8166                           ;	unspecified, using default values
  8167                           ;	Write Protection bit
  8168                           ;	WRT0 = 0x1, unprogrammed default
  8169                           ;	Write Protection bit
  8170                           ;	WRT1 = 0x1, unprogrammed default
  8171                           ;	Write Protection bit
  8172                           ;	WRT2 = 0x1, unprogrammed default
  8173                           ;	Write Protection bit
  8174                           ;	WRT3 = 0x1, unprogrammed default
  8175  30000A                     	org	3145738
  8176  30000A  0F                 	db	15
  8177                           
  8178                           ;Config register CONFIG6H @ 0x30000B
  8179                           ;	unspecified, using default values
  8180                           ;	Configuration Register Write Protection bit
  8181                           ;	WRTC = 0x1, unprogrammed default
  8182                           ;	Boot Block Write Protection bit
  8183                           ;	WRTB = 0x1, unprogrammed default
  8184                           ;	Data EEPROM Write Protection bit
  8185                           ;	WRTD = 0x1, unprogrammed default
  8186  30000B                     	org	3145739
  8187  30000B  E0                 	db	224
  8188                           
  8189                           ;Config register CONFIG7L @ 0x30000C
  8190                           ;	unspecified, using default values
  8191                           ;	Table Read Protection bit
  8192                           ;	EBTR0 = 0x1, unprogrammed default
  8193                           ;	Table Read Protection bit
  8194                           ;	EBTR1 = 0x1, unprogrammed default
  8195                           ;	Table Read Protection bit
  8196                           ;	EBTR2 = 0x1, unprogrammed default
  8197                           ;	Table Read Protection bit
  8198                           ;	EBTR3 = 0x1, unprogrammed default
  8199  30000C                     	org	3145740
  8200  30000C  0F                 	db	15
  8201                           
  8202                           ;Config register CONFIG7H @ 0x30000D
  8203                           ;	unspecified, using default values
  8204                           ;	Boot Block Table Read Protection bit
  8205                           ;	EBTRB = 0x1, unprogrammed default
  8206  30000D                     	org	3145741
  8207  30000D  40                 	db	64
  8208                           tosu	equ	0xFFF
  8209                           tosh	equ	0xFFE
  8210                           tosl	equ	0xFFD
  8211                           stkptr	equ	0xFFC
  8212                           pclatu	equ	0xFFB
  8213                           pclath	equ	0xFFA
  8214                           pcl	equ	0xFF9
  8215                           tblptru	equ	0xFF8
  8216                           tblptrh	equ	0xFF7
  8217                           tblptrl	equ	0xFF6
  8218                           tablat	equ	0xFF5
  8219                           prodh	equ	0xFF4
  8220                           prodl	equ	0xFF3
  8221                           indf0	equ	0xFEF
  8222                           postinc0	equ	0xFEE
  8223                           postdec0	equ	0xFED
  8224                           preinc0	equ	0xFEC
  8225                           plusw0	equ	0xFEB
  8226                           fsr0h	equ	0xFEA
  8227                           fsr0l	equ	0xFE9
  8228                           wreg	equ	0xFE8
  8229                           indf1	equ	0xFE7
  8230                           postinc1	equ	0xFE6
  8231                           postdec1	equ	0xFE5
  8232                           preinc1	equ	0xFE4
  8233                           plusw1	equ	0xFE3
  8234                           fsr1h	equ	0xFE2
  8235                           fsr1l	equ	0xFE1
  8236                           bsr	equ	0xFE0
  8237                           indf2	equ	0xFDF
  8238                           postinc2	equ	0xFDE
  8239                           postdec2	equ	0xFDD
  8240                           preinc2	equ	0xFDC
  8241                           plusw2	equ	0xFDB
  8242                           fsr2h	equ	0xFDA
  8243                           fsr2l	equ	0xFD9
  8244                           status	equ	0xFD8

Data Sizes:
    Strings     94
    Constant    0
    Data        0
    BSS         107
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160     96     128
    BANK1           256     45     118
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> linha2(BANK1[16]), linha1(BANK0[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[1]), STR_11(CODE[15]), STR_10(CODE[1]), STR_9(CODE[11]), 
		 -> STR_8(CODE[1]), STR_7(CODE[14]), STR_6(CODE[9]), STR_5(CODE[8]), 
		 -> STR_4(CODE[1]), STR_3(CODE[8]), STR_2(CODE[17]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[1]), STR_11(CODE[15]), STR_10(CODE[1]), STR_9(CODE[11]), 
		 -> STR_8(CODE[1]), STR_7(CODE[14]), STR_6(CODE[9]), STR_5(CODE[8]), 
		 -> STR_4(CODE[1]), STR_3(CODE[8]), STR_2(CODE[17]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[1]), STR_11(CODE[15]), STR_10(CODE[1]), STR_9(CODE[11]), 
		 -> STR_8(CODE[1]), STR_7(CODE[14]), STR_6(CODE[9]), STR_5(CODE[8]), 
		 -> STR_4(CODE[1]), STR_3(CODE[8]), STR_2(CODE[17]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S670_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK0[16]), 

    clear@linha	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK0[16]), 

    escreve_texto@linha	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK0[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupcao in COMRAM

    _interrupcao->_checkPlayerInput
    _initGame->_printPlayingMessage
    _generateGameSequence->___awmod
    _rand->___lmul
    ___awmod->_rand
    _checkPlayerInput->_printErrorMessage
    _checkPlayerInput->_printSucessMessage
    _checkPlayerInput->_printWinnerMessage
    i2_inicializa->i2_instr_wr
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_instr_wr->i2_atraso_lcd
    i2_escreve_texto->i2_dado_wr
    i2_dado_wr->i2_atraso_lcd

Critical Paths under _main in BANK0

    _main->_printStartMessage
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _inicializa->_instr_wr
    _instr_wr->_atraso_lcd
    _escreve_texto->_dado_wr
    _dado_wr->_atraso_lcd

Critical Paths under _interrupcao in BANK0

    _interrupcao->_checkPlayerInput
    _initGame->_printPlayingMessage
    _checkPlayerInput->_printPlayingMessage
    i2_printStartMessage->i2_sprintf
    _printWinnerMessage->i2_sprintf
    _printSucessMessage->i2_sprintf
    _printPlayingMessage->i2_sprintf
    _printErrorMessage->i2_sprintf
    _printAttentionMessage->i2_sprintf

Critical Paths under _main in BANK1

    _printStartMessage->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5   11618
                                             38 BANK1      7     2      5
                   _EEPROM_WriteByte
                  _printStartMessage
                           _setupInt
                          _setupTmr0
 ---------------------------------------------------------------------------------
 (1) _setupTmr0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupInt                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printStartMessage                                    1     1      0   11375
                                             95 BANK0      1     1      0
                    _EEPROM_ReadByte
                              _clear
                      _escreve_texto
                         _inicializa
                           _instr_wr
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    9769
                                             24 BANK1     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7976
                                             16 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7458
                                              0 BANK1     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             59 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             48 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             32 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             41 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             32 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             50 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             32 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             32 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _inicializa                                           0     0      0      22
                           _instr_wr
 ---------------------------------------------------------------------------------
 (2) _instr_wr                                             1     1      0      22
                                             33 BANK0      1     1      0
                         _atraso_lcd
 ---------------------------------------------------------------------------------
 (2) _escreve_texto                                        4     2      2     764
                                             34 BANK0      4     2      2
                            _dado_wr
 ---------------------------------------------------------------------------------
 (3) _dado_wr                                              1     1      0      22
                                             33 BANK0      1     1      0
                         _atraso_lcd
 ---------------------------------------------------------------------------------
 (3) _atraso_lcd                                           1     1      0       0
                                             32 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                4     2      2     742
                                             32 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      1     1      0      22
                                             32 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WriteByte                                     3     2      1     243
                                             32 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _interrupcao                                         8     8      0   61681
                                             24 BANK0      8     8      0
                   _checkPlayerInput
                           _initGame
 ---------------------------------------------------------------------------------
 (11) _initGame                                            0     0      0   16285
               _generateGameSequence
              _printAttentionMessage
                _printPlayingMessage
                   _showGameSequence
 ---------------------------------------------------------------------------------
 (12) _generateGameSequence                                3     3      0    1007
                                             24 COMRAM     3     3      0
                            ___awmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (13) _srand                                               6     4      2      98
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) _rand                                                6     4      2     370
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     448
                                             18 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (11) _checkPlayerInput                                   10    10      0   45396
                                             89 COMRAM     3     3      0
                                             17 BANK0      7     7      0
              _printAttentionMessage
                  _printErrorMessage
                _printPlayingMessage
                 _printSucessMessage
                 _printWinnerMessage
                   _showGameSequence
                  i2_EEPROM_ReadByte
                 i2_EEPROM_WriteByte
                i2_printStartMessage
 ---------------------------------------------------------------------------------
 (12) i2_printStartMessage                                 1     1      0    7528
                                             87 COMRAM     1     1      0
                  i2_EEPROM_ReadByte
                            i2_clear
                    i2_escreve_texto
                       i2_inicializa
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (13) i2_inicializa                                        0     0      0      22
                         i2_instr_wr
 ---------------------------------------------------------------------------------
 (13) i2_EEPROM_ReadByte                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_EEPROM_WriteByte                                  3     2      1     119
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (12) _showGameSequence                                    3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (12) _printWinnerMessage                                  2     2      0    7450
                                             87 COMRAM     2     2      0
                            i2_clear
                    i2_escreve_texto
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) _printSucessMessage                                  2     2      0    7450
                                             87 COMRAM     2     2      0
                            i2_clear
                    i2_escreve_texto
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) _printPlayingMessage                                 2     1      1    7782
                                             87 COMRAM     1     1      0
                                             16 BANK0      1     0      1
                            i2_clear
                    i2_escreve_texto
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) _printErrorMessage                                   2     2      0    7450
                                             87 COMRAM     2     2      0
                            i2_clear
                    i2_escreve_texto
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) _printAttentionMessage                               0     0      0    7450
                            i2_clear
                    i2_escreve_texto
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (13) i2_sprintf                                          18    10      8    6602
                                              0 BANK0     16     8      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (14) i2_vfprintf                                          8     2      6    5456
                                             79 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (15) i2_vfpfcnvrt                                        42    36      6    5148
                                             63 COMRAM    16    10      6
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_dtoa                                             36    26     10    3978
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2_pad                                              11     5      6    2097
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) i2_fputs                                             7     3      4     877
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_fputc                                             9     5      4     597
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (17) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (17) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (13) i2_instr_wr                                          1     1      0      22
                                              1 COMRAM     1     1      0
                       i2_atraso_lcd
 ---------------------------------------------------------------------------------
 (13) i2_escreve_texto                                     4     2      2     424
                                              2 COMRAM     4     2      2
                          i2_dado_wr
 ---------------------------------------------------------------------------------
 (14) i2_dado_wr                                           1     1      0      22
                                              1 COMRAM     1     1      0
                       i2_atraso_lcd
 ---------------------------------------------------------------------------------
 (14) i2_atraso_lcd                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_clear                                             4     2      2     402
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_WriteByte
   _printStartMessage
     _EEPROM_ReadByte
     _clear
     _escreve_texto
       _dado_wr
         _atraso_lcd
     _inicializa
       _instr_wr
         _atraso_lcd
     _instr_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _setupInt
   _setupTmr0

 _interrupcao (ROOT)
   _checkPlayerInput
     _printAttentionMessage
       i2_clear
       i2_escreve_texto
         i2_dado_wr
           i2_atraso_lcd
       i2_instr_wr
         i2_atraso_lcd
       i2_sprintf
         i2_vfprintf
           i2_vfpfcnvrt
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                 i2_fputs
                   i2_fputc
                 i2_strlen
             i2_fputc
     _printErrorMessage
       i2_clear
       i2_escreve_texto
       i2_instr_wr
       i2_sprintf
     _printPlayingMessage
       i2_clear
       i2_escreve_texto
       i2_instr_wr
       i2_sprintf
     _printSucessMessage
       i2_clear
       i2_escreve_texto
       i2_instr_wr
       i2_sprintf
     _printWinnerMessage
       i2_clear
       i2_escreve_texto
       i2_instr_wr
       i2_sprintf
     _showGameSequence
     i2_EEPROM_ReadByte
     i2_EEPROM_WriteByte
     i2_printStartMessage
       i2_EEPROM_ReadByte
       i2_clear
       i2_escreve_texto
       i2_inicializa
         i2_instr_wr
       i2_instr_wr
       i2_sprintf
   _initGame
     _generateGameSequence
       ___awmod
         _rand (ARG)
           ___lmul
       _rand
       _srand
     _printAttentionMessage
     _printPlayingMessage
     _showGameSequence

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2D      76       7       46.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     60      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     154      20        0.0%
DATA                 0      0     154       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 06 11:58:00 2021

                             l75 287C                               l78 28F6  
                             _RD 007D30                               _WR 007D31  
                            l100 234E                              l101 234E  
                            l221 2892                              l160 277A  
                            l224 28A8                              l232 25E4  
                            l154 2498                              l218 28BC  
                            l163 279E                              l227 283C  
                            l157 24DA                              l237 2660  
                            l167 1DEE                              l354 1320  
                            l367 160E                              l950 1B16  
                            l918 23A6                              l945 1A96  
                            l948 1ADA                              l956 0900  
                            l958 0908                              l990 21CA  
                            l983 0FE2                              l976 0B42  
                            l994 259C                              _GIE 007F97  
                            l997 25A4                              l989 21C2  
                            _PSA 007EAB               i2___aodiv@quotient 0013  
                            _abs 2564                              _pad 1A4E  
             escreve_texto@linha 0082                     ___awmod@sign 0018  
                            wreg 000FE8              __end_ofi2_vfpfcnvrt 1198  
         __size_of_escreve_texto 0040                       i2_dtoa$743 002E  
       _initialized@lcd_kit$F215 00C8       __end_ofi2_EEPROM_WriteByte 2520  
     __end_of_printWinnerMessage 1F00                             l1020 2908  
                           l1009 1A4C                             l1017 2492  
                           l1034 26D6                             ?_abs 0092  
                           l3100 26C8                             l3210 1198  
                           l3220 11DE                             l3212 119E  
                           l3060 19B2                             l3300 1AA2  
                           l3230 1234                             l3222 11FE  
                           l3214 11AC                             l3062 19D0  
                           l3054 1982                             l3302 1AB6  
                           l3240 12B6                             l3232 1248  
                           l3224 1202                             l3216 11CC  
                           l3312 2564                             l3064 1A06  
                           l3056 1996                             l3304 1ABC  
                           l3400 093E                             l3250 1300  
                           l3242 12B8                             l3234 1256  
                           l3226 120E                             l3218 11D0  
                           l3314 2580                             l3058 19A8  
                           l3090 246C                             l3306 1AE8  
                           l3410 09DE                             l3402 0948  
                           l3244 12CA                             l3236 1268  
                           l3228 122C                             l3260 14DE  
                           l3092 2472                             l3308 1AFC  
                           l3420 0AB0                             l3404 094E  
                           l3412 0A42                             l3500 0F3A  
                           l2702 2630                             l3238 1296  
                           l3246 12D0                             l3270 1536  
                           l3262 14E2                             l3254 14AA  
                           l3086 244C                             l3094 269E  
                           l3430 0AF6                             l3414 0A5E  
                           l3422 0ABE                             l3406 09D2  
                           l3502 0F5E                             l3510 0F8E  
                           l2704 2640                             l2720 25A6  
                           l2560 2882                             l3248 12E0  
                           l3280 15B8                             l3272 154A  
                           l3264 14F0                             l3256 14B0  
                           l3088 245A                             l3096 26AA  
                           l3432 0B02                             l3424 0AD0  
                           l3416 0A7C                             l3408 09D8  
                           l3512 0F9C                             l3504 0F6C  
                           l2706 2644                             l2482 28AA  
                           l2730 25C8                             l2562 2888  
                           l3274 1558                             l3282 15BE  
                           l3266 1510                             l3258 14BE  
                           l3098 26B0                             l3290 1A4E  
                           l3434 0B0A                             l3426 0ADE  
                           l3418 0A96                             l3506 0F80  
                           l2580 28A2                             l2564 288C  
                           l3284 15CE                             l3276 1586  
                           l3268 152E                             l3292 1A5E  
                           l3428 0AE4                             l3436 0B1A  
                           l3380 0880                             l3516 0FAA  
                           l3532 2162                             l2582 28A4  
                           l2726 25B0                             l2566 288E  
                           l3286 15EE                             l3278 15A6  
                           l3294 1A72                             l3390 08F4  
                           l3382 08AA                             l3518 0FD0  
                           l3534 216A                             l3710 1D6A  
                           l2680 277A                             l2576 2898  
                           l2728 25C2                             l3296 1A82  
                           l3392 0910                             l3384 08CA  
                           l3536 2178                             l3560 2394  
                           l3552 2356                             l3720 1DB6  
                           l3712 1D6E                             l2682 2788  
                           l2578 289E                             l3298 1A8E  
                           l3394 0922                             l3386 08D8  
                           l3378 0860                             l3490 0E70  
                           l3482 0E28                             l3538 21A6  
                           l3554 2368                             l3722 1DC4  
                           l3714 1D7C                             l2940 24AA  
                           l2684 2796                             l2692 2818  
                           l3396 0930                             l3388 08DA  
                           l3492 0E94                             l3484 0E4C  
                           l3556 2370                             l3724 1DDA  
                           l3716 1D94                             l3708 1D58  
                           l2950 24C0                             l2942 24AE  
                           l2686 279A                             l2694 2836  
                           l3398 0936                             l3494 0EB8  
                           l3486 0E5A                             l3558 2378  
                           l3726 1DE0                             l3718 1DB0  
                           l2870 2864                             ?_pad 0090  
   __end_of_generateGameSequence 23FA                             l2952 24C4  
                           l2944 24B0                             l2936 2498  
                           l2688 279C                             l2696 2626  
                           l3496 0F02                             l3488 0E6C  
                           l2872 28E6                             l2954 24C6  
                           l2946 24BA                             l2938 24A6  
                           l2874 28EC                             l2956 24D8  
                           l2948 24BC                             l2876 28F4  
                           l3780 2334                             l3772 2302  
                           l3782 2338                             l3774 2312  
                           l3784 2342                             l3776 2314  
                           l3786 2346                             l3778 232E  
                           l3788 234A                             STR_1 082F  
                           STR_2 0801                             STR_3 084F  
                           STR_4 082E                             STR_5 0857  
                           STR_6 0846                             STR_7 0821  
                           STR_8 082E                             STR_9 083B  
                           _T0CS 007EAD                             u3000 1586  
                           u3001 1582                             u3010 15CE  
                           u3011 15CA                             u3020 1A5E  
                           u3021 1A5A                             u2310 2788  
                           u3030 1A82                             u2311 2784  
                           u3031 1A7E                             u2320 2796  
                           u3040 1ADA                             _LATD 000F8C  
                           u2321 2792                             u3041 1AD6  
                           u2330 2660                             u3050 1AE8  
                           u2331 265C                             u3051 1AE4  
                           u2340 25E4                             u3060 2580  
                           u3300 0A7C                             u3220 0892  
                           u2341 25E0                             u3061 257C  
                           u3301 0A78                             u3221 088C  
                           u3310 0A96                             u3230 0894  
                           u3311 0A92                             u3320 0AB0  
                           u3240 08AA                             u3321 0AAC  
                           u3241 08A6                             u3330 0ABE  
                           u3250 08D8                             u3410 0E4C  
                           u3331 0ABA                             u3251 08D4  
                           u3411 0E48                             u2700 26C8  
                           u3340 0AD0                             u3260 08F4  
                           u3420 0E94                             u2701 26C4  
                           u3341 0ACC                             u3261 08F0  
                           u3421 0E90                             u2470 24A6  
                           u2630 1996                             u3350 0ADE  
                           u3270 0922                             u3430 0EB8  
                           u2471 24A2                             u2631 1992  
                           u3351 0ADA                             u3271 091E  
                           u3431 0EB4                             u2480 24D6  
                           u2640 19A8                             u3360 0AF6  
                           u3280 0930                             u3440 0F5E  
                           u2481 24D0                             u2641 19A4  
                           u3361 0AF2                             u3281 092C  
                           u3441 0F5A                             u2650 19D0  
                           u3290 0A5E                             u3530 1D6A  
                           u2651 19CC                             u3291 0A5A  
                           u3531 1D66                             u2900 11DE  
                           u2660 1A06                             u3460 21C2  
                           u2901 11DA                             u2661 1A02  
                           u3461 21BE                             u2495 24D8  
                           u2911 1208                             u2920 122C  
                           u2921 1228                             u2930 1256  
                           u2690 2492                             u2931 1252  
                           u2691 248E                             u3627 2320  
                           u2940 1296                             u3637 28B2  
                           u2941 1292                             u2950 12E0  
                           u2951 12DC                             u2960 14BE  
                           u2961 14BA                             u2890 11AC  
                           u2970 14F0                             u2891 11A8  
                           u2971 14EC                             u2980 152E  
                           u2981 152A                             u2990 1558  
                           u2991 1554                             i2l95 185A  
                           _WREN 007D32                             abs@a 0092  
                           _dbuf 0100                             _cont 00CA  
                           _main 2302                             _dtoa 0860  
                           _rand 20F4                             _seed 00DC  
                           _prec 00C4                             _nout 00C0  
                           pad@i 0097                             pad@p 0094  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 0099                             fsr2l 000FD9  
                           btemp 005F                  __end_ofi2_clear 2712  
                           start 000E                       i2_instr_wr 28BE  
                __end_ofi2_fputc 1BE2                  __end_ofi2_fputs 2564  
       __size_of_EEPROM_ReadByte 002A                   escreve_texto@i 0084  
                __end_ofi2_putch 290C        __size_of_showGameSequence 0078  
                   ___param_bank 000000                            ??_abs 0094  
                          ??_pad 0096                       i2_vfprintf 22A0  
                __end_of___aodiv 1322                            ?_main 016F  
                          ?_dtoa 009B                  __end_of___aomod 1610  
                          ?_rand 000D                            _EEADR 000FA9  
                          STR_10 082E                            STR_11 0812  
                          STR_12 082E                  __end_of___awmod 1D58  
                          _INT0F 007F91                            _INT1F 007F80  
                          _INT2F 007F81                            i2l221 28D0  
                          i2l207 1980                            i2l224 28E4  
                          i2l232 269C                            i2l160 27F2  
                          i2l218 2906                            i2l170 229E  
                          i2l154 24DE                            i2l163 2816  
                          i2l227 2862                            i2l251 2224  
                          i2l252 2234                            i2l237 2710  
                          i2l173 20F2                            i2l157 251E  
                          i2l182 1EFE                            i2l167 1E7C  
                          i2l176 2002                            i2l193 207A  
                          i2l354 14A8                            i2l179 1F80  
                          i2l187 23F8                            i2l196 27C6  
                          i2l367 1772                            i2l484 1D56  
                          i2l950 1CA6                            i2l918 244A  
                          i2l945 1C28                            i2l948 1C6A  
                          i2l956 0BE4                            i2l958 0BEC  
                          i2l990 2300                            i2l983 1196  
                          i2l976 0E26                            i2l994 261C  
                          i2l997 2624                            i2l989 22F8  
                   vfpfcnvrt@fmt 014B                            _TMR0H 000FD7  
                          _TMR0L 000FD6                  __end_of_dado_wr 28AA  
                          _TRISB 000F93                            _TRISD 000F95  
                          _TRISE 000F96                            i2_abs 25E6  
                          i2_pad 1BE2              ___lmul@multiplicand 0005  
   __size_ofi2_printStartMessage 008E         __end_of_checkPlayerInput 1982  
                          _clear 2626                            _flags 00C6  
                          _level 005D                            _fputc 1982  
                          _fputs 244C                            _srand 27C8  
                          pad@fp 0090                            _width 00C2  
                          _putch 2908                            dtoa@d 009D  
                          dtoa@i 00BD                            dtoa@n 00B5  
                          dtoa@p 00AF                            dtoa@s 00B3  
                          dtoa@w 00B1                            tablat 000FF5  
                          ttemp5 0060                            ttemp6 0063  
                          ttemp7 0067                            status 000FD8  
                          wtemp8 0060                  __end_of_sprintf 23A8  
             __size_ofi2___aodiv 0188               __size_ofi2___aomod 0164  
    __end_of_printPlayingMessage 20F4                    _escreve_texto 25A6  
               __end_ofi2_strlen 2748               __size_ofi2_dado_wr 0014  
              i2_EEPROM_ReadByte 27F0            __size_ofi2_atraso_lcd 0010  
                __initialization 2748                     ?_interrupcao 0001  
                   __end_of_main 2356                     __end_of_dtoa 0B44  
                   __end_of_rand 2162               ?i2_EEPROM_ReadByte 0001  
                    i2_vfpfcnvrt 0FE4                    i2vfpfcnvrt@ap 0044  
                  i2vfpfcnvrt@fp 0040                    i2vfpfcnvrt@ll 0048  
          __size_ofi2_inicializa 0026                           ??_main 0174  
                         ??_dtoa 00A5                           ??_rand 000F  
       __size_ofi2_escreve_texto 003C                    __activetblptr 000001  
            ??i2_EEPROM_ReadByte 0001                       i2sprintf@f 006A  
                     i2sprintf@s 0060               __size_ofi2_sprintf 0052  
                         ?i2_abs 0013                           ?i2_pad 0011  
                         ?_clear 0080                           ?_fputc 0080  
                         ?_fputs 0089                           _EEDATA 000FA8  
                         _EECON2 000FA7                           _T08BIT 007EAE  
                         ?_srand 0001   __size_of_printAttentionMessage 006A  
                         ?_putch 0001    __end_of_printAttentionMessage 22A0  
                      ??i2_clear 0003                           _INT0IE 007F94  
                         _INT0IF 007F91                           _INT1IE 007F83  
                         _INT1IF 007F80                           _INT2IE 007F84  
                         _INT2IF 007F81                           i2l1020 290A  
                         i2l1009 1BE0                           i2l1017 2562  
                         i2l1025 27EE                           i2l1034 2746  
                         i2l1028 2160                           i2l3110 1354  
                         i2l3120 1396                           i2l3112 1358  
                         i2l3104 1322                           i2l3040 1B18  
                         i2l3200 1C7A                           i2l3130 13F0  
                         i2l3122 13B4                           i2l3114 1366  
                         i2l3106 1326                           i2l3050 1B9A  
                         i2l3042 1B2A                           i2l3202 1C8E  
                         i2l3132 141E                           i2l3124 13BC  
                         i2l3140 1458                           i2l3116 1386  
                         i2l3108 1334                           i2l3044 1B3C  
                         i2l3142 1468                           i2l3134 143E  
                         i2l3126 13D0                           i2l3118 138A  
                         i2l3150 1614                           i2l3206 25E6  
                         i2l3046 1B46                           i2l3070 252C  
                         i2l3144 1488                           i2l3136 1440  
                         i2l3128 13DE                           i2l3160 1674  
                         i2l3152 1622                           i2l3208 2600  
                         i2l3048 1B64                           i2l3072 253E  
                         i2l3080 2722                           i2l3320 0B8C  
                         i2l2600 1CF6                           i2l3138 1452  
                         i2l3170 16EA                           i2l3162 1692  
                         i2l3154 1642                           i2l3074 2542  
                         i2l3082 273A                           i2l3330 0BF4  
                         i2l3322 0BAC                           i2l2610 1D30  
                         i2l2602 1CFE                           i2l2540 28CA  
                         i2l3180 1752                           i2l3172 170A  
                         i2l3164 169A                           i2l3156 1646  
                         i2l3148 1610                           i2l3068 2520  
                         i2l3076 2712                           i2l3340 0C2C  
                         i2l3332 0C06                           i2l3324 0BBC  
                         i2l3316 0B44                           i2l2604 1D0C  
                         i2l2612 1D36                           i2l2438 28F8  
                         i2l2550 28E0                           i2l2542 28CC  
                         i2l3174 171C                           i2l3166 16AE  
                         i2l3158 1654                           i2l3078 271E  
                         i2l3190 1C14                           i2l3342 0C32  
                         i2l3350 0D24                           i2l3334 0C14  
                         i2l3326 0BBE                           i2l3318 0B64  
                         i2l2630 2800                           i2l2614 1D46  
                         i2l2606 1D22                           i2l2544 28D4  
                         i2l2536 28C0                           i2l3168 16BC  
                         i2l3176 1722                           i2l3192 1C20  
                         i2l3184 1BE2                           i2l3352 0D3E  
                         i2l3360 0DA0                           i2l3344 0CB4  
                         i2l3336 0C1A                           i2l3328 0BD8  
                         i2l3440 0FE4                           i2l3600 1FEA  
                         i2l2632 280E                           i2l2640 283E  
                         i2l2616 1D4E                           i2l2608 1D2A  
                         i2l2800 23AE                           i2l2546 28DA  
                         i2l2650 266A                           i2l2538 28C6  
                         i2l3178 1732                           i2l3194 1C34  
                         i2l3186 1BF2                           i2l3370 0DE6  
                         i2l3362 0DB2                           i2l3354 0D5C  
                         i2l3346 0CBA                           i2l3338 0C22  
                         i2l3450 1050                           i2l3442 1008  
                         i2l3530 22DC                           i2l3610 1F40  
                         i2l3602 1F00                           i2l2634 2812  
                         i2l2642 285C                           i2l2490 21FA  
                         i2l2570 20F4                           i2l2810 23E6  
                         i2l2802 23BA                           i2l2548 28DE  
                         i2l2652 267C                           i2l2644 2662  
                         i2l3196 1C48                           i2l3188 1C06  
                         i2l3372 0DEE                           i2l3364 0DC2  
                         i2l3356 0D76                           i2l3348 0CC0  
                         i2l3460 1118                           i2l3452 1074  
                         i2l3444 1016                           i2l3524 22A0  
                         i2l3540 23FA                           i2l3612 1F5C  
                         i2l3604 1F18                           i2l3620 1EAC  
                         i2l2820 204E                           i2l2636 2814  
                         i2l2628 27F2                           i2l3700 1936  
                         i2l2492 2204                           i2l2484 21CC  
                         i2l2572 2132                           i2l2812 23E8  
                         i2l2662 26E0                           i2l2654 2680  
                         i2l3198 1C4C                           i2l3366 0DC8  
                         i2l3374 0DFE                           i2l3358 0D90  
                         i2l3470 1154                           i2l3462 1126  
                         i2l3454 10BC                           i2l3446 1028  
                         i2l3526 22A8                           i2l3542 240C  
                         i2l3614 1F68                           i2l3606 1F2E  
                         i2l3622 1EB2                           i2l2822 2050  
                         i2l2814 2004                           i2l2830 24EC  
                         i2l3630 1DF0                           i2l3702 1972  
                         i2l2590 1CC2                           i2l2486 21DC  
                         i2l2664 26F0                           i2l2656 26D8  
                         i2l3368 0DDA                           i2l3464 113A  
                         i2l3448 102C                           i2l3528 22B6  
                         i2l3544 2414                           i2l3608 1F34  
                         i2l3624 1EBE                           i2l3616 1E7E  
                         i2l2824 2066                           i2l2816 200C  
                         i2l2840 2500                           i2l2832 24F0  
                         i2l3640 1E42                           i2l3632 1E02  
                         i2l2592 1CC6                           i2l2584 1CA8  
                         i2l2488 21EA                           i2l2568 27C8  
                         i2l2808 23BE                           i2l2666 26F4  
                         i2l3458 10F4                           i2l3474 1160  
                         i2l3546 241C                           i2l3570 226A  
                         i2l3626 1EDA                           i2l3618 1E96  
                         i2l2818 2036                           i2l2826 2068  
                         i2l2842 2504                           i2l2834 24F4  
                         i2l3642 1E48                           i2l3634 1E06  
                         i2l2594 1CD4                           i2l2586 1CAC  
                         i2l3650 27A0                           i2l3730 17A4  
                         i2l3476 1184                           i2l3468 1146  
                         i2l3548 2438                           i2l3572 2276  
                         i2l3564 2236                           i2l3580 20AC  
                         i2l3628 1EE6                           i2l2844 2508  
                         i2l2836 24F6                           i2l2828 24DE  
                         i2l3644 1E54                           i2l3636 1E12  
                         i2l2596 1CDC                           i2l2588 1CBA  
                         i2l3660 27BC                           i2l3652 27A2  
                         i2l3740 17D4                           i2l3732 17B6  
                         i2l3574 2292                           i2l3566 224E  
                         i2l3590 1F9A                           i2l3582 20B2  
                         i2l2846 250A                           i2l2838 24FE  
                         i2l3646 1E6A                           i2l3638 1E26  
                         i2l3670 18BA                           i2l3662 1880  
                         i2l2598 1CEE                           i2l3654 27B0  
                         i2l3750 1804                           i2l3742 17E6  
                         i2l3734 17BE                           i2l3568 2264  
                         i2l3592 1FB0                           i2l3584 20BE  
                         i2l3576 207E                           i2l2848 251C  
                         i2l3648 1E70                           i2l3672 18C2  
                         i2l3680 18EA                           i2l3664 189E  
                         i2l3656 27B4                           i2l3760 1834  
                         i2l3752 1816                           i2l3744 17EE  
                         i2l3736 17C4                           i2l3728 1796  
                         i2l3594 1FB6                           i2l3586 20E6  
                         i2l3578 2096                           i2l3690 190A  
                         i2l3682 18FC                           i2l3674 18D2  
                         i2l3666 18A0                           i2l3658 27B8  
                         i2l3770 1858                           i2l3762 1846  
                         i2l3754 181E                           i2l3746 17F4  
                         i2l3738 17C6                           i2l3596 1FC2  
                         i2l3588 1F82                           i2l3692 190E  
                         i2l3684 18FE                           i2l3676 18DC  
                         i2l3668 18B2                           i2l3764 184E  
                         i2l3756 1824                           i2l3748 17F6  
                         i2l3598 1FDE                           i2l3686 1902  
                         i2l3694 191C                           i2l3678 18E2  
                         i2l2798 23A8                           i2l3766 1850  
                         i2l3758 1826                           i2l3688 1906  
                         i2l3696 192A                           i2l3768 1854  
                         i2l3698 192E                        ??i2_fputc 0005  
                      ??i2_fputs 000E                     i2_atraso_lcd 28F8  
                         _OSCCON 000FD3                           _TMR0IE 007F95  
                         _TMR0IF 007F92                        ??i2_putch 0001  
                         _TMR0ON 007EAF                   i2___aodiv@sign 0012  
                         i2abs@a 0013                           i2_dtoa 0B44  
      __end_ofi2_EEPROM_ReadByte 2818                           i2pad@i 0018  
                         i2pad@p 0015                           i2pad@w 001A  
                 ?_escreve_texto 0082                      ?i2_instr_wr 0001  
                   i2_inicializa 283E                     vfprintf@cfmt 015F  
                 i2___aomod@sign 0012                           ___lmul 21CC  
                      ??___aodiv 0090                    i2vfprintf@fmt 0052  
                      ??___aomod 0090                        ??___awmod 0017  
               __end_of_initGame 27C8                      ?i2_vfprintf 0050  
                         _linha1 00CC                           _linha2 0139  
                      ??_dado_wr 0081                ??_EEPROM_ReadByte 0080  
           _generateGameSequence 23A8                           clear@i 0082  
                         clear_0 274E                           clear_1 275A  
                ___awmod@divisor 0015                           isa$std 000001  
                ___awmod@counter 0017         __end_of_EEPROM_WriteByte 24DC  
                         pad@buf 0092                           dtoa@fp 009B  
                         _strlen 269E                 __end_of_instr_wr 2894  
                         fputc@c 0080                           fputs@c 008D  
                         fputs@i 008E                __end_ofi2___aodiv 14AA  
                         fputs@s 0089                __end_ofi2___aomod 1774  
                   __mediumconst 0000                 __end_of_setupInt 287E  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                __end_ofi2_dado_wr 28E6  
                         srand@s 0001                     i2clear@linha 0001  
                         putch@c 0001               i2___aomod@dividend 0001  
               __end_of_vfprintf 21CC                        ??_sprintf 00BF  
    printPlayingMessage@position 0058                       __accesstop 0060  
        __end_of__initialization 2764                _printErrorMessage 1F82  
                  ___rparam_used 000001               ?_printErrorMessage 0001  
              __end_ofi2_sprintf 244C                    __end_ofi2_abs 2626  
                  __end_ofi2_pad 1CA8                 _showGameSequence 2004  
                 __pcstackCOMRAM 0001               _printSucessMessage 1F00  
                  __end_of_clear 2662              ??_printErrorMessage 0058  
                  __end_of_fputc 1A4E                    __end_of_fputs 2494  
          ?_generateGameSequence 0001                    __end_of_srand 27F0  
                  __end_of_putch 290A                   _playerPosition 005E  
            ?_printSucessMessage 0001                          ??i2_abs 0015  
                        ??i2_pad 0017  i2EEPROM_WriteByte@eepromAddress 0002  
  EEPROM_WriteByte@eepromAddress 0081              __size_ofi2_instr_wr 0014  
                 i2vfpfcnvrt@fmt 0042                          ??_clear 0082  
                      ?i2_strlen 0001                ??i2_escreve_texto 0005  
                        ??_fputc 0084                          ??_fputs 008D  
                        ??_srand 0003                          ??_putch 0080  
      __end_of_printErrorMessage 2004                     _gameSequence 0120  
                     __pbssBANK0 00C0                       __pbssBANK1 0100  
                    i2sprintf@ap 0068              __size_ofi2_vfprintf 0062  
           ??_printSucessMessage 0058           checkPlayerInput@record 005B  
                ??_escreve_texto 0084           checkPlayerInput@option 005A  
                        ?i2_dtoa 001C       __size_ofi2_EEPROM_ReadByte 0028  
            i2_printStartMessage 1DF0               i2_EEPROM_WriteByte 24DC  
             _printWinnerMessage 1E7E                          ?___lmul 0001  
   EEPROM_ReadByte@eepromAddress 0080             __size_of_interrupcao 1876  
                 ___lmul@product 0009              ?i2_EEPROM_WriteByte 0001  
            ?_printWinnerMessage 0001                          ?_strlen 0080  
                        _INTEDG0 007F8E                          _INTEDG1 007F8D  
                        _INTEDG2 007F8C               __size_of_setupTmr0 0012  
           ?i2_printStartMessage 0001               __size_of_vfpfcnvrt 01BC  
                     ??i2_strlen 0003                ?_checkPlayerInput 0001  
                        i2_clear 26D8               ??_checkPlayerInput 0071  
                     _atraso_lcd 28AA             ??i2_EEPROM_WriteByte 0002  
                        i2_fputc 1B18                          i2_fputs 2520  
                      ?_initGame 0001             ??_printWinnerMessage 0058  
              showGameSequence@i 0003                          i2pad@fp 0011  
                        i2_putch 290A                          i2dtoa@d 001E  
                        i2dtoa@i 003E                          i2dtoa@n 0036  
                        i2dtoa@p 0030                          i2dtoa@s 0034  
                        i2dtoa@w 0032                  __size_ofi2_dtoa 02E4  
                      ?_instr_wr 0001                          __Hparam 0000  
                        __Lparam 0000                       _inicializa 2818  
                      ?_setupInt 0001                          ___aodiv 1198  
         ??_generateGameSequence 0019                          ___aomod 14AA  
                __size_of___lmul 006A                          ___awmod 1CA8  
                      ?_vfprintf 0159                   i2vfprintf@cfmt 0056  
                   __psmallconst 0800                          _dado_wr 2894  
                   ?i2_vfpfcnvrt 0040                          __pcinit 2748  
                        __ramtop 0800                          __ptext0 2302  
                        __ptext1 28E6                          __ptext2 2864  
                        __ptext3 1D58                          __ptext4 2356  
                        __ptext5 2162                          __ptext6 0E28  
                        __ptext7 0860                          __ptext8 1A4E  
                        __ptext9 269E                  __size_of_strlen 003A  
                   __size_of_abs 0042             i2escreve_texto@linha 0003  
                   __size_of_pad 00CA            ??i2_printStartMessage 0058  
               ___awmod@dividend 0013                          _playing 00CB  
                     clear@linha 0080                          _sprintf 2356  
                 __pintcode_body 1774             end_of_initialization 2764  
     __size_of_printErrorMessage 0082                       ??_initGame 0059  
                        fputc@fp 0082                          int_func 1774  
                        fputs@fp 008B                  _EEPROM_ReadByte 2776  
                   ??i2_instr_wr 0002                       ??_instr_wr 0081  
              __end_of_setupTmr0 28F8                __end_of_vfpfcnvrt 0FE4  
                     ??_setupInt 0080                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                     ??i2_vfprintf 0056  
                     ??_vfprintf 00BF     __size_of_printPlayingMessage 0078  
                        strlen@a 0082                          strlen@s 0080  
              ?_EEPROM_WriteByte 0080                i2___aodiv@divisor 0009  
              i2___aodiv@counter 0011               ??_EEPROM_WriteByte 0081  
       __end_of_showGameSequence 207C               __end_ofi2_instr_wr 28D2  
                      i2___aodiv 1322                        i2___aomod 1610  
                    ?_atraso_lcd 0001                        i2_dado_wr 28D2  
             __end_ofi2_vfprintf 2302            _printAttentionMessage 2236  
                 __end_ofi2_dtoa 0E28                      ?_inicializa 0001  
                      i2_sprintf 23FA                   __end_of___lmul 2236  
                    vfpfcnvrt@ap 014D                      vfpfcnvrt@fp 0149  
                    vfpfcnvrt@ll 0151                  i2_escreve_texto 2662  
                      i2fputc@fp 0003                        i2fputs@fp 000C  
                   dado_wr@texto 0081                   __end_of_strlen 26D8  
            start_initialization 2748                      __end_of_abs 25A6  
                    __end_of_pad 1B18                       ?i2___aodiv 0001  
                     ?i2___aomod 0001          __end_of_EEPROM_ReadByte 27A0  
        printStartMessage@record 00BF                       ?i2_dado_wr 0001  
              __size_ofi2_strlen 0036                        i2strlen@a 0003  
                      i2strlen@s 0001                         ??i2_dtoa 0026  
                    vfprintf@fmt 015B                     i2vfprintf@ap 0054  
                   i2vfprintf@fp 0050                         ??___lmul 0009  
                     ?i2_sprintf 0060              __size_of_atraso_lcd 0014  
              i2___aomod@divisor 0009                         ??_strlen 0082  
              i2___aomod@counter 0011             __size_ofi2_vfpfcnvrt 01B4  
                   i2sprintf@fmt 0062                      __pbssCOMRAM 005D  
                  __pcstackBANK0 0060                    __pcstackBANK1 0149  
              _printStartMessage 1D58                 ___aodiv@dividend 0080  
            __size_of_inicializa 0026   i2EEPROM_ReadByte@eepromAddress 0001  
             ?_printStartMessage 0001                         ?i2_clear 0001  
         ?_printAttentionMessage 0001                         ?i2_fputc 0001  
                       ?i2_fputs 000A                         ?i2_putch 0001  
    __size_of_printSucessMessage 0082              ??_printStartMessage 00BF  
              __size_of_initGame 0028            __end_of_escreve_texto 25E6  
                  ??_interrupcao 0078          __end_ofi2_escreve_texto 269E  
      __size_of_checkPlayerInput 0104                        __pintcode 0008  
              __size_of_instr_wr 0016                         ?___aodiv 0080  
                       ?___aomod 0080                 ___aodiv@quotient 0092  
                       ?___awmod 0013     i2EEPROM_WriteByte@gie_Status 0003  
                   instr_wr@inst 0081                         ?_dado_wr 0001  
              __size_of_setupInt 001A                __size_of_vfprintf 006A  
   i2EEPROM_WriteByte@eepromData 0001                      __smallconst 0800  
      __end_of_printStartMessage 1DF0                   __size_ofi2_abs 0040  
                 __size_ofi2_pad 00C6                   __size_of_clear 003C  
                    ??i2___aodiv 0011                      ??i2___aomod 0011  
                       ?_sprintf 0161                   __size_of_fputc 00CC  
                 __size_of_fputs 0048                 ?_EEPROM_ReadByte 0001  
                 __size_of_srand 0028                   __size_of_putch 0002  
            _printPlayingMessage 207C                      ??i2_dado_wr 0002  
       printPlayingMessage@total 0070                    ?i2_atraso_lcd 0001  
    __size_ofi2_EEPROM_WriteByte 0044      __size_of_printWinnerMessage 0082  
                       _LATEbits 000F8D                         i2u220_40 1CBA  
                       i2u212_40 21EA                         i2u220_41 1CB6  
                       i2u212_41 21E6                         i2u221_40 1CD4  
                       i2u213_40 2224                         i2u221_41 1CD0  
                       i2u213_41 2220                         i2u230_40 2710  
                       i2u310_40 0BBC                         i2u222_40 1CEE  
                       i2u230_41 270C                         i2u310_41 0BB8  
                       i2u222_41 1CEA                         i2u311_40 0BD8  
                       i2u223_40 1D0C                         i2u311_41 0BD4  
                       i2u223_41 1D08                         i2u320_40 0DC2  
                       i2u312_40 0C06                         i2u224_40 1D22  
                       i2u320_41 0DBE                         i2u312_41 0C02  
                       i2u224_41 1D1E                         i2u240_45 251C  
                       i2u321_40 0DDA                         i2u313_40 0C14  
                       i2u225_40 1D46                         i2u321_41 0DD6  
                       i2u313_41 0C10                         i2u225_41 1D42  
                       i2u314_40 0D3E                         i2u314_41 0D3A  
                       i2u315_40 0D5C                         i2u307_40 0B74  
                       i2u227_40 2800                         i2u219_40 2152  
                       i2u235_40 23F8                         i2u315_41 0D58  
                       i2u307_41 0B6E                         i2u227_41 27FC  
                       i2u235_41 23F4                         i2u219_45 2148  
                       i2u260_40 1B3C                         i2u316_40 0D76  
                       i2u308_40 0B76                         i2u340_40 1118  
                       i2u228_40 280E                         i2u260_41 1B38  
                       i2u316_41 0D72                         i2u340_41 1114  
                       i2u228_41 280A                         i2u236_44 202A  
                       i2u236_45 2026                         i2u229_40 269C  
                       i2u261_40 1B64                         i2u317_40 0D90  
                       i2u309_40 0B8C                         i2u237_40 207A  
                       i2u229_41 2698                         i2u261_41 1B60  
                       i2u317_41 0D8C                         i2u309_41 0B88  
                       i2u237_41 2076                         i2u262_40 1B9A  
                       i2u318_40 0DA0                         i2u238_40 24EC  
                       i2u350_40 18D2                         i2u262_41 1B96  
                       i2u318_41 0D9C                         i2u238_41 24E8  
                       i2u350_41 18CE                         i2u271_40 1334  
                       i2u319_40 0DB2                         i2u239_40 251A  
                       i2u351_40 18FC                         i2u271_41 1330  
                       i2u319_41 0DAE                         i2u239_41 2514  
                       i2u351_41 18F8                         i2u272_40 1366  
                       i2u280_40 1692                         i2u352_40 1972  
                       i2u360_40 1834                         i2u272_41 1362  
                       i2u280_41 168E                         i2u352_41 196E  
                       i2u360_41 1830                         i2u281_40 16BC  
                       i2u337_40 1008                         i2u345_40 22F8  
                       i2u361_40 1846                         i2u273_41 1390  
                       i2u281_41 16B8                         i2u337_41 1004  
                       i2u345_41 22F4                         i2u361_41 1842  
                       i2u274_40 13B4                         i2u282_40 16EA  
                       i2u338_40 1050                         i2u354_40 17A4  
                       i2u274_41 13B0                         i2u282_41 16E6  
                       i2u338_41 104C                         i2u354_41 17A0  
                       i2u275_40 13DE                         i2u283_40 1732  
                       i2u259_40 1B2A                         i2u267_40 2562  
                       i2u339_40 1074                         i2u347_40 1E02  
                       i2u355_40 17B6                         i2u275_41 13DA  
                       i2u283_41 172E                         i2u259_41 1B26  
                       i2u267_41 255E                         i2u339_41 1070  
                       i2u347_41 1DFE                         i2u355_41 17B2  
                       i2u276_40 141E                         i2u268_40 273A  
                       i2u284_40 1BF2                         i2u348_40 189E  
                       i2u356_40 17D4                         i2u276_41 141A  
                       i2u268_41 2736                         i2u284_41 1BEE  
                       i2u348_41 189A                         i2u356_41 17D0  
                       i2u364_47 2040                         i2u277_40 1468  
                       i2u285_40 1C14                         i2u349_40 18B2  
                       i2u357_40 17E6                         i2u277_41 1464  
                       i2u285_41 1C10                         i2u349_41 18AE  
                       i2u357_41 17E2                         i2u365_47 205A  
                       i2u278_40 1622                         i2u286_40 1C6A  
                       i2u358_40 1804                         i2u278_41 161E  
                       i2u286_41 1C66                         i2u358_41 1800  
                  ?i2_inicializa 0001                         i2u366_47 1EF0  
                       i2u279_40 1654                         i2u287_40 1C7A  
                       i2u359_40 1816                         i2u279_41 1650  
                       i2u287_41 1C76                         i2u359_41 1812  
                       i2u367_47 1F72                         i2u288_40 2600  
                       i2u288_41 25FC                         i2u368_47 1FF4  
                       i2u369_47 28FE                      ??i2_sprintf 0058  
                      _setupTmr0 28E6             ?_printPlayingMessage 0070  
    __end_ofi2_printStartMessage 1E7E    __size_of_generateGameSequence 0052  
                      _vfpfcnvrt 0E28       EEPROM_WriteByte@gie_Status 0082  
            __end_of_interrupcao 187E                   i2dado_wr@texto 0002  
                       i2clear@i 0003       EEPROM_WriteByte@eepromData 0080  
                       i2pad@buf 0013                ?_showGameSequence 0001  
                       i2dtoa@fp 001C                         i2_strlen 2712  
              ___lmul@multiplier 0001                         i2fputc@c 0001  
                       i2fputs@c 000E                         i2fputs@i 000F  
                       i2fputs@s 000A                   ??i2_atraso_lcd 0001  
             ??_showGameSequence 0001                     ??_atraso_lcd 0080  
               __size_ofi2_clear 003A        __size_of_EEPROM_WriteByte 0048  
               __size_ofi2_fputc 00CA                 __size_ofi2_fputs 0044  
               __size_ofi2_putch 0002                   ??i2_inicializa 0003  
                       __Hrparam 0000                     ??_inicializa 0082  
                     vfprintf@ap 015D                         __Lrparam 0000  
                     vfprintf@fp 0159                 ?i2_escreve_texto 0003  
                   __Lsmallconst 0800            ??_printPlayingMessage 0058  
                     ?_setupTmr0 0001                 __size_of___aodiv 018A  
               __size_of___aomod 0166                 __size_of___awmod 00B0  
                     ?_vfpfcnvrt 0149                 __size_of_dado_wr 0016  
                ___aodiv@divisor 0088                  ___aodiv@counter 0090  
             __end_of_atraso_lcd 28BE       __size_of_printStartMessage 0098  
                     sprintf@fmt 0163                         _dtoa$743 00AD  
                    _initialized 00C9                         __ptext10 244C  
                       __ptext11 1982                         __ptext20 28AA  
                       __ptext12 2908                         __ptext21 2626  
                       __ptext13 2564                         __ptext30 1CA8  
                       __ptext22 2776                         __ptext14 14AA  
                       __ptext31 187E                         __ptext23 2494  
                       __ptext15 1198                         __ptext40 1F82  
                       __ptext32 1DF0                         __ptext16 2818  
                       __ptext41 2236                         __ptext33 283E  
                       __ptext25 27A0                         __ptext17 287E  
                       __ptext50 290A                         __ptext42 23FA  
                       __ptext34 27F0                         __ptext26 23A8  
                       __ptext18 25A6                         __ptext51 25E6  
                       __ptext43 22A0                         __ptext35 24DC  
                       __ptext27 27C8                         __ptext19 2894  
                       __ptext52 1610                         __ptext44 0FE4  
                       __ptext36 2004                         __ptext28 20F4  
                       __ptext53 1322                         __ptext45 0B44  
                       __ptext37 1E7E                         __ptext29 21CC  
                       __ptext54 28BE                         __ptext46 1BE2  
                       __ptext38 1F00                         __ptext55 2662  
                       __ptext47 2712                         __ptext39 207C  
                       __ptext56 28D2                         __ptext48 2520  
                       __ptext57 28F8                         __ptext49 1B18  
                       __ptext58 26D8               __end_of_inicializa 283E  
               __size_of_sprintf 0052                         _initGame 27A0  
                  __size_of_main 0054                    __size_of_dtoa 02E4  
                  __size_of_rand 006E                         _instr_wr 287E  
               _checkPlayerInput 187E                      _interrupcao 0008  
                       isa$xinst 000000                         _setupInt 2864  
                       int$flags 005F                         _vfprintf 2162  
                       main@argc 016F                         main@argv 0171  
                 i2instr_wr@inst 0002                 ___aomod@dividend 0080  
     checkPlayerInput@record_191 005C                 i2escreve_texto@i 0005  
        ??_printAttentionMessage 0058                         intlevel2 0000  
                      sprintf@ap 0167        i2printStartMessage@record 0058  
                    ??_setupTmr0 0080                  ___aomod@divisor 0088  
                  ??i2_vfpfcnvrt 0046                      ??_vfpfcnvrt 014F  
                ___aomod@counter 0090             __end_ofi2_atraso_lcd 2908  
                       sprintf@f 0169                         sprintf@s 0161  
           __end_ofi2_inicializa 2864       __end_of_printSucessMessage 1F82  
                   ___aodiv@sign 0091               i2___aodiv@dividend 0001  
               _EEPROM_WriteByte 2494          generateGameSequence@toc 0019  
                   ___aomod@sign 0091            generateGameSequence@i 001B  
