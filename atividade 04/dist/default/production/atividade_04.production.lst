

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 07 18:06:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 12/02/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     _LATEbits	set	3981
   114  0000                     _EECON2	set	4007
   115  0000                     _EEDATA	set	4008
   116  0000                     _EEADR	set	4009
   117  0000                     _LATD	set	3980
   118  0000                     _TRISB	set	3987
   119  0000                     _TRISE	set	3990
   120  0000                     _TRISD	set	3989
   121  0000                     _OSCCON	set	4051
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR0H	set	4055
   124  0000                     _RD	set	32048
   125  0000                     _WREN	set	32050
   126  0000                     _WR	set	32049
   127  0000                     _INT2F	set	32641
   128  0000                     _INT1F	set	32640
   129  0000                     _INT0F	set	32657
   130  0000                     _TMR0ON	set	32431
   131  0000                     _PSA	set	32427
   132  0000                     _T0CS	set	32429
   133  0000                     _T08BIT	set	32430
   134  0000                     _TMR0IF	set	32658
   135  0000                     _TMR0IE	set	32661
   136  0000                     _INTEDG2	set	32652
   137  0000                     _INT2IF	set	32641
   138  0000                     _INT2IE	set	32644
   139  0000                     _INTEDG1	set	32653
   140  0000                     _INT1IF	set	32640
   141  0000                     _INT1IE	set	32643
   142  0000                     _INTEDG0	set	32654
   143  0000                     _INT0IF	set	32657
   144  0000                     _INT0IE	set	32660
   145  0000                     _GIE	set	32663
   146                           
   147                           	psect	smallconst
   148  000800                     __psmallconst:
   149                           	callstack 0
   150  000800  00                 	db	0
   151  000801                     STR_2:
   152  000801  41                 	db	65	;'A'
   153  000802  70                 	db	112	;'p'
   154  000803  65                 	db	101	;'e'
   155  000804  72                 	db	114	;'r'
   156  000805  74                 	db	116	;'t'
   157  000806  65                 	db	101	;'e'
   158  000807  20                 	db	32
   159  000808  70                 	db	112	;'p'
   160  000809  20                 	db	32
   161  00080A  49                 	db	73	;'I'
   162  00080B  6E                 	db	110	;'n'
   163  00080C  69                 	db	105	;'i'
   164  00080D  63                 	db	99	;'c'
   165  00080E  69                 	db	105	;'i'
   166  00080F  61                 	db	97	;'a'
   167  000810  72                 	db	114	;'r'
   168  000811  00                 	db	0
   169  000812                     STR_11:
   170  000812  56                 	db	86	;'V'
   171  000813  6F                 	db	111	;'o'
   172  000814  63                 	db	99	;'c'
   173  000815  65                 	db	101	;'e'
   174  000816  20                 	db	32
   175  000817  67                 	db	103	;'g'
   176  000818  61                 	db	97	;'a'
   177  000819  6E                 	db	110	;'n'
   178  00081A  68                 	db	104	;'h'
   179  00081B  6F                 	db	111	;'o'
   180  00081C  75                 	db	117	;'u'
   181  00081D  20                 	db	32
   182  00081E  3A                 	db	58	;':'
   183  00081F  29                 	db	41
   184  000820  00                 	db	0
   185  000821                     STR_7:
   186  000821  56                 	db	86	;'V'
   187  000822  6F                 	db	111	;'o'
   188  000823  63                 	db	99	;'c'
   189  000824  65                 	db	101	;'e'
   190  000825  20                 	db	32
   191  000826  65                 	db	101	;'e'
   192  000827  72                 	db	114	;'r'
   193  000828  72                 	db	114	;'r'
   194  000829  6F                 	db	111	;'o'
   195  00082A  75                 	db	117	;'u'
   196  00082B  20                 	db	32
   197  00082C  3A                 	db	58	;':'
   198  00082D  28                 	db	40
   199  00082E  00                 	db	0
   200  00082F                     STR_1:
   201  00082F  52                 	db	82	;'R'
   202  000830  65                 	db	101	;'e'
   203  000831  63                 	db	99	;'c'
   204  000832  6F                 	db	111	;'o'
   205  000833  72                 	db	114	;'r'
   206  000834  64                 	db	100	;'d'
   207  000835  65                 	db	101	;'e'
   208  000836  3A                 	db	58	;':'
   209  000837  20                 	db	32
   210  000838  25                 	db	37
   211  000839  64                 	db	100	;'d'
   212  00083A  00                 	db	0
   213  00083B                     STR_9:
   214  00083B  53                 	db	83	;'S'
   215  00083C  75                 	db	117	;'u'
   216  00083D  63                 	db	99	;'c'
   217  00083E  65                 	db	101	;'e'
   218  00083F  73                 	db	115	;'s'
   219  000840  73                 	db	115	;'s'
   220  000841  6F                 	db	111	;'o'
   221  000842  20                 	db	32
   222  000843  3A                 	db	58	;':'
   223  000844  29                 	db	41
   224  000845  00                 	db	0
   225  000846                     STR_6:
   226  000846  25                 	db	37
   227  000847  64                 	db	100	;'d'
   228  000848  20                 	db	32
   229  000849  64                 	db	100	;'d'
   230  00084A  65                 	db	101	;'e'
   231  00084B  20                 	db	32
   232  00084C  25                 	db	37
   233  00084D  64                 	db	100	;'d'
   234  00084E  00                 	db	0
   235  00084F                     STR_3:
   236  00084F  41                 	db	65	;'A'
   237  000850  74                 	db	116	;'t'
   238  000851  65                 	db	101	;'e'
   239  000852  6E                 	db	110	;'n'
   240  000853  63                 	db	99	;'c'
   241  000854  61                 	db	97	;'a'
   242  000855  6F                 	db	111	;'o'
   243  000856  00                 	db	0
   244  000857                     STR_5:
   245  000857  53                 	db	83	;'S'
   246  000858  75                 	db	117	;'u'
   247  000859  61                 	db	97	;'a'
   248  00085A  20                 	db	32
   249  00085B  76                 	db	118	;'v'
   250  00085C  65                 	db	101	;'e'
   251  00085D  7A                 	db	122	;'z'
   252  00085E  00                 	db	0
   253  00085F  00                 	db	0	; dummy byte at the end
   254  0000                     
   255                           ; #config settings
   256                           
   257                           	psect	cinit
   258  00272A                     __pcinit:
   259                           	callstack 0
   260  00272A                     start_initialization:
   261                           	callstack 0
   262  00272A                     __initialization:
   263                           	callstack 0
   264                           
   265                           ; Clear objects allocated to BANK1 (89 bytes)
   266  00272A  EE01  F000         	lfsr	0,__pbssBANK1
   267  00272E  0E59               	movlw	89
   268  002730                     clear_0:
   269  002730  6AEE               	clrf	postinc0,c
   270  002732  06E8               	decf	wreg,f,c
   271  002734  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to BANK0 (17 bytes)
   274  002736  EE00  F0CF         	lfsr	0,__pbssBANK0
   275  00273A  0E11               	movlw	17
   276  00273C                     clear_1:
   277  00273C  6AEE               	clrf	postinc0,c
   278  00273E  06E8               	decf	wreg,f,c
   279  002740  E1FD               	bnz	clear_1
   280                           
   281                           ; Clear objects allocated to COMRAM (2 bytes)
   282  002742  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   283  002744  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   284  002746                     end_of_initialization:
   285                           	callstack 0
   286  002746                     __end_of__initialization:
   287                           	callstack 0
   288  002746  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   289  002748  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290  00274A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   291  00274C  6EF8               	movwf	tblptru,c
   292  00274E  0E08               	movlw	high __Lsmallconst
   293  002750  6EF7               	movwf	tblptrh,c
   294  002752  0100               	movlb	0
   295  002754  EF6F  F011         	goto	_main	;jump to C main() function
   296                           
   297                           	psect	bssCOMRAM
   298  00005D                     __pbssCOMRAM:
   299                           	callstack 0
   300  00005D                     _level:
   301                           	callstack 0
   302  00005D                     	ds	1
   303  00005E                     _playerPosition:
   304                           	callstack 0
   305  00005E                     	ds	1
   306                           
   307                           	psect	bssBANK0
   308  0000CF                     __pbssBANK0:
   309                           	callstack 0
   310  0000CF                     _nout:
   311                           	callstack 0
   312  0000CF                     	ds	2
   313  0000D1                     _width:
   314                           	callstack 0
   315  0000D1                     	ds	2
   316  0000D3                     _prec:
   317                           	callstack 0
   318  0000D3                     	ds	2
   319  0000D5                     _flags:
   320                           	callstack 0
   321  0000D5                     	ds	2
   322  0000D7                     _cont:
   323                           	callstack 0
   324  0000D7                     	ds	2
   325  0000D9                     _initialized@lcd_kit$F215:
   326                           	callstack 0
   327  0000D9                     	ds	1
   328  0000DA                     _initialized:
   329                           	callstack 0
   330  0000DA                     	ds	1
   331  0000DB                     _playing:
   332                           	callstack 0
   333  0000DB                     	ds	1
   334  0000DC                     _seed:
   335                           	callstack 0
   336  0000DC                     	ds	4
   337                           
   338                           	psect	bssBANK1
   339  000100                     __pbssBANK1:
   340                           	callstack 0
   341  000100                     _dbuf:
   342                           	callstack 0
   343  000100                     	ds	32
   344  000120                     _gameSequence:
   345                           	callstack 0
   346  000120                     	ds	25
   347  000139                     _linha2:
   348                           	callstack 0
   349  000139                     	ds	16
   350  000149                     _linha1:
   351                           	callstack 0
   352  000149                     	ds	16
   353                           
   354                           	psect	cstackBANK1
   355  000159                     __pcstackBANK1:
   356                           	callstack 0
   357  000159                     ?_vfprintf:
   358                           	callstack 0
   359  000159                     vfprintf@fp:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x0
   363  000159                     	ds	2
   364  00015B                     vfprintf@fmt:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  00015B                     	ds	2
   369  00015D                     vfprintf@ap:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x4
   373  00015D                     	ds	2
   374  00015F                     vfprintf@cfmt:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x6
   378  00015F                     	ds	2
   379  000161                     ?_sprintf:
   380                           	callstack 0
   381  000161                     sprintf@s:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x8
   385  000161                     	ds	2
   386  000163                     sprintf@fmt:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0xA
   390  000163                     	ds	4
   391  000167                     sprintf@ap:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0xE
   395  000167                     	ds	2
   396  000169                     sprintf@f:
   397                           	callstack 0
   398                           
   399                           ; 6 bytes @ 0x10
   400  000169                     	ds	6
   401  00016F                     printStartMessage@record:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x16
   405  00016F                     	ds	1
   406  000170                     
   407                           ; 2 bytes @ 0x17
   408  000170                     	ds	2
   409  000172                     
   410                           ; 3 bytes @ 0x19
   411  000172                     	ds	3
   412  000175                     ??_main:
   413                           
   414                           ; 1 bytes @ 0x1C
   415  000175                     	ds	2
   416                           
   417                           	psect	cstackBANK0
   418  000060                     __pcstackBANK0:
   419                           	callstack 0
   420  000060                     ?i2_sprintf:
   421                           	callstack 0
   422  000060                     i2sprintf@s:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x0
   426  000060                     	ds	2
   427  000062                     i2sprintf@fmt:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x2
   431  000062                     	ds	6
   432  000068                     i2sprintf@ap:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x8
   436  000068                     	ds	2
   437  00006A                     i2sprintf@f:
   438                           	callstack 0
   439                           
   440                           ; 6 bytes @ 0xA
   441  00006A                     	ds	6
   442  000070                     printPlayingMessage@total:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x10
   446  000070                     	ds	1
   447  000071                     ??_checkPlayerInput:
   448                           
   449                           ; 1 bytes @ 0x11
   450  000071                     	ds	7
   451  000078                     ??_interrupcao:
   452                           
   453                           ; 1 bytes @ 0x18
   454  000078                     	ds	8
   455  000080                     ??_atraso_lcd:
   456  000080                     ?_strlen:
   457                           	callstack 0
   458  000080                     ?___aodiv:
   459                           	callstack 0
   460  000080                     ?___aomod:
   461                           	callstack 0
   462  000080                     EEPROM_WriteByte@eepromData:
   463                           	callstack 0
   464  000080                     EEPROM_ReadByte@eepromAddress:
   465                           	callstack 0
   466  000080                     clear@linha:
   467                           	callstack 0
   468  000080                     fputc@c:
   469                           	callstack 0
   470  000080                     strlen@s:
   471                           	callstack 0
   472  000080                     ___aodiv@dividend:
   473                           	callstack 0
   474  000080                     ___aomod@dividend:
   475                           	callstack 0
   476                           
   477                           ; 8 bytes @ 0x20
   478  000080                     	ds	1
   479  000081                     EEPROM_WriteByte@eepromAddress:
   480                           	callstack 0
   481  000081                     instr_wr@inst:
   482                           	callstack 0
   483  000081                     dado_wr@texto:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x21
   487  000081                     	ds	1
   488  000082                     EEPROM_WriteByte@gie_Status:
   489                           	callstack 0
   490  000082                     escreve_texto@linha:
   491                           	callstack 0
   492  000082                     clear@i:
   493                           	callstack 0
   494  000082                     fputc@fp:
   495                           	callstack 0
   496  000082                     strlen@a:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x22
   500  000082                     	ds	2
   501  000084                     ??_fputc:
   502  000084                     escreve_texto@i:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x24
   506  000084                     	ds	4
   507  000088                     ___aodiv@divisor:
   508                           	callstack 0
   509  000088                     ___aomod@divisor:
   510                           	callstack 0
   511                           
   512                           ; 8 bytes @ 0x28
   513  000088                     	ds	1
   514  000089                     fputs@s:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x29
   518  000089                     	ds	2
   519  00008B                     fputs@fp:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x2B
   523  00008B                     	ds	2
   524  00008D                     fputs@c:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x2D
   528  00008D                     	ds	1
   529  00008E                     fputs@i:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x2E
   533  00008E                     	ds	2
   534  000090                     ?_pad:
   535                           	callstack 0
   536  000090                     ___aodiv@counter:
   537                           	callstack 0
   538  000090                     ___aomod@counter:
   539                           	callstack 0
   540  000090                     pad@fp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x30
   544  000090                     	ds	1
   545  000091                     ___aodiv@sign:
   546                           	callstack 0
   547  000091                     ___aomod@sign:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x31
   551  000091                     	ds	1
   552  000092                     ?_abs:
   553                           	callstack 0
   554  000092                     pad@buf:
   555                           	callstack 0
   556  000092                     abs@a:
   557                           	callstack 0
   558  000092                     ___aodiv@quotient:
   559                           	callstack 0
   560                           
   561                           ; 8 bytes @ 0x32
   562  000092                     	ds	2
   563  000094                     ??_abs:
   564  000094                     pad@p:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x34
   568  000094                     	ds	2
   569  000096                     ??_pad:
   570                           
   571                           ; 1 bytes @ 0x36
   572  000096                     	ds	1
   573  000097                     pad@i:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x37
   577  000097                     	ds	2
   578  000099                     pad@w:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x39
   582  000099                     	ds	2
   583  00009B                     ?_dtoa:
   584                           	callstack 0
   585  00009B                     dtoa@fp:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x3B
   589  00009B                     	ds	2
   590  00009D                     dtoa@d:
   591                           	callstack 0
   592                           
   593                           ; 8 bytes @ 0x3D
   594  00009D                     	ds	8
   595  0000A5                     ??_dtoa:
   596                           
   597                           ; 1 bytes @ 0x45
   598  0000A5                     	ds	8
   599  0000AD                     _dtoa$743:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x4D
   603  0000AD                     	ds	2
   604  0000AF                     dtoa@p:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x4F
   608  0000AF                     	ds	2
   609  0000B1                     dtoa@w:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x51
   613  0000B1                     	ds	2
   614  0000B3                     dtoa@s:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x53
   618  0000B3                     	ds	2
   619  0000B5                     dtoa@n:
   620                           	callstack 0
   621                           
   622                           ; 8 bytes @ 0x55
   623  0000B5                     	ds	8
   624  0000BD                     dtoa@i:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x5D
   628  0000BD                     	ds	2
   629  0000BF                     ?_vfpfcnvrt:
   630                           	callstack 0
   631  0000BF                     vfpfcnvrt@fp:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x5F
   635  0000BF                     	ds	2
   636  0000C1                     vfpfcnvrt@fmt:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x61
   640  0000C1                     	ds	2
   641  0000C3                     vfpfcnvrt@ap:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x63
   645  0000C3                     	ds	2
   646  0000C5                     ??_vfpfcnvrt:
   647                           
   648                           ; 1 bytes @ 0x65
   649  0000C5                     	ds	2
   650  0000C7                     vfpfcnvrt@ll:
   651                           	callstack 0
   652                           
   653                           ; 8 bytes @ 0x67
   654  0000C7                     	ds	8
   655  0000CF                     
   656                           ; 1 bytes @ 0x6F
   657                           
   658                           	psect	cstackCOMRAM
   659  000001                     __pcstackCOMRAM:
   660                           	callstack 0
   661  000001                     ??_showGameSequence:
   662  000001                     ??i2_atraso_lcd:
   663  000001                     ?i2_strlen:
   664                           	callstack 0
   665  000001                     ?___lmul:
   666                           	callstack 0
   667  000001                     ?i2___aodiv:
   668                           	callstack 0
   669  000001                     ?i2___aomod:
   670                           	callstack 0
   671  000001                     i2EEPROM_WriteByte@eepromData:
   672                           	callstack 0
   673  000001                     i2EEPROM_ReadByte@eepromAddress:
   674                           	callstack 0
   675  000001                     srand@s:
   676                           	callstack 0
   677  000001                     i2clear@linha:
   678                           	callstack 0
   679  000001                     i2fputc@c:
   680                           	callstack 0
   681  000001                     i2strlen@s:
   682                           	callstack 0
   683  000001                     ___lmul@multiplier:
   684                           	callstack 0
   685  000001                     i2___aodiv@dividend:
   686                           	callstack 0
   687  000001                     i2___aomod@dividend:
   688                           	callstack 0
   689                           
   690                           ; 8 bytes @ 0x0
   691  000001                     	ds	1
   692  000002                     i2EEPROM_WriteByte@eepromAddress:
   693                           	callstack 0
   694  000002                     i2instr_wr@inst:
   695                           	callstack 0
   696  000002                     i2dado_wr@texto:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x1
   700  000002                     	ds	1
   701  000003                     ??_srand:
   702  000003                     showGameSequence@i:
   703                           	callstack 0
   704  000003                     i2EEPROM_WriteByte@gie_Status:
   705                           	callstack 0
   706  000003                     i2escreve_texto@linha:
   707                           	callstack 0
   708  000003                     i2clear@i:
   709                           	callstack 0
   710  000003                     i2fputc@fp:
   711                           	callstack 0
   712  000003                     i2strlen@a:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x2
   716  000003                     	ds	2
   717  000005                     ??i2_fputc:
   718  000005                     i2escreve_texto@i:
   719                           	callstack 0
   720  000005                     ___lmul@multiplicand:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x4
   724  000005                     	ds	4
   725  000009                     ___lmul@product:
   726                           	callstack 0
   727  000009                     i2___aodiv@divisor:
   728                           	callstack 0
   729  000009                     i2___aomod@divisor:
   730                           	callstack 0
   731                           
   732                           ; 8 bytes @ 0x8
   733  000009                     	ds	1
   734  00000A                     i2fputs@s:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x9
   738  00000A                     	ds	2
   739  00000C                     i2fputs@fp:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0xB
   743  00000C                     	ds	1
   744  00000D                     ?_rand:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0xC
   748  00000D                     	ds	1
   749  00000E                     i2fputs@c:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0xD
   753  00000E                     	ds	1
   754  00000F                     ??_rand:
   755  00000F                     i2fputs@i:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0xE
   759  00000F                     	ds	2
   760  000011                     ?i2_pad:
   761                           	callstack 0
   762  000011                     i2___aodiv@counter:
   763                           	callstack 0
   764  000011                     i2___aomod@counter:
   765                           	callstack 0
   766  000011                     i2pad@fp:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x10
   770  000011                     	ds	1
   771  000012                     i2___aodiv@sign:
   772                           	callstack 0
   773  000012                     i2___aomod@sign:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x11
   777  000012                     	ds	1
   778  000013                     ?___awmod:
   779                           	callstack 0
   780  000013                     ?i2_abs:
   781                           	callstack 0
   782  000013                     ___awmod@dividend:
   783                           	callstack 0
   784  000013                     i2pad@buf:
   785                           	callstack 0
   786  000013                     i2abs@a:
   787                           	callstack 0
   788  000013                     i2___aodiv@quotient:
   789                           	callstack 0
   790                           
   791                           ; 8 bytes @ 0x12
   792  000013                     	ds	2
   793  000015                     ??i2_abs:
   794  000015                     ___awmod@divisor:
   795                           	callstack 0
   796  000015                     i2pad@p:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x14
   800  000015                     	ds	2
   801  000017                     ??i2_pad:
   802  000017                     ___awmod@counter:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x16
   806  000017                     	ds	1
   807  000018                     ___awmod@sign:
   808                           	callstack 0
   809  000018                     i2pad@i:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x17
   813  000018                     	ds	1
   814  000019                     generateGameSequence@toc:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x18
   818  000019                     	ds	1
   819  00001A                     i2pad@w:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x19
   823  00001A                     	ds	1
   824  00001B                     generateGameSequence@i:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x1A
   828  00001B                     	ds	1
   829  00001C                     ?i2_dtoa:
   830                           	callstack 0
   831  00001C                     i2dtoa@fp:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x1B
   835  00001C                     	ds	2
   836  00001E                     i2dtoa@d:
   837                           	callstack 0
   838                           
   839                           ; 8 bytes @ 0x1D
   840  00001E                     	ds	8
   841  000026                     ??i2_dtoa:
   842                           
   843                           ; 1 bytes @ 0x25
   844  000026                     	ds	8
   845  00002E                     i2_dtoa$743:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x2D
   849  00002E                     	ds	2
   850  000030                     i2dtoa@p:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x2F
   854  000030                     	ds	2
   855  000032                     i2dtoa@w:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x31
   859  000032                     	ds	2
   860  000034                     i2dtoa@s:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x33
   864  000034                     	ds	2
   865  000036                     i2dtoa@n:
   866                           	callstack 0
   867                           
   868                           ; 8 bytes @ 0x35
   869  000036                     	ds	8
   870  00003E                     i2dtoa@i:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x3D
   874  00003E                     	ds	2
   875  000040                     ?i2_vfpfcnvrt:
   876                           	callstack 0
   877  000040                     i2vfpfcnvrt@fp:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x3F
   881  000040                     	ds	2
   882  000042                     i2vfpfcnvrt@fmt:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x41
   886  000042                     	ds	2
   887  000044                     i2vfpfcnvrt@ap:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x43
   891  000044                     	ds	2
   892  000046                     ??i2_vfpfcnvrt:
   893                           
   894                           ; 1 bytes @ 0x45
   895  000046                     	ds	2
   896  000048                     i2vfpfcnvrt@ll:
   897                           	callstack 0
   898                           
   899                           ; 8 bytes @ 0x47
   900  000048                     	ds	8
   901  000050                     ?i2_vfprintf:
   902                           	callstack 0
   903  000050                     i2vfprintf@fp:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x4F
   907  000050                     	ds	2
   908  000052                     i2vfprintf@fmt:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x51
   912  000052                     	ds	2
   913  000054                     i2vfprintf@ap:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x53
   917  000054                     	ds	2
   918  000056                     i2vfprintf@cfmt:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x55
   922  000056                     	ds	2
   923  000058                     ??_printErrorMessage:
   924  000058                     ??_printSucessMessage:
   925  000058                     ??_printWinnerMessage:
   926  000058                     printPlayingMessage@position:
   927                           	callstack 0
   928  000058                     i2printStartMessage@record:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x57
   932  000058                     	ds	1
   933  000059                     
   934                           ; 1 bytes @ 0x58
   935  000059                     	ds	1
   936  00005A                     checkPlayerInput@option:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x59
   940  00005A                     	ds	1
   941  00005B                     checkPlayerInput@record:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x5A
   945  00005B                     	ds	1
   946  00005C                     checkPlayerInput@record_191:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x5B
   950  00005C                     	ds	1
   951                           
   952 ;;
   953 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   954 ;;
   955 ;; *************** function _main *****************
   956 ;; Defined at:
   957 ;;		line 87 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  argc            2   23[BANK1 ] int 
   960 ;;  argv            3   25[BANK1 ] PTR PTR unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  2   23[BANK1 ] int 
   965 ;; Registers used:
   966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   972 ;;      Params:         0       0       5       0       0       0       0       0       0
   973 ;;      Locals:         0       0       0       0       0       0       0       0       0
   974 ;;      Temps:          0       0       2       0       0       0       0       0       0
   975 ;;      Totals:         0       0       7       0       0       0       0       0       0
   976 ;;Total ram usage:        7 bytes
   977 ;; Hardware stack levels required when called: 20
   978 ;; This function calls:
   979 ;;		_EEPROM_WriteByte
   980 ;;		_printStartMessage
   981 ;;		_setupInt
   982 ;;		_setupTmr0
   983 ;; This function is called by:
   984 ;;		Startup code after reset
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text0
   989  0022DE                     __ptext0:
   990                           	callstack 0
   991  0022DE                     _main:
   992                           	callstack 11
   993  0022DE                     
   994                           ;main.c: 88: }
   995  0022DE  0E60               	movlw	96
   996  0022E0  6ED3               	movwf	211,c	;volatile
   997  0022E2  0E00               	movlw	0
   998  0022E4  6E95               	movwf	149,c	;volatile
   999  0022E6  0E00               	movlw	0
  1000  0022E8  6E96               	movwf	150,c	;volatile
  1001  0022EA  0E07               	movlw	7
  1002  0022EC  6E93               	movwf	147,c	;volatile
  1003  0022EE  688C               	setf	140,c	;volatile
  1004  0022F0  0E0D               	movlw	13
  1005  0022F2  0101               	movlb	1	; () banked
  1006  0022F4  6F76               	movwf	(??_main+1)& (0+255),b
  1007  0022F6  0EAF               	movlw	175
  1008  0022F8  6F75               	movwf	??_main& (0+255),b
  1009  0022FA  0EB6               	movlw	182
  1010  0022FC                     u3637:
  1011  0022FC  2EE8               	decfsz	wreg,f,c
  1012  0022FE  D7FE               	bra	u3637
  1013  002300  2F75               	decfsz	??_main& (0+255),f,b
  1014  002302  D7FC               	bra	u3637
  1015  002304  2F76               	decfsz	(??_main+1)& (0+255),f,b
  1016  002306  D7FA               	bra	u3637
  1017  002308  F000               	nop	
  1018  00230A  0E00               	movlw	0
  1019  00230C  0100               	movlb	0	; () banked
  1020  00230E  6FDB               	movwf	_playing& (0+255),b
  1021  002310                     
  1022                           ; BSR set to: 0
  1023  002310  0E00               	movlw	0
  1024  002312  6FD8               	movwf	(_cont+1)& (0+255),b
  1025  002314  0E00               	movlw	0
  1026  002316  6FD7               	movwf	_cont& (0+255),b
  1027  002318                     
  1028                           ; BSR set to: 0
  1029  002318  0E00               	movlw	0
  1030  00231A  6F80               	movwf	EEPROM_WriteByte@eepromData& (0+255),b
  1031  00231C  0E00               	movlw	0
  1032  00231E  EC3B  F012         	call	_EEPROM_WriteByte
  1033  002322  EC23  F014         	call	_setupInt	;wreg free
  1034  002326  EC64  F014         	call	_setupTmr0	;wreg free
  1035  00232A  EC9F  F00E         	call	_printStartMessage	;wreg free
  1036  00232E                     l100:
  1037  00232E  EF97  F011         	goto	l100
  1038  002332  EF07  F000         	goto	start
  1039  002336                     __end_of_main:
  1040                           	callstack 0
  1041                           
  1042 ;; *************** function _setupTmr0 *****************
  1043 ;; Defined at:
  1044 ;;		line 35 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1058 ;;      Params:         0       0       0       0       0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 11
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text1
  1073  0028C8                     __ptext1:
  1074                           	callstack 0
  1075  0028C8                     _setupTmr0:
  1076                           	callstack 19
  1077  0028C8                     
  1078                           ;main.c: 36:             checkPlayerInput(0);
  1079  0028C8  9CD5               	bcf	4053,6,c	;volatile
  1080                           
  1081                           ;main.c: 37:         }
  1082  0028CA  9AD5               	bcf	4053,5,c	;volatile
  1083                           
  1084                           ;main.c: 38:         INT0F = 0;
  1085  0028CC  86D5               	bsf	4053,3,c	;volatile
  1086  0028CE                     
  1087                           ;main.c: 39:     }
  1088  0028CE  0E3C               	movlw	60
  1089  0028D0  6ED7               	movwf	215,c	;volatile
  1090                           
  1091                           ;main.c: 40:     if (INT1F){
  1092  0028D2  0EAF               	movlw	175
  1093  0028D4  6ED6               	movwf	214,c	;volatile
  1094  0028D6                     
  1095                           ;main.c: 41:         if (playing != 1){
  1096  0028D6  8ED5               	bsf	4053,7,c	;volatile
  1097  0028D8  0012               	return		;funcret
  1098  0028DA                     __end_of_setupTmr0:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _setupInt *****************
  1102 ;; Defined at:
  1103 ;;		line 16 in file "main.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		None
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1120 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1121 ;;Total ram usage:        0 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; Hardware stack levels required when called: 11
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text2
  1132  002846                     __ptext2:
  1133                           	callstack 0
  1134  002846                     _setupInt:
  1135                           	callstack 19
  1136  002846                     
  1137                           ;main.c: 17:  }
  1138  002846  8EF2               	bsf	4082,7,c	;volatile
  1139                           
  1140                           ;main.c: 19: void setupTmr0() {
  1141  002848  88F2               	bsf	4082,4,c	;volatile
  1142                           
  1143                           ;main.c: 20:     T08BIT = 0;
  1144  00284A  92F2               	bcf	4082,1,c	;volatile
  1145                           
  1146                           ;main.c: 21:     T0CS = 0;
  1147  00284C  8CF1               	bsf	4081,6,c	;volatile
  1148                           
  1149                           ;main.c: 23:     TMR0H = 0x3C;
  1150  00284E  86F0               	bsf	4080,3,c	;volatile
  1151                           
  1152                           ;main.c: 24:     TMR0L = 0xAF;
  1153  002850  90F0               	bcf	4080,0,c	;volatile
  1154                           
  1155                           ;main.c: 25:     TMR0ON = 1;
  1156  002852  8AF1               	bsf	4081,5,c	;volatile
  1157                           
  1158                           ;main.c: 27: 
  1159  002854  88F0               	bsf	4080,4,c	;volatile
  1160                           
  1161                           ;main.c: 28: 
  1162  002856  92F0               	bcf	4080,1,c	;volatile
  1163                           
  1164                           ;main.c: 29: 
  1165  002858  88F1               	bsf	4081,4,c	;volatile
  1166                           
  1167                           ;main.c: 31:     if (INT0F){
  1168  00285A  8AF2               	bsf	4082,5,c	;volatile
  1169                           
  1170                           ;main.c: 32:         if (playing != 1){
  1171  00285C  94F2               	bcf	4082,2,c	;volatile
  1172  00285E  0012               	return		;funcret
  1173  002860                     __end_of_setupInt:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _printStartMessage *****************
  1177 ;; Defined at:
  1178 ;;		line 32 in file "Game.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  record          1   22[BANK1 ] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1192 ;;      Params:         0       0       0       0       0       0       0       0       0
  1193 ;;      Locals:         0       0       1       0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1195 ;;      Totals:         0       0       1       0       0       0       0       0       0
  1196 ;;Total ram usage:        1 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 19
  1199 ;; This function calls:
  1200 ;;		_EEPROM_ReadByte
  1201 ;;		_clear
  1202 ;;		_escreve_texto
  1203 ;;		_inicializa
  1204 ;;		_instr_wr
  1205 ;;		_sprintf
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text3
  1212  001D3E                     __ptext3:
  1213                           	callstack 0
  1214  001D3E                     _printStartMessage:
  1215                           	callstack 11
  1216  001D3E                     
  1217                           ;Game.c: 33:     if (!initialized)
  1218  001D3E  0100               	movlb	0	; () banked
  1219  001D40  51DA               	movf	_initialized& (0+255),w,b
  1220  001D42  A4D8               	btfss	status,2,c
  1221  001D44  EFA6  F00E         	goto	u3551
  1222  001D48  EFA8  F00E         	goto	u3550
  1223  001D4C                     u3551:
  1224  001D4C  EFAA  F00E         	goto	l3770
  1225  001D50                     u3550:
  1226  001D50                     
  1227                           ; BSR set to: 0
  1228                           ;Game.c: 34:         inicializa();
  1229  001D50  ECFD  F013         	call	_inicializa	;wreg free
  1230  001D54                     l3770:
  1231                           
  1232                           ;Game.c: 35:     clear(linha1);
  1233  001D54  0E49               	movlw	low _linha1
  1234  001D56  0100               	movlb	0	; () banked
  1235  001D58  6F80               	movwf	clear@linha& (0+255),b
  1236  001D5A  0E01               	movlw	high _linha1
  1237  001D5C  6F81               	movwf	(clear@linha+1)& (0+255),b
  1238  001D5E  EC04  F013         	call	_clear	;wreg free
  1239  001D62                     
  1240                           ;Game.c: 36:     clear(linha2);
  1241  001D62  0E39               	movlw	low _linha2
  1242  001D64  0100               	movlb	0	; () banked
  1243  001D66  6F80               	movwf	clear@linha& (0+255),b
  1244  001D68  0E01               	movlw	high _linha2
  1245  001D6A  6F81               	movwf	(clear@linha+1)& (0+255),b
  1246  001D6C  EC04  F013         	call	_clear	;wreg free
  1247                           
  1248                           ;Game.c: 37:     byte record = EEPROM_ReadByte(0);
  1249  001D70  0E00               	movlw	0
  1250  001D72  ECAC  F013         	call	_EEPROM_ReadByte
  1251  001D76  0101               	movlb	1	; () banked
  1252  001D78  6F6F               	movwf	printStartMessage@record& (0+255),b
  1253  001D7A                     
  1254                           ; BSR set to: 1
  1255                           ;Game.c: 38:     sprintf(linha1, "Recorde: %d", record);
  1256  001D7A  0E49               	movlw	low _linha1
  1257  001D7C  6F61               	movwf	sprintf@s& (0+255),b
  1258  001D7E  0E01               	movlw	high _linha1
  1259  001D80  6F62               	movwf	(sprintf@s+1)& (0+255),b
  1260  001D82  0E2F               	movlw	low STR_1
  1261  001D84  6F63               	movwf	sprintf@fmt& (0+255),b
  1262  001D86  0E08               	movlw	high STR_1
  1263  001D88  6F64               	movwf	(sprintf@fmt+1)& (0+255),b
  1264  001D8A  C16F  F165         	movff	printStartMessage@record,?_sprintf+4
  1265  001D8E  6B66               	clrf	(?_sprintf+5)& (0+255),b
  1266  001D90  ECC5  F011         	call	_sprintf	;wreg free
  1267  001D94                     
  1268                           ;Game.c: 39:     instr_wr(0x80);
  1269  001D94  0E80               	movlw	128
  1270  001D96  EC30  F014         	call	_instr_wr
  1271  001D9A                     
  1272                           ;Game.c: 40:     escreve_texto(linha1);
  1273  001D9A  0E49               	movlw	low _linha1
  1274  001D9C  0100               	movlb	0	; () banked
  1275  001D9E  6F82               	movwf	escreve_texto@linha& (0+255),b
  1276  001DA0  0E01               	movlw	high _linha1
  1277  001DA2  6F83               	movwf	(escreve_texto@linha+1)& (0+255),b
  1278  001DA4  ECC4  F012         	call	_escreve_texto	;wreg free
  1279  001DA8                     
  1280                           ;Game.c: 41:     sprintf(linha2, "Aperte p Iniciar");
  1281  001DA8  0E39               	movlw	low _linha2
  1282  001DAA  0101               	movlb	1	; () banked
  1283  001DAC  6F61               	movwf	sprintf@s& (0+255),b
  1284  001DAE  0E01               	movlw	high _linha2
  1285  001DB0  6F62               	movwf	(sprintf@s+1)& (0+255),b
  1286  001DB2  0E01               	movlw	low STR_2
  1287  001DB4  6F63               	movwf	sprintf@fmt& (0+255),b
  1288  001DB6  0E08               	movlw	high STR_2
  1289  001DB8  6F64               	movwf	(sprintf@fmt+1)& (0+255),b
  1290  001DBA  ECC5  F011         	call	_sprintf	;wreg free
  1291  001DBE                     
  1292                           ;Game.c: 42:     instr_wr(0xC0);
  1293  001DBE  0EC0               	movlw	192
  1294  001DC0  EC30  F014         	call	_instr_wr
  1295  001DC4                     
  1296                           ;Game.c: 43:     escreve_texto(linha2);
  1297  001DC4  0E39               	movlw	low _linha2
  1298  001DC6  0100               	movlb	0	; () banked
  1299  001DC8  6F82               	movwf	escreve_texto@linha& (0+255),b
  1300  001DCA  0E01               	movlw	high _linha2
  1301  001DCC  6F83               	movwf	(escreve_texto@linha+1)& (0+255),b
  1302  001DCE  ECC4  F012         	call	_escreve_texto	;wreg free
  1303  001DD2  0012               	return		;funcret
  1304  001DD4                     __end_of_printStartMessage:
  1305                           	callstack 0
  1306                           
  1307 ;; *************** function _sprintf *****************
  1308 ;; Defined at:
  1309 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  s               2    8[BANK1 ] PTR unsigned char 
  1312 ;;		 -> linha2(16), linha1(16), 
  1313 ;;  fmt             2   10[BANK1 ] PTR const unsigned char 
  1314 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  1315 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  1316 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  f               6   16[BANK1 ] struct _IO_FILE
  1319 ;;  ap              2   14[BANK1 ] PTR void [1]
  1320 ;;		 -> ?_sprintf(2), 
  1321 ;;  ret             2    0        int 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2    8[BANK1 ] int 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1331 ;;      Params:         0       0       6       0       0       0       0       0       0
  1332 ;;      Locals:         0       0       8       0       0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1334 ;;      Totals:         0       0      14       0       0       0       0       0       0
  1335 ;;Total ram usage:       14 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 18
  1338 ;; This function calls:
  1339 ;;		_vfprintf
  1340 ;; This function is called by:
  1341 ;;		_printStartMessage
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text4
  1346  00238A                     __ptext4:
  1347                           	callstack 0
  1348  00238A                     _sprintf:
  1349                           	callstack 11
  1350  00238A  0E65               	movlw	low (?_sprintf+4)
  1351  00238C  0101               	movlb	1	; () banked
  1352  00238E  6F67               	movwf	sprintf@ap& (0+255),b
  1353  002390  0E01               	movlw	high (?_sprintf+4)
  1354  002392  6F68               	movwf	(sprintf@ap+1)& (0+255),b
  1355  002394  C161  F169         	movff	sprintf@s,sprintf@f
  1356  002398  C162  F16A         	movff	sprintf@s+1,sprintf@f+1
  1357  00239C                     
  1358                           ; BSR set to: 1
  1359  00239C  0E00               	movlw	0
  1360  00239E  6F6C               	movwf	(sprintf@f+3)& (0+255),b
  1361  0023A0  0E00               	movlw	0
  1362  0023A2  6F6B               	movwf	(sprintf@f+2)& (0+255),b
  1363  0023A4                     
  1364                           ; BSR set to: 1
  1365  0023A4  0E00               	movlw	0
  1366  0023A6  6F6E               	movwf	(sprintf@f+5)& (0+255),b
  1367  0023A8  0E00               	movlw	0
  1368  0023AA  6F6D               	movwf	(sprintf@f+4)& (0+255),b
  1369  0023AC                     
  1370                           ; BSR set to: 1
  1371  0023AC  0E69               	movlw	low sprintf@f
  1372  0023AE  6F59               	movwf	vfprintf@fp& (0+255),b
  1373  0023B0  0E01               	movlw	high sprintf@f
  1374  0023B2  6F5A               	movwf	(vfprintf@fp+1)& (0+255),b
  1375  0023B4  C163  F15B         	movff	sprintf@fmt,vfprintf@fmt
  1376  0023B8  C164  F15C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1377  0023BC  0E67               	movlw	low sprintf@ap
  1378  0023BE  6F5D               	movwf	vfprintf@ap& (0+255),b
  1379  0023C0  0E01               	movlw	high sprintf@ap
  1380  0023C2  6F5E               	movwf	(vfprintf@ap+1)& (0+255),b
  1381  0023C4  EC0D  F011         	call	_vfprintf	;wreg free
  1382  0023C8  0101               	movlb	1	; () banked
  1383  0023CA  516B               	movf	(sprintf@f+2)& (0+255),w,b
  1384  0023CC  2561               	addwf	sprintf@s& (0+255),w,b
  1385  0023CE  6ED9               	movwf	fsr2l,c
  1386  0023D0  516C               	movf	(sprintf@f+3)& (0+255),w,b
  1387  0023D2  2162               	addwfc	(sprintf@s+1)& (0+255),w,b
  1388  0023D4  6EDA               	movwf	fsr2h,c
  1389  0023D6  0E00               	movlw	0
  1390  0023D8  6EDF               	movwf	indf2,c
  1391  0023DA                     
  1392                           ; BSR set to: 1
  1393  0023DA  0012               	return		;funcret
  1394  0023DC                     __end_of_sprintf:
  1395                           	callstack 0
  1396                           
  1397 ;; *************** function _vfprintf *****************
  1398 ;; Defined at:
  1399 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  1402 ;;		 -> sprintf@f(6), 
  1403 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  1404 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  1405 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  1406 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  1407 ;;  ap              2    4[BANK1 ] PTR PTR void 
  1408 ;;		 -> sprintf@ap(2), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  1411 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  1412 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  1413 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  2    0[BANK1 ] int 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1423 ;;      Params:         0       0       6       0       0       0       0       0       0
  1424 ;;      Locals:         0       0       2       0       0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1426 ;;      Totals:         0       0       8       0       0       0       0       0       0
  1427 ;;Total ram usage:        8 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 17
  1430 ;; This function calls:
  1431 ;;		_vfpfcnvrt
  1432 ;; This function is called by:
  1433 ;;		_sprintf
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text5
  1438  00221A                     __ptext5:
  1439                           	callstack 0
  1440  00221A                     _vfprintf:
  1441                           	callstack 11
  1442  00221A                     
  1443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1444  00221A  C15B  F15F         	movff	vfprintf@fmt,vfprintf@cfmt
  1445  00221E  C15C  F160         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1446  002222                     
  1447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1448  002222  0E00               	movlw	0
  1449  002224  0100               	movlb	0	; () banked
  1450  002226  6FD0               	movwf	(_nout+1)& (0+255),b
  1451  002228  0E00               	movlw	0
  1452  00222A  6FCF               	movwf	_nout& (0+255),b
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1455  00222C  EF2B  F011         	goto	l3556
  1456  002230                     l3554:
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1460  002230  C159  F0BF         	movff	vfprintf@fp,vfpfcnvrt@fp
  1461  002234  C15A  F0C0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1462  002238  0E5F               	movlw	low vfprintf@cfmt
  1463  00223A  6FC1               	movwf	vfpfcnvrt@fmt& (0+255),b
  1464  00223C  0E01               	movlw	high vfprintf@cfmt
  1465  00223E  6FC2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1466  002240  C15D  F0C3         	movff	vfprintf@ap,vfpfcnvrt@ap
  1467  002244  C15E  F0C4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1468  002248  EC14  F007         	call	_vfpfcnvrt	;wreg free
  1469  00224C  0100               	movlb	0	; () banked
  1470  00224E  51BF               	movf	?_vfpfcnvrt& (0+255),w,b
  1471  002250  27CF               	addwf	_nout& (0+255),f,b
  1472  002252  51C0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1473  002254  23D0               	addwfc	(_nout+1)& (0+255),f,b
  1474  002256                     l3556:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1478  002256  C15F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1479  00225A  C160  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1480  00225E                     	if	0	;tblptru may be non-zero
  1481  00225E                     	endif
  1482  00225E                     	if	0	;tblptru may be non-zero
  1483  00225E                     	endif
  1484  00225E  0008               	tblrd		*
  1485  002260  50F5               	movf	tablat,w,c
  1486  002262  0900               	iorlw	0
  1487  002264  A4D8               	btfss	status,2,c
  1488  002266  EF37  F011         	goto	u3441
  1489  00226A  EF39  F011         	goto	u3440
  1490  00226E                     u3441:
  1491  00226E  EF18  F011         	goto	l3554
  1492  002272                     u3440:
  1493  002272                     
  1494                           ; BSR set to: 0
  1495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1496  002272  C0CF  F159         	movff	_nout,?_vfprintf
  1497  002276  C0D0  F15A         	movff	_nout+1,?_vfprintf+1
  1498  00227A                     
  1499                           ; BSR set to: 0
  1500  00227A  0012               	return		;funcret
  1501  00227C                     __end_of_vfprintf:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function _vfpfcnvrt *****************
  1505 ;; Defined at:
  1506 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  fp              2   95[BANK0 ] PTR struct _IO_FILE
  1509 ;;		 -> sprintf@f(6), 
  1510 ;;  fmt             2   97[BANK0 ] PTR PTR unsigned char 
  1511 ;;		 -> vfprintf@cfmt(2), 
  1512 ;;  ap              2   99[BANK0 ] PTR PTR void 
  1513 ;;		 -> sprintf@ap(2), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  ll              8  103[BANK0 ] long long 
  1516 ;;  llu             8    0        unsigned long long 
  1517 ;;  f               4    0        unsigned long long 
  1518 ;;  vp              3    0        PTR void 
  1519 ;;  ct              3    0        unsigned char [3]
  1520 ;;  cp              3    0        PTR unsigned char 
  1521 ;;  i               2    0        int 
  1522 ;;  done            2    0        int 
  1523 ;;  c               1    0        unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  2   95[BANK0 ] int 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1533 ;;      Params:         0       6       0       0       0       0       0       0       0
  1534 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1535 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1536 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1537 ;;Total ram usage:       16 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; Hardware stack levels required when called: 16
  1540 ;; This function calls:
  1541 ;;		_dtoa
  1542 ;;		_fputc
  1543 ;; This function is called by:
  1544 ;;		_vfprintf
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text6
  1549  000E28                     __ptext6:
  1550                           	callstack 0
  1551  000E28                     _vfpfcnvrt:
  1552                           	callstack 11
  1553  000E28                     
  1554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1555  000E28  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1556  000E2C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1557  000E30  CFDE FFF6          	movff	postinc2,tblptrl
  1558  000E34  CFDD FFF7          	movff	postdec2,tblptrh
  1559  000E38                     	if	0	;tblptru may be non-zero
  1560  000E38                     	endif
  1561  000E38                     	if	0	;tblptru may be non-zero
  1562  000E38                     	endif
  1563  000E38  0008               	tblrd		*
  1564  000E3A  50F5               	movf	tablat,w,c
  1565  000E3C  0A25               	xorlw	37
  1566  000E3E  A4D8               	btfss	status,2,c
  1567  000E40  EF24  F007         	goto	u3391
  1568  000E44  EF26  F007         	goto	u3390
  1569  000E48                     u3391:
  1570  000E48  EFD3  F007         	goto	l3518
  1571  000E4C                     u3390:
  1572  000E4C                     
  1573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1574  000E4C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1575  000E50  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1576  000E54  2ADE               	incf	postinc2,f,c
  1577  000E56  0E00               	movlw	0
  1578  000E58  22DD               	addwfc	postdec2,f,c
  1579  000E5A                     
  1580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1581  000E5A  0E00               	movlw	0
  1582  000E5C  0100               	movlb	0	; () banked
  1583  000E5E  6FD2               	movwf	(_width+1)& (0+255),b
  1584  000E60  0E00               	movlw	0
  1585  000E62  6FD1               	movwf	_width& (0+255),b
  1586  000E64  C0D1  F0D5         	movff	_width,_flags
  1587  000E68  C0D2  F0D6         	movff	_width+1,_flags+1
  1588  000E6C                     
  1589                           ; BSR set to: 0
  1590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1591  000E6C  69D3               	setf	_prec& (0+255),b
  1592  000E6E  69D4               	setf	(_prec+1)& (0+255),b
  1593  000E70                     
  1594                           ; BSR set to: 0
  1595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1596  000E70  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1597  000E74  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1598  000E78  CFDE FFF6          	movff	postinc2,tblptrl
  1599  000E7C  CFDD FFF7          	movff	postdec2,tblptrh
  1600  000E80                     	if	0	;tblptru may be non-zero
  1601  000E80                     	endif
  1602  000E80                     	if	0	;tblptru may be non-zero
  1603  000E80                     	endif
  1604  000E80  0008               	tblrd		*
  1605  000E82  50F5               	movf	tablat,w,c
  1606  000E84  0A64               	xorlw	100
  1607  000E86  B4D8               	btfsc	status,2,c
  1608  000E88  EF48  F007         	goto	u3401
  1609  000E8C  EF4A  F007         	goto	u3400
  1610  000E90                     u3401:
  1611  000E90  EF5C  F007         	goto	l3496
  1612  000E94                     u3400:
  1613  000E94                     
  1614                           ; BSR set to: 0
  1615  000E94  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1616  000E98  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1617  000E9C  CFDE FFF6          	movff	postinc2,tblptrl
  1618  000EA0  CFDD FFF7          	movff	postdec2,tblptrh
  1619  000EA4                     	if	0	;tblptru may be non-zero
  1620  000EA4                     	endif
  1621  000EA4                     	if	0	;tblptru may be non-zero
  1622  000EA4                     	endif
  1623  000EA4  0008               	tblrd		*
  1624  000EA6  50F5               	movf	tablat,w,c
  1625  000EA8  0A69               	xorlw	105
  1626  000EAA  A4D8               	btfss	status,2,c
  1627  000EAC  EF5A  F007         	goto	u3411
  1628  000EB0  EF5C  F007         	goto	u3410
  1629  000EB4                     u3411:
  1630  000EB4  EF9C  F007         	goto	l3502
  1631  000EB8                     u3410:
  1632  000EB8                     l3496:
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1636  000EB8  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1637  000EBC  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1638  000EC0  2ADE               	incf	postinc2,f,c
  1639  000EC2  0E00               	movlw	0
  1640  000EC4  22DD               	addwfc	postdec2,f,c
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1643  000EC6  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1644  000ECA  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1645  000ECE  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  1646  000ED2  0E02               	movlw	2
  1647  000ED4  26DE               	addwf	postinc2,f,c
  1648  000ED6  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  1649  000EDA  0E00               	movlw	0
  1650  000EDC  22DD               	addwfc	postdec2,f,c
  1651  000EDE  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1652  000EE2  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1653  000EE6  CFDE F0C7          	movff	postinc2,vfpfcnvrt@ll
  1654  000EEA  CFDD F0C8          	movff	postdec2,vfpfcnvrt@ll+1
  1655  000EEE  0E00               	movlw	0
  1656  000EF0  BFC8               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1657  000EF2  0EFF               	movlw	-1
  1658  000EF4  6FC9               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1659  000EF6  6FCA               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1660  000EF8  6FCB               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1661  000EFA  6FCC               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1662  000EFC  6FCD               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1663  000EFE  6FCE               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1664  000F00                     
  1665                           ; BSR set to: 0
  1666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1667  000F00  C0BF  F09B         	movff	vfpfcnvrt@fp,dtoa@fp
  1668  000F04  C0C0  F09C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1669  000F08  C0C7  F09D         	movff	vfpfcnvrt@ll,dtoa@d
  1670  000F0C  C0C8  F09E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1671  000F10  C0C9  F09F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1672  000F14  C0CA  F0A0         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1673  000F18  C0CB  F0A1         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1674  000F1C  C0CC  F0A2         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1675  000F20  C0CD  F0A3         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1676  000F24  C0CE  F0A4         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1677  000F28  EC30  F004         	call	_dtoa	;wreg free
  1678  000F2C  C09B  F0BF         	movff	?_dtoa,?_vfpfcnvrt
  1679  000F30  C09C  F0C0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1680  000F34  EFEF  F007         	goto	l983
  1681  000F38                     l3502:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1685  000F38  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1686  000F3C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1687  000F40  CFDE FFF6          	movff	postinc2,tblptrl
  1688  000F44  CFDD FFF7          	movff	postdec2,tblptrh
  1689  000F48                     	if	0	;tblptru may be non-zero
  1690  000F48                     	endif
  1691  000F48                     	if	0	;tblptru may be non-zero
  1692  000F48                     	endif
  1693  000F48  0008               	tblrd		*
  1694  000F4A  50F5               	movf	tablat,w,c
  1695  000F4C  0A25               	xorlw	37
  1696  000F4E  A4D8               	btfss	status,2,c
  1697  000F50  EFAC  F007         	goto	u3421
  1698  000F54  EFAE  F007         	goto	u3420
  1699  000F58                     u3421:
  1700  000F58  EFC6  F007         	goto	l3512
  1701  000F5C                     u3420:
  1702  000F5C                     
  1703                           ; BSR set to: 0
  1704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1705  000F5C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1706  000F60  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1707  000F64  2ADE               	incf	postinc2,f,c
  1708  000F66  0E00               	movlw	0
  1709  000F68  22DD               	addwfc	postdec2,f,c
  1710  000F6A                     
  1711                           ; BSR set to: 0
  1712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1713  000F6A  0E00               	movlw	0
  1714  000F6C  6F81               	movwf	(fputc@c+1)& (0+255),b
  1715  000F6E  0E25               	movlw	37
  1716  000F70  6F80               	movwf	fputc@c& (0+255),b
  1717  000F72  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  1718  000F76  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1719  000F7A  ECB4  F00C         	call	_fputc	;wreg free
  1720  000F7E                     l3508:
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1723  000F7E  0E00               	movlw	0
  1724  000F80  0100               	movlb	0	; () banked
  1725  000F82  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1726  000F84  0E01               	movlw	1
  1727  000F86  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  1728  000F88  EFEF  F007         	goto	l983
  1729  000F8C                     l3512:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1733  000F8C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1734  000F90  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1735  000F94  2ADE               	incf	postinc2,f,c
  1736  000F96  0E00               	movlw	0
  1737  000F98  22DD               	addwfc	postdec2,f,c
  1738  000F9A                     
  1739                           ; BSR set to: 0
  1740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1741  000F9A  0E00               	movlw	0
  1742  000F9C  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1743  000F9E  0E00               	movlw	0
  1744  000FA0  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  1745  000FA2  EFEF  F007         	goto	l983
  1746  000FA6                     l3518:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1749  000FA6  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1750  000FAA  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1751  000FAE  CFDE FFF6          	movff	postinc2,tblptrl
  1752  000FB2  CFDD FFF7          	movff	postdec2,tblptrh
  1753  000FB6                     	if	0	;tblptru may be non-zero
  1754  000FB6                     	endif
  1755  000FB6                     	if	0	;tblptru may be non-zero
  1756  000FB6                     	endif
  1757  000FB6  0008               	tblrd		*
  1758  000FB8  50F5               	movf	tablat,w,c
  1759  000FBA  0100               	movlb	0	; () banked
  1760  000FBC  6F80               	movwf	fputc@c& (0+255),b
  1761  000FBE  6B81               	clrf	(fputc@c+1)& (0+255),b
  1762  000FC0  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  1763  000FC4  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1764  000FC8  ECB4  F00C         	call	_fputc	;wreg free
  1765  000FCC                     
  1766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1767  000FCC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1768  000FD0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1769  000FD4  2ADE               	incf	postinc2,f,c
  1770  000FD6  0E00               	movlw	0
  1771  000FD8  22DD               	addwfc	postdec2,f,c
  1772  000FDA  EFBF  F007         	goto	l3508
  1773  000FDE                     l983:
  1774  000FDE  0012               	return		;funcret
  1775  000FE0                     __end_of_vfpfcnvrt:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _dtoa *****************
  1779 ;; Defined at:
  1780 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  1783 ;;		 -> sprintf@f(6), 
  1784 ;;  d               8   61[BANK0 ] long long 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  n               8   85[BANK0 ] long long 
  1787 ;;  i               2   93[BANK0 ] int 
  1788 ;;  s               2   83[BANK0 ] int 
  1789 ;;  w               2   81[BANK0 ] int 
  1790 ;;  p               2   79[BANK0 ] int 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  2   59[BANK0 ] int 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1800 ;;      Params:         0      10       0       0       0       0       0       0       0
  1801 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1802 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1803 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1804 ;;Total ram usage:       36 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; Hardware stack levels required when called: 15
  1807 ;; This function calls:
  1808 ;;		___aodiv
  1809 ;;		___aomod
  1810 ;;		_abs
  1811 ;;		_pad
  1812 ;; This function is called by:
  1813 ;;		_vfpfcnvrt
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text7
  1818  000860                     __ptext7:
  1819                           	callstack 0
  1820  000860                     _dtoa:
  1821                           	callstack 11
  1822  000860                     
  1823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1824  000860  C09D  F0B5         	movff	dtoa@d,dtoa@n
  1825  000864  C09E  F0B6         	movff	dtoa@d+1,dtoa@n+1
  1826  000868  C09F  F0B7         	movff	dtoa@d+2,dtoa@n+2
  1827  00086C  C0A0  F0B8         	movff	dtoa@d+3,dtoa@n+3
  1828  000870  C0A1  F0B9         	movff	dtoa@d+4,dtoa@n+4
  1829  000874  C0A2  F0BA         	movff	dtoa@d+5,dtoa@n+5
  1830  000878  C0A3  F0BB         	movff	dtoa@d+6,dtoa@n+6
  1831  00087C  C0A4  F0BC         	movff	dtoa@d+7,dtoa@n+7
  1832  000880                     
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1834  000880  0100               	movlb	0	; () banked
  1835  000882  BFBC               	btfsc	(dtoa@n+7)& (0+255),7,b
  1836  000884  EF46  F004         	goto	u3201
  1837  000888  EF49  F004         	goto	u3200
  1838  00088C                     u3201:
  1839  00088C  0E01               	movlw	1
  1840  00088E  EF4A  F004         	goto	u3210
  1841  000892                     u3200:
  1842  000892  0E00               	movlw	0
  1843  000894                     u3210:
  1844  000894  6FB3               	movwf	dtoa@s& (0+255),b
  1845  000896  6BB4               	clrf	(dtoa@s+1)& (0+255),b
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1848  000898  51B3               	movf	dtoa@s& (0+255),w,b
  1849  00089A  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  1850  00089C  B4D8               	btfsc	status,2,c
  1851  00089E  EF53  F004         	goto	u3221
  1852  0008A2  EF55  F004         	goto	u3220
  1853  0008A6                     u3221:
  1854  0008A6  EF65  F004         	goto	l3384
  1855  0008AA                     u3220:
  1856  0008AA                     
  1857                           ; BSR set to: 0
  1858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1859  0008AA  1FBC               	comf	(dtoa@n+7)& (0+255),f,b
  1860  0008AC  1FBB               	comf	(dtoa@n+6)& (0+255),f,b
  1861  0008AE  1FBA               	comf	(dtoa@n+5)& (0+255),f,b
  1862  0008B0  1FB9               	comf	(dtoa@n+4)& (0+255),f,b
  1863  0008B2  1FB8               	comf	(dtoa@n+3)& (0+255),f,b
  1864  0008B4  1FB7               	comf	(dtoa@n+2)& (0+255),f,b
  1865  0008B6  1FB6               	comf	(dtoa@n+1)& (0+255),f,b
  1866  0008B8  6DB5               	negf	dtoa@n& (0+255),b
  1867  0008BA  0E00               	movlw	0
  1868  0008BC  23B6               	addwfc	(dtoa@n+1)& (0+255),f,b
  1869  0008BE  23B7               	addwfc	(dtoa@n+2)& (0+255),f,b
  1870  0008C0  23B8               	addwfc	(dtoa@n+3)& (0+255),f,b
  1871  0008C2  23B9               	addwfc	(dtoa@n+4)& (0+255),f,b
  1872  0008C4  23BA               	addwfc	(dtoa@n+5)& (0+255),f,b
  1873  0008C6  23BB               	addwfc	(dtoa@n+6)& (0+255),f,b
  1874  0008C8  23BC               	addwfc	(dtoa@n+7)& (0+255),f,b
  1875  0008CA                     l3384:
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1879  0008CA  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  1880  0008CC  EF6A  F004         	goto	u3231
  1881  0008D0  EF6C  F004         	goto	u3230
  1882  0008D4                     u3231:
  1883  0008D4  EF6D  F004         	goto	l3388
  1884  0008D8                     u3230:
  1885  0008D8                     
  1886                           ; BSR set to: 0
  1887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1888  0008D8  93D5               	bcf	_flags& (0+255),1,b
  1889  0008DA                     l3388:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1893  0008DA  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  1894  0008DC  EF7A  F004         	goto	u3240
  1895  0008E0  51D4               	movf	(_prec+1)& (0+255),w,b
  1896  0008E2  E106               	bnz	u3241
  1897  0008E4  05D3               	decf	_prec& (0+255),w,b
  1898  0008E6  B0D8               	btfsc	status,0,c
  1899  0008E8  EF78  F004         	goto	u3241
  1900  0008EC  EF7A  F004         	goto	u3240
  1901  0008F0                     u3241:
  1902  0008F0  EF80  F004         	goto	l956
  1903  0008F4                     u3240:
  1904  0008F4                     
  1905                           ; BSR set to: 0
  1906  0008F4  0E00               	movlw	0
  1907  0008F6  6FB0               	movwf	(dtoa@p+1)& (0+255),b
  1908  0008F8  0E01               	movlw	1
  1909  0008FA  6FAF               	movwf	dtoa@p& (0+255),b
  1910  0008FC  EF84  F004         	goto	l958
  1911  000900                     l956:
  1912                           
  1913                           ; BSR set to: 0
  1914  000900  C0D3  F0AF         	movff	_prec,dtoa@p
  1915  000904  C0D4  F0B0         	movff	_prec+1,dtoa@p+1
  1916  000908                     l958:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1920  000908  C0D1  F0B1         	movff	_width,dtoa@w
  1921  00090C  C0D2  F0B2         	movff	_width+1,dtoa@w+1
  1922  000910                     
  1923                           ; BSR set to: 0
  1924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1925  000910  51B3               	movf	dtoa@s& (0+255),w,b
  1926  000912  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  1927  000914  A4D8               	btfss	status,2,c
  1928  000916  EF8F  F004         	goto	u3251
  1929  00091A  EF91  F004         	goto	u3250
  1930  00091E                     u3251:
  1931  00091E  EF98  F004         	goto	l3396
  1932  000922                     u3250:
  1933  000922                     
  1934                           ; BSR set to: 0
  1935  000922  A5D5               	btfss	_flags& (0+255),2,b
  1936  000924  EF96  F004         	goto	u3261
  1937  000928  EF98  F004         	goto	u3260
  1938  00092C                     u3261:
  1939  00092C  EF9B  F004         	goto	l3398
  1940  000930                     u3260:
  1941  000930                     l3396:
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1945  000930  07B1               	decf	dtoa@w& (0+255),f,b
  1946  000932  A0D8               	btfss	status,0,c
  1947  000934  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  1948  000936                     l3398:
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1952  000936  0E00               	movlw	0
  1953  000938  6FBE               	movwf	(dtoa@i+1)& (0+255),b
  1954  00093A  0E1F               	movlw	31
  1955  00093C  6FBD               	movwf	dtoa@i& (0+255),b
  1956  00093E                     
  1957                           ; BSR set to: 0
  1958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1959  00093E  0E00               	movlw	0
  1960  000940  0101               	movlb	1	; () banked
  1961  000942  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1964  000944  EF21  F005         	goto	l3412
  1965  000948                     l3402:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1969  000948  07BD               	decf	dtoa@i& (0+255),f,b
  1970  00094A  A0D8               	btfss	status,0,c
  1971  00094C  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  1972  00094E                     
  1973                           ; BSR set to: 0
  1974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1975  00094E  0E00               	movlw	low _dbuf
  1976  000950  25BD               	addwf	dtoa@i& (0+255),w,b
  1977  000952  6ED9               	movwf	fsr2l,c
  1978  000954  0E01               	movlw	high _dbuf
  1979  000956  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  1980  000958  6EDA               	movwf	fsr2h,c
  1981  00095A  C0B5  F080         	movff	dtoa@n,___aomod@dividend
  1982  00095E  C0B6  F081         	movff	dtoa@n+1,___aomod@dividend+1
  1983  000962  C0B7  F082         	movff	dtoa@n+2,___aomod@dividend+2
  1984  000966  C0B8  F083         	movff	dtoa@n+3,___aomod@dividend+3
  1985  00096A  C0B9  F084         	movff	dtoa@n+4,___aomod@dividend+4
  1986  00096E  C0BA  F085         	movff	dtoa@n+5,___aomod@dividend+5
  1987  000972  C0BB  F086         	movff	dtoa@n+6,___aomod@dividend+6
  1988  000976  C0BC  F087         	movff	dtoa@n+7,___aomod@dividend+7
  1989  00097A  0E0A               	movlw	10
  1990  00097C  6F88               	movwf	___aomod@divisor& (0+255),b
  1991  00097E  0E00               	movlw	0
  1992  000980  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  1993  000982  0E00               	movlw	0
  1994  000984  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  1995  000986  0E00               	movlw	0
  1996  000988  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  1997  00098A  0E00               	movlw	0
  1998  00098C  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  1999  00098E  0E00               	movlw	0
  2000  000990  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  2001  000992  0E00               	movlw	0
  2002  000994  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  2003  000996  0E00               	movlw	0
  2004  000998  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  2005  00099A  EC53  F00A         	call	___aomod	;wreg free
  2006  00099E  C080  F0A5         	movff	?___aomod,??_dtoa
  2007  0009A2  C081  F0A6         	movff	?___aomod+1,??_dtoa+1
  2008  0009A6  C082  F0A7         	movff	?___aomod+2,??_dtoa+2
  2009  0009AA  C083  F0A8         	movff	?___aomod+3,??_dtoa+3
  2010  0009AE  C084  F0A9         	movff	?___aomod+4,??_dtoa+4
  2011  0009B2  C085  F0AA         	movff	?___aomod+5,??_dtoa+5
  2012  0009B6  C086  F0AB         	movff	?___aomod+6,??_dtoa+6
  2013  0009BA  C087  F0AC         	movff	?___aomod+7,??_dtoa+7
  2014  0009BE  C0A5  F092         	movff	??_dtoa,abs@a
  2015  0009C2  C0A7  F093         	movff	??_dtoa+2,abs@a+1
  2016  0009C6  ECA3  F012         	call	_abs	;wreg free
  2017  0009CA  0100               	movlb	0	; () banked
  2018  0009CC  5192               	movf	?_abs& (0+255),w,b
  2019  0009CE  0F30               	addlw	48
  2020  0009D0  6EDF               	movwf	indf2,c
  2021  0009D2                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2024  0009D2  07AF               	decf	dtoa@p& (0+255),f,b
  2025  0009D4  A0D8               	btfss	status,0,c
  2026  0009D6  07B0               	decf	(dtoa@p+1)& (0+255),f,b
  2027  0009D8                     
  2028                           ; BSR set to: 0
  2029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2030  0009D8  07B1               	decf	dtoa@w& (0+255),f,b
  2031  0009DA  A0D8               	btfss	status,0,c
  2032  0009DC  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  2033  0009DE                     
  2034                           ; BSR set to: 0
  2035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2036  0009DE  C0B5  F080         	movff	dtoa@n,___aodiv@dividend
  2037  0009E2  C0B6  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  2038  0009E6  C0B7  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  2039  0009EA  C0B8  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  2040  0009EE  C0B9  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  2041  0009F2  C0BA  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  2042  0009F6  C0BB  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  2043  0009FA  C0BC  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  2044  0009FE  0E0A               	movlw	10
  2045  000A00  6F88               	movwf	___aodiv@divisor& (0+255),b
  2046  000A02  0E00               	movlw	0
  2047  000A04  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  2048  000A06  0E00               	movlw	0
  2049  000A08  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2050  000A0A  0E00               	movlw	0
  2051  000A0C  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2052  000A0E  0E00               	movlw	0
  2053  000A10  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2054  000A12  0E00               	movlw	0
  2055  000A14  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2056  000A16  0E00               	movlw	0
  2057  000A18  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2058  000A1A  0E00               	movlw	0
  2059  000A1C  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2060  000A1E  ECCA  F008         	call	___aodiv	;wreg free
  2061  000A22  C080  F0B5         	movff	?___aodiv,dtoa@n
  2062  000A26  C081  F0B6         	movff	?___aodiv+1,dtoa@n+1
  2063  000A2A  C082  F0B7         	movff	?___aodiv+2,dtoa@n+2
  2064  000A2E  C083  F0B8         	movff	?___aodiv+3,dtoa@n+3
  2065  000A32  C084  F0B9         	movff	?___aodiv+4,dtoa@n+4
  2066  000A36  C085  F0BA         	movff	?___aodiv+5,dtoa@n+5
  2067  000A3A  C086  F0BB         	movff	?___aodiv+6,dtoa@n+6
  2068  000A3E  C087  F0BC         	movff	?___aodiv+7,dtoa@n+7
  2069  000A42                     l3412:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2072  000A42  0100               	movlb	0	; () banked
  2073  000A44  BFBE               	btfsc	(dtoa@i+1)& (0+255),7,b
  2074  000A46  EF2D  F005         	goto	u3271
  2075  000A4A  51BE               	movf	(dtoa@i+1)& (0+255),w,b
  2076  000A4C  E108               	bnz	u3270
  2077  000A4E  05BD               	decf	dtoa@i& (0+255),w,b
  2078  000A50  A0D8               	btfss	status,0,c
  2079  000A52  EF2D  F005         	goto	u3271
  2080  000A56  EF2F  F005         	goto	u3270
  2081  000A5A                     u3271:
  2082  000A5A  EF5F  F005         	goto	l3422
  2083  000A5E                     u3270:
  2084  000A5E                     
  2085                           ; BSR set to: 0
  2086  000A5E  51B5               	movf	dtoa@n& (0+255),w,b
  2087  000A60  11B6               	iorwf	(dtoa@n+1)& (0+255),w,b
  2088  000A62  11B7               	iorwf	(dtoa@n+2)& (0+255),w,b
  2089  000A64  11B8               	iorwf	(dtoa@n+3)& (0+255),w,b
  2090  000A66  11B9               	iorwf	(dtoa@n+4)& (0+255),w,b
  2091  000A68  11BA               	iorwf	(dtoa@n+5)& (0+255),w,b
  2092  000A6A  11BB               	iorwf	(dtoa@n+6)& (0+255),w,b
  2093  000A6C  11BC               	iorwf	(dtoa@n+7)& (0+255),w,b
  2094  000A6E  A4D8               	btfss	status,2,c
  2095  000A70  EF3C  F005         	goto	u3281
  2096  000A74  EF3E  F005         	goto	u3280
  2097  000A78                     u3281:
  2098  000A78  EFA4  F004         	goto	l3402
  2099  000A7C                     u3280:
  2100  000A7C                     
  2101                           ; BSR set to: 0
  2102  000A7C  BFB0               	btfsc	(dtoa@p+1)& (0+255),7,b
  2103  000A7E  EF4B  F005         	goto	u3290
  2104  000A82  51B0               	movf	(dtoa@p+1)& (0+255),w,b
  2105  000A84  E106               	bnz	u3291
  2106  000A86  05AF               	decf	dtoa@p& (0+255),w,b
  2107  000A88  B0D8               	btfsc	status,0,c
  2108  000A8A  EF49  F005         	goto	u3291
  2109  000A8E  EF4B  F005         	goto	u3290
  2110  000A92                     u3291:
  2111  000A92  EFA4  F004         	goto	l3402
  2112  000A96                     u3290:
  2113  000A96                     
  2114                           ; BSR set to: 0
  2115  000A96  BFB2               	btfsc	(dtoa@w+1)& (0+255),7,b
  2116  000A98  EF56  F005         	goto	u3301
  2117  000A9C  51B2               	movf	(dtoa@w+1)& (0+255),w,b
  2118  000A9E  E108               	bnz	u3300
  2119  000AA0  05B1               	decf	dtoa@w& (0+255),w,b
  2120  000AA2  A0D8               	btfss	status,0,c
  2121  000AA4  EF56  F005         	goto	u3301
  2122  000AA8  EF58  F005         	goto	u3300
  2123  000AAC                     u3301:
  2124  000AAC  EF5F  F005         	goto	l3422
  2125  000AB0                     u3300:
  2126  000AB0                     
  2127                           ; BSR set to: 0
  2128  000AB0  B3D5               	btfsc	_flags& (0+255),1,b
  2129  000AB2  EF5D  F005         	goto	u3311
  2130  000AB6  EF5F  F005         	goto	u3310
  2131  000ABA                     u3311:
  2132  000ABA  EFA4  F004         	goto	l3402
  2133  000ABE                     u3310:
  2134  000ABE                     l3422:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2138  000ABE  51B3               	movf	dtoa@s& (0+255),w,b
  2139  000AC0  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2140  000AC2  A4D8               	btfss	status,2,c
  2141  000AC4  EF66  F005         	goto	u3321
  2142  000AC8  EF68  F005         	goto	u3320
  2143  000ACC                     u3321:
  2144  000ACC  EF6F  F005         	goto	l3426
  2145  000AD0                     u3320:
  2146  000AD0                     
  2147                           ; BSR set to: 0
  2148  000AD0  A5D5               	btfss	_flags& (0+255),2,b
  2149  000AD2  EF6D  F005         	goto	u3331
  2150  000AD6  EF6F  F005         	goto	u3330
  2151  000ADA                     u3331:
  2152  000ADA  EF8D  F005         	goto	l3436
  2153  000ADE                     u3330:
  2154  000ADE                     l3426:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2158  000ADE  07BD               	decf	dtoa@i& (0+255),f,b
  2159  000AE0  A0D8               	btfss	status,0,c
  2160  000AE2  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  2161  000AE4                     
  2162                           ; BSR set to: 0
  2163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2164  000AE4  51B3               	movf	dtoa@s& (0+255),w,b
  2165  000AE6  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2166  000AE8  A4D8               	btfss	status,2,c
  2167  000AEA  EF79  F005         	goto	u3341
  2168  000AEE  EF7B  F005         	goto	u3340
  2169  000AF2                     u3341:
  2170  000AF2  EF81  F005         	goto	l3432
  2171  000AF6                     u3340:
  2172  000AF6                     
  2173                           ; BSR set to: 0
  2174  000AF6  0E00               	movlw	0
  2175  000AF8  6FAE               	movwf	(_dtoa$743+1)& (0+255),b
  2176  000AFA  0E2B               	movlw	43
  2177  000AFC  6FAD               	movwf	_dtoa$743& (0+255),b
  2178  000AFE  EF85  F005         	goto	l3434
  2179  000B02                     l3432:
  2180                           
  2181                           ; BSR set to: 0
  2182  000B02  0E00               	movlw	0
  2183  000B04  6FAE               	movwf	(_dtoa$743+1)& (0+255),b
  2184  000B06  0E2D               	movlw	45
  2185  000B08  6FAD               	movwf	_dtoa$743& (0+255),b
  2186  000B0A                     l3434:
  2187                           
  2188                           ; BSR set to: 0
  2189  000B0A  0E00               	movlw	low _dbuf
  2190  000B0C  25BD               	addwf	dtoa@i& (0+255),w,b
  2191  000B0E  6ED9               	movwf	fsr2l,c
  2192  000B10  0E01               	movlw	high _dbuf
  2193  000B12  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2194  000B14  6EDA               	movwf	fsr2h,c
  2195  000B16  C0AD  FFDF         	movff	_dtoa$743,indf2
  2196  000B1A                     l3436:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2200  000B1A  C09B  F090         	movff	dtoa@fp,pad@fp
  2201  000B1E  C09C  F091         	movff	dtoa@fp+1,pad@fp+1
  2202  000B22  0E00               	movlw	low _dbuf
  2203  000B24  25BD               	addwf	dtoa@i& (0+255),w,b
  2204  000B26  6F92               	movwf	pad@buf& (0+255),b
  2205  000B28  0E01               	movlw	high _dbuf
  2206  000B2A  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2207  000B2C  6F93               	movwf	(pad@buf+1)& (0+255),b
  2208  000B2E  C0B1  F094         	movff	dtoa@w,pad@p
  2209  000B32  C0B2  F095         	movff	dtoa@w+1,pad@p+1
  2210  000B36  EC1A  F00D         	call	_pad	;wreg free
  2211  000B3A  C090  F09B         	movff	?_pad,?_dtoa
  2212  000B3E  C091  F09C         	movff	?_pad+1,?_dtoa+1
  2213  000B42  0012               	return		;funcret
  2214  000B44                     __end_of_dtoa:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _pad *****************
  2218 ;; Defined at:
  2219 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  fp              2   48[BANK0 ] PTR struct _IO_FILE
  2222 ;;		 -> sprintf@f(6), 
  2223 ;;  buf             2   50[BANK0 ] PTR unsigned char 
  2224 ;;		 -> dbuf(32), 
  2225 ;;  p               2   52[BANK0 ] int 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  w               2   57[BANK0 ] int 
  2228 ;;  i               2   55[BANK0 ] int 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2   48[BANK0 ] int 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2238 ;;      Params:         0       6       0       0       0       0       0       0       0
  2239 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2240 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2241 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2242 ;;Total ram usage:       11 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 14
  2245 ;; This function calls:
  2246 ;;		_fputc
  2247 ;;		_fputs
  2248 ;;		_strlen
  2249 ;; This function is called by:
  2250 ;;		_dtoa
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text8
  2255  001A34                     __ptext8:
  2256                           	callstack 0
  2257  001A34                     _pad:
  2258                           	callstack 11
  2259  001A34                     
  2260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2261  001A34  0100               	movlb	0	; () banked
  2262  001A36  A1D5               	btfss	_flags& (0+255),0,b
  2263  001A38  EF20  F00D         	goto	u3001
  2264  001A3C  EF22  F00D         	goto	u3000
  2265  001A40                     u3001:
  2266  001A40  EF2C  F00D         	goto	l3294
  2267  001A44                     u3000:
  2268  001A44                     
  2269                           ; BSR set to: 0
  2270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2271  001A44  C092  F089         	movff	pad@buf,fputs@s
  2272  001A48  C093  F08A         	movff	pad@buf+1,fputs@s+1
  2273  001A4C  C090  F08B         	movff	pad@fp,fputs@fp
  2274  001A50  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  2275  001A54  EC17  F012         	call	_fputs	;wreg free
  2276  001A58                     l3294:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2279  001A58  0100               	movlb	0	; () banked
  2280  001A5A  BF95               	btfsc	(pad@p+1)& (0+255),7,b
  2281  001A5C  EF32  F00D         	goto	u3011
  2282  001A60  EF34  F00D         	goto	u3010
  2283  001A64                     u3011:
  2284  001A64  EF3A  F00D         	goto	l3298
  2285  001A68                     u3010:
  2286  001A68                     
  2287                           ; BSR set to: 0
  2288  001A68  C094  F099         	movff	pad@p,pad@w
  2289  001A6C  C095  F09A         	movff	pad@p+1,pad@w+1
  2290  001A70  EF3E  F00D         	goto	l945
  2291  001A74                     l3298:
  2292                           
  2293                           ; BSR set to: 0
  2294  001A74  0E00               	movlw	0
  2295  001A76  6F9A               	movwf	(pad@w+1)& (0+255),b
  2296  001A78  0E00               	movlw	0
  2297  001A7A  6F99               	movwf	pad@w& (0+255),b
  2298  001A7C                     l945:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2302  001A7C  0E00               	movlw	0
  2303  001A7E  6F98               	movwf	(pad@i+1)& (0+255),b
  2304  001A80  0E00               	movlw	0
  2305  001A82  6F97               	movwf	pad@i& (0+255),b
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2308  001A84  EF51  F00D         	goto	l3304
  2309  001A88                     l3300:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2313  001A88  0E00               	movlw	0
  2314  001A8A  6F81               	movwf	(fputc@c+1)& (0+255),b
  2315  001A8C  0E20               	movlw	32
  2316  001A8E  6F80               	movwf	fputc@c& (0+255),b
  2317  001A90  C090  F082         	movff	pad@fp,fputc@fp
  2318  001A94  C091  F083         	movff	pad@fp+1,fputc@fp+1
  2319  001A98  ECB4  F00C         	call	_fputc	;wreg free
  2320  001A9C                     
  2321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2322  001A9C  0100               	movlb	0	; () banked
  2323  001A9E  4B97               	infsnz	pad@i& (0+255),f,b
  2324  001AA0  2B98               	incf	(pad@i+1)& (0+255),f,b
  2325  001AA2                     l3304:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2329  001AA2  5199               	movf	pad@w& (0+255),w,b
  2330  001AA4  5D97               	subwf	pad@i& (0+255),w,b
  2331  001AA6  5198               	movf	(pad@i+1)& (0+255),w,b
  2332  001AA8  0A80               	xorlw	128
  2333  001AAA  6F96               	movwf	??_pad& (0+255),b
  2334  001AAC  519A               	movf	(pad@w+1)& (0+255),w,b
  2335  001AAE  0A80               	xorlw	128
  2336  001AB0  5996               	subwfb	??_pad& (0+255),w,b
  2337  001AB2  A0D8               	btfss	status,0,c
  2338  001AB4  EF5E  F00D         	goto	u3021
  2339  001AB8  EF60  F00D         	goto	u3020
  2340  001ABC                     u3021:
  2341  001ABC  EF44  F00D         	goto	l3300
  2342  001AC0                     u3020:
  2343  001AC0                     
  2344                           ; BSR set to: 0
  2345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2346  001AC0  B1D5               	btfsc	_flags& (0+255),0,b
  2347  001AC2  EF65  F00D         	goto	u3031
  2348  001AC6  EF67  F00D         	goto	u3030
  2349  001ACA                     u3031:
  2350  001ACA  EF71  F00D         	goto	l3308
  2351  001ACE                     u3030:
  2352  001ACE                     
  2353                           ; BSR set to: 0
  2354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2355  001ACE  C092  F089         	movff	pad@buf,fputs@s
  2356  001AD2  C093  F08A         	movff	pad@buf+1,fputs@s+1
  2357  001AD6  C090  F08B         	movff	pad@fp,fputs@fp
  2358  001ADA  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  2359  001ADE  EC17  F012         	call	_fputs	;wreg free
  2360  001AE2                     l3308:
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2363  001AE2  C092  F080         	movff	pad@buf,strlen@s
  2364  001AE6  C093  F081         	movff	pad@buf+1,strlen@s+1
  2365  001AEA  EC40  F013         	call	_strlen	;wreg free
  2366  001AEE  0100               	movlb	0	; () banked
  2367  001AF0  5199               	movf	pad@w& (0+255),w,b
  2368  001AF2  2580               	addwf	?_strlen& (0+255),w,b
  2369  001AF4  6F90               	movwf	?_pad& (0+255),b
  2370  001AF6  519A               	movf	(pad@w+1)& (0+255),w,b
  2371  001AF8  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  2372  001AFA  6F91               	movwf	(?_pad+1)& (0+255),b
  2373  001AFC                     
  2374                           ; BSR set to: 0
  2375  001AFC  0012               	return		;funcret
  2376  001AFE                     __end_of_pad:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function _strlen *****************
  2380 ;; Defined at:
  2381 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  s               2   32[BANK0 ] PTR const unsigned char 
  2384 ;;		 -> dbuf(32), 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  a               2   34[BANK0 ] PTR const unsigned char 
  2387 ;;		 -> dbuf(32), 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  2   32[BANK0 ] unsigned int 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2397 ;;      Params:         0       2       0       0       0       0       0       0       0
  2398 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2400 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2401 ;;Total ram usage:        4 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 11
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_pad
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text9
  2412  002680                     __ptext9:
  2413                           	callstack 0
  2414  002680                     _strlen:
  2415                           	callstack 13
  2416  002680  C080  F082         	movff	strlen@s,strlen@a
  2417  002684  C081  F083         	movff	strlen@s+1,strlen@a+1
  2418  002688  EF49  F013         	goto	l3098
  2419  00268C                     l3096:
  2420  00268C  0100               	movlb	0	; () banked
  2421  00268E  4B80               	infsnz	strlen@s& (0+255),f,b
  2422  002690  2B81               	incf	(strlen@s+1)& (0+255),f,b
  2423  002692                     l3098:
  2424  002692  C080  FFD9         	movff	strlen@s,fsr2l
  2425  002696  C081  FFDA         	movff	strlen@s+1,fsr2h
  2426  00269A  50DF               	movf	indf2,w,c
  2427  00269C  A4D8               	btfss	status,2,c
  2428  00269E  EF53  F013         	goto	u2681
  2429  0026A2  EF55  F013         	goto	u2680
  2430  0026A6                     u2681:
  2431  0026A6  EF46  F013         	goto	l3096
  2432  0026AA                     u2680:
  2433  0026AA  0100               	movlb	0	; () banked
  2434  0026AC  5182               	movf	strlen@a& (0+255),w,b
  2435  0026AE  5D80               	subwf	strlen@s& (0+255),w,b
  2436  0026B0  6F80               	movwf	?_strlen& (0+255),b
  2437  0026B2  5183               	movf	(strlen@a+1)& (0+255),w,b
  2438  0026B4  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  2439  0026B6  6F81               	movwf	(?_strlen+1)& (0+255),b
  2440  0026B8                     
  2441                           ; BSR set to: 0
  2442  0026B8  0012               	return		;funcret
  2443  0026BA                     __end_of_strlen:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function _fputs *****************
  2447 ;; Defined at:
  2448 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  s               2   41[BANK0 ] PTR const unsigned char 
  2451 ;;		 -> dbuf(32), 
  2452 ;;  fp              2   43[BANK0 ] PTR struct _IO_FILE
  2453 ;;		 -> sprintf@f(6), 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  i               2   46[BANK0 ] int 
  2456 ;;  c               1   45[BANK0 ] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  2   41[BANK0 ] int 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2466 ;;      Params:         0       4       0       0       0       0       0       0       0
  2467 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2469 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2470 ;;Total ram usage:        7 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 13
  2473 ;; This function calls:
  2474 ;;		_fputc
  2475 ;; This function is called by:
  2476 ;;		_pad
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text10
  2481  00242E                     __ptext10:
  2482                           	callstack 0
  2483  00242E                     _fputs:
  2484                           	callstack 11
  2485  00242E  0E00               	movlw	0
  2486  002430  0100               	movlb	0	; () banked
  2487  002432  6F8F               	movwf	(fputs@i+1)& (0+255),b
  2488  002434  0E00               	movlw	0
  2489  002436  6F8E               	movwf	fputs@i& (0+255),b
  2490  002438  EF2A  F012         	goto	l3092
  2491  00243C                     l3088:
  2492                           
  2493                           ; BSR set to: 0
  2494  00243C  C08D  F080         	movff	fputs@c,fputc@c
  2495  002440  6B81               	clrf	(fputc@c+1)& (0+255),b
  2496  002442  C08B  F082         	movff	fputs@fp,fputc@fp
  2497  002446  C08C  F083         	movff	fputs@fp+1,fputc@fp+1
  2498  00244A  ECB4  F00C         	call	_fputc	;wreg free
  2499  00244E  0100               	movlb	0	; () banked
  2500  002450  4B8E               	infsnz	fputs@i& (0+255),f,b
  2501  002452  2B8F               	incf	(fputs@i+1)& (0+255),f,b
  2502  002454                     l3092:
  2503                           
  2504                           ; BSR set to: 0
  2505  002454  518E               	movf	fputs@i& (0+255),w,b
  2506  002456  2589               	addwf	fputs@s& (0+255),w,b
  2507  002458  6ED9               	movwf	fsr2l,c
  2508  00245A  518F               	movf	(fputs@i+1)& (0+255),w,b
  2509  00245C  218A               	addwfc	(fputs@s+1)& (0+255),w,b
  2510  00245E  6EDA               	movwf	fsr2h,c
  2511  002460  50DF               	movf	indf2,w,c
  2512  002462  6F8D               	movwf	fputs@c& (0+255),b
  2513  002464  518D               	movf	fputs@c& (0+255),w,b
  2514  002466  A4D8               	btfss	status,2,c
  2515  002468  EF38  F012         	goto	u2671
  2516  00246C  EF3A  F012         	goto	u2670
  2517  002470                     u2671:
  2518  002470  EF1E  F012         	goto	l3088
  2519  002474                     u2670:
  2520  002474                     
  2521                           ; BSR set to: 0
  2522  002474  0012               	return		;funcret
  2523  002476                     __end_of_fputs:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function _fputc *****************
  2527 ;; Defined at:
  2528 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  c               2   32[BANK0 ] int 
  2531 ;;  fp              2   34[BANK0 ] PTR struct _IO_FILE
  2532 ;;		 -> sprintf@f(6), 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  2   32[BANK0 ] int 
  2537 ;; Registers used:
  2538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2544 ;;      Params:         0       4       0       0       0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2546 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2547 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2548 ;;Total ram usage:        9 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; Hardware stack levels required when called: 12
  2551 ;; This function calls:
  2552 ;;		_putch
  2553 ;; This function is called by:
  2554 ;;		_pad
  2555 ;;		_vfpfcnvrt
  2556 ;;		_fputs
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text11
  2561  001968                     __ptext11:
  2562                           	callstack 0
  2563  001968                     _fputc:
  2564                           	callstack 14
  2565  001968  0100               	movlb	0	; () banked
  2566  00196A  5182               	movf	fputc@fp& (0+255),w,b
  2567  00196C  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  2568  00196E  B4D8               	btfsc	status,2,c
  2569  001970  EFBC  F00C         	goto	u2611
  2570  001974  EFBE  F00C         	goto	u2610
  2571  001978                     u2611:
  2572  001978  EFC7  F00C         	goto	l3058
  2573  00197C                     u2610:
  2574  00197C                     
  2575                           ; BSR set to: 0
  2576  00197C  5182               	movf	fputc@fp& (0+255),w,b
  2577  00197E  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  2578  001980  A4D8               	btfss	status,2,c
  2579  001982  EFC5  F00C         	goto	u2621
  2580  001986  EFC7  F00C         	goto	u2620
  2581  00198A                     u2621:
  2582  00198A  EFCC  F00C         	goto	l3060
  2583  00198E                     u2620:
  2584  00198E                     l3058:
  2585                           
  2586                           ; BSR set to: 0
  2587  00198E  5180               	movf	fputc@c& (0+255),w,b
  2588  001990  EC75  F014         	call	_putch
  2589  001994  EF19  F00D         	goto	l1009
  2590  001998                     l3060:
  2591                           
  2592                           ; BSR set to: 0
  2593  001998  EE20 F004          	lfsr	2,4
  2594  00199C  5182               	movf	fputc@fp& (0+255),w,b
  2595  00199E  26D9               	addwf	fsr2l,f,c
  2596  0019A0  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2597  0019A2  22DA               	addwfc	fsr2h,f,c
  2598  0019A4  50DE               	movf	postinc2,w,c
  2599  0019A6  10DE               	iorwf	postinc2,w,c
  2600  0019A8  B4D8               	btfsc	status,2,c
  2601  0019AA  EFD9  F00C         	goto	u2631
  2602  0019AE  EFDB  F00C         	goto	u2630
  2603  0019B2                     u2631:
  2604  0019B2  EFF6  F00C         	goto	l3064
  2605  0019B6                     u2630:
  2606  0019B6                     
  2607                           ; BSR set to: 0
  2608  0019B6  EE20 F004          	lfsr	2,4
  2609  0019BA  5182               	movf	fputc@fp& (0+255),w,b
  2610  0019BC  26D9               	addwf	fsr2l,f,c
  2611  0019BE  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2612  0019C0  22DA               	addwfc	fsr2h,f,c
  2613  0019C2  EE10 F002          	lfsr	1,2
  2614  0019C6  5182               	movf	fputc@fp& (0+255),w,b
  2615  0019C8  26E1               	addwf	fsr1l,f,c
  2616  0019CA  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2617  0019CC  22E2               	addwfc	fsr1h,f,c
  2618  0019CE  50DE               	movf	postinc2,w,c
  2619  0019D0  5CE6               	subwf	postinc1,w,c
  2620  0019D2  50E6               	movf	postinc1,w,c
  2621  0019D4  0A80               	xorlw	128
  2622  0019D6  6F88               	movwf	(??_fputc+4)& (0+255),b
  2623  0019D8  50DE               	movf	postinc2,w,c
  2624  0019DA  0A80               	xorlw	128
  2625  0019DC  5988               	subwfb	(??_fputc+4)& (0+255),w,b
  2626  0019DE  B0D8               	btfsc	status,0,c
  2627  0019E0  EFF4  F00C         	goto	u2641
  2628  0019E4  EFF6  F00C         	goto	u2640
  2629  0019E8                     u2641:
  2630  0019E8  EF19  F00D         	goto	l1009
  2631  0019EC                     u2640:
  2632  0019EC                     l3064:
  2633                           
  2634                           ; BSR set to: 0
  2635  0019EC  EE20 F002          	lfsr	2,2
  2636  0019F0  5182               	movf	fputc@fp& (0+255),w,b
  2637  0019F2  26D9               	addwf	fsr2l,f,c
  2638  0019F4  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2639  0019F6  22DA               	addwfc	fsr2h,f,c
  2640  0019F8  CFDE F084          	movff	postinc2,??_fputc
  2641  0019FC  CFDD F085          	movff	postdec2,??_fputc+1
  2642  001A00  C082  FFD9         	movff	fputc@fp,fsr2l
  2643  001A04  C083  FFDA         	movff	fputc@fp+1,fsr2h
  2644  001A08  CFDE F086          	movff	postinc2,??_fputc+2
  2645  001A0C  CFDD F087          	movff	postdec2,??_fputc+3
  2646  001A10  5184               	movf	??_fputc& (0+255),w,b
  2647  001A12  2586               	addwf	(??_fputc+2)& (0+255),w,b
  2648  001A14  6ED9               	movwf	fsr2l,c
  2649  001A16  5185               	movf	(??_fputc+1)& (0+255),w,b
  2650  001A18  2187               	addwfc	(??_fputc+3)& (0+255),w,b
  2651  001A1A  6EDA               	movwf	fsr2h,c
  2652  001A1C  C080  FFDF         	movff	fputc@c,indf2
  2653  001A20  EE20 F002          	lfsr	2,2
  2654  001A24  5182               	movf	fputc@fp& (0+255),w,b
  2655  001A26  26D9               	addwf	fsr2l,f,c
  2656  001A28  5183               	movf	(fputc@fp+1)& (0+255),w,b
  2657  001A2A  22DA               	addwfc	fsr2h,f,c
  2658  001A2C  2ADE               	incf	postinc2,f,c
  2659  001A2E  0E00               	movlw	0
  2660  001A30  22DD               	addwfc	postdec2,f,c
  2661  001A32                     l1009:
  2662  001A32  0012               	return		;funcret
  2663  001A34                     __end_of_fputc:
  2664                           	callstack 0
  2665                           
  2666 ;; *************** function _putch *****************
  2667 ;; Defined at:
  2668 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  c               1    wreg     unsigned char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  c               1    0[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2682 ;;      Params:         0       0       0       0       0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2685 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2686 ;;Total ram usage:        0 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 11
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_fputc
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text12
  2697  0028EA                     __ptext12:
  2698                           	callstack 0
  2699  0028EA                     _putch:
  2700                           	callstack 14
  2701  0028EA  0012               	return		;funcret
  2702  0028EC                     __end_of_putch:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _abs *****************
  2706 ;; Defined at:
  2707 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  a               2   50[BANK0 ] int 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  2   50[BANK0 ] int 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2721 ;;      Params:         0       2       0       0       0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2723 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2724 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2725 ;;Total ram usage:        4 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; Hardware stack levels required when called: 11
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_dtoa
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text13
  2736  002546                     __ptext13:
  2737                           	callstack 0
  2738  002546                     _abs:
  2739                           	callstack 14
  2740  002546  0100               	movlb	0	; () banked
  2741  002548  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  2742  00254A  EFB1  F012         	goto	u3040
  2743  00254E  5193               	movf	(abs@a+1)& (0+255),w,b
  2744  002550  E106               	bnz	u3041
  2745  002552  0592               	decf	abs@a& (0+255),w,b
  2746  002554  B0D8               	btfsc	status,0,c
  2747  002556  EFAF  F012         	goto	u3041
  2748  00255A  EFB1  F012         	goto	u3040
  2749  00255E                     u3041:
  2750  00255E  EFBF  F012         	goto	l994
  2751  002562                     u3040:
  2752  002562                     
  2753                           ; BSR set to: 0
  2754  002562  C092  F094         	movff	abs@a,??_abs
  2755  002566  C093  F095         	movff	abs@a+1,??_abs+1
  2756  00256A  1F94               	comf	??_abs& (0+255),f,b
  2757  00256C  1F95               	comf	(??_abs+1)& (0+255),f,b
  2758  00256E  4B94               	infsnz	??_abs& (0+255),f,b
  2759  002570  2B95               	incf	(??_abs+1)& (0+255),f,b
  2760  002572  C094  F092         	movff	??_abs,?_abs
  2761  002576  C095  F093         	movff	??_abs+1,?_abs+1
  2762  00257A  EFC3  F012         	goto	l997
  2763  00257E                     l994:
  2764                           
  2765                           ; BSR set to: 0
  2766  00257E  C092  F092         	movff	abs@a,?_abs
  2767  002582  C093  F093         	movff	abs@a+1,?_abs+1
  2768  002586                     l997:
  2769                           
  2770                           ; BSR set to: 0
  2771  002586  0012               	return		;funcret
  2772  002588                     __end_of_abs:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function ___aomod *****************
  2776 ;; Defined at:
  2777 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  dividend        8   32[BANK0 ] long long 
  2780 ;;  divisor         8   40[BANK0 ] long long 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  sign            1   49[BANK0 ] unsigned char 
  2783 ;;  counter         1   48[BANK0 ] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  8   32[BANK0 ] long long 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2793 ;;      Params:         0      16       0       0       0       0       0       0       0
  2794 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2796 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2797 ;;Total ram usage:       18 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 11
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_dtoa
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text14
  2808  0014A6                     __ptext14:
  2809                           	callstack 0
  2810  0014A6                     ___aomod:
  2811                           	callstack 14
  2812  0014A6  0E00               	movlw	0
  2813  0014A8  0100               	movlb	0	; () banked
  2814  0014AA  6F91               	movwf	___aomod@sign& (0+255),b
  2815  0014AC                     
  2816                           ; BSR set to: 0
  2817  0014AC  BF87               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  2818  0014AE  EF5D  F00A         	goto	u2940
  2819  0014B2  EF5B  F00A         	goto	u2941
  2820  0014B6                     u2941:
  2821  0014B6  EF6F  F00A         	goto	l3262
  2822  0014BA                     u2940:
  2823  0014BA                     
  2824                           ; BSR set to: 0
  2825  0014BA  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  2826  0014BC  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  2827  0014BE  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  2828  0014C0  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  2829  0014C2  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  2830  0014C4  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  2831  0014C6  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  2832  0014C8  6D80               	negf	___aomod@dividend& (0+255),b
  2833  0014CA  0E00               	movlw	0
  2834  0014CC  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2835  0014CE  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2836  0014D0  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2837  0014D2  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2838  0014D4  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2839  0014D6  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2840  0014D8  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2841  0014DA                     
  2842                           ; BSR set to: 0
  2843  0014DA  0E01               	movlw	1
  2844  0014DC  6F91               	movwf	___aomod@sign& (0+255),b
  2845  0014DE                     l3262:
  2846                           
  2847                           ; BSR set to: 0
  2848  0014DE  BF8F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  2849  0014E0  EF76  F00A         	goto	u2950
  2850  0014E4  EF74  F00A         	goto	u2951
  2851  0014E8                     u2951:
  2852  0014E8  EF86  F00A         	goto	l3266
  2853  0014EC                     u2950:
  2854  0014EC                     
  2855                           ; BSR set to: 0
  2856  0014EC  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  2857  0014EE  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  2858  0014F0  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  2859  0014F2  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  2860  0014F4  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  2861  0014F6  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  2862  0014F8  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  2863  0014FA  6D88               	negf	___aomod@divisor& (0+255),b
  2864  0014FC  0E00               	movlw	0
  2865  0014FE  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2866  001500  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2867  001502  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2868  001504  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2869  001506  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2870  001508  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2871  00150A  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2872  00150C                     l3266:
  2873                           
  2874                           ; BSR set to: 0
  2875  00150C  5188               	movf	___aomod@divisor& (0+255),w,b
  2876  00150E  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2877  001510  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2878  001512  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2879  001514  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2880  001516  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2881  001518  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2882  00151A  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2883  00151C  B4D8               	btfsc	status,2,c
  2884  00151E  EF93  F00A         	goto	u2961
  2885  001522  EF95  F00A         	goto	u2960
  2886  001526                     u2961:
  2887  001526  EFDD  F00A         	goto	l3282
  2888  00152A                     u2960:
  2889  00152A                     
  2890                           ; BSR set to: 0
  2891  00152A  0E01               	movlw	1
  2892  00152C  6F90               	movwf	___aomod@counter& (0+255),b
  2893  00152E  EFA3  F00A         	goto	l3272
  2894  001532                     l3270:
  2895                           
  2896                           ; BSR set to: 0
  2897  001532  90D8               	bcf	status,0,c
  2898  001534  3788               	rlcf	___aomod@divisor& (0+255),f,b
  2899  001536  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2900  001538  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2901  00153A  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2902  00153C  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2903  00153E  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2904  001540  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2905  001542  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2906  001544  2B90               	incf	___aomod@counter& (0+255),f,b
  2907  001546                     l3272:
  2908                           
  2909                           ; BSR set to: 0
  2910  001546  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2911  001548  EFA8  F00A         	goto	u2971
  2912  00154C  EFAA  F00A         	goto	u2970
  2913  001550                     u2971:
  2914  001550  EF99  F00A         	goto	l3270
  2915  001554                     u2970:
  2916  001554                     l3274:
  2917                           
  2918                           ; BSR set to: 0
  2919  001554  5188               	movf	___aomod@divisor& (0+255),w,b
  2920  001556  5D80               	subwf	___aomod@dividend& (0+255),w,b
  2921  001558  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  2922  00155A  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2923  00155C  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2924  00155E  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2925  001560  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2926  001562  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2927  001564  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2928  001566  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2929  001568  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2930  00156A  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2931  00156C  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2932  00156E  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2933  001570  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2934  001572  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2935  001574  A0D8               	btfss	status,0,c
  2936  001576  EFBF  F00A         	goto	u2981
  2937  00157A  EFC1  F00A         	goto	u2980
  2938  00157E                     u2981:
  2939  00157E  EFD1  F00A         	goto	l3278
  2940  001582                     u2980:
  2941  001582                     
  2942                           ; BSR set to: 0
  2943  001582  5188               	movf	___aomod@divisor& (0+255),w,b
  2944  001584  5F80               	subwf	___aomod@dividend& (0+255),f,b
  2945  001586  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  2946  001588  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2947  00158A  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2948  00158C  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2949  00158E  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2950  001590  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2951  001592  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2952  001594  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2953  001596  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2954  001598  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2955  00159A  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2956  00159C  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2957  00159E  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2958  0015A0  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2959  0015A2                     l3278:
  2960                           
  2961                           ; BSR set to: 0
  2962  0015A2  90D8               	bcf	status,0,c
  2963  0015A4  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2964  0015A6  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2965  0015A8  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2966  0015AA  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2967  0015AC  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2968  0015AE  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2969  0015B0  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2970  0015B2  3388               	rrcf	___aomod@divisor& (0+255),f,b
  2971  0015B4                     
  2972                           ; BSR set to: 0
  2973  0015B4  2F90               	decfsz	___aomod@counter& (0+255),f,b
  2974  0015B6  EFAA  F00A         	goto	l3274
  2975  0015BA                     l3282:
  2976                           
  2977                           ; BSR set to: 0
  2978  0015BA  5191               	movf	___aomod@sign& (0+255),w,b
  2979  0015BC  B4D8               	btfsc	status,2,c
  2980  0015BE  EFE3  F00A         	goto	u2991
  2981  0015C2  EFE5  F00A         	goto	u2990
  2982  0015C6                     u2991:
  2983  0015C6  EFF5  F00A         	goto	l3286
  2984  0015CA                     u2990:
  2985  0015CA                     
  2986                           ; BSR set to: 0
  2987  0015CA  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  2988  0015CC  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  2989  0015CE  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  2990  0015D0  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  2991  0015D2  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  2992  0015D4  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  2993  0015D6  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  2994  0015D8  6D80               	negf	___aomod@dividend& (0+255),b
  2995  0015DA  0E00               	movlw	0
  2996  0015DC  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2997  0015DE  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2998  0015E0  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2999  0015E2  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3000  0015E4  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3001  0015E6  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3002  0015E8  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3003  0015EA                     l3286:
  3004                           
  3005                           ; BSR set to: 0
  3006  0015EA  C080  F080         	movff	___aomod@dividend,?___aomod
  3007  0015EE  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  3008  0015F2  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  3009  0015F6  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  3010  0015FA  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  3011  0015FE  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  3012  001602  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  3013  001606  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  3014  00160A                     
  3015                           ; BSR set to: 0
  3016  00160A  0012               	return		;funcret
  3017  00160C                     __end_of___aomod:
  3018                           	callstack 0
  3019                           
  3020 ;; *************** function ___aodiv *****************
  3021 ;; Defined at:
  3022 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  dividend        8   32[BANK0 ] long long 
  3025 ;;  divisor         8   40[BANK0 ] long long 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  quotient        8   50[BANK0 ] long long 
  3028 ;;  sign            1   49[BANK0 ] unsigned char 
  3029 ;;  counter         1   48[BANK0 ] unsigned char 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  8   32[BANK0 ] long long 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3039 ;;      Params:         0      16       0       0       0       0       0       0       0
  3040 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3042 ;;      Totals:         0      26       0       0       0       0       0       0       0
  3043 ;;Total ram usage:       26 bytes
  3044 ;; Hardware stack levels used: 1
  3045 ;; Hardware stack levels required when called: 11
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_dtoa
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text15
  3054  001194                     __ptext15:
  3055                           	callstack 0
  3056  001194                     ___aodiv:
  3057                           	callstack 14
  3058  001194  0E00               	movlw	0
  3059  001196  0100               	movlb	0	; () banked
  3060  001198  6F91               	movwf	___aodiv@sign& (0+255),b
  3061  00119A                     
  3062                           ; BSR set to: 0
  3063  00119A  BF8F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3064  00119C  EFD4  F008         	goto	u2870
  3065  0011A0  EFD2  F008         	goto	u2871
  3066  0011A4                     u2871:
  3067  0011A4  EFE6  F008         	goto	l3218
  3068  0011A8                     u2870:
  3069  0011A8                     
  3070                           ; BSR set to: 0
  3071  0011A8  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3072  0011AA  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3073  0011AC  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3074  0011AE  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3075  0011B0  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3076  0011B2  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3077  0011B4  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3078  0011B6  6D88               	negf	___aodiv@divisor& (0+255),b
  3079  0011B8  0E00               	movlw	0
  3080  0011BA  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3081  0011BC  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3082  0011BE  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3083  0011C0  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3084  0011C2  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3085  0011C4  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3086  0011C6  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3087  0011C8                     
  3088                           ; BSR set to: 0
  3089  0011C8  0E01               	movlw	1
  3090  0011CA  6F91               	movwf	___aodiv@sign& (0+255),b
  3091  0011CC                     l3218:
  3092                           
  3093                           ; BSR set to: 0
  3094  0011CC  BF87               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3095  0011CE  EFED  F008         	goto	u2880
  3096  0011D2  EFEB  F008         	goto	u2881
  3097  0011D6                     u2881:
  3098  0011D6  EFFF  F008         	goto	l3224
  3099  0011DA                     u2880:
  3100  0011DA                     
  3101                           ; BSR set to: 0
  3102  0011DA  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3103  0011DC  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3104  0011DE  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3105  0011E0  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3106  0011E2  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3107  0011E4  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3108  0011E6  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3109  0011E8  6D80               	negf	___aodiv@dividend& (0+255),b
  3110  0011EA  0E00               	movlw	0
  3111  0011EC  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3112  0011EE  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3113  0011F0  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3114  0011F2  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3115  0011F4  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3116  0011F6  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3117  0011F8  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3118  0011FA                     
  3119                           ; BSR set to: 0
  3120  0011FA  0E01               	movlw	1
  3121  0011FC  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  3122  0011FE                     l3224:
  3123                           
  3124                           ; BSR set to: 0
  3125  0011FE  EE20  F092         	lfsr	2,___aodiv@quotient
  3126  001202  0E07               	movlw	7
  3127  001204                     u2891:
  3128  001204  6ADE               	clrf	postinc2,c
  3129  001206  06E8               	decf	wreg,f,c
  3130  001208  E2FD               	bc	u2891
  3131  00120A                     
  3132                           ; BSR set to: 0
  3133  00120A  5188               	movf	___aodiv@divisor& (0+255),w,b
  3134  00120C  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3135  00120E  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3136  001210  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3137  001212  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3138  001214  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3139  001216  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3140  001218  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3141  00121A  B4D8               	btfsc	status,2,c
  3142  00121C  EF12  F009         	goto	u2901
  3143  001220  EF14  F009         	goto	u2900
  3144  001224                     u2901:
  3145  001224  EF66  F009         	goto	l3246
  3146  001228                     u2900:
  3147  001228                     
  3148                           ; BSR set to: 0
  3149  001228  0E01               	movlw	1
  3150  00122A  6F90               	movwf	___aodiv@counter& (0+255),b
  3151  00122C  EF22  F009         	goto	l3232
  3152  001230                     l3230:
  3153                           
  3154                           ; BSR set to: 0
  3155  001230  90D8               	bcf	status,0,c
  3156  001232  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  3157  001234  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3158  001236  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3159  001238  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3160  00123A  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3161  00123C  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3162  00123E  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3163  001240  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3164  001242  2B90               	incf	___aodiv@counter& (0+255),f,b
  3165  001244                     l3232:
  3166                           
  3167                           ; BSR set to: 0
  3168  001244  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3169  001246  EF27  F009         	goto	u2911
  3170  00124A  EF29  F009         	goto	u2910
  3171  00124E                     u2911:
  3172  00124E  EF18  F009         	goto	l3230
  3173  001252                     u2910:
  3174  001252                     l3234:
  3175                           
  3176                           ; BSR set to: 0
  3177  001252  90D8               	bcf	status,0,c
  3178  001254  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  3179  001256  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3180  001258  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3181  00125A  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3182  00125C  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3183  00125E  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3184  001260  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3185  001262  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3186  001264                     
  3187                           ; BSR set to: 0
  3188  001264  5188               	movf	___aodiv@divisor& (0+255),w,b
  3189  001266  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  3190  001268  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3191  00126A  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3192  00126C  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3193  00126E  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3194  001270  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3195  001272  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3196  001274  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3197  001276  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3198  001278  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3199  00127A  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3200  00127C  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3201  00127E  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3202  001280  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3203  001282  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3204  001284  A0D8               	btfss	status,0,c
  3205  001286  EF47  F009         	goto	u2921
  3206  00128A  EF49  F009         	goto	u2920
  3207  00128E                     u2921:
  3208  00128E  EF5A  F009         	goto	l3242
  3209  001292                     u2920:
  3210  001292                     
  3211                           ; BSR set to: 0
  3212  001292  5188               	movf	___aodiv@divisor& (0+255),w,b
  3213  001294  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  3214  001296  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3215  001298  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3216  00129A  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3217  00129C  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3218  00129E  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3219  0012A0  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3220  0012A2  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3221  0012A4  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3222  0012A6  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3223  0012A8  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3224  0012AA  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3225  0012AC  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3226  0012AE  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3227  0012B0  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3228  0012B2                     
  3229                           ; BSR set to: 0
  3230  0012B2  8192               	bsf	___aodiv@quotient& (0+255),0,b
  3231  0012B4                     l3242:
  3232                           
  3233                           ; BSR set to: 0
  3234  0012B4  90D8               	bcf	status,0,c
  3235  0012B6  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3236  0012B8  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3237  0012BA  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3238  0012BC  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3239  0012BE  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3240  0012C0  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3241  0012C2  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3242  0012C4  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  3243  0012C6                     
  3244                           ; BSR set to: 0
  3245  0012C6  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  3246  0012C8  EF29  F009         	goto	l3234
  3247  0012CC                     l3246:
  3248                           
  3249                           ; BSR set to: 0
  3250  0012CC  5191               	movf	___aodiv@sign& (0+255),w,b
  3251  0012CE  B4D8               	btfsc	status,2,c
  3252  0012D0  EF6C  F009         	goto	u2931
  3253  0012D4  EF6E  F009         	goto	u2930
  3254  0012D8                     u2931:
  3255  0012D8  EF7E  F009         	goto	l3250
  3256  0012DC                     u2930:
  3257  0012DC                     
  3258                           ; BSR set to: 0
  3259  0012DC  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3260  0012DE  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3261  0012E0  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3262  0012E2  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3263  0012E4  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3264  0012E6  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3265  0012E8  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3266  0012EA  6D92               	negf	___aodiv@quotient& (0+255),b
  3267  0012EC  0E00               	movlw	0
  3268  0012EE  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3269  0012F0  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3270  0012F2  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3271  0012F4  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3272  0012F6  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3273  0012F8  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3274  0012FA  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3275  0012FC                     l3250:
  3276                           
  3277                           ; BSR set to: 0
  3278  0012FC  C092  F080         	movff	___aodiv@quotient,?___aodiv
  3279  001300  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  3280  001304  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  3281  001308  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  3282  00130C  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  3283  001310  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  3284  001314  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  3285  001318  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  3286  00131C                     
  3287                           ; BSR set to: 0
  3288  00131C  0012               	return		;funcret
  3289  00131E                     __end_of___aodiv:
  3290                           	callstack 0
  3291                           
  3292 ;; *************** function _inicializa *****************
  3293 ;; Defined at:
  3294 ;;		line 26 in file "lcd.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3308 ;;      Params:         0       0       0       0       0       0       0       0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3311 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; Hardware stack levels required when called: 13
  3315 ;; This function calls:
  3316 ;;		_instr_wr
  3317 ;; This function is called by:
  3318 ;;		_printStartMessage
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text16
  3323  0027FA                     __ptext16:
  3324                           	callstack 0
  3325  0027FA                     _inicializa:
  3326                           	callstack 16
  3327  0027FA                     
  3328                           ;lcd.c: 27:     instr_wr(0x38);
  3329  0027FA  0E38               	movlw	56
  3330  0027FC  EC30  F014         	call	_instr_wr
  3331                           
  3332                           ;lcd.c: 28:     instr_wr(0x38);
  3333  002800  0E38               	movlw	56
  3334  002802  EC30  F014         	call	_instr_wr
  3335                           
  3336                           ;lcd.c: 29:     instr_wr(0x0E);
  3337  002806  0E0E               	movlw	14
  3338  002808  EC30  F014         	call	_instr_wr
  3339                           
  3340                           ;lcd.c: 30:     instr_wr(0x06);
  3341  00280C  0E06               	movlw	6
  3342  00280E  EC30  F014         	call	_instr_wr
  3343                           
  3344                           ;lcd.c: 31:     instr_wr(0x01);
  3345  002812  0E01               	movlw	1
  3346  002814  EC30  F014         	call	_instr_wr
  3347  002818                     
  3348                           ;lcd.c: 32:     initialized = 1;
  3349  002818  0E01               	movlw	1
  3350  00281A  0100               	movlb	0	; () banked
  3351  00281C  6FD9               	movwf	_initialized@lcd_kit$F215& (0+255),b
  3352  00281E                     
  3353                           ; BSR set to: 0
  3354  00281E  0012               	return		;funcret
  3355  002820                     __end_of_inicializa:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function _instr_wr *****************
  3359 ;; Defined at:
  3360 ;;		line 8 in file "lcd.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  inst            1    wreg     unsigned char 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  inst            1   33[BANK0 ] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0
  3375 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3377 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3378 ;;Total ram usage:        1 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 12
  3381 ;; This function calls:
  3382 ;;		_atraso_lcd
  3383 ;; This function is called by:
  3384 ;;		_printStartMessage
  3385 ;;		_inicializa
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text17
  3390  002860                     __ptext17:
  3391                           	callstack 0
  3392  002860                     _instr_wr:
  3393                           	callstack 17
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;incstack = 0
  3397                           ;instr_wr@inst stored from wreg
  3398  002860  0100               	movlb	0	; () banked
  3399  002862  6F81               	movwf	instr_wr@inst& (0+255),b
  3400  002864                     
  3401                           ;lcd.c: 9:     LATEbits.LATE1 = 1;
  3402  002864  828D               	bsf	141,1,c	;volatile
  3403                           
  3404                           ;lcd.c: 10:     LATEbits.LATE0 = 0;
  3405  002866  908D               	bcf	141,0,c	;volatile
  3406                           
  3407                           ;lcd.c: 11:     LATEbits.LATE2 = 0;
  3408  002868  948D               	bcf	141,2,c	;volatile
  3409  00286A                     
  3410                           ;lcd.c: 12:     LATD = inst;
  3411  00286A  C081  FF8C         	movff	instr_wr@inst,3980	;volatile
  3412  00286E                     
  3413                           ;lcd.c: 13:     LATEbits.LATE1 = 0;
  3414  00286E  928D               	bcf	141,1,c	;volatile
  3415  002870                     
  3416                           ;lcd.c: 14:     atraso_lcd();
  3417  002870  EC46  F014         	call	_atraso_lcd	;wreg free
  3418  002874  0012               	return		;funcret
  3419  002876                     __end_of_instr_wr:
  3420                           	callstack 0
  3421                           
  3422 ;; *************** function _escreve_texto *****************
  3423 ;; Defined at:
  3424 ;;		line 35 in file "lcd.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  linha           2   34[BANK0 ] PTR unsigned char 
  3427 ;;		 -> linha2(16), linha1(16), 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  i               2   36[BANK0 ] int 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3439 ;;      Params:         0       2       0       0       0       0       0       0       0
  3440 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3442 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3443 ;;Total ram usage:        4 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; Hardware stack levels required when called: 13
  3446 ;; This function calls:
  3447 ;;		_dado_wr
  3448 ;; This function is called by:
  3449 ;;		_printStartMessage
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text18
  3454  002588                     __ptext18:
  3455                           	callstack 0
  3456  002588                     _escreve_texto:
  3457                           	callstack 16
  3458  002588                     
  3459                           ;lcd.c: 36:     for (int i = 0; i < 16; i++) {
  3460  002588  0E00               	movlw	0
  3461  00258A  0100               	movlb	0	; () banked
  3462  00258C  6F85               	movwf	(escreve_texto@i+1)& (0+255),b
  3463  00258E  0E00               	movlw	0
  3464  002590  6F84               	movwf	escreve_texto@i& (0+255),b
  3465  002592                     l3616:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;lcd.c: 37:         dado_wr(linha[i]);
  3469  002592  5184               	movf	escreve_texto@i& (0+255),w,b
  3470  002594  2582               	addwf	escreve_texto@linha& (0+255),w,b
  3471  002596  6ED9               	movwf	fsr2l,c
  3472  002598  5185               	movf	(escreve_texto@i+1)& (0+255),w,b
  3473  00259A  2183               	addwfc	(escreve_texto@linha+1)& (0+255),w,b
  3474  00259C  6EDA               	movwf	fsr2h,c
  3475  00259E  50DF               	movf	indf2,w,c
  3476  0025A0  EC3B  F014         	call	_dado_wr
  3477  0025A4                     
  3478                           ;lcd.c: 38:     }
  3479  0025A4  0100               	movlb	0	; () banked
  3480  0025A6  4B84               	infsnz	escreve_texto@i& (0+255),f,b
  3481  0025A8  2B85               	incf	(escreve_texto@i+1)& (0+255),f,b
  3482  0025AA                     
  3483                           ; BSR set to: 0
  3484  0025AA  BF85               	btfsc	(escreve_texto@i+1)& (0+255),7,b
  3485  0025AC  EFE1  F012         	goto	u3481
  3486  0025B0  5185               	movf	(escreve_texto@i+1)& (0+255),w,b
  3487  0025B2  E109               	bnz	u3480
  3488  0025B4  0E10               	movlw	16
  3489  0025B6  5D84               	subwf	escreve_texto@i& (0+255),w,b
  3490  0025B8  A0D8               	btfss	status,0,c
  3491  0025BA  EFE1  F012         	goto	u3481
  3492  0025BE  EFE3  F012         	goto	u3480
  3493  0025C2                     u3481:
  3494  0025C2  EFC9  F012         	goto	l3616
  3495  0025C6                     u3480:
  3496  0025C6                     
  3497                           ; BSR set to: 0
  3498  0025C6  0012               	return		;funcret
  3499  0025C8                     __end_of_escreve_texto:
  3500                           	callstack 0
  3501                           
  3502 ;; *************** function _dado_wr *****************
  3503 ;; Defined at:
  3504 ;;		line 17 in file "lcd.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  texto           1    wreg     unsigned char 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  texto           1   33[BANK0 ] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3518 ;;      Params:         0       0       0       0       0       0       0       0       0
  3519 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3521 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3522 ;;Total ram usage:        1 bytes
  3523 ;; Hardware stack levels used: 1
  3524 ;; Hardware stack levels required when called: 12
  3525 ;; This function calls:
  3526 ;;		_atraso_lcd
  3527 ;; This function is called by:
  3528 ;;		_escreve_texto
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text19
  3533  002876                     __ptext19:
  3534                           	callstack 0
  3535  002876                     _dado_wr:
  3536                           	callstack 16
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;incstack = 0
  3540                           ;dado_wr@texto stored from wreg
  3541  002876  0100               	movlb	0	; () banked
  3542  002878  6F81               	movwf	dado_wr@texto& (0+255),b
  3543  00287A                     
  3544                           ;lcd.c: 18:     LATEbits.LATE1 = 1;
  3545  00287A  828D               	bsf	141,1,c	;volatile
  3546                           
  3547                           ;lcd.c: 19:     LATEbits.LATE0 = 1;
  3548  00287C  808D               	bsf	141,0,c	;volatile
  3549                           
  3550                           ;lcd.c: 20:     LATEbits.LATE2 = 0;
  3551  00287E  948D               	bcf	141,2,c	;volatile
  3552  002880                     
  3553                           ;lcd.c: 21:     LATD = texto;
  3554  002880  C081  FF8C         	movff	dado_wr@texto,3980	;volatile
  3555  002884                     
  3556                           ;lcd.c: 22:     LATEbits.LATE1 = 0;
  3557  002884  928D               	bcf	141,1,c	;volatile
  3558  002886                     
  3559                           ;lcd.c: 23:     atraso_lcd();
  3560  002886  EC46  F014         	call	_atraso_lcd	;wreg free
  3561  00288A  0012               	return		;funcret
  3562  00288C                     __end_of_dado_wr:
  3563                           	callstack 0
  3564                           
  3565 ;; *************** function _atraso_lcd *****************
  3566 ;; Defined at:
  3567 ;;		line 4 in file "lcd.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3583 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3584 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3585 ;;Total ram usage:        1 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; Hardware stack levels required when called: 11
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_instr_wr
  3592 ;;		_dado_wr
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text20
  3597  00288C                     __ptext20:
  3598                           	callstack 0
  3599  00288C                     _atraso_lcd:
  3600                           	callstack 17
  3601  00288C                     
  3602                           ;lcd.c: 5:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3603  00288C  0E14               	movlw	20
  3604  00288E  0100               	movlb	0	; () banked
  3605  002890  6F80               	movwf	??_atraso_lcd& (0+255),b
  3606  002892  0E79               	movlw	121
  3607  002894                     u3647:
  3608  002894  2EE8               	decfsz	wreg,f,c
  3609  002896  D7FE               	bra	u3647
  3610  002898  2F80               	decfsz	??_atraso_lcd& (0+255),f,b
  3611  00289A  D7FC               	bra	u3647
  3612  00289C  D000               	nop2	
  3613  00289E  0012               	return		;funcret
  3614  0028A0                     __end_of_atraso_lcd:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function _clear *****************
  3618 ;; Defined at:
  3619 ;;		line 41 in file "lcd.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  linha           2   32[BANK0 ] PTR unsigned char 
  3622 ;;		 -> linha2(16), linha1(16), 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  i               2   34[BANK0 ] int 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3634 ;;      Params:         0       2       0       0       0       0       0       0       0
  3635 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3637 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3638 ;;Total ram usage:        4 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; Hardware stack levels required when called: 11
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_printStartMessage
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text21
  3649  002608                     __ptext21:
  3650                           	callstack 0
  3651  002608                     _clear:
  3652                           	callstack 18
  3653  002608                     
  3654                           ;lcd.c: 41: void clear(char linha[16]);lcd.c: 42: {;lcd.c: 43:     for (int i = 0; i < 1
      +                          6; i++) {
  3655  002608  0E00               	movlw	0
  3656  00260A  0100               	movlb	0	; () banked
  3657  00260C  6F83               	movwf	(clear@i+1)& (0+255),b
  3658  00260E  0E00               	movlw	0
  3659  002610  6F82               	movwf	clear@i& (0+255),b
  3660  002612                     l3592:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;lcd.c: 44:         linha[i] = 0;
  3664  002612  5182               	movf	clear@i& (0+255),w,b
  3665  002614  2580               	addwf	clear@linha& (0+255),w,b
  3666  002616  6ED9               	movwf	fsr2l,c
  3667  002618  5183               	movf	(clear@i+1)& (0+255),w,b
  3668  00261A  2181               	addwfc	(clear@linha+1)& (0+255),w,b
  3669  00261C  6EDA               	movwf	fsr2h,c
  3670  00261E  0E00               	movlw	0
  3671  002620  6EDF               	movwf	indf2,c
  3672  002622                     
  3673                           ; BSR set to: 0
  3674                           ;lcd.c: 45:     }
  3675  002622  4B82               	infsnz	clear@i& (0+255),f,b
  3676  002624  2B83               	incf	(clear@i+1)& (0+255),f,b
  3677  002626                     
  3678                           ; BSR set to: 0
  3679  002626  BF83               	btfsc	(clear@i+1)& (0+255),7,b
  3680  002628  EF1F  F013         	goto	u3471
  3681  00262C  5183               	movf	(clear@i+1)& (0+255),w,b
  3682  00262E  E109               	bnz	u3470
  3683  002630  0E10               	movlw	16
  3684  002632  5D82               	subwf	clear@i& (0+255),w,b
  3685  002634  A0D8               	btfss	status,0,c
  3686  002636  EF1F  F013         	goto	u3471
  3687  00263A  EF21  F013         	goto	u3470
  3688  00263E                     u3471:
  3689  00263E  EF09  F013         	goto	l3592
  3690  002642                     u3470:
  3691  002642                     
  3692                           ; BSR set to: 0
  3693  002642  0012               	return		;funcret
  3694  002644                     __end_of_clear:
  3695                           	callstack 0
  3696                           
  3697 ;; *************** function _EEPROM_ReadByte *****************
  3698 ;; Defined at:
  3699 ;;		line 24 in file "Game.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  eepromAddres    1    wreg     unsigned char 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  eepromAddres    1   32[BANK0 ] unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      unsigned char 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0
  3714 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3716 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3717 ;;Total ram usage:        1 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; Hardware stack levels required when called: 11
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_printStartMessage
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text22
  3728  002758                     __ptext22:
  3729                           	callstack 0
  3730  002758                     _EEPROM_ReadByte:
  3731                           	callstack 18
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;incstack = 0
  3735                           ;EEPROM_ReadByte@eepromAddress stored from wreg
  3736  002758  0100               	movlb	0	; () banked
  3737  00275A  6F80               	movwf	EEPROM_ReadByte@eepromAddress& (0+255),b
  3738  00275C                     l160:
  3739  00275C  B0A6               	btfsc	4006,0,c	;volsfr
  3740  00275E  EFB3  F013         	goto	u3451
  3741  002762  EFB5  F013         	goto	u3450
  3742  002766                     u3451:
  3743  002766  EFAE  F013         	goto	l160
  3744  00276A                     u3450:
  3745  00276A  B2A6               	btfsc	4006,1,c	;volsfr
  3746  00276C  EFBA  F013         	goto	u3461
  3747  002770  EFBC  F013         	goto	u3460
  3748  002774                     u3461:
  3749  002774  EFAE  F013         	goto	l160
  3750  002778                     u3460:
  3751  002778                     
  3752                           ;Game.c: 27:     EEADR = eepromAddress;
  3753  002778  C080  FFA9         	movff	EEPROM_ReadByte@eepromAddress,4009	;volatile
  3754  00277C                     
  3755                           ;Game.c: 28:     RD = 1;
  3756  00277C  80A6               	bsf	4006,0,c	;volsfr
  3757  00277E                     
  3758                           ;Game.c: 29:     return(EEDATA);
  3759  00277E  50A8               	movf	168,w,c	;volatile
  3760  002780  0012               	return		;funcret
  3761  002782                     __end_of_EEPROM_ReadByte:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function _EEPROM_WriteByte *****************
  3765 ;; Defined at:
  3766 ;;		line 7 in file "Game.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  eepromAddres    1    wreg     unsigned char 
  3769 ;;  eepromData      1   32[BANK0 ] unsigned char 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  eepromAddres    1   33[BANK0 ] unsigned char 
  3772 ;;  gie_Status      1   34[BANK0 ] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3782 ;;      Params:         0       1       0       0       0       0       0       0       0
  3783 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3785 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3786 ;;Total ram usage:        3 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 11
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text23
  3797  002476                     __ptext23:
  3798                           	callstack 0
  3799  002476                     _EEPROM_WriteByte:
  3800                           	callstack 19
  3801                           
  3802                           ;incstack = 0
  3803                           ;EEPROM_WriteByte@eepromAddress stored from wreg
  3804  002476  0100               	movlb	0	; () banked
  3805  002478  6F81               	movwf	EEPROM_WriteByte@eepromAddress& (0+255),b
  3806  00247A                     l154:
  3807  00247A  B2A6               	btfsc	4006,1,c	;volsfr
  3808  00247C  EF42  F012         	goto	u2461
  3809  002480  EF44  F012         	goto	u2460
  3810  002484                     u2461:
  3811  002484  EF3D  F012         	goto	l154
  3812  002488                     u2460:
  3813  002488                     
  3814                           ;Game.c: 12:     EEADR=eepromAddress;
  3815  002488  C081  FFA9         	movff	EEPROM_WriteByte@eepromAddress,4009	;volatile
  3816  00248C                     
  3817                           ;Game.c: 13:     EEDATA=eepromData;
  3818  00248C  C080  FFA8         	movff	EEPROM_WriteByte@eepromData,4008	;volatile
  3819  002490                     
  3820                           ;Game.c: 14:     WREN=1;
  3821  002490  84A6               	bsf	4006,2,c	;volsfr
  3822  002492                     
  3823                           ;Game.c: 15:     gie_Status = GIE;
  3824  002492  0E00               	movlw	0
  3825  002494  BEF2               	btfsc	4082,7,c	;volatile
  3826  002496  0E01               	movlw	1
  3827  002498  0100               	movlb	0	; () banked
  3828  00249A  6F82               	movwf	EEPROM_WriteByte@gie_Status& (0+255),b
  3829  00249C                     
  3830                           ; BSR set to: 0
  3831                           ;Game.c: 16:     GIE = 0;
  3832  00249C  9EF2               	bcf	4082,7,c	;volatile
  3833  00249E                     
  3834                           ; BSR set to: 0
  3835                           ;Game.c: 17:     EECON2=0x55;
  3836  00249E  0E55               	movlw	85
  3837  0024A0  6EA7               	movwf	167,c	;volsfr
  3838  0024A2                     
  3839                           ; BSR set to: 0
  3840                           ;Game.c: 18:     EECON2=0xaa;
  3841  0024A2  0EAA               	movlw	170
  3842  0024A4  6EA7               	movwf	167,c	;volsfr
  3843  0024A6                     
  3844                           ; BSR set to: 0
  3845                           ;Game.c: 19:     WR=1;
  3846  0024A6  82A6               	bsf	4006,1,c	;volsfr
  3847  0024A8                     
  3848                           ; BSR set to: 0
  3849                           ;Game.c: 20:     GIE = gie_Status;
  3850  0024A8  B182               	btfsc	EEPROM_WriteByte@gie_Status& (0+255),0,b
  3851  0024AA  EF59  F012         	goto	u2471
  3852  0024AE  EF5C  F012         	goto	u2470
  3853  0024B2                     u2471:
  3854  0024B2  8EF2               	bsf	4082,7,c	;volatile
  3855  0024B4  EF5D  F012         	goto	u2485
  3856  0024B8                     u2470:
  3857  0024B8  9EF2               	bcf	4082,7,c	;volatile
  3858  0024BA                     u2485:
  3859  0024BA                     
  3860                           ;Game.c: 21:     WREN=0;
  3861  0024BA  94A6               	bcf	4006,2,c	;volsfr
  3862  0024BC  0012               	return		;funcret
  3863  0024BE                     __end_of_EEPROM_WriteByte:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function _interrupcao *****************
  3867 ;; Defined at:
  3868 ;;		line 46 in file "main.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3882 ;;      Params:         0       0       0       0       0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3884 ;;      Temps:          0       8       0       0       0       0       0       0       0
  3885 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3886 ;;Total ram usage:        8 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; Hardware stack levels required when called: 10
  3889 ;; This function calls:
  3890 ;;		_checkPlayerInput
  3891 ;;		_initGame
  3892 ;; This function is called by:
  3893 ;;		Interrupt level 2
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	intcode
  3898  000008                     __pintcode:
  3899                           	callstack 0
  3900  000008                     _interrupcao:
  3901                           	callstack 11
  3902                           
  3903                           ;incstack = 0
  3904  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3905  00000A  ED3A  F00C         	call	int_func,f	;refresh shadow registers
  3906                           
  3907                           	psect	intcode_body
  3908  001874                     __pintcode_body:
  3909                           	callstack 11
  3910  001874                     int_func:
  3911                           	callstack 11
  3912  001874  0006               	pop		; remove dummy address from shadow register refresh
  3913  001876  CFE1 F078          	movff	fsr1l,??_interrupcao
  3914  00187A  CFE2 F079          	movff	fsr1h,??_interrupcao+1
  3915  00187E  CFD9 F07A          	movff	fsr2l,??_interrupcao+2
  3916  001882  CFDA F07B          	movff	fsr2h,??_interrupcao+3
  3917  001886  CFF6 F07C          	movff	tblptrl,??_interrupcao+4
  3918  00188A  CFF7 F07D          	movff	tblptrh,??_interrupcao+5
  3919  00188E  CFF8 F07E          	movff	tblptru,??_interrupcao+6
  3920  001892  CFF5 F07F          	movff	tablat,??_interrupcao+7
  3921  001896                     
  3922                           ;main.c: 47:         INT1F = 0;
  3923  001896  A2F2               	btfss	4082,1,c	;volatile
  3924  001898  EF50  F00C         	goto	i2u356_41
  3925  00189C  EF52  F00C         	goto	i2u356_40
  3926  0018A0                     i2u356_41:
  3927  0018A0  EF63  F00C         	goto	i2l3796
  3928  0018A4                     i2u356_40:
  3929  0018A4                     
  3930                           ;main.c: 48:     }
  3931  0018A4  0100               	movlb	0	; () banked
  3932  0018A6  05DB               	decf	_playing& (0+255),w,b
  3933  0018A8  B4D8               	btfsc	status,2,c
  3934  0018AA  EF59  F00C         	goto	i2u357_41
  3935  0018AE  EF5B  F00C         	goto	i2u357_40
  3936  0018B2                     i2u357_41:
  3937  0018B2  EF5F  F00C         	goto	i2l3792
  3938  0018B6                     i2u357_40:
  3939  0018B6                     
  3940                           ; BSR set to: 0
  3941                           ;main.c: 49:     if (INT2F){
  3942  0018B6  ECC1  F013         	call	_initGame	;wreg free
  3943                           
  3944                           ;main.c: 50:         if (playing != 1){
  3945  0018BA  EF62  F00C         	goto	i2l3794
  3946  0018BE                     i2l3792:
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;main.c: 52:         }
  3950  0018BE  0E00               	movlw	0
  3951  0018C0  ECB8  F00B         	call	_checkPlayerInput
  3952  0018C4                     i2l3794:
  3953                           
  3954                           ;main.c: 54:             checkPlayerInput(2);
  3955  0018C4  92F2               	bcf	4082,1,c	;volatile
  3956  0018C6                     i2l3796:
  3957                           
  3958                           ;main.c: 56:         INT2F = 0;
  3959  0018C6  A0F0               	btfss	4080,0,c	;volatile
  3960  0018C8  EF68  F00C         	goto	i2u358_41
  3961  0018CC  EF6A  F00C         	goto	i2u358_40
  3962  0018D0                     i2u358_41:
  3963  0018D0  EF7B  F00C         	goto	i2l3806
  3964  0018D4                     i2u358_40:
  3965  0018D4                     
  3966                           ;main.c: 57:     }
  3967  0018D4  0100               	movlb	0	; () banked
  3968  0018D6  05DB               	decf	_playing& (0+255),w,b
  3969  0018D8  B4D8               	btfsc	status,2,c
  3970  0018DA  EF71  F00C         	goto	i2u359_41
  3971  0018DE  EF73  F00C         	goto	i2u359_40
  3972  0018E2                     i2u359_41:
  3973  0018E2  EF77  F00C         	goto	i2l3802
  3974  0018E6                     i2u359_40:
  3975  0018E6                     
  3976                           ; BSR set to: 0
  3977                           ;main.c: 58:     if (TMR0IF){
  3978  0018E6  ECC1  F013         	call	_initGame	;wreg free
  3979                           
  3980                           ;main.c: 59:         if(cont == 0xFFFFFFFF){
  3981  0018EA  EF7A  F00C         	goto	i2l3804
  3982  0018EE                     i2l3802:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;main.c: 61:         }
  3986  0018EE  0E01               	movlw	1
  3987  0018F0  ECB8  F00B         	call	_checkPlayerInput
  3988  0018F4                     i2l3804:
  3989                           
  3990                           ;main.c: 63:             cont++;
  3991  0018F4  90F0               	bcf	4080,0,c	;volatile
  3992  0018F6                     i2l3806:
  3993                           
  3994                           ;main.c: 65:         TMR0H = 0x3C;
  3995  0018F6  A2F0               	btfss	4080,1,c	;volatile
  3996  0018F8  EF80  F00C         	goto	i2u360_41
  3997  0018FC  EF82  F00C         	goto	i2u360_40
  3998  001900                     i2u360_41:
  3999  001900  EF93  F00C         	goto	i2l3816
  4000  001904                     i2u360_40:
  4001  001904                     
  4002                           ;main.c: 66:         TMR0L = 0xAF;
  4003  001904  0100               	movlb	0	; () banked
  4004  001906  05DB               	decf	_playing& (0+255),w,b
  4005  001908  B4D8               	btfsc	status,2,c
  4006  00190A  EF89  F00C         	goto	i2u361_41
  4007  00190E  EF8B  F00C         	goto	i2u361_40
  4008  001912                     i2u361_41:
  4009  001912  EF8F  F00C         	goto	i2l3812
  4010  001916                     i2u361_40:
  4011  001916                     
  4012                           ; BSR set to: 0
  4013                           ;main.c: 67:         TMR0IF = 0;
  4014  001916  ECC1  F013         	call	_initGame	;wreg free
  4015                           
  4016                           ;main.c: 68:     }
  4017  00191A  EF92  F00C         	goto	i2l3814
  4018  00191E                     i2l3812:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;main.c: 70: 
  4022  00191E  0E02               	movlw	2
  4023  001920  ECB8  F00B         	call	_checkPlayerInput
  4024  001924                     i2l3814:
  4025                           
  4026                           ;main.c: 72:     OSCCON = 0b01100000;
  4027  001924  92F0               	bcf	4080,1,c	;volatile
  4028  001926                     i2l3816:
  4029                           
  4030                           ;main.c: 74:     TRISE = 0x00;
  4031  001926  A4F2               	btfss	4082,2,c	;volatile
  4032  001928  EF98  F00C         	goto	i2u362_41
  4033  00192C  EF9A  F00C         	goto	i2u362_40
  4034  001930                     i2u362_41:
  4035  001930  EFA2  F00C         	goto	i2l95
  4036  001934                     i2u362_40:
  4037  001934                     
  4038                           ;main.c: 79:     cont = 0;
  4039  001934  0100               	movlb	0	; () banked
  4040  001936  4BD7               	infsnz	_cont& (0+255),f,b
  4041  001938  2BD8               	incf	(_cont+1)& (0+255),f,b
  4042  00193A                     
  4043                           ; BSR set to: 0
  4044                           ;main.c: 81:     setupInt();
  4045  00193A  0E3C               	movlw	60
  4046  00193C  6ED7               	movwf	215,c	;volatile
  4047  00193E                     
  4048                           ; BSR set to: 0
  4049                           ;main.c: 82:     setupTmr0();
  4050  00193E  0EAF               	movlw	175
  4051  001940  6ED6               	movwf	214,c	;volatile
  4052  001942                     
  4053                           ; BSR set to: 0
  4054                           ;main.c: 83:     printStartMessage();
  4055  001942  94F2               	bcf	4082,2,c	;volatile
  4056  001944                     i2l95:
  4057  001944  C07F  FFF5         	movff	??_interrupcao+7,tablat
  4058  001948  C07E  FFF8         	movff	??_interrupcao+6,tblptru
  4059  00194C  C07D  FFF7         	movff	??_interrupcao+5,tblptrh
  4060  001950  C07C  FFF6         	movff	??_interrupcao+4,tblptrl
  4061  001954  C07B  FFDA         	movff	??_interrupcao+3,fsr2h
  4062  001958  C07A  FFD9         	movff	??_interrupcao+2,fsr2l
  4063  00195C  C079  FFE2         	movff	??_interrupcao+1,fsr1h
  4064  001960  C078  FFE1         	movff	??_interrupcao,fsr1l
  4065  001964  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4066  001966  0011               	retfie		f
  4067  001968                     __end_of_interrupcao:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _initGame *****************
  4071 ;; Defined at:
  4072 ;;		line 122 in file "Game.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4086 ;;      Params:         0       0       0       0       0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4089 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used: 1
  4092 ;; Hardware stack levels required when called: 9
  4093 ;; This function calls:
  4094 ;;		_generateGameSequence
  4095 ;;		_printAttentionMessage
  4096 ;;		_printPlayingMessage
  4097 ;;		_showGameSequence
  4098 ;; This function is called by:
  4099 ;;		_interrupcao
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text25
  4104  002782                     __ptext25:
  4105                           	callstack 0
  4106  002782                     _initGame:
  4107                           	callstack 11
  4108  002782                     
  4109                           ;Game.c: 123:     LATD = 0b11111111;
  4110  002782  688C               	setf	140,c	;volatile
  4111  002784                     
  4112                           ;Game.c: 124:     playing = 1;
  4113  002784  0E01               	movlw	1
  4114  002786  0100               	movlb	0	; () banked
  4115  002788  6FDB               	movwf	_playing& (0+255),b
  4116                           
  4117                           ;Game.c: 125:     level = 1;
  4118  00278A  0E01               	movlw	1
  4119  00278C  6E5D               	movwf	_level^0,c
  4120                           
  4121                           ;Game.c: 126:     playerPosition = 0;
  4122  00278E  0E00               	movlw	0
  4123  002790  6E5E               	movwf	_playerPosition^0,c
  4124  002792                     
  4125                           ; BSR set to: 0
  4126                           ;Game.c: 127:     generateGameSequence();
  4127  002792  EC9B  F011         	call	_generateGameSequence	;wreg free
  4128  002796                     
  4129                           ;Game.c: 128:     printAttentionMessage();
  4130  002796  ECD8  F010         	call	_printAttentionMessage	;wreg free
  4131  00279A                     
  4132                           ;Game.c: 129:     showGameSequence();
  4133  00279A  ECF4  F00F         	call	_showGameSequence	;wreg free
  4134  00279E                     
  4135                           ;Game.c: 130:     printPlayingMessage(1, level);
  4136  00279E  C05D  F070         	movff	_level,printPlayingMessage@total
  4137  0027A2  0E01               	movlw	1
  4138  0027A4  EC30  F010         	call	_printPlayingMessage
  4139  0027A8  0012               	return		;funcret
  4140  0027AA                     __end_of_initGame:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _generateGameSequence *****************
  4144 ;; Defined at:
  4145 ;;		line 104 in file "Game.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  toc             2   24[COMRAM] int 
  4150 ;;  i               1   26[COMRAM] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0
  4161 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4163 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4164 ;;Total ram usage:        3 bytes
  4165 ;; Hardware stack levels used: 1
  4166 ;; Hardware stack levels required when called: 2
  4167 ;; This function calls:
  4168 ;;		___awmod
  4169 ;;		_rand
  4170 ;;		_srand
  4171 ;; This function is called by:
  4172 ;;		_initGame
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text26
  4177  002336                     __ptext26:
  4178                           	callstack 0
  4179  002336                     _generateGameSequence:
  4180                           	callstack 17
  4181  002336                     
  4182                           ;Game.c: 105:     byte i;;Game.c: 106:     int toc = cont;
  4183  002336  C0D7  F019         	movff	_cont,generateGameSequence@toc
  4184  00233A  C0D8  F01A         	movff	_cont+1,generateGameSequence@toc+1
  4185  00233E                     
  4186                           ;Game.c: 107:     srand(toc);
  4187  00233E  C019  F001         	movff	generateGameSequence@toc,srand@s
  4188  002342  C01A  F002         	movff	generateGameSequence@toc+1,srand@s+1
  4189  002346  ECD5  F013         	call	_srand	;wreg free
  4190  00234A                     
  4191                           ;Game.c: 108:     for(i = 0 ; i < 25 ; i++){
  4192  00234A  0E00               	movlw	0
  4193  00234C  6E1B               	movwf	generateGameSequence@i^0,c
  4194  00234E                     i2l2808:
  4195                           
  4196                           ;Game.c: 109:         gameSequence[i] = (rand() % 3);
  4197  00234E  0E20               	movlw	low _gameSequence
  4198  002350  241B               	addwf	generateGameSequence@i^0,w,c
  4199  002352  6ED9               	movwf	fsr2l,c
  4200  002354  6ADA               	clrf	fsr2h,c
  4201  002356  0E01               	movlw	high _gameSequence
  4202  002358  22DA               	addwfc	fsr2h,f,c
  4203  00235A  EC6C  F010         	call	_rand	;wreg free
  4204  00235E  C00D  F013         	movff	?_rand,___awmod@dividend
  4205  002362  C00E  F014         	movff	?_rand+1,___awmod@dividend+1
  4206  002366  0E00               	movlw	0
  4207  002368  6E16               	movwf	(___awmod@divisor+1)^0,c
  4208  00236A  0E03               	movlw	3
  4209  00236C  6E15               	movwf	___awmod@divisor^0,c
  4210  00236E  EC47  F00E         	call	___awmod	;wreg free
  4211  002372  5013               	movf	?___awmod^0,w,c
  4212  002374  6EDF               	movwf	indf2,c
  4213  002376                     
  4214                           ;Game.c: 110:     }
  4215  002376  2A1B               	incf	generateGameSequence@i^0,f,c
  4216  002378  0E18               	movlw	24
  4217  00237A  641B               	cpfsgt	generateGameSequence@i^0,c
  4218  00237C  EFC2  F011         	goto	i2u234_41
  4219  002380  EFC4  F011         	goto	i2u234_40
  4220  002384                     i2u234_41:
  4221  002384  EFA7  F011         	goto	i2l2808
  4222  002388                     i2u234_40:
  4223  002388  0012               	return		;funcret
  4224  00238A                     __end_of_generateGameSequence:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function _srand *****************
  4228 ;; Defined at:
  4229 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  s               2    0[COMRAM] unsigned int 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4243 ;;      Params:         2       0       0       0       0       0       0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4245 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4246 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4247 ;;Total ram usage:        6 bytes
  4248 ;; Hardware stack levels used: 1
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_generateGameSequence
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text27
  4257  0027AA                     __ptext27:
  4258                           	callstack 0
  4259  0027AA                     _srand:
  4260                           	callstack 18
  4261  0027AA  0EFF               	movlw	255
  4262  0027AC  6E03               	movwf	??_srand^0,c
  4263  0027AE  0EFF               	movlw	255
  4264  0027B0  6E04               	movwf	(??_srand+1)^0,c
  4265  0027B2  C001  F005         	movff	srand@s,??_srand+2
  4266  0027B6  C002  F006         	movff	srand@s+1,??_srand+3
  4267  0027BA  5003               	movf	??_srand^0,w,c
  4268  0027BC  2605               	addwf	(??_srand+2)^0,f,c
  4269  0027BE  5004               	movf	(??_srand+1)^0,w,c
  4270  0027C0  2206               	addwfc	(??_srand+3)^0,f,c
  4271  0027C2  C005  F0DC         	movff	??_srand+2,_seed
  4272  0027C6  C006  F0DD         	movff	??_srand+3,_seed+1
  4273  0027CA  0100               	movlb	0	; () banked
  4274  0027CC  6BDE               	clrf	(_seed+2)& (0+255),b
  4275  0027CE  6BDF               	clrf	(_seed+3)& (0+255),b
  4276  0027D0                     
  4277                           ; BSR set to: 0
  4278  0027D0  0012               	return		;funcret
  4279  0027D2                     __end_of_srand:
  4280                           	callstack 0
  4281                           
  4282 ;; *************** function _rand *****************
  4283 ;; Defined at:
  4284 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;		None
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  2   12[COMRAM] int 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4298 ;;      Params:         2       0       0       0       0       0       0       0       0
  4299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4300 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4301 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4302 ;;Total ram usage:        6 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 1
  4305 ;; This function calls:
  4306 ;;		___lmul
  4307 ;; This function is called by:
  4308 ;;		_generateGameSequence
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text28
  4313  0020D8                     __ptext28:
  4314                           	callstack 0
  4315  0020D8                     _rand:
  4316                           	callstack 17
  4317  0020D8  C0DC  F001         	movff	_seed,___lmul@multiplier
  4318  0020DC  C0DD  F002         	movff	_seed+1,___lmul@multiplier+1
  4319  0020E0  C0DE  F003         	movff	_seed+2,___lmul@multiplier+2
  4320  0020E4  C0DF  F004         	movff	_seed+3,___lmul@multiplier+3
  4321  0020E8  0E2D               	movlw	45
  4322  0020EA  6E05               	movwf	___lmul@multiplicand^0,c
  4323  0020EC  0E7F               	movlw	127
  4324  0020EE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4325  0020F0  0E95               	movlw	149
  4326  0020F2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4327  0020F4  0E4C               	movlw	76
  4328  0020F6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4329  0020F8  ECA3  F010         	call	___lmul	;wreg free
  4330  0020FC  0E01               	movlw	1
  4331  0020FE  2401               	addwf	?___lmul^0,w,c
  4332  002100  0100               	movlb	0	; () banked
  4333  002102  6FDC               	movwf	_seed& (0+255),b
  4334  002104  0E00               	movlw	0
  4335  002106  2002               	addwfc	(?___lmul+1)^0,w,c
  4336  002108  6FDD               	movwf	(_seed+1)& (0+255),b
  4337  00210A  0E00               	movlw	0
  4338  00210C  2003               	addwfc	(?___lmul+2)^0,w,c
  4339  00210E  6FDE               	movwf	(_seed+2)& (0+255),b
  4340  002110  0E00               	movlw	0
  4341  002112  2004               	addwfc	(?___lmul+3)^0,w,c
  4342  002114  6FDF               	movwf	(_seed+3)& (0+255),b
  4343  002116                     
  4344                           ; BSR set to: 0
  4345  002116  C0DC  F00F         	movff	_seed,??_rand
  4346  00211A  C0DD  F010         	movff	_seed+1,??_rand+1
  4347  00211E  C0DE  F011         	movff	_seed+2,??_rand+2
  4348  002122  C0DF  F012         	movff	_seed+3,??_rand+3
  4349  002126  0E12               	movlw	18
  4350  002128  EF9B  F010         	goto	i2u218_40
  4351  00212C                     i2u218_45:
  4352  00212C  90D8               	bcf	status,0,c
  4353  00212E  3212               	rrcf	(??_rand+3)^0,f,c
  4354  002130  3211               	rrcf	(??_rand+2)^0,f,c
  4355  002132  3210               	rrcf	(??_rand+1)^0,f,c
  4356  002134  320F               	rrcf	??_rand^0,f,c
  4357  002136                     i2u218_40:
  4358  002136  2EE8               	decfsz	wreg,f,c
  4359  002138  EF96  F010         	goto	i2u218_45
  4360  00213C  C00F  F00D         	movff	??_rand,?_rand
  4361  002140  C010  F00E         	movff	??_rand+1,?_rand+1
  4362  002144                     
  4363                           ; BSR set to: 0
  4364  002144  0012               	return		;funcret
  4365  002146                     __end_of_rand:
  4366                           	callstack 0
  4367                           
  4368 ;; *************** function ___lmul *****************
  4369 ;; Defined at:
  4370 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  multiplier      4    0[COMRAM] unsigned long 
  4373 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  product         4    8[COMRAM] unsigned long 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  4    0[COMRAM] unsigned long 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4385 ;;      Params:         8       0       0       0       0       0       0       0       0
  4386 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4388 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4389 ;;Total ram usage:       12 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_rand
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text29
  4399  002146                     __ptext29:
  4400                           	callstack 0
  4401  002146                     ___lmul:
  4402                           	callstack 17
  4403  002146  0E00               	movlw	0
  4404  002148  6E09               	movwf	___lmul@product^0,c
  4405  00214A  0E00               	movlw	0
  4406  00214C  6E0A               	movwf	(___lmul@product+1)^0,c
  4407  00214E  0E00               	movlw	0
  4408  002150  6E0B               	movwf	(___lmul@product+2)^0,c
  4409  002152  0E00               	movlw	0
  4410  002154  6E0C               	movwf	(___lmul@product+3)^0,c
  4411  002156                     i2l2486:
  4412  002156  A001               	btfss	___lmul@multiplier^0,0,c
  4413  002158  EFB0  F010         	goto	i2u211_41
  4414  00215C  EFB2  F010         	goto	i2u211_40
  4415  002160                     i2u211_41:
  4416  002160  EFBA  F010         	goto	i2l2490
  4417  002164                     i2u211_40:
  4418  002164  5005               	movf	___lmul@multiplicand^0,w,c
  4419  002166  2609               	addwf	___lmul@product^0,f,c
  4420  002168  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4421  00216A  220A               	addwfc	(___lmul@product+1)^0,f,c
  4422  00216C  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4423  00216E  220B               	addwfc	(___lmul@product+2)^0,f,c
  4424  002170  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4425  002172  220C               	addwfc	(___lmul@product+3)^0,f,c
  4426  002174                     i2l2490:
  4427  002174  90D8               	bcf	status,0,c
  4428  002176  3605               	rlcf	___lmul@multiplicand^0,f,c
  4429  002178  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4430  00217A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4431  00217C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4432  00217E  90D8               	bcf	status,0,c
  4433  002180  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4434  002182  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4435  002184  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4436  002186  3201               	rrcf	___lmul@multiplier^0,f,c
  4437  002188  5001               	movf	___lmul@multiplier^0,w,c
  4438  00218A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4439  00218C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4440  00218E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4441  002190  A4D8               	btfss	status,2,c
  4442  002192  EFCD  F010         	goto	i2u212_41
  4443  002196  EFCF  F010         	goto	i2u212_40
  4444  00219A                     i2u212_41:
  4445  00219A  EFAB  F010         	goto	i2l2486
  4446  00219E                     i2u212_40:
  4447  00219E  C009  F001         	movff	___lmul@product,?___lmul
  4448  0021A2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4449  0021A6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4450  0021AA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4451  0021AE  0012               	return		;funcret
  4452  0021B0                     __end_of___lmul:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function ___awmod *****************
  4456 ;; Defined at:
  4457 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  dividend        2   18[COMRAM] int 
  4460 ;;  divisor         2   20[COMRAM] int 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  sign            1   23[COMRAM] unsigned char 
  4463 ;;  counter         1   22[COMRAM] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  2   18[COMRAM] int 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4473 ;;      Params:         4       0       0       0       0       0       0       0       0
  4474 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4476 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4477 ;;Total ram usage:        6 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_generateGameSequence
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text30
  4487  001C8E                     __ptext30:
  4488                           	callstack 0
  4489  001C8E                     ___awmod:
  4490                           	callstack 18
  4491  001C8E  0E00               	movlw	0
  4492  001C90  6E18               	movwf	___awmod@sign^0,c
  4493  001C92  BE14               	btfsc	(___awmod@dividend+1)^0,7,c
  4494  001C94  EF50  F00E         	goto	i2u219_40
  4495  001C98  EF4E  F00E         	goto	i2u219_41
  4496  001C9C                     i2u219_41:
  4497  001C9C  EF56  F00E         	goto	i2l2592
  4498  001CA0                     i2u219_40:
  4499  001CA0  6C13               	negf	___awmod@dividend^0,c
  4500  001CA2  1E14               	comf	(___awmod@dividend+1)^0,f,c
  4501  001CA4  B0D8               	btfsc	status,0,c
  4502  001CA6  2A14               	incf	(___awmod@dividend+1)^0,f,c
  4503  001CA8  0E01               	movlw	1
  4504  001CAA  6E18               	movwf	___awmod@sign^0,c
  4505  001CAC                     i2l2592:
  4506  001CAC  BE16               	btfsc	(___awmod@divisor+1)^0,7,c
  4507  001CAE  EF5D  F00E         	goto	i2u220_40
  4508  001CB2  EF5B  F00E         	goto	i2u220_41
  4509  001CB6                     i2u220_41:
  4510  001CB6  EF61  F00E         	goto	i2l2596
  4511  001CBA                     i2u220_40:
  4512  001CBA  6C15               	negf	___awmod@divisor^0,c
  4513  001CBC  1E16               	comf	(___awmod@divisor+1)^0,f,c
  4514  001CBE  B0D8               	btfsc	status,0,c
  4515  001CC0  2A16               	incf	(___awmod@divisor+1)^0,f,c
  4516  001CC2                     i2l2596:
  4517  001CC2  5015               	movf	___awmod@divisor^0,w,c
  4518  001CC4  1016               	iorwf	(___awmod@divisor+1)^0,w,c
  4519  001CC6  B4D8               	btfsc	status,2,c
  4520  001CC8  EF68  F00E         	goto	i2u221_41
  4521  001CCC  EF6A  F00E         	goto	i2u221_40
  4522  001CD0                     i2u221_41:
  4523  001CD0  EF8E  F00E         	goto	i2l2612
  4524  001CD4                     i2u221_40:
  4525  001CD4  0E01               	movlw	1
  4526  001CD6  6E17               	movwf	___awmod@counter^0,c
  4527  001CD8  EF72  F00E         	goto	i2l2602
  4528  001CDC                     i2l2600:
  4529  001CDC  90D8               	bcf	status,0,c
  4530  001CDE  3615               	rlcf	___awmod@divisor^0,f,c
  4531  001CE0  3616               	rlcf	(___awmod@divisor+1)^0,f,c
  4532  001CE2  2A17               	incf	___awmod@counter^0,f,c
  4533  001CE4                     i2l2602:
  4534  001CE4  AE16               	btfss	(___awmod@divisor+1)^0,7,c
  4535  001CE6  EF77  F00E         	goto	i2u222_41
  4536  001CEA  EF79  F00E         	goto	i2u222_40
  4537  001CEE                     i2u222_41:
  4538  001CEE  EF6E  F00E         	goto	i2l2600
  4539  001CF2                     i2u222_40:
  4540  001CF2                     i2l2604:
  4541  001CF2  5015               	movf	___awmod@divisor^0,w,c
  4542  001CF4  5C13               	subwf	___awmod@dividend^0,w,c
  4543  001CF6  5016               	movf	(___awmod@divisor+1)^0,w,c
  4544  001CF8  5814               	subwfb	(___awmod@dividend+1)^0,w,c
  4545  001CFA  A0D8               	btfss	status,0,c
  4546  001CFC  EF82  F00E         	goto	i2u223_41
  4547  001D00  EF84  F00E         	goto	i2u223_40
  4548  001D04                     i2u223_41:
  4549  001D04  EF88  F00E         	goto	i2l2608
  4550  001D08                     i2u223_40:
  4551  001D08  5015               	movf	___awmod@divisor^0,w,c
  4552  001D0A  5E13               	subwf	___awmod@dividend^0,f,c
  4553  001D0C  5016               	movf	(___awmod@divisor+1)^0,w,c
  4554  001D0E  5A14               	subwfb	(___awmod@dividend+1)^0,f,c
  4555  001D10                     i2l2608:
  4556  001D10  90D8               	bcf	status,0,c
  4557  001D12  3216               	rrcf	(___awmod@divisor+1)^0,f,c
  4558  001D14  3215               	rrcf	___awmod@divisor^0,f,c
  4559  001D16  2E17               	decfsz	___awmod@counter^0,f,c
  4560  001D18  EF79  F00E         	goto	i2l2604
  4561  001D1C                     i2l2612:
  4562  001D1C  5018               	movf	___awmod@sign^0,w,c
  4563  001D1E  B4D8               	btfsc	status,2,c
  4564  001D20  EF94  F00E         	goto	i2u224_41
  4565  001D24  EF96  F00E         	goto	i2u224_40
  4566  001D28                     i2u224_41:
  4567  001D28  EF9A  F00E         	goto	i2l2616
  4568  001D2C                     i2u224_40:
  4569  001D2C  6C13               	negf	___awmod@dividend^0,c
  4570  001D2E  1E14               	comf	(___awmod@dividend+1)^0,f,c
  4571  001D30  B0D8               	btfsc	status,0,c
  4572  001D32  2A14               	incf	(___awmod@dividend+1)^0,f,c
  4573  001D34                     i2l2616:
  4574  001D34  C013  F013         	movff	___awmod@dividend,?___awmod
  4575  001D38  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  4576  001D3C  0012               	return		;funcret
  4577  001D3E                     __end_of___awmod:
  4578                           	callstack 0
  4579                           
  4580 ;; *************** function _checkPlayerInput *****************
  4581 ;; Defined at:
  4582 ;;		line 133 in file "Game.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;  option          1    wreg     unsigned char 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  option          1   89[COMRAM] unsigned char 
  4587 ;;  record          1   90[COMRAM] unsigned char 
  4588 ;;  record          1   91[COMRAM] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4598 ;;      Params:         0       0       0       0       0       0       0       0       0
  4599 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4600 ;;      Temps:          0       7       0       0       0       0       0       0       0
  4601 ;;      Totals:         3       7       0       0       0       0       0       0       0
  4602 ;;Total ram usage:       10 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 9
  4605 ;; This function calls:
  4606 ;;		_printAttentionMessage
  4607 ;;		_printErrorMessage
  4608 ;;		_printPlayingMessage
  4609 ;;		_printSucessMessage
  4610 ;;		_printWinnerMessage
  4611 ;;		_showGameSequence
  4612 ;;		i2_EEPROM_ReadByte
  4613 ;;		i2_EEPROM_WriteByte
  4614 ;;		i2_printStartMessage
  4615 ;; This function is called by:
  4616 ;;		_interrupcao
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text31
  4621  001770                     __ptext31:
  4622                           	callstack 0
  4623  001770                     _checkPlayerInput:
  4624                           	callstack 11
  4625                           
  4626                           ;incstack = 0
  4627                           ;checkPlayerInput@option stored from wreg
  4628  001770  6E5A               	movwf	checkPlayerInput@option^0,c
  4629  001772                     
  4630                           ;Game.c: 134:     if (option == gameSequence[playerPosition]){
  4631  001772  0E20               	movlw	low _gameSequence
  4632  001774  245E               	addwf	_playerPosition^0,w,c
  4633  001776  6ED9               	movwf	fsr2l,c
  4634  001778  6ADA               	clrf	fsr2h,c
  4635  00177A  0E01               	movlw	high _gameSequence
  4636  00177C  22DA               	addwfc	fsr2h,f,c
  4637  00177E  505A               	movf	checkPlayerInput@option^0,w,c
  4638  001780  18DE               	xorwf	postinc2,w,c
  4639  001782  A4D8               	btfss	status,2,c
  4640  001784  EFC6  F00B         	goto	i2u350_41
  4641  001788  EFC8  F00B         	goto	i2u350_40
  4642  00178C                     i2u350_41:
  4643  00178C  EF0E  F00C         	goto	i2l3754
  4644  001790                     i2u350_40:
  4645  001790                     
  4646                           ;Game.c: 135:         playerPosition ++;
  4647  001790  2A5E               	incf	_playerPosition^0,f,c
  4648  001792                     
  4649                           ;Game.c: 136:         if (playerPosition == 25){
  4650  001792  0E19               	movlw	25
  4651  001794  185E               	xorwf	_playerPosition^0,w,c
  4652  001796  A4D8               	btfss	status,2,c
  4653  001798  EFD0  F00B         	goto	i2u351_41
  4654  00179C  EFD2  F00B         	goto	i2u351_40
  4655  0017A0                     i2u351_41:
  4656  0017A0  EFEE  F00B         	goto	i2l3738
  4657  0017A4                     i2u351_40:
  4658  0017A4                     
  4659                           ;Game.c: 137:             printSucessMessage();
  4660  0017A4  EC72  F00F         	call	_printSucessMessage	;wreg free
  4661                           
  4662                           ;Game.c: 138:             printWinnerMessage();
  4663  0017A8  EC31  F00F         	call	_printWinnerMessage	;wreg free
  4664  0017AC                     
  4665                           ;Game.c: 139:             byte record = EEPROM_ReadByte(0);
  4666  0017AC  0E00               	movlw	0
  4667  0017AE  ECE9  F013         	call	i2_EEPROM_ReadByte
  4668  0017B2  6E5B               	movwf	checkPlayerInput@record^0,c
  4669  0017B4                     
  4670                           ;Game.c: 140:             if (25 > record)
  4671  0017B4  0E19               	movlw	25
  4672  0017B6  605B               	cpfslt	checkPlayerInput@record^0,c
  4673  0017B8  EFE0  F00B         	goto	i2u352_41
  4674  0017BC  EFE2  F00B         	goto	i2u352_40
  4675  0017C0                     i2u352_41:
  4676  0017C0  EFE7  F00B         	goto	i2l3734
  4677  0017C4                     i2u352_40:
  4678  0017C4                     
  4679                           ;Game.c: 141:                 EEPROM_WriteByte(0, 25);
  4680  0017C4  0E19               	movlw	25
  4681  0017C6  6E01               	movwf	i2EEPROM_WriteByte@eepromData^0,c
  4682  0017C8  0E00               	movlw	0
  4683  0017CA  EC5F  F012         	call	i2_EEPROM_WriteByte
  4684  0017CE                     i2l3734:
  4685                           
  4686                           ;Game.c: 142:             playing = 0;
  4687  0017CE  0E00               	movlw	0
  4688  0017D0  0100               	movlb	0	; () banked
  4689  0017D2  6FDB               	movwf	_playing& (0+255),b
  4690  0017D4                     
  4691                           ; BSR set to: 0
  4692                           ;Game.c: 143:             printStartMessage();
  4693  0017D4  ECEA  F00E         	call	i2_printStartMessage	;wreg free
  4694                           
  4695                           ;Game.c: 144:         }
  4696  0017D8  EF39  F00C         	goto	i2l207
  4697  0017DC                     i2l3738:
  4698  0017DC  505D               	movf	_level^0,w,c
  4699  0017DE  185E               	xorwf	_playerPosition^0,w,c
  4700  0017E0  A4D8               	btfss	status,2,c
  4701  0017E2  EFF5  F00B         	goto	i2u353_41
  4702  0017E6  EFF7  F00B         	goto	i2u353_40
  4703  0017EA                     i2u353_41:
  4704  0017EA  EF07  F00C         	goto	i2l3752
  4705  0017EE                     i2u353_40:
  4706  0017EE                     
  4707                           ;Game.c: 146:             level++;
  4708  0017EE  2A5D               	incf	_level^0,f,c
  4709  0017F0                     
  4710                           ;Game.c: 147:             playerPosition = 0;
  4711  0017F0  0E00               	movlw	0
  4712  0017F2  6E5E               	movwf	_playerPosition^0,c
  4713  0017F4                     
  4714                           ;Game.c: 148:             printSucessMessage();
  4715  0017F4  EC72  F00F         	call	_printSucessMessage	;wreg free
  4716  0017F8                     
  4717                           ;Game.c: 149:             printAttentionMessage();
  4718  0017F8  ECD8  F010         	call	_printAttentionMessage	;wreg free
  4719  0017FC                     
  4720                           ;Game.c: 150:             showGameSequence();
  4721  0017FC  ECF4  F00F         	call	_showGameSequence	;wreg free
  4722  001800                     
  4723                           ;Game.c: 151:             printPlayingMessage(playerPosition + 1, level);
  4724  001800  C05D  F070         	movff	_level,printPlayingMessage@total
  4725  001804  285E               	incf	_playerPosition^0,w,c
  4726  001806  EC30  F010         	call	_printPlayingMessage
  4727                           
  4728                           ;Game.c: 152:         }
  4729  00180A  EF39  F00C         	goto	i2l207
  4730  00180E                     i2l3752:
  4731                           
  4732                           ;Game.c: 154:             printPlayingMessage(playerPosition + 1, level);
  4733  00180E  C05D  F070         	movff	_level,printPlayingMessage@total
  4734  001812  285E               	incf	_playerPosition^0,w,c
  4735  001814  EC30  F010         	call	_printPlayingMessage
  4736  001818  EF39  F00C         	goto	i2l207
  4737  00181C                     i2l3754:
  4738                           
  4739                           ;Game.c: 158:         printErrorMessage();
  4740  00181C  ECB3  F00F         	call	_printErrorMessage	;wreg free
  4741  001820                     
  4742                           ;Game.c: 159:         byte record = EEPROM_ReadByte(0);
  4743  001820  0E00               	movlw	0
  4744  001822  ECE9  F013         	call	i2_EEPROM_ReadByte
  4745  001826  6E5C               	movwf	checkPlayerInput@record_191^0,c
  4746  001828                     
  4747                           ;Game.c: 160:         if (level - 1 > record)
  4748  001828  0EFF               	movlw	255
  4749  00182A  0100               	movlb	0	; () banked
  4750  00182C  6F71               	movwf	??_checkPlayerInput& (0+255),b
  4751  00182E  0EFF               	movlw	255
  4752  001830  6F72               	movwf	(??_checkPlayerInput+1)& (0+255),b
  4753  001832  505D               	movf	_level^0,w,c
  4754  001834  6F73               	movwf	(??_checkPlayerInput+2)& (0+255),b
  4755  001836  6B74               	clrf	(??_checkPlayerInput+3)& (0+255),b
  4756  001838  5171               	movf	??_checkPlayerInput& (0+255),w,b
  4757  00183A  2773               	addwf	(??_checkPlayerInput+2)& (0+255),f,b
  4758  00183C  5172               	movf	(??_checkPlayerInput+1)& (0+255),w,b
  4759  00183E  2374               	addwfc	(??_checkPlayerInput+3)& (0+255),f,b
  4760  001840  505C               	movf	checkPlayerInput@record_191^0,w,c
  4761  001842  6F75               	movwf	(??_checkPlayerInput+4)& (0+255),b
  4762  001844  6B76               	clrf	(??_checkPlayerInput+5)& (0+255),b
  4763  001846  5173               	movf	(??_checkPlayerInput+2)& (0+255),w,b
  4764  001848  5D75               	subwf	(??_checkPlayerInput+4)& (0+255),w,b
  4765  00184A  5176               	movf	(??_checkPlayerInput+5)& (0+255),w,b
  4766  00184C  0A80               	xorlw	128
  4767  00184E  6F77               	movwf	(??_checkPlayerInput+6)& (0+255),b
  4768  001850  5174               	movf	(??_checkPlayerInput+3)& (0+255),w,b
  4769  001852  0A80               	xorlw	128
  4770  001854  5977               	subwfb	(??_checkPlayerInput+6)& (0+255),w,b
  4771  001856  B0D8               	btfsc	status,0,c
  4772  001858  EF30  F00C         	goto	i2u354_41
  4773  00185C  EF32  F00C         	goto	i2u354_40
  4774  001860                     i2u354_41:
  4775  001860  EFE7  F00B         	goto	i2l3734
  4776  001864                     i2u354_40:
  4777  001864                     
  4778                           ; BSR set to: 0
  4779                           ;Game.c: 161:             EEPROM_WriteByte(0, level - 1);
  4780  001864  045D               	decf	_level^0,w,c
  4781  001866  6E01               	movwf	i2EEPROM_WriteByte@eepromData^0,c
  4782  001868  0E00               	movlw	0
  4783  00186A  EC5F  F012         	call	i2_EEPROM_WriteByte
  4784  00186E  EFE7  F00B         	goto	i2l3734
  4785  001872                     i2l207:
  4786  001872  0012               	return		;funcret
  4787  001874                     __end_of_checkPlayerInput:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function i2_printStartMessage *****************
  4791 ;; Defined at:
  4792 ;;		line 32 in file "Game.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  record          1   87[COMRAM] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0
  4807 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4809 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4810 ;;Total ram usage:        1 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 8
  4813 ;; This function calls:
  4814 ;;		i2_EEPROM_ReadByte
  4815 ;;		i2_clear
  4816 ;;		i2_escreve_texto
  4817 ;;		i2_inicializa
  4818 ;;		i2_instr_wr
  4819 ;;		i2_sprintf
  4820 ;; This function is called by:
  4821 ;;		_checkPlayerInput
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text32
  4826  001DD4                     __ptext32:
  4827                           	callstack 0
  4828  001DD4                     i2_printStartMessage:
  4829                           	callstack 11
  4830  001DD4                     
  4831                           ;Game.c: 33:     if (!initialized)
  4832  001DD4  0100               	movlb	0	; () banked
  4833  001DD6  51DA               	movf	_initialized& (0+255),w,b
  4834  001DD8  A4D8               	btfss	status,2,c
  4835  001DDA  EFF1  F00E         	goto	i2u349_41
  4836  001DDE  EFF3  F00E         	goto	i2u349_40
  4837  001DE2                     i2u349_41:
  4838  001DE2  EFF5  F00E         	goto	i2l3692
  4839  001DE6                     i2u349_40:
  4840  001DE6                     
  4841                           ; BSR set to: 0
  4842                           ;Game.c: 34:         inicializa();
  4843  001DE6  EC10  F014         	call	i2_inicializa	;wreg free
  4844  001DEA                     i2l3692:
  4845                           
  4846                           ;Game.c: 35:     clear(linha1);
  4847  001DEA  0E49               	movlw	low _linha1
  4848  001DEC  6E01               	movwf	i2clear@linha^0,c
  4849  001DEE  0E01               	movlw	high _linha1
  4850  001DF0  6E02               	movwf	(i2clear@linha+1)^0,c
  4851  001DF2  EC5D  F013         	call	i2_clear	;wreg free
  4852  001DF6                     
  4853                           ;Game.c: 36:     clear(linha2);
  4854  001DF6  0E39               	movlw	low _linha2
  4855  001DF8  6E01               	movwf	i2clear@linha^0,c
  4856  001DFA  0E01               	movlw	high _linha2
  4857  001DFC  6E02               	movwf	(i2clear@linha+1)^0,c
  4858  001DFE  EC5D  F013         	call	i2_clear	;wreg free
  4859                           
  4860                           ;Game.c: 37:     byte record = EEPROM_ReadByte(0);
  4861  001E02  0E00               	movlw	0
  4862  001E04  ECE9  F013         	call	i2_EEPROM_ReadByte
  4863  001E08  6E58               	movwf	i2printStartMessage@record^0,c
  4864  001E0A                     
  4865                           ;Game.c: 38:     sprintf(linha1, "Recorde: %d", record);
  4866  001E0A  0E49               	movlw	low _linha1
  4867  001E0C  0100               	movlb	0	; () banked
  4868  001E0E  6F60               	movwf	i2sprintf@s& (0+255),b
  4869  001E10  0E01               	movlw	high _linha1
  4870  001E12  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  4871  001E14  0E2F               	movlw	low STR_1
  4872  001E16  6F62               	movwf	i2sprintf@fmt& (0+255),b
  4873  001E18  0E08               	movlw	high STR_1
  4874  001E1A  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  4875  001E1C  C058  F064         	movff	i2printStartMessage@record,?i2_sprintf+4
  4876  001E20  6B65               	clrf	(?i2_sprintf+5)& (0+255),b
  4877  001E22  ECEE  F011         	call	i2_sprintf	;wreg free
  4878  001E26                     
  4879                           ;Game.c: 39:     instr_wr(0x80);
  4880  001E26  0E80               	movlw	128
  4881  001E28  EC50  F014         	call	i2_instr_wr
  4882  001E2C                     
  4883                           ;Game.c: 40:     escreve_texto(linha1);
  4884  001E2C  0E49               	movlw	low _linha1
  4885  001E2E  6E03               	movwf	i2escreve_texto@linha^0,c
  4886  001E30  0E01               	movlw	high _linha1
  4887  001E32  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  4888  001E34  EC22  F013         	call	i2_escreve_texto	;wreg free
  4889  001E38                     
  4890                           ;Game.c: 41:     sprintf(linha2, "Aperte p Iniciar");
  4891  001E38  0E39               	movlw	low _linha2
  4892  001E3A  0100               	movlb	0	; () banked
  4893  001E3C  6F60               	movwf	i2sprintf@s& (0+255),b
  4894  001E3E  0E01               	movlw	high _linha2
  4895  001E40  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  4896  001E42  0E01               	movlw	low STR_2
  4897  001E44  6F62               	movwf	i2sprintf@fmt& (0+255),b
  4898  001E46  0E08               	movlw	high STR_2
  4899  001E48  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  4900  001E4A  ECEE  F011         	call	i2_sprintf	;wreg free
  4901  001E4E                     
  4902                           ;Game.c: 42:     instr_wr(0xC0);
  4903  001E4E  0EC0               	movlw	192
  4904  001E50  EC50  F014         	call	i2_instr_wr
  4905  001E54                     
  4906                           ;Game.c: 43:     escreve_texto(linha2);
  4907  001E54  0E39               	movlw	low _linha2
  4908  001E56  6E03               	movwf	i2escreve_texto@linha^0,c
  4909  001E58  0E01               	movlw	high _linha2
  4910  001E5A  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  4911  001E5C  EC22  F013         	call	i2_escreve_texto	;wreg free
  4912  001E60  0012               	return		;funcret
  4913  001E62                     __end_ofi2_printStartMessage:
  4914                           	callstack 0
  4915                           
  4916 ;; *************** function i2_inicializa *****************
  4917 ;; Defined at:
  4918 ;;		line 26 in file "lcd.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4932 ;;      Params:         0       0       0       0       0       0       0       0       0
  4933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4936 ;;Total ram usage:        0 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; Hardware stack levels required when called: 2
  4939 ;; This function calls:
  4940 ;;		i2_instr_wr
  4941 ;; This function is called by:
  4942 ;;		i2_printStartMessage
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text33
  4947  002820                     __ptext33:
  4948                           	callstack 0
  4949  002820                     i2_inicializa:
  4950                           	callstack 16
  4951  002820                     
  4952                           ;lcd.c: 27:     instr_wr(0x38);
  4953  002820  0E38               	movlw	56
  4954  002822  EC50  F014         	call	i2_instr_wr
  4955                           
  4956                           ;lcd.c: 28:     instr_wr(0x38);
  4957  002826  0E38               	movlw	56
  4958  002828  EC50  F014         	call	i2_instr_wr
  4959                           
  4960                           ;lcd.c: 29:     instr_wr(0x0E);
  4961  00282C  0E0E               	movlw	14
  4962  00282E  EC50  F014         	call	i2_instr_wr
  4963                           
  4964                           ;lcd.c: 30:     instr_wr(0x06);
  4965  002832  0E06               	movlw	6
  4966  002834  EC50  F014         	call	i2_instr_wr
  4967                           
  4968                           ;lcd.c: 31:     instr_wr(0x01);
  4969  002838  0E01               	movlw	1
  4970  00283A  EC50  F014         	call	i2_instr_wr
  4971  00283E                     
  4972                           ;lcd.c: 32:     initialized = 1;
  4973  00283E  0E01               	movlw	1
  4974  002840  0100               	movlb	0	; () banked
  4975  002842  6FD9               	movwf	_initialized@lcd_kit$F215& (0+255),b
  4976  002844                     
  4977                           ; BSR set to: 0
  4978  002844  0012               	return		;funcret
  4979  002846                     __end_ofi2_inicializa:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function i2_EEPROM_ReadByte *****************
  4983 ;; Defined at:
  4984 ;;		line 24 in file "Game.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  eepromAddres    1    wreg     unsigned char 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  eepromAddres    1    0[COMRAM] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      unsigned char 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4998 ;;      Params:         0       0       0       0       0       0       0       0       0
  4999 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5001 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5002 ;;Total ram usage:        1 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_checkPlayerInput
  5008 ;;		i2_printStartMessage
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text34
  5013  0027D2                     __ptext34:
  5014                           	callstack 0
  5015  0027D2                     i2_EEPROM_ReadByte:
  5016                           	callstack 18
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;incstack = 0
  5020                           ;i2EEPROM_ReadByte@eepromAddress stored from wreg
  5021  0027D2  6E01               	movwf	i2EEPROM_ReadByte@eepromAddress^0,c
  5022  0027D4                     i2l160:
  5023  0027D4  B0A6               	btfsc	4006,0,c	;volsfr
  5024  0027D6  EFEF  F013         	goto	i2u226_41
  5025  0027DA  EFF1  F013         	goto	i2u226_40
  5026  0027DE                     i2u226_41:
  5027  0027DE  EFEA  F013         	goto	i2l160
  5028  0027E2                     i2u226_40:
  5029  0027E2  B2A6               	btfsc	4006,1,c	;volsfr
  5030  0027E4  EFF6  F013         	goto	i2u227_41
  5031  0027E8  EFF8  F013         	goto	i2u227_40
  5032  0027EC                     i2u227_41:
  5033  0027EC  EFEA  F013         	goto	i2l160
  5034  0027F0                     i2u227_40:
  5035  0027F0                     
  5036                           ;Game.c: 27:     EEADR = eepromAddress;
  5037  0027F0  C001  FFA9         	movff	i2EEPROM_ReadByte@eepromAddress,4009	;volatile
  5038  0027F4                     
  5039                           ;Game.c: 28:     RD = 1;
  5040  0027F4  80A6               	bsf	4006,0,c	;volsfr
  5041  0027F6                     
  5042                           ;Game.c: 29:     return(EEDATA);
  5043  0027F6  50A8               	movf	168,w,c	;volatile
  5044  0027F8  0012               	return		;funcret
  5045  0027FA                     __end_ofi2_EEPROM_ReadByte:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function i2_EEPROM_WriteByte *****************
  5049 ;; Defined at:
  5050 ;;		line 7 in file "Game.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  eepromAddres    1    wreg     unsigned char 
  5053 ;;  eepromData      1    0[COMRAM] unsigned char 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  eepromAddres    1    1[COMRAM] unsigned char 
  5056 ;;  gie_Status      1    2[COMRAM] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5066 ;;      Params:         1       0       0       0       0       0       0       0       0
  5067 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5069 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5070 ;;Total ram usage:        3 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_checkPlayerInput
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text35
  5080  0024BE                     __ptext35:
  5081                           	callstack 0
  5082  0024BE                     i2_EEPROM_WriteByte:
  5083                           	callstack 19
  5084                           
  5085                           ;incstack = 0
  5086                           ;i2EEPROM_WriteByte@eepromAddress stored from wreg
  5087  0024BE  6E02               	movwf	i2EEPROM_WriteByte@eepromAddress^0,c
  5088  0024C0                     i2l154:
  5089  0024C0  B2A6               	btfsc	4006,1,c	;volsfr
  5090  0024C2  EF65  F012         	goto	i2u237_41
  5091  0024C6  EF67  F012         	goto	i2u237_40
  5092  0024CA                     i2u237_41:
  5093  0024CA  EF60  F012         	goto	i2l154
  5094  0024CE                     i2u237_40:
  5095  0024CE                     
  5096                           ;Game.c: 12:     EEADR=eepromAddress;
  5097  0024CE  C002  FFA9         	movff	i2EEPROM_WriteByte@eepromAddress,4009	;volatile
  5098  0024D2                     
  5099                           ;Game.c: 13:     EEDATA=eepromData;
  5100  0024D2  C001  FFA8         	movff	i2EEPROM_WriteByte@eepromData,4008	;volatile
  5101  0024D6                     
  5102                           ;Game.c: 14:     WREN=1;
  5103  0024D6  84A6               	bsf	4006,2,c	;volsfr
  5104  0024D8                     
  5105                           ;Game.c: 15:     gie_Status = GIE;
  5106  0024D8  0E00               	movlw	0
  5107  0024DA  BEF2               	btfsc	4082,7,c	;volatile
  5108  0024DC  0E01               	movlw	1
  5109  0024DE  6E03               	movwf	i2EEPROM_WriteByte@gie_Status^0,c
  5110  0024E0                     
  5111                           ;Game.c: 16:     GIE = 0;
  5112  0024E0  9EF2               	bcf	4082,7,c	;volatile
  5113  0024E2                     
  5114                           ;Game.c: 17:     EECON2=0x55;
  5115  0024E2  0E55               	movlw	85
  5116  0024E4  6EA7               	movwf	167,c	;volsfr
  5117  0024E6                     
  5118                           ;Game.c: 18:     EECON2=0xaa;
  5119  0024E6  0EAA               	movlw	170
  5120  0024E8  6EA7               	movwf	167,c	;volsfr
  5121  0024EA                     
  5122                           ;Game.c: 19:     WR=1;
  5123  0024EA  82A6               	bsf	4006,1,c	;volsfr
  5124  0024EC                     
  5125                           ;Game.c: 20:     GIE = gie_Status;
  5126  0024EC  B003               	btfsc	i2EEPROM_WriteByte@gie_Status^0,0,c
  5127  0024EE  EF7B  F012         	goto	i2u238_41
  5128  0024F2  EF7E  F012         	goto	i2u238_40
  5129  0024F6                     i2u238_41:
  5130  0024F6  8EF2               	bsf	4082,7,c	;volatile
  5131  0024F8  EF7F  F012         	goto	i2u239_45
  5132  0024FC                     i2u238_40:
  5133  0024FC  9EF2               	bcf	4082,7,c	;volatile
  5134  0024FE                     i2u239_45:
  5135  0024FE                     
  5136                           ;Game.c: 21:     WREN=0;
  5137  0024FE  94A6               	bcf	4006,2,c	;volsfr
  5138  002500  0012               	return		;funcret
  5139  002502                     __end_ofi2_EEPROM_WriteByte:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function _showGameSequence *****************
  5143 ;; Defined at:
  5144 ;;		line 113 in file "Game.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;		None
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  i               1    2[COMRAM] unsigned char 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      void 
  5151 ;; Registers used:
  5152 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5158 ;;      Params:         0       0       0       0       0       0       0       0       0
  5159 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5160 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5161 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5162 ;;Total ram usage:        3 bytes
  5163 ;; Hardware stack levels used: 1
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_initGame
  5168 ;;		_checkPlayerInput
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text36
  5173  001FE8                     __ptext36:
  5174                           	callstack 0
  5175  001FE8                     _showGameSequence:
  5176                           	callstack 19
  5177  001FE8                     
  5178                           ;Game.c: 114:     for (byte i = 0; i < level; i++){
  5179  001FE8  0E00               	movlw	0
  5180  001FEA  6E03               	movwf	showGameSequence@i^0,c
  5181  001FEC  EF26  F010         	goto	i2l2826
  5182  001FF0                     i2l2816:
  5183                           
  5184                           ;Game.c: 115:         LATD = 0b11111111 ^ (1 << gameSequence[i]);
  5185  001FF0  0E20               	movlw	low _gameSequence
  5186  001FF2  2403               	addwf	showGameSequence@i^0,w,c
  5187  001FF4  6ED9               	movwf	fsr2l,c
  5188  001FF6  6ADA               	clrf	fsr2h,c
  5189  001FF8  0E01               	movlw	high _gameSequence
  5190  001FFA  22DA               	addwfc	fsr2h,f,c
  5191  001FFC  50DF               	movf	indf2,w,c
  5192  001FFE  6E01               	movwf	??_showGameSequence^0,c
  5193  002000  0E01               	movlw	1
  5194  002002  6E02               	movwf	(??_showGameSequence+1)^0,c
  5195  002004  2A01               	incf	??_showGameSequence^0,f,c
  5196  002006  EF07  F010         	goto	i2u235_44
  5197  00200A                     i2u235_45:
  5198  00200A  90D8               	bcf	status,0,c
  5199  00200C  3602               	rlcf	(??_showGameSequence+1)^0,f,c
  5200  00200E                     i2u235_44:
  5201  00200E  2E01               	decfsz	??_showGameSequence^0,f,c
  5202  002010  EF05  F010         	goto	i2u235_45
  5203  002014  5002               	movf	(??_showGameSequence+1)^0,w,c
  5204  002016  0AFF               	xorlw	255
  5205  002018  6E8C               	movwf	140,c	;volatile
  5206  00201A                     
  5207                           ;Game.c: 116:         _delay((unsigned long)((800)*(20000000/4000.0)));
  5208  00201A  0E15               	movlw	21
  5209  00201C  6E02               	movwf	(??_showGameSequence+1)^0,c
  5210  00201E  0E4B               	movlw	75
  5211  002020  6E01               	movwf	??_showGameSequence^0,c
  5212  002022  0EBE               	movlw	190
  5213  002024                     i2u365_47:
  5214  002024  2EE8               	decfsz	wreg,f,c
  5215  002026  D7FE               	bra	i2u365_47
  5216  002028  2E01               	decfsz	??_showGameSequence^0,f,c
  5217  00202A  D7FC               	bra	i2u365_47
  5218  00202C  2E02               	decfsz	(??_showGameSequence+1)^0,f,c
  5219  00202E  D7FA               	bra	i2u365_47
  5220  002030  D000               	nop2	
  5221  002032                     
  5222                           ;Game.c: 117:         LATD = 0b11111111;
  5223  002032  688C               	setf	140,c	;volatile
  5224  002034                     
  5225                           ;Game.c: 118:         _delay((unsigned long)((200)*(20000000/4000.0)));
  5226  002034  0E06               	movlw	6
  5227  002036  6E02               	movwf	(??_showGameSequence+1)^0,c
  5228  002038  0E13               	movlw	19
  5229  00203A  6E01               	movwf	??_showGameSequence^0,c
  5230  00203C  0EAE               	movlw	174
  5231  00203E                     i2u366_47:
  5232  00203E  2EE8               	decfsz	wreg,f,c
  5233  002040  D7FE               	bra	i2u366_47
  5234  002042  2E01               	decfsz	??_showGameSequence^0,f,c
  5235  002044  D7FC               	bra	i2u366_47
  5236  002046  2E02               	decfsz	(??_showGameSequence+1)^0,f,c
  5237  002048  D7FA               	bra	i2u366_47
  5238  00204A                     
  5239                           ;Game.c: 119:     }
  5240  00204A  2A03               	incf	showGameSequence@i^0,f,c
  5241  00204C                     i2l2826:
  5242  00204C  505D               	movf	_level^0,w,c
  5243  00204E  5C03               	subwf	showGameSequence@i^0,w,c
  5244  002050  A0D8               	btfss	status,0,c
  5245  002052  EF2D  F010         	goto	i2u236_41
  5246  002056  EF2F  F010         	goto	i2u236_40
  5247  00205A                     i2u236_41:
  5248  00205A  EFF8  F00F         	goto	i2l2816
  5249  00205E                     i2u236_40:
  5250  00205E  0012               	return		;funcret
  5251  002060                     __end_of_showGameSequence:
  5252                           	callstack 0
  5253                           
  5254 ;; *************** function _printWinnerMessage *****************
  5255 ;; Defined at:
  5256 ;;		line 92 in file "Game.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      void 
  5263 ;; Registers used:
  5264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5270 ;;      Params:         0       0       0       0       0       0       0       0       0
  5271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5272 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5273 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5274 ;;Total ram usage:        2 bytes
  5275 ;; Hardware stack levels used: 1
  5276 ;; Hardware stack levels required when called: 8
  5277 ;; This function calls:
  5278 ;;		i2_clear
  5279 ;;		i2_escreve_texto
  5280 ;;		i2_instr_wr
  5281 ;;		i2_sprintf
  5282 ;; This function is called by:
  5283 ;;		_checkPlayerInput
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text37
  5288  001E62                     __ptext37:
  5289                           	callstack 0
  5290  001E62                     _printWinnerMessage:
  5291                           	callstack 11
  5292  001E62                     
  5293                           ;Game.c: 93:     clear(linha1);
  5294  001E62  0E49               	movlw	low _linha1
  5295  001E64  6E01               	movwf	i2clear@linha^0,c
  5296  001E66  0E01               	movlw	high _linha1
  5297  001E68  6E02               	movwf	(i2clear@linha+1)^0,c
  5298  001E6A  EC5D  F013         	call	i2_clear	;wreg free
  5299                           
  5300                           ;Game.c: 94:     clear(linha2);
  5301  001E6E  0E39               	movlw	low _linha2
  5302  001E70  6E01               	movwf	i2clear@linha^0,c
  5303  001E72  0E01               	movlw	high _linha2
  5304  001E74  6E02               	movwf	(i2clear@linha+1)^0,c
  5305  001E76  EC5D  F013         	call	i2_clear	;wreg free
  5306  001E7A                     
  5307                           ;Game.c: 95:     sprintf(linha1, "Voce ganhou :)");
  5308  001E7A  0E49               	movlw	low _linha1
  5309  001E7C  0100               	movlb	0	; () banked
  5310  001E7E  6F60               	movwf	i2sprintf@s& (0+255),b
  5311  001E80  0E01               	movlw	high _linha1
  5312  001E82  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5313  001E84  0E12               	movlw	low STR_11
  5314  001E86  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5315  001E88  0E08               	movlw	high STR_11
  5316  001E8A  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5317  001E8C  ECEE  F011         	call	i2_sprintf	;wreg free
  5318  001E90                     
  5319                           ;Game.c: 96:     instr_wr(0x80);
  5320  001E90  0E80               	movlw	128
  5321  001E92  EC50  F014         	call	i2_instr_wr
  5322  001E96                     
  5323                           ;Game.c: 97:     escreve_texto(linha1);
  5324  001E96  0E49               	movlw	low _linha1
  5325  001E98  6E03               	movwf	i2escreve_texto@linha^0,c
  5326  001E9A  0E01               	movlw	high _linha1
  5327  001E9C  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5328  001E9E  EC22  F013         	call	i2_escreve_texto	;wreg free
  5329  001EA2                     
  5330                           ;Game.c: 98:     sprintf(linha2, "");
  5331  001EA2  0E39               	movlw	low _linha2
  5332  001EA4  0100               	movlb	0	; () banked
  5333  001EA6  6F60               	movwf	i2sprintf@s& (0+255),b
  5334  001EA8  0E01               	movlw	high _linha2
  5335  001EAA  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5336  001EAC  0E2E               	movlw	low (STR_7+13)
  5337  001EAE  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5338  001EB0  0E08               	movlw	high (STR_7+13)
  5339  001EB2  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5340  001EB4  ECEE  F011         	call	i2_sprintf	;wreg free
  5341                           
  5342                           ;Game.c: 99:     instr_wr(0xC0);
  5343  001EB8  0EC0               	movlw	192
  5344  001EBA  EC50  F014         	call	i2_instr_wr
  5345  001EBE                     
  5346                           ;Game.c: 100:     escreve_texto(linha2);
  5347  001EBE  0E39               	movlw	low _linha2
  5348  001EC0  6E03               	movwf	i2escreve_texto@linha^0,c
  5349  001EC2  0E01               	movlw	high _linha2
  5350  001EC4  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5351  001EC6  EC22  F013         	call	i2_escreve_texto	;wreg free
  5352  001ECA                     
  5353                           ;Game.c: 101:     _delay((unsigned long)((500)*(20000000/4000.0)));
  5354  001ECA  0E0D               	movlw	13
  5355  001ECC  6E59               	movwf	(??_printWinnerMessage+1)^0,c
  5356  001ECE  0EAF               	movlw	175
  5357  001ED0  6E58               	movwf	??_printWinnerMessage^0,c
  5358  001ED2  0EB6               	movlw	182
  5359  001ED4                     i2u367_47:
  5360  001ED4  2EE8               	decfsz	wreg,f,c
  5361  001ED6  D7FE               	bra	i2u367_47
  5362  001ED8  2E58               	decfsz	??_printWinnerMessage^0,f,c
  5363  001EDA  D7FC               	bra	i2u367_47
  5364  001EDC  2E59               	decfsz	(??_printWinnerMessage+1)^0,f,c
  5365  001EDE  D7FA               	bra	i2u367_47
  5366  001EE0  D000               	nop2	
  5367  001EE2  0012               	return		;funcret
  5368  001EE4                     __end_of_printWinnerMessage:
  5369                           	callstack 0
  5370                           
  5371 ;; *************** function _printSucessMessage *****************
  5372 ;; Defined at:
  5373 ;;		line 80 in file "Game.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5387 ;;      Params:         0       0       0       0       0       0       0       0       0
  5388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5389 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5390 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5391 ;;Total ram usage:        2 bytes
  5392 ;; Hardware stack levels used: 1
  5393 ;; Hardware stack levels required when called: 8
  5394 ;; This function calls:
  5395 ;;		i2_clear
  5396 ;;		i2_escreve_texto
  5397 ;;		i2_instr_wr
  5398 ;;		i2_sprintf
  5399 ;; This function is called by:
  5400 ;;		_checkPlayerInput
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text38
  5405  001EE4                     __ptext38:
  5406                           	callstack 0
  5407  001EE4                     _printSucessMessage:
  5408                           	callstack 11
  5409  001EE4                     
  5410                           ;Game.c: 81:     clear(linha1);
  5411  001EE4  0E49               	movlw	low _linha1
  5412  001EE6  6E01               	movwf	i2clear@linha^0,c
  5413  001EE8  0E01               	movlw	high _linha1
  5414  001EEA  6E02               	movwf	(i2clear@linha+1)^0,c
  5415  001EEC  EC5D  F013         	call	i2_clear	;wreg free
  5416                           
  5417                           ;Game.c: 82:     clear(linha2);
  5418  001EF0  0E39               	movlw	low _linha2
  5419  001EF2  6E01               	movwf	i2clear@linha^0,c
  5420  001EF4  0E01               	movlw	high _linha2
  5421  001EF6  6E02               	movwf	(i2clear@linha+1)^0,c
  5422  001EF8  EC5D  F013         	call	i2_clear	;wreg free
  5423  001EFC                     
  5424                           ;Game.c: 83:     sprintf(linha1, "Sucesso :)");
  5425  001EFC  0E49               	movlw	low _linha1
  5426  001EFE  0100               	movlb	0	; () banked
  5427  001F00  6F60               	movwf	i2sprintf@s& (0+255),b
  5428  001F02  0E01               	movlw	high _linha1
  5429  001F04  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5430  001F06  0E3B               	movlw	low STR_9
  5431  001F08  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5432  001F0A  0E08               	movlw	high STR_9
  5433  001F0C  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5434  001F0E  ECEE  F011         	call	i2_sprintf	;wreg free
  5435  001F12                     
  5436                           ;Game.c: 84:     instr_wr(0x80);
  5437  001F12  0E80               	movlw	128
  5438  001F14  EC50  F014         	call	i2_instr_wr
  5439  001F18                     
  5440                           ;Game.c: 85:     escreve_texto(linha1);
  5441  001F18  0E49               	movlw	low _linha1
  5442  001F1A  6E03               	movwf	i2escreve_texto@linha^0,c
  5443  001F1C  0E01               	movlw	high _linha1
  5444  001F1E  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5445  001F20  EC22  F013         	call	i2_escreve_texto	;wreg free
  5446  001F24                     
  5447                           ;Game.c: 86:     sprintf(linha2, "");
  5448  001F24  0E39               	movlw	low _linha2
  5449  001F26  0100               	movlb	0	; () banked
  5450  001F28  6F60               	movwf	i2sprintf@s& (0+255),b
  5451  001F2A  0E01               	movlw	high _linha2
  5452  001F2C  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5453  001F2E  0E2E               	movlw	low (STR_7+13)
  5454  001F30  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5455  001F32  0E08               	movlw	high (STR_7+13)
  5456  001F34  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5457  001F36  ECEE  F011         	call	i2_sprintf	;wreg free
  5458                           
  5459                           ;Game.c: 87:     instr_wr(0xC0);
  5460  001F3A  0EC0               	movlw	192
  5461  001F3C  EC50  F014         	call	i2_instr_wr
  5462  001F40                     
  5463                           ;Game.c: 88:     escreve_texto(linha2);
  5464  001F40  0E39               	movlw	low _linha2
  5465  001F42  6E03               	movwf	i2escreve_texto@linha^0,c
  5466  001F44  0E01               	movlw	high _linha2
  5467  001F46  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5468  001F48  EC22  F013         	call	i2_escreve_texto	;wreg free
  5469  001F4C                     
  5470                           ;Game.c: 89:     _delay((unsigned long)((500)*(20000000/4000.0)));
  5471  001F4C  0E0D               	movlw	13
  5472  001F4E  6E59               	movwf	(??_printSucessMessage+1)^0,c
  5473  001F50  0EAF               	movlw	175
  5474  001F52  6E58               	movwf	??_printSucessMessage^0,c
  5475  001F54  0EB6               	movlw	182
  5476  001F56                     i2u368_47:
  5477  001F56  2EE8               	decfsz	wreg,f,c
  5478  001F58  D7FE               	bra	i2u368_47
  5479  001F5A  2E58               	decfsz	??_printSucessMessage^0,f,c
  5480  001F5C  D7FC               	bra	i2u368_47
  5481  001F5E  2E59               	decfsz	(??_printSucessMessage+1)^0,f,c
  5482  001F60  D7FA               	bra	i2u368_47
  5483  001F62  D000               	nop2	
  5484  001F64  0012               	return		;funcret
  5485  001F66                     __end_of_printSucessMessage:
  5486                           	callstack 0
  5487                           
  5488 ;; *************** function _printPlayingMessage *****************
  5489 ;; Defined at:
  5490 ;;		line 57 in file "Game.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  position        1    wreg     unsigned char 
  5493 ;;  total           1   16[BANK0 ] unsigned char 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  position        1   87[COMRAM] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5505 ;;      Params:         0       1       0       0       0       0       0       0       0
  5506 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5508 ;;      Totals:         1       1       0       0       0       0       0       0       0
  5509 ;;Total ram usage:        2 bytes
  5510 ;; Hardware stack levels used: 1
  5511 ;; Hardware stack levels required when called: 8
  5512 ;; This function calls:
  5513 ;;		i2_clear
  5514 ;;		i2_escreve_texto
  5515 ;;		i2_instr_wr
  5516 ;;		i2_sprintf
  5517 ;; This function is called by:
  5518 ;;		_initGame
  5519 ;;		_checkPlayerInput
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text39
  5524  002060                     __ptext39:
  5525                           	callstack 0
  5526  002060                     _printPlayingMessage:
  5527                           	callstack 11
  5528                           
  5529                           ;incstack = 0
  5530                           ;printPlayingMessage@position stored from wreg
  5531  002060  6E58               	movwf	printPlayingMessage@position^0,c
  5532  002062                     
  5533                           ;Game.c: 58:     clear(linha1);
  5534  002062  0E49               	movlw	low _linha1
  5535  002064  6E01               	movwf	i2clear@linha^0,c
  5536  002066  0E01               	movlw	high _linha1
  5537  002068  6E02               	movwf	(i2clear@linha+1)^0,c
  5538  00206A  EC5D  F013         	call	i2_clear	;wreg free
  5539                           
  5540                           ;Game.c: 59:     clear(linha2);
  5541  00206E  0E39               	movlw	low _linha2
  5542  002070  6E01               	movwf	i2clear@linha^0,c
  5543  002072  0E01               	movlw	high _linha2
  5544  002074  6E02               	movwf	(i2clear@linha+1)^0,c
  5545  002076  EC5D  F013         	call	i2_clear	;wreg free
  5546  00207A                     
  5547                           ;Game.c: 60:     sprintf(linha1, "Sua vez");
  5548  00207A  0E49               	movlw	low _linha1
  5549  00207C  0100               	movlb	0	; () banked
  5550  00207E  6F60               	movwf	i2sprintf@s& (0+255),b
  5551  002080  0E01               	movlw	high _linha1
  5552  002082  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5553  002084  0E57               	movlw	low STR_5
  5554  002086  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5555  002088  0E08               	movlw	high STR_5
  5556  00208A  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5557  00208C  ECEE  F011         	call	i2_sprintf	;wreg free
  5558  002090                     
  5559                           ;Game.c: 61:     instr_wr(0x80);
  5560  002090  0E80               	movlw	128
  5561  002092  EC50  F014         	call	i2_instr_wr
  5562  002096                     
  5563                           ;Game.c: 62:     escreve_texto(linha1);
  5564  002096  0E49               	movlw	low _linha1
  5565  002098  6E03               	movwf	i2escreve_texto@linha^0,c
  5566  00209A  0E01               	movlw	high _linha1
  5567  00209C  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5568  00209E  EC22  F013         	call	i2_escreve_texto	;wreg free
  5569  0020A2                     
  5570                           ;Game.c: 63:     sprintf(linha2, "%d de %d", position, total);
  5571  0020A2  0E39               	movlw	low _linha2
  5572  0020A4  0100               	movlb	0	; () banked
  5573  0020A6  6F60               	movwf	i2sprintf@s& (0+255),b
  5574  0020A8  0E01               	movlw	high _linha2
  5575  0020AA  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5576  0020AC  0E46               	movlw	low STR_6
  5577  0020AE  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5578  0020B0  0E08               	movlw	high STR_6
  5579  0020B2  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5580  0020B4  C058  F064         	movff	printPlayingMessage@position,?i2_sprintf+4
  5581  0020B8  6B65               	clrf	(?i2_sprintf+5)& (0+255),b
  5582  0020BA  C070  F066         	movff	printPlayingMessage@total,?i2_sprintf+6
  5583  0020BE  6B67               	clrf	(?i2_sprintf+7)& (0+255),b
  5584  0020C0  ECEE  F011         	call	i2_sprintf	;wreg free
  5585                           
  5586                           ;Game.c: 64:     instr_wr(0xC0);
  5587  0020C4  0EC0               	movlw	192
  5588  0020C6  EC50  F014         	call	i2_instr_wr
  5589  0020CA                     
  5590                           ;Game.c: 65:     escreve_texto(linha2);
  5591  0020CA  0E39               	movlw	low _linha2
  5592  0020CC  6E03               	movwf	i2escreve_texto@linha^0,c
  5593  0020CE  0E01               	movlw	high _linha2
  5594  0020D0  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5595  0020D2  EC22  F013         	call	i2_escreve_texto	;wreg free
  5596  0020D6  0012               	return		;funcret
  5597  0020D8                     __end_of_printPlayingMessage:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _printErrorMessage *****************
  5601 ;; Defined at:
  5602 ;;		line 68 in file "Game.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5616 ;;      Params:         0       0       0       0       0       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5618 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5619 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5620 ;;Total ram usage:        2 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; Hardware stack levels required when called: 8
  5623 ;; This function calls:
  5624 ;;		i2_clear
  5625 ;;		i2_escreve_texto
  5626 ;;		i2_instr_wr
  5627 ;;		i2_sprintf
  5628 ;; This function is called by:
  5629 ;;		_checkPlayerInput
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text40
  5634  001F66                     __ptext40:
  5635                           	callstack 0
  5636  001F66                     _printErrorMessage:
  5637                           	callstack 11
  5638  001F66                     
  5639                           ;Game.c: 69:     clear(linha1);
  5640  001F66  0E49               	movlw	low _linha1
  5641  001F68  6E01               	movwf	i2clear@linha^0,c
  5642  001F6A  0E01               	movlw	high _linha1
  5643  001F6C  6E02               	movwf	(i2clear@linha+1)^0,c
  5644  001F6E  EC5D  F013         	call	i2_clear	;wreg free
  5645                           
  5646                           ;Game.c: 70:     clear(linha2);
  5647  001F72  0E39               	movlw	low _linha2
  5648  001F74  6E01               	movwf	i2clear@linha^0,c
  5649  001F76  0E01               	movlw	high _linha2
  5650  001F78  6E02               	movwf	(i2clear@linha+1)^0,c
  5651  001F7A  EC5D  F013         	call	i2_clear	;wreg free
  5652  001F7E                     
  5653                           ;Game.c: 71:     sprintf(linha1, "Voce errou :(");
  5654  001F7E  0E49               	movlw	low _linha1
  5655  001F80  0100               	movlb	0	; () banked
  5656  001F82  6F60               	movwf	i2sprintf@s& (0+255),b
  5657  001F84  0E01               	movlw	high _linha1
  5658  001F86  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5659  001F88  0E21               	movlw	low STR_7
  5660  001F8A  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5661  001F8C  0E08               	movlw	high STR_7
  5662  001F8E  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5663  001F90  ECEE  F011         	call	i2_sprintf	;wreg free
  5664  001F94                     
  5665                           ;Game.c: 72:     instr_wr(0x80);
  5666  001F94  0E80               	movlw	128
  5667  001F96  EC50  F014         	call	i2_instr_wr
  5668  001F9A                     
  5669                           ;Game.c: 73:     escreve_texto(linha1);
  5670  001F9A  0E49               	movlw	low _linha1
  5671  001F9C  6E03               	movwf	i2escreve_texto@linha^0,c
  5672  001F9E  0E01               	movlw	high _linha1
  5673  001FA0  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5674  001FA2  EC22  F013         	call	i2_escreve_texto	;wreg free
  5675  001FA6                     
  5676                           ;Game.c: 74:     sprintf(linha2, "");
  5677  001FA6  0E39               	movlw	low _linha2
  5678  001FA8  0100               	movlb	0	; () banked
  5679  001FAA  6F60               	movwf	i2sprintf@s& (0+255),b
  5680  001FAC  0E01               	movlw	high _linha2
  5681  001FAE  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5682  001FB0  0E2E               	movlw	low (STR_7+13)
  5683  001FB2  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5684  001FB4  0E08               	movlw	high (STR_7+13)
  5685  001FB6  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5686  001FB8  ECEE  F011         	call	i2_sprintf	;wreg free
  5687                           
  5688                           ;Game.c: 75:     instr_wr(0xC0);
  5689  001FBC  0EC0               	movlw	192
  5690  001FBE  EC50  F014         	call	i2_instr_wr
  5691  001FC2                     
  5692                           ;Game.c: 76:     escreve_texto(linha2);
  5693  001FC2  0E39               	movlw	low _linha2
  5694  001FC4  6E03               	movwf	i2escreve_texto@linha^0,c
  5695  001FC6  0E01               	movlw	high _linha2
  5696  001FC8  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5697  001FCA  EC22  F013         	call	i2_escreve_texto	;wreg free
  5698  001FCE                     
  5699                           ;Game.c: 77:     _delay((unsigned long)((500)*(20000000/4000.0)));
  5700  001FCE  0E0D               	movlw	13
  5701  001FD0  6E59               	movwf	(??_printErrorMessage+1)^0,c
  5702  001FD2  0EAF               	movlw	175
  5703  001FD4  6E58               	movwf	??_printErrorMessage^0,c
  5704  001FD6  0EB6               	movlw	182
  5705  001FD8                     i2u369_47:
  5706  001FD8  2EE8               	decfsz	wreg,f,c
  5707  001FDA  D7FE               	bra	i2u369_47
  5708  001FDC  2E58               	decfsz	??_printErrorMessage^0,f,c
  5709  001FDE  D7FC               	bra	i2u369_47
  5710  001FE0  2E59               	decfsz	(??_printErrorMessage+1)^0,f,c
  5711  001FE2  D7FA               	bra	i2u369_47
  5712  001FE4  D000               	nop2	
  5713  001FE6  0012               	return		;funcret
  5714  001FE8                     __end_of_printErrorMessage:
  5715                           	callstack 0
  5716                           
  5717 ;; *************** function _printAttentionMessage *****************
  5718 ;; Defined at:
  5719 ;;		line 46 in file "Game.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      void 
  5726 ;; Registers used:
  5727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5733 ;;      Params:         0       0       0       0       0       0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5736 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; Hardware stack levels required when called: 8
  5740 ;; This function calls:
  5741 ;;		i2_clear
  5742 ;;		i2_escreve_texto
  5743 ;;		i2_instr_wr
  5744 ;;		i2_sprintf
  5745 ;; This function is called by:
  5746 ;;		_initGame
  5747 ;;		_checkPlayerInput
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           	psect	text41
  5752  0021B0                     __ptext41:
  5753                           	callstack 0
  5754  0021B0                     _printAttentionMessage:
  5755                           	callstack 11
  5756  0021B0                     
  5757                           ;Game.c: 47:     clear(linha1);
  5758  0021B0  0E49               	movlw	low _linha1
  5759  0021B2  6E01               	movwf	i2clear@linha^0,c
  5760  0021B4  0E01               	movlw	high _linha1
  5761  0021B6  6E02               	movwf	(i2clear@linha+1)^0,c
  5762  0021B8  EC5D  F013         	call	i2_clear	;wreg free
  5763                           
  5764                           ;Game.c: 48:     clear(linha2);
  5765  0021BC  0E39               	movlw	low _linha2
  5766  0021BE  6E01               	movwf	i2clear@linha^0,c
  5767  0021C0  0E01               	movlw	high _linha2
  5768  0021C2  6E02               	movwf	(i2clear@linha+1)^0,c
  5769  0021C4  EC5D  F013         	call	i2_clear	;wreg free
  5770  0021C8                     
  5771                           ;Game.c: 49:     sprintf(linha1, "Atencao");
  5772  0021C8  0E49               	movlw	low _linha1
  5773  0021CA  0100               	movlb	0	; () banked
  5774  0021CC  6F60               	movwf	i2sprintf@s& (0+255),b
  5775  0021CE  0E01               	movlw	high _linha1
  5776  0021D0  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5777  0021D2  0E4F               	movlw	low STR_3
  5778  0021D4  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5779  0021D6  0E08               	movlw	high STR_3
  5780  0021D8  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5781  0021DA  ECEE  F011         	call	i2_sprintf	;wreg free
  5782  0021DE                     
  5783                           ;Game.c: 50:     instr_wr(0x80);
  5784  0021DE  0E80               	movlw	128
  5785  0021E0  EC50  F014         	call	i2_instr_wr
  5786  0021E4                     
  5787                           ;Game.c: 51:     escreve_texto(linha1);
  5788  0021E4  0E49               	movlw	low _linha1
  5789  0021E6  6E03               	movwf	i2escreve_texto@linha^0,c
  5790  0021E8  0E01               	movlw	high _linha1
  5791  0021EA  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5792  0021EC  EC22  F013         	call	i2_escreve_texto	;wreg free
  5793  0021F0                     
  5794                           ;Game.c: 52:     sprintf(linha2, "");
  5795  0021F0  0E39               	movlw	low _linha2
  5796  0021F2  0100               	movlb	0	; () banked
  5797  0021F4  6F60               	movwf	i2sprintf@s& (0+255),b
  5798  0021F6  0E01               	movlw	high _linha2
  5799  0021F8  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  5800  0021FA  0E2E               	movlw	low (STR_7+13)
  5801  0021FC  6F62               	movwf	i2sprintf@fmt& (0+255),b
  5802  0021FE  0E08               	movlw	high (STR_7+13)
  5803  002200  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  5804  002202  ECEE  F011         	call	i2_sprintf	;wreg free
  5805                           
  5806                           ;Game.c: 53:     instr_wr(0xC0);
  5807  002206  0EC0               	movlw	192
  5808  002208  EC50  F014         	call	i2_instr_wr
  5809  00220C                     
  5810                           ;Game.c: 54:     escreve_texto(linha2);
  5811  00220C  0E39               	movlw	low _linha2
  5812  00220E  6E03               	movwf	i2escreve_texto@linha^0,c
  5813  002210  0E01               	movlw	high _linha2
  5814  002212  6E04               	movwf	(i2escreve_texto@linha+1)^0,c
  5815  002214  EC22  F013         	call	i2_escreve_texto	;wreg free
  5816  002218  0012               	return		;funcret
  5817  00221A                     __end_of_printAttentionMessage:
  5818                           	callstack 0
  5819                           
  5820 ;; *************** function i2_sprintf *****************
  5821 ;; Defined at:
  5822 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5825 ;;		 -> linha2(16), linha1(16), 
  5826 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5827 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  5828 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  5829 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  f               6   10[BANK0 ] struct _IO_FILE
  5832 ;;  ap              2    8[BANK0 ] PTR void [1]
  5833 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  5834 ;;  ret             2    0        int 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  2    0[BANK0 ] int 
  5837 ;; Registers used:
  5838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5844 ;;      Params:         0       8       0       0       0       0       0       0       0
  5845 ;;      Locals:         0       8       0       0       0       0       0       0       0
  5846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5847 ;;      Totals:         0      16       0       0       0       0       0       0       0
  5848 ;;Total ram usage:       16 bytes
  5849 ;; Hardware stack levels used: 1
  5850 ;; Hardware stack levels required when called: 7
  5851 ;; This function calls:
  5852 ;;		i2_vfprintf
  5853 ;; This function is called by:
  5854 ;;		_printAttentionMessage
  5855 ;;		_printPlayingMessage
  5856 ;;		_printErrorMessage
  5857 ;;		_printSucessMessage
  5858 ;;		_printWinnerMessage
  5859 ;;		i2_printStartMessage
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text42
  5864  0023DC                     __ptext42:
  5865                           	callstack 0
  5866  0023DC                     i2_sprintf:
  5867                           	callstack 11
  5868  0023DC  0E64               	movlw	low (?i2_sprintf+4)
  5869  0023DE  0100               	movlb	0	; () banked
  5870  0023E0  6F68               	movwf	i2sprintf@ap& (0+255),b
  5871  0023E2  0E00               	movlw	high (?i2_sprintf+4)
  5872  0023E4  6F69               	movwf	(i2sprintf@ap+1)& (0+255),b
  5873  0023E6  C060  F06A         	movff	i2sprintf@s,i2sprintf@f
  5874  0023EA  C061  F06B         	movff	i2sprintf@s+1,i2sprintf@f+1
  5875  0023EE                     
  5876                           ; BSR set to: 0
  5877  0023EE  0E00               	movlw	0
  5878  0023F0  6F6D               	movwf	(i2sprintf@f+3)& (0+255),b
  5879  0023F2  0E00               	movlw	0
  5880  0023F4  6F6C               	movwf	(i2sprintf@f+2)& (0+255),b
  5881  0023F6                     
  5882                           ; BSR set to: 0
  5883  0023F6  0E00               	movlw	0
  5884  0023F8  6F6F               	movwf	(i2sprintf@f+5)& (0+255),b
  5885  0023FA  0E00               	movlw	0
  5886  0023FC  6F6E               	movwf	(i2sprintf@f+4)& (0+255),b
  5887  0023FE                     
  5888                           ; BSR set to: 0
  5889  0023FE  0E6A               	movlw	low i2sprintf@f
  5890  002400  6E50               	movwf	i2vfprintf@fp^0,c
  5891  002402  0E00               	movlw	high i2sprintf@f
  5892  002404  6E51               	movwf	(i2vfprintf@fp+1)^0,c
  5893  002406  C062  F052         	movff	i2sprintf@fmt,i2vfprintf@fmt
  5894  00240A  C063  F053         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  5895  00240E  0E68               	movlw	low i2sprintf@ap
  5896  002410  6E54               	movwf	i2vfprintf@ap^0,c
  5897  002412  0E00               	movlw	high i2sprintf@ap
  5898  002414  6E55               	movwf	(i2vfprintf@ap+1)^0,c
  5899  002416  EC3E  F011         	call	i2_vfprintf	;wreg free
  5900  00241A  0100               	movlb	0	; () banked
  5901  00241C  516C               	movf	(i2sprintf@f+2)& (0+255),w,b
  5902  00241E  2560               	addwf	i2sprintf@s& (0+255),w,b
  5903  002420  6ED9               	movwf	fsr2l,c
  5904  002422  516D               	movf	(i2sprintf@f+3)& (0+255),w,b
  5905  002424  2161               	addwfc	(i2sprintf@s+1)& (0+255),w,b
  5906  002426  6EDA               	movwf	fsr2h,c
  5907  002428  0E00               	movlw	0
  5908  00242A  6EDF               	movwf	indf2,c
  5909  00242C                     
  5910                           ; BSR set to: 0
  5911  00242C  0012               	return		;funcret
  5912  00242E                     __end_ofi2_sprintf:
  5913                           	callstack 0
  5914                           
  5915 ;; *************** function i2_vfprintf *****************
  5916 ;; Defined at:
  5917 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5920 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  5921 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5922 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  5923 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  5924 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  5925 ;;  ap              2   83[COMRAM] PTR PTR void 
  5926 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5929 ;;		 -> STR_12(1), STR_11(15), STR_10(1), STR_9(11), 
  5930 ;;		 -> STR_8(1), STR_7(14), STR_6(9), STR_5(8), 
  5931 ;;		 -> STR_4(1), STR_3(8), STR_2(17), STR_1(12), 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  2   79[COMRAM] int 
  5934 ;; Registers used:
  5935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5941 ;;      Params:         6       0       0       0       0       0       0       0       0
  5942 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5944 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5945 ;;Total ram usage:        8 bytes
  5946 ;; Hardware stack levels used: 1
  5947 ;; Hardware stack levels required when called: 6
  5948 ;; This function calls:
  5949 ;;		i2_vfpfcnvrt
  5950 ;; This function is called by:
  5951 ;;		i2_sprintf
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text43
  5956  00227C                     __ptext43:
  5957                           	callstack 0
  5958  00227C                     i2_vfprintf:
  5959                           	callstack 11
  5960  00227C                     
  5961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5962  00227C  C052  F056         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  5963  002280  C053  F057         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  5964  002284                     
  5965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5966  002284  0E00               	movlw	0
  5967  002286  0100               	movlb	0	; () banked
  5968  002288  6FD0               	movwf	(_nout+1)& (0+255),b
  5969  00228A  0E00               	movlw	0
  5970  00228C  6FCF               	movwf	_nout& (0+255),b
  5971                           
  5972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5973  00228E  EF5C  F011         	goto	i2l3532
  5974  002292                     i2l3530:
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5978  002292  C050  F040         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  5979  002296  C051  F041         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  5980  00229A  0E56               	movlw	low i2vfprintf@cfmt
  5981  00229C  6E42               	movwf	i2vfpfcnvrt@fmt^0,c
  5982  00229E  0E00               	movlw	high i2vfprintf@cfmt
  5983  0022A0  6E43               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  5984  0022A2  C054  F044         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  5985  0022A6  C055  F045         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  5986  0022AA  ECF0  F007         	call	i2_vfpfcnvrt	;wreg free
  5987  0022AE  5040               	movf	?i2_vfpfcnvrt^0,w,c
  5988  0022B0  0100               	movlb	0	; () banked
  5989  0022B2  27CF               	addwf	_nout& (0+255),f,b
  5990  0022B4  5041               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  5991  0022B6  23D0               	addwfc	(_nout+1)& (0+255),f,b
  5992  0022B8                     i2l3532:
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5996  0022B8  C056  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  5997  0022BC  C057  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  5998  0022C0                     	if	0	;tblptru may be non-zero
  5999  0022C0                     	endif
  6000  0022C0                     	if	0	;tblptru may be non-zero
  6001  0022C0                     	endif
  6002  0022C0  0008               	tblrd		*
  6003  0022C2  50F5               	movf	tablat,w,c
  6004  0022C4  0900               	iorlw	0
  6005  0022C6  A4D8               	btfss	status,2,c
  6006  0022C8  EF68  F011         	goto	i2u343_41
  6007  0022CC  EF6A  F011         	goto	i2u343_40
  6008  0022D0                     i2u343_41:
  6009  0022D0  EF49  F011         	goto	i2l3530
  6010  0022D4                     i2u343_40:
  6011  0022D4                     
  6012                           ; BSR set to: 0
  6013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6014  0022D4  C0CF  F050         	movff	_nout,?i2_vfprintf
  6015  0022D8  C0D0  F051         	movff	_nout+1,?i2_vfprintf+1
  6016  0022DC                     
  6017                           ; BSR set to: 0
  6018  0022DC  0012               	return		;funcret
  6019  0022DE                     __end_ofi2_vfprintf:
  6020                           	callstack 0
  6021                           
  6022 ;; *************** function i2_vfpfcnvrt *****************
  6023 ;; Defined at:
  6024 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6027 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6028 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6029 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  6030 ;;  ap              2   67[COMRAM] PTR PTR void 
  6031 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  ll              8   71[COMRAM] long long 
  6034 ;;  llu             8    0        unsigned long long 
  6035 ;;  f               4    0        unsigned long long 
  6036 ;;  vp              3    0        PTR void 
  6037 ;;  ct              3    0        unsigned char [3]
  6038 ;;  cp              3    0        PTR unsigned char 
  6039 ;;  i               2    0        int 
  6040 ;;  done            2    0        int 
  6041 ;;  c               1    0        unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  2   63[COMRAM] int 
  6044 ;; Registers used:
  6045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6051 ;;      Params:         6       0       0       0       0       0       0       0       0
  6052 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6053 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6054 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6055 ;;Total ram usage:       16 bytes
  6056 ;; Hardware stack levels used: 1
  6057 ;; Hardware stack levels required when called: 5
  6058 ;; This function calls:
  6059 ;;		i2_dtoa
  6060 ;;		i2_fputc
  6061 ;; This function is called by:
  6062 ;;		i2_vfprintf
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text44
  6067  000FE0                     __ptext44:
  6068                           	callstack 0
  6069  000FE0                     i2_vfpfcnvrt:
  6070                           	callstack 11
  6071  000FE0                     
  6072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6073  000FE0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6074  000FE4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6075  000FE8  CFDE FFF6          	movff	postinc2,tblptrl
  6076  000FEC  CFDD FFF7          	movff	postdec2,tblptrh
  6077  000FF0                     	if	0	;tblptru may be non-zero
  6078  000FF0                     	endif
  6079  000FF0                     	if	0	;tblptru may be non-zero
  6080  000FF0                     	endif
  6081  000FF0  0008               	tblrd		*
  6082  000FF2  50F5               	movf	tablat,w,c
  6083  000FF4  0A25               	xorlw	37
  6084  000FF6  A4D8               	btfss	status,2,c
  6085  000FF8  EF00  F008         	goto	i2u335_41
  6086  000FFC  EF02  F008         	goto	i2u335_40
  6087  001000                     i2u335_41:
  6088  001000  EFAE  F008         	goto	i2l3474
  6089  001004                     i2u335_40:
  6090  001004                     
  6091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6092  001004  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6093  001008  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6094  00100C  2ADE               	incf	postinc2,f,c
  6095  00100E  0E00               	movlw	0
  6096  001010  22DD               	addwfc	postdec2,f,c
  6097  001012                     
  6098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6099  001012  0E00               	movlw	0
  6100  001014  0100               	movlb	0	; () banked
  6101  001016  6FD2               	movwf	(_width+1)& (0+255),b
  6102  001018  0E00               	movlw	0
  6103  00101A  6FD1               	movwf	_width& (0+255),b
  6104  00101C  C0D1  F0D5         	movff	_width,_flags
  6105  001020  C0D2  F0D6         	movff	_width+1,_flags+1
  6106  001024                     
  6107                           ; BSR set to: 0
  6108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6109  001024  69D3               	setf	_prec& (0+255),b
  6110  001026  69D4               	setf	(_prec+1)& (0+255),b
  6111  001028                     
  6112                           ; BSR set to: 0
  6113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6114  001028  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6115  00102C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6116  001030  CFDE FFF6          	movff	postinc2,tblptrl
  6117  001034  CFDD FFF7          	movff	postdec2,tblptrh
  6118  001038                     	if	0	;tblptru may be non-zero
  6119  001038                     	endif
  6120  001038                     	if	0	;tblptru may be non-zero
  6121  001038                     	endif
  6122  001038  0008               	tblrd		*
  6123  00103A  50F5               	movf	tablat,w,c
  6124  00103C  0A64               	xorlw	100
  6125  00103E  B4D8               	btfsc	status,2,c
  6126  001040  EF24  F008         	goto	i2u336_41
  6127  001044  EF26  F008         	goto	i2u336_40
  6128  001048                     i2u336_41:
  6129  001048  EF38  F008         	goto	i2l3452
  6130  00104C                     i2u336_40:
  6131  00104C                     
  6132                           ; BSR set to: 0
  6133  00104C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6134  001050  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6135  001054  CFDE FFF6          	movff	postinc2,tblptrl
  6136  001058  CFDD FFF7          	movff	postdec2,tblptrh
  6137  00105C                     	if	0	;tblptru may be non-zero
  6138  00105C                     	endif
  6139  00105C                     	if	0	;tblptru may be non-zero
  6140  00105C                     	endif
  6141  00105C  0008               	tblrd		*
  6142  00105E  50F5               	movf	tablat,w,c
  6143  001060  0A69               	xorlw	105
  6144  001062  A4D8               	btfss	status,2,c
  6145  001064  EF36  F008         	goto	i2u337_41
  6146  001068  EF38  F008         	goto	i2u337_40
  6147  00106C                     i2u337_41:
  6148  00106C  EF78  F008         	goto	i2l3458
  6149  001070                     i2u337_40:
  6150  001070                     i2l3452:
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6154  001070  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6155  001074  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6156  001078  2ADE               	incf	postinc2,f,c
  6157  00107A  0E00               	movlw	0
  6158  00107C  22DD               	addwfc	postdec2,f,c
  6159                           
  6160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6161  00107E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6162  001082  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6163  001086  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  6164  00108A  0E02               	movlw	2
  6165  00108C  26DE               	addwf	postinc2,f,c
  6166  00108E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  6167  001092  0E00               	movlw	0
  6168  001094  22DD               	addwfc	postdec2,f,c
  6169  001096  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6170  00109A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6171  00109E  CFDE F048          	movff	postinc2,i2vfpfcnvrt@ll
  6172  0010A2  CFDD F049          	movff	postdec2,i2vfpfcnvrt@ll+1
  6173  0010A6  0E00               	movlw	0
  6174  0010A8  BE49               	btfsc	(i2vfpfcnvrt@ll+1)^0,7,c
  6175  0010AA  0EFF               	movlw	-1
  6176  0010AC  6E4A               	movwf	(i2vfpfcnvrt@ll+2)^0,c
  6177  0010AE  6E4B               	movwf	(i2vfpfcnvrt@ll+3)^0,c
  6178  0010B0  6E4C               	movwf	(i2vfpfcnvrt@ll+4)^0,c
  6179  0010B2  6E4D               	movwf	(i2vfpfcnvrt@ll+5)^0,c
  6180  0010B4  6E4E               	movwf	(i2vfpfcnvrt@ll+6)^0,c
  6181  0010B6  6E4F               	movwf	(i2vfpfcnvrt@ll+7)^0,c
  6182  0010B8                     
  6183                           ; BSR set to: 0
  6184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6185  0010B8  C040  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  6186  0010BC  C041  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  6187  0010C0  C048  F01E         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  6188  0010C4  C049  F01F         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  6189  0010C8  C04A  F020         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  6190  0010CC  C04B  F021         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  6191  0010D0  C04C  F022         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  6192  0010D4  C04D  F023         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  6193  0010D8  C04E  F024         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  6194  0010DC  C04F  F025         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  6195  0010E0  ECA2  F005         	call	i2_dtoa	;wreg free
  6196  0010E4  C01C  F040         	movff	?i2_dtoa,?i2_vfpfcnvrt
  6197  0010E8  C01D  F041         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  6198  0010EC  EFC9  F008         	goto	i2l983
  6199  0010F0                     i2l3458:
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6203  0010F0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6204  0010F4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6205  0010F8  CFDE FFF6          	movff	postinc2,tblptrl
  6206  0010FC  CFDD FFF7          	movff	postdec2,tblptrh
  6207  001100                     	if	0	;tblptru may be non-zero
  6208  001100                     	endif
  6209  001100                     	if	0	;tblptru may be non-zero
  6210  001100                     	endif
  6211  001100  0008               	tblrd		*
  6212  001102  50F5               	movf	tablat,w,c
  6213  001104  0A25               	xorlw	37
  6214  001106  A4D8               	btfss	status,2,c
  6215  001108  EF88  F008         	goto	i2u338_41
  6216  00110C  EF8A  F008         	goto	i2u338_40
  6217  001110                     i2u338_41:
  6218  001110  EFA1  F008         	goto	i2l3468
  6219  001114                     i2u338_40:
  6220  001114                     
  6221                           ; BSR set to: 0
  6222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6223  001114  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6224  001118  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6225  00111C  2ADE               	incf	postinc2,f,c
  6226  00111E  0E00               	movlw	0
  6227  001120  22DD               	addwfc	postdec2,f,c
  6228  001122                     
  6229                           ; BSR set to: 0
  6230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6231  001122  0E00               	movlw	0
  6232  001124  6E02               	movwf	(i2fputc@c+1)^0,c
  6233  001126  0E25               	movlw	37
  6234  001128  6E01               	movwf	i2fputc@c^0,c
  6235  00112A  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6236  00112E  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6237  001132  EC7F  F00D         	call	i2_fputc	;wreg free
  6238  001136                     i2l3464:
  6239                           
  6240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6241  001136  0E00               	movlw	0
  6242  001138  6E41               	movwf	(?i2_vfpfcnvrt+1)^0,c
  6243  00113A  0E01               	movlw	1
  6244  00113C  6E40               	movwf	?i2_vfpfcnvrt^0,c
  6245  00113E  EFC9  F008         	goto	i2l983
  6246  001142                     i2l3468:
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6250  001142  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6251  001146  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6252  00114A  2ADE               	incf	postinc2,f,c
  6253  00114C  0E00               	movlw	0
  6254  00114E  22DD               	addwfc	postdec2,f,c
  6255  001150                     
  6256                           ; BSR set to: 0
  6257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6258  001150  0E00               	movlw	0
  6259  001152  6E41               	movwf	(?i2_vfpfcnvrt+1)^0,c
  6260  001154  0E00               	movlw	0
  6261  001156  6E40               	movwf	?i2_vfpfcnvrt^0,c
  6262  001158  EFC9  F008         	goto	i2l983
  6263  00115C                     i2l3474:
  6264                           
  6265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6266  00115C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6267  001160  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6268  001164  CFDE FFF6          	movff	postinc2,tblptrl
  6269  001168  CFDD FFF7          	movff	postdec2,tblptrh
  6270  00116C                     	if	0	;tblptru may be non-zero
  6271  00116C                     	endif
  6272  00116C                     	if	0	;tblptru may be non-zero
  6273  00116C                     	endif
  6274  00116C  0008               	tblrd		*
  6275  00116E  50F5               	movf	tablat,w,c
  6276  001170  6E01               	movwf	i2fputc@c^0,c
  6277  001172  6A02               	clrf	(i2fputc@c+1)^0,c
  6278  001174  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6279  001178  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6280  00117C  EC7F  F00D         	call	i2_fputc	;wreg free
  6281  001180                     
  6282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6283  001180  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6284  001184  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6285  001188  2ADE               	incf	postinc2,f,c
  6286  00118A  0E00               	movlw	0
  6287  00118C  22DD               	addwfc	postdec2,f,c
  6288  00118E  EF9B  F008         	goto	i2l3464
  6289  001192                     i2l983:
  6290  001192  0012               	return		;funcret
  6291  001194                     __end_ofi2_vfpfcnvrt:
  6292                           	callstack 0
  6293                           
  6294 ;; *************** function i2_dtoa *****************
  6295 ;; Defined at:
  6296 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6299 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6300 ;;  d               8   29[COMRAM] long long 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  n               8   53[COMRAM] long long 
  6303 ;;  i               2   61[COMRAM] int 
  6304 ;;  s               2   51[COMRAM] int 
  6305 ;;  w               2   49[COMRAM] int 
  6306 ;;  p               2   47[COMRAM] int 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  2   27[COMRAM] int 
  6309 ;; Registers used:
  6310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6316 ;;      Params:        10       0       0       0       0       0       0       0       0
  6317 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6318 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6319 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6320 ;;Total ram usage:       36 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; Hardware stack levels required when called: 4
  6323 ;; This function calls:
  6324 ;;		i2___aodiv
  6325 ;;		i2___aomod
  6326 ;;		i2_abs
  6327 ;;		i2_pad
  6328 ;; This function is called by:
  6329 ;;		i2_vfpfcnvrt
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text45
  6334  000B44                     __ptext45:
  6335                           	callstack 0
  6336  000B44                     i2_dtoa:
  6337                           	callstack 11
  6338  000B44                     
  6339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6340  000B44  C01E  F036         	movff	i2dtoa@d,i2dtoa@n
  6341  000B48  C01F  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  6342  000B4C  C020  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  6343  000B50  C021  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  6344  000B54  C022  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  6345  000B58  C023  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  6346  000B5C  C024  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  6347  000B60  C025  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  6348  000B64                     
  6349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6350  000B64  BE3D               	btfsc	(i2dtoa@n+7)^0,7,c
  6351  000B66  EFB7  F005         	goto	i2u305_41
  6352  000B6A  EFBA  F005         	goto	i2u305_40
  6353  000B6E                     i2u305_41:
  6354  000B6E  0E01               	movlw	1
  6355  000B70  EFBB  F005         	goto	i2u306_40
  6356  000B74                     i2u305_40:
  6357  000B74  0E00               	movlw	0
  6358  000B76                     i2u306_40:
  6359  000B76  6E34               	movwf	i2dtoa@s^0,c
  6360  000B78  6A35               	clrf	(i2dtoa@s+1)^0,c
  6361                           
  6362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6363  000B7A  5034               	movf	i2dtoa@s^0,w,c
  6364  000B7C  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  6365  000B7E  B4D8               	btfsc	status,2,c
  6366  000B80  EFC4  F005         	goto	i2u307_41
  6367  000B84  EFC6  F005         	goto	i2u307_40
  6368  000B88                     i2u307_41:
  6369  000B88  EFD6  F005         	goto	i2l3322
  6370  000B8C                     i2u307_40:
  6371  000B8C                     
  6372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6373  000B8C  1E3D               	comf	(i2dtoa@n+7)^0,f,c
  6374  000B8E  1E3C               	comf	(i2dtoa@n+6)^0,f,c
  6375  000B90  1E3B               	comf	(i2dtoa@n+5)^0,f,c
  6376  000B92  1E3A               	comf	(i2dtoa@n+4)^0,f,c
  6377  000B94  1E39               	comf	(i2dtoa@n+3)^0,f,c
  6378  000B96  1E38               	comf	(i2dtoa@n+2)^0,f,c
  6379  000B98  1E37               	comf	(i2dtoa@n+1)^0,f,c
  6380  000B9A  6C36               	negf	i2dtoa@n^0,c
  6381  000B9C  0E00               	movlw	0
  6382  000B9E  2237               	addwfc	(i2dtoa@n+1)^0,f,c
  6383  000BA0  2238               	addwfc	(i2dtoa@n+2)^0,f,c
  6384  000BA2  2239               	addwfc	(i2dtoa@n+3)^0,f,c
  6385  000BA4  223A               	addwfc	(i2dtoa@n+4)^0,f,c
  6386  000BA6  223B               	addwfc	(i2dtoa@n+5)^0,f,c
  6387  000BA8  223C               	addwfc	(i2dtoa@n+6)^0,f,c
  6388  000BAA  223D               	addwfc	(i2dtoa@n+7)^0,f,c
  6389  000BAC                     i2l3322:
  6390                           
  6391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6392  000BAC  0100               	movlb	0	; () banked
  6393  000BAE  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  6394  000BB0  EFDC  F005         	goto	i2u308_41
  6395  000BB4  EFDE  F005         	goto	i2u308_40
  6396  000BB8                     i2u308_41:
  6397  000BB8  EFDF  F005         	goto	i2l3326
  6398  000BBC                     i2u308_40:
  6399  000BBC                     
  6400                           ; BSR set to: 0
  6401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6402  000BBC  93D5               	bcf	_flags& (0+255),1,b
  6403  000BBE                     i2l3326:
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6407  000BBE  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  6408  000BC0  EFEC  F005         	goto	i2u309_40
  6409  000BC4  51D4               	movf	(_prec+1)& (0+255),w,b
  6410  000BC6  E106               	bnz	i2u309_41
  6411  000BC8  05D3               	decf	_prec& (0+255),w,b
  6412  000BCA  B0D8               	btfsc	status,0,c
  6413  000BCC  EFEA  F005         	goto	i2u309_41
  6414  000BD0  EFEC  F005         	goto	i2u309_40
  6415  000BD4                     i2u309_41:
  6416  000BD4  EFF2  F005         	goto	i2l956
  6417  000BD8                     i2u309_40:
  6418  000BD8                     
  6419                           ; BSR set to: 0
  6420  000BD8  0E00               	movlw	0
  6421  000BDA  6E31               	movwf	(i2dtoa@p+1)^0,c
  6422  000BDC  0E01               	movlw	1
  6423  000BDE  6E30               	movwf	i2dtoa@p^0,c
  6424  000BE0  EFF6  F005         	goto	i2l958
  6425  000BE4                     i2l956:
  6426                           
  6427                           ; BSR set to: 0
  6428  000BE4  C0D3  F030         	movff	_prec,i2dtoa@p
  6429  000BE8  C0D4  F031         	movff	_prec+1,i2dtoa@p+1
  6430  000BEC                     i2l958:
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6434  000BEC  C0D1  F032         	movff	_width,i2dtoa@w
  6435  000BF0  C0D2  F033         	movff	_width+1,i2dtoa@w+1
  6436  000BF4                     
  6437                           ; BSR set to: 0
  6438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6439  000BF4  5034               	movf	i2dtoa@s^0,w,c
  6440  000BF6  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  6441  000BF8  A4D8               	btfss	status,2,c
  6442  000BFA  EF01  F006         	goto	i2u310_41
  6443  000BFE  EF03  F006         	goto	i2u310_40
  6444  000C02                     i2u310_41:
  6445  000C02  EF0A  F006         	goto	i2l3334
  6446  000C06                     i2u310_40:
  6447  000C06                     
  6448                           ; BSR set to: 0
  6449  000C06  A5D5               	btfss	_flags& (0+255),2,b
  6450  000C08  EF08  F006         	goto	i2u311_41
  6451  000C0C  EF0A  F006         	goto	i2u311_40
  6452  000C10                     i2u311_41:
  6453  000C10  EF0D  F006         	goto	i2l3336
  6454  000C14                     i2u311_40:
  6455  000C14                     i2l3334:
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  6459  000C14  0632               	decf	i2dtoa@w^0,f,c
  6460  000C16  A0D8               	btfss	status,0,c
  6461  000C18  0633               	decf	(i2dtoa@w+1)^0,f,c
  6462  000C1A                     i2l3336:
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6466  000C1A  0E00               	movlw	0
  6467  000C1C  6E3F               	movwf	(i2dtoa@i+1)^0,c
  6468  000C1E  0E1F               	movlw	31
  6469  000C20  6E3E               	movwf	i2dtoa@i^0,c
  6470  000C22                     
  6471                           ; BSR set to: 0
  6472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6473  000C22  0E00               	movlw	0
  6474  000C24  0101               	movlb	1	; () banked
  6475  000C26  6F1F               	movwf	(_dbuf+31)& (0+255),b
  6476                           
  6477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6478  000C28  EF92  F006         	goto	i2l3350
  6479  000C2C                     i2l3340:
  6480                           
  6481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  6482  000C2C  063E               	decf	i2dtoa@i^0,f,c
  6483  000C2E  A0D8               	btfss	status,0,c
  6484  000C30  063F               	decf	(i2dtoa@i+1)^0,f,c
  6485  000C32                     
  6486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6487  000C32  0E00               	movlw	low _dbuf
  6488  000C34  243E               	addwf	i2dtoa@i^0,w,c
  6489  000C36  6ED9               	movwf	fsr2l,c
  6490  000C38  0E01               	movlw	high _dbuf
  6491  000C3A  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  6492  000C3C  6EDA               	movwf	fsr2h,c
  6493  000C3E  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  6494  000C42  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  6495  000C46  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  6496  000C4A  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  6497  000C4E  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  6498  000C52  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  6499  000C56  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  6500  000C5A  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  6501  000C5E  0E0A               	movlw	10
  6502  000C60  6E09               	movwf	i2___aomod@divisor^0,c
  6503  000C62  0E00               	movlw	0
  6504  000C64  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  6505  000C66  0E00               	movlw	0
  6506  000C68  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  6507  000C6A  0E00               	movlw	0
  6508  000C6C  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  6509  000C6E  0E00               	movlw	0
  6510  000C70  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  6511  000C72  0E00               	movlw	0
  6512  000C74  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  6513  000C76  0E00               	movlw	0
  6514  000C78  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  6515  000C7A  0E00               	movlw	0
  6516  000C7C  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  6517  000C7E  EC06  F00B         	call	i2___aomod	;wreg free
  6518  000C82  C001  F026         	movff	?i2___aomod,??i2_dtoa
  6519  000C86  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  6520  000C8A  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  6521  000C8E  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  6522  000C92  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  6523  000C96  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  6524  000C9A  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  6525  000C9E  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  6526  000CA2  C026  F013         	movff	??i2_dtoa,i2abs@a
  6527  000CA6  C028  F014         	movff	??i2_dtoa+2,i2abs@a+1
  6528  000CAA  ECE4  F012         	call	i2_abs	;wreg free
  6529  000CAE  5013               	movf	?i2_abs^0,w,c
  6530  000CB0  0F30               	addlw	48
  6531  000CB2  6EDF               	movwf	indf2,c
  6532  000CB4                     
  6533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  6534  000CB4  0630               	decf	i2dtoa@p^0,f,c
  6535  000CB6  A0D8               	btfss	status,0,c
  6536  000CB8  0631               	decf	(i2dtoa@p+1)^0,f,c
  6537  000CBA                     
  6538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  6539  000CBA  0632               	decf	i2dtoa@w^0,f,c
  6540  000CBC  A0D8               	btfss	status,0,c
  6541  000CBE  0633               	decf	(i2dtoa@w+1)^0,f,c
  6542  000CC0                     
  6543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6544  000CC0  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  6545  000CC4  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  6546  000CC8  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  6547  000CCC  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  6548  000CD0  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  6549  000CD4  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  6550  000CD8  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  6551  000CDC  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  6552  000CE0  0E0A               	movlw	10
  6553  000CE2  6E09               	movwf	i2___aodiv@divisor^0,c
  6554  000CE4  0E00               	movlw	0
  6555  000CE6  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  6556  000CE8  0E00               	movlw	0
  6557  000CEA  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  6558  000CEC  0E00               	movlw	0
  6559  000CEE  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  6560  000CF0  0E00               	movlw	0
  6561  000CF2  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  6562  000CF4  0E00               	movlw	0
  6563  000CF6  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  6564  000CF8  0E00               	movlw	0
  6565  000CFA  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  6566  000CFC  0E00               	movlw	0
  6567  000CFE  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  6568  000D00  EC8F  F009         	call	i2___aodiv	;wreg free
  6569  000D04  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  6570  000D08  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  6571  000D0C  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  6572  000D10  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  6573  000D14  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  6574  000D18  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  6575  000D1C  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  6576  000D20  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  6577  000D24                     i2l3350:
  6578                           
  6579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6580  000D24  BE3F               	btfsc	(i2dtoa@i+1)^0,7,c
  6581  000D26  EF9D  F006         	goto	i2u312_41
  6582  000D2A  503F               	movf	(i2dtoa@i+1)^0,w,c
  6583  000D2C  E108               	bnz	i2u312_40
  6584  000D2E  043E               	decf	i2dtoa@i^0,w,c
  6585  000D30  A0D8               	btfss	status,0,c
  6586  000D32  EF9D  F006         	goto	i2u312_41
  6587  000D36  EF9F  F006         	goto	i2u312_40
  6588  000D3A                     i2u312_41:
  6589  000D3A  EFD0  F006         	goto	i2l3360
  6590  000D3E                     i2u312_40:
  6591  000D3E  5036               	movf	i2dtoa@n^0,w,c
  6592  000D40  1037               	iorwf	(i2dtoa@n+1)^0,w,c
  6593  000D42  1038               	iorwf	(i2dtoa@n+2)^0,w,c
  6594  000D44  1039               	iorwf	(i2dtoa@n+3)^0,w,c
  6595  000D46  103A               	iorwf	(i2dtoa@n+4)^0,w,c
  6596  000D48  103B               	iorwf	(i2dtoa@n+5)^0,w,c
  6597  000D4A  103C               	iorwf	(i2dtoa@n+6)^0,w,c
  6598  000D4C  103D               	iorwf	(i2dtoa@n+7)^0,w,c
  6599  000D4E  A4D8               	btfss	status,2,c
  6600  000D50  EFAC  F006         	goto	i2u313_41
  6601  000D54  EFAE  F006         	goto	i2u313_40
  6602  000D58                     i2u313_41:
  6603  000D58  EF16  F006         	goto	i2l3340
  6604  000D5C                     i2u313_40:
  6605  000D5C  BE31               	btfsc	(i2dtoa@p+1)^0,7,c
  6606  000D5E  EFBB  F006         	goto	i2u314_40
  6607  000D62  5031               	movf	(i2dtoa@p+1)^0,w,c
  6608  000D64  E106               	bnz	i2u314_41
  6609  000D66  0430               	decf	i2dtoa@p^0,w,c
  6610  000D68  B0D8               	btfsc	status,0,c
  6611  000D6A  EFB9  F006         	goto	i2u314_41
  6612  000D6E  EFBB  F006         	goto	i2u314_40
  6613  000D72                     i2u314_41:
  6614  000D72  EF16  F006         	goto	i2l3340
  6615  000D76                     i2u314_40:
  6616  000D76  BE33               	btfsc	(i2dtoa@w+1)^0,7,c
  6617  000D78  EFC6  F006         	goto	i2u315_41
  6618  000D7C  5033               	movf	(i2dtoa@w+1)^0,w,c
  6619  000D7E  E108               	bnz	i2u315_40
  6620  000D80  0432               	decf	i2dtoa@w^0,w,c
  6621  000D82  A0D8               	btfss	status,0,c
  6622  000D84  EFC6  F006         	goto	i2u315_41
  6623  000D88  EFC8  F006         	goto	i2u315_40
  6624  000D8C                     i2u315_41:
  6625  000D8C  EFD0  F006         	goto	i2l3360
  6626  000D90                     i2u315_40:
  6627  000D90  0100               	movlb	0	; () banked
  6628  000D92  B3D5               	btfsc	_flags& (0+255),1,b
  6629  000D94  EFCE  F006         	goto	i2u316_41
  6630  000D98  EFD0  F006         	goto	i2u316_40
  6631  000D9C                     i2u316_41:
  6632  000D9C  EF16  F006         	goto	i2l3340
  6633  000DA0                     i2u316_40:
  6634  000DA0                     i2l3360:
  6635                           
  6636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6637  000DA0  5034               	movf	i2dtoa@s^0,w,c
  6638  000DA2  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  6639  000DA4  A4D8               	btfss	status,2,c
  6640  000DA6  EFD7  F006         	goto	i2u317_41
  6641  000DAA  EFD9  F006         	goto	i2u317_40
  6642  000DAE                     i2u317_41:
  6643  000DAE  EFE1  F006         	goto	i2l3364
  6644  000DB2                     i2u317_40:
  6645  000DB2  0100               	movlb	0	; () banked
  6646  000DB4  A5D5               	btfss	_flags& (0+255),2,b
  6647  000DB6  EFDF  F006         	goto	i2u318_41
  6648  000DBA  EFE1  F006         	goto	i2u318_40
  6649  000DBE                     i2u318_41:
  6650  000DBE  EFFF  F006         	goto	i2l3374
  6651  000DC2                     i2u318_40:
  6652  000DC2                     i2l3364:
  6653                           
  6654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  6655  000DC2  063E               	decf	i2dtoa@i^0,f,c
  6656  000DC4  A0D8               	btfss	status,0,c
  6657  000DC6  063F               	decf	(i2dtoa@i+1)^0,f,c
  6658  000DC8                     
  6659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6660  000DC8  5034               	movf	i2dtoa@s^0,w,c
  6661  000DCA  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  6662  000DCC  A4D8               	btfss	status,2,c
  6663  000DCE  EFEB  F006         	goto	i2u319_41
  6664  000DD2  EFED  F006         	goto	i2u319_40
  6665  000DD6                     i2u319_41:
  6666  000DD6  EFF3  F006         	goto	i2l3370
  6667  000DDA                     i2u319_40:
  6668  000DDA  0E00               	movlw	0
  6669  000DDC  6E2F               	movwf	(i2_dtoa$743+1)^0,c
  6670  000DDE  0E2B               	movlw	43
  6671  000DE0  6E2E               	movwf	i2_dtoa$743^0,c
  6672  000DE2  EFF7  F006         	goto	i2l3372
  6673  000DE6                     i2l3370:
  6674  000DE6  0E00               	movlw	0
  6675  000DE8  6E2F               	movwf	(i2_dtoa$743+1)^0,c
  6676  000DEA  0E2D               	movlw	45
  6677  000DEC  6E2E               	movwf	i2_dtoa$743^0,c
  6678  000DEE                     i2l3372:
  6679  000DEE  0E00               	movlw	low _dbuf
  6680  000DF0  243E               	addwf	i2dtoa@i^0,w,c
  6681  000DF2  6ED9               	movwf	fsr2l,c
  6682  000DF4  0E01               	movlw	high _dbuf
  6683  000DF6  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  6684  000DF8  6EDA               	movwf	fsr2h,c
  6685  000DFA  C02E  FFDF         	movff	i2_dtoa$743,indf2
  6686  000DFE                     i2l3374:
  6687                           
  6688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6689  000DFE  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  6690  000E02  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  6691  000E06  0E00               	movlw	low _dbuf
  6692  000E08  243E               	addwf	i2dtoa@i^0,w,c
  6693  000E0A  6E13               	movwf	i2pad@buf^0,c
  6694  000E0C  0E01               	movlw	high _dbuf
  6695  000E0E  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  6696  000E10  6E14               	movwf	(i2pad@buf+1)^0,c
  6697  000E12  C032  F015         	movff	i2dtoa@w,i2pad@p
  6698  000E16  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  6699  000E1A  ECE4  F00D         	call	i2_pad	;wreg free
  6700  000E1E  C011  F01C         	movff	?i2_pad,?i2_dtoa
  6701  000E22  C012  F01D         	movff	?i2_pad+1,?i2_dtoa+1
  6702  000E26  0012               	return		;funcret
  6703  000E28                     __end_ofi2_dtoa:
  6704                           	callstack 0
  6705                           
  6706 ;; *************** function i2_pad *****************
  6707 ;; Defined at:
  6708 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6711 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6712 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6713 ;;		 -> dbuf(32), 
  6714 ;;  p               2   20[COMRAM] int 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  w               2   25[COMRAM] int 
  6717 ;;  i               2   23[COMRAM] int 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  2   16[COMRAM] int 
  6720 ;; Registers used:
  6721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6727 ;;      Params:         6       0       0       0       0       0       0       0       0
  6728 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6729 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6730 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6731 ;;Total ram usage:       11 bytes
  6732 ;; Hardware stack levels used: 1
  6733 ;; Hardware stack levels required when called: 3
  6734 ;; This function calls:
  6735 ;;		i2_fputc
  6736 ;;		i2_fputs
  6737 ;;		i2_strlen
  6738 ;; This function is called by:
  6739 ;;		i2_dtoa
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text46
  6744  001BC8                     __ptext46:
  6745                           	callstack 0
  6746  001BC8                     i2_pad:
  6747                           	callstack 11
  6748  001BC8                     
  6749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6750  001BC8  0100               	movlb	0	; () banked
  6751  001BCA  A1D5               	btfss	_flags& (0+255),0,b
  6752  001BCC  EFEA  F00D         	goto	i2u282_41
  6753  001BD0  EFEC  F00D         	goto	i2u282_40
  6754  001BD4                     i2u282_41:
  6755  001BD4  EFF6  F00D         	goto	i2l3188
  6756  001BD8                     i2u282_40:
  6757  001BD8                     
  6758                           ; BSR set to: 0
  6759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6760  001BD8  C013  F00A         	movff	i2pad@buf,i2fputs@s
  6761  001BDC  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  6762  001BE0  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  6763  001BE4  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  6764  001BE8  EC81  F012         	call	i2_fputs	;wreg free
  6765  001BEC                     i2l3188:
  6766                           
  6767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6768  001BEC  BE16               	btfsc	(i2pad@p+1)^0,7,c
  6769  001BEE  EFFB  F00D         	goto	i2u283_41
  6770  001BF2  EFFD  F00D         	goto	i2u283_40
  6771  001BF6                     i2u283_41:
  6772  001BF6  EF03  F00E         	goto	i2l3192
  6773  001BFA                     i2u283_40:
  6774  001BFA  C015  F01A         	movff	i2pad@p,i2pad@w
  6775  001BFE  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  6776  001C02  EF07  F00E         	goto	i2l945
  6777  001C06                     i2l3192:
  6778  001C06  0E00               	movlw	0
  6779  001C08  6E1B               	movwf	(i2pad@w+1)^0,c
  6780  001C0A  0E00               	movlw	0
  6781  001C0C  6E1A               	movwf	i2pad@w^0,c
  6782  001C0E                     i2l945:
  6783                           
  6784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6785  001C0E  0E00               	movlw	0
  6786  001C10  6E19               	movwf	(i2pad@i+1)^0,c
  6787  001C12  0E00               	movlw	0
  6788  001C14  6E18               	movwf	i2pad@i^0,c
  6789                           
  6790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6791  001C16  EF19  F00E         	goto	i2l3198
  6792  001C1A                     i2l3194:
  6793                           
  6794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6795  001C1A  0E00               	movlw	0
  6796  001C1C  6E02               	movwf	(i2fputc@c+1)^0,c
  6797  001C1E  0E20               	movlw	32
  6798  001C20  6E01               	movwf	i2fputc@c^0,c
  6799  001C22  C011  F003         	movff	i2pad@fp,i2fputc@fp
  6800  001C26  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  6801  001C2A  EC7F  F00D         	call	i2_fputc	;wreg free
  6802  001C2E                     
  6803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6804  001C2E  4A18               	infsnz	i2pad@i^0,f,c
  6805  001C30  2A19               	incf	(i2pad@i+1)^0,f,c
  6806  001C32                     i2l3198:
  6807                           
  6808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6809  001C32  501A               	movf	i2pad@w^0,w,c
  6810  001C34  5C18               	subwf	i2pad@i^0,w,c
  6811  001C36  5019               	movf	(i2pad@i+1)^0,w,c
  6812  001C38  0A80               	xorlw	128
  6813  001C3A  6E17               	movwf	??i2_pad^0,c
  6814  001C3C  501B               	movf	(i2pad@w+1)^0,w,c
  6815  001C3E  0A80               	xorlw	128
  6816  001C40  5817               	subwfb	??i2_pad^0,w,c
  6817  001C42  A0D8               	btfss	status,0,c
  6818  001C44  EF26  F00E         	goto	i2u284_41
  6819  001C48  EF28  F00E         	goto	i2u284_40
  6820  001C4C                     i2u284_41:
  6821  001C4C  EF0D  F00E         	goto	i2l3194
  6822  001C50                     i2u284_40:
  6823  001C50                     
  6824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6825  001C50  0100               	movlb	0	; () banked
  6826  001C52  B1D5               	btfsc	_flags& (0+255),0,b
  6827  001C54  EF2E  F00E         	goto	i2u285_41
  6828  001C58  EF30  F00E         	goto	i2u285_40
  6829  001C5C                     i2u285_41:
  6830  001C5C  EF3A  F00E         	goto	i2l3202
  6831  001C60                     i2u285_40:
  6832  001C60                     
  6833                           ; BSR set to: 0
  6834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6835  001C60  C013  F00A         	movff	i2pad@buf,i2fputs@s
  6836  001C64  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  6837  001C68  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  6838  001C6C  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  6839  001C70  EC81  F012         	call	i2_fputs	;wreg free
  6840  001C74                     i2l3202:
  6841                           
  6842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6843  001C74  C013  F001         	movff	i2pad@buf,i2strlen@s
  6844  001C78  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
  6845  001C7C  EC7A  F013         	call	i2_strlen	;wreg free
  6846  001C80  501A               	movf	i2pad@w^0,w,c
  6847  001C82  2401               	addwf	?i2_strlen^0,w,c
  6848  001C84  6E11               	movwf	?i2_pad^0,c
  6849  001C86  501B               	movf	(i2pad@w+1)^0,w,c
  6850  001C88  2002               	addwfc	(?i2_strlen+1)^0,w,c
  6851  001C8A  6E12               	movwf	(?i2_pad+1)^0,c
  6852  001C8C  0012               	return		;funcret
  6853  001C8E                     __end_ofi2_pad:
  6854                           	callstack 0
  6855                           
  6856 ;; *************** function i2_strlen *****************
  6857 ;; Defined at:
  6858 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6861 ;;		 -> dbuf(32), 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6864 ;;		 -> dbuf(32), 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  2    0[COMRAM] unsigned int 
  6867 ;; Registers used:
  6868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6874 ;;      Params:         2       0       0       0       0       0       0       0       0
  6875 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6877 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6878 ;;Total ram usage:        4 bytes
  6879 ;; Hardware stack levels used: 1
  6880 ;; This function calls:
  6881 ;;		Nothing
  6882 ;; This function is called by:
  6883 ;;		i2_pad
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text47
  6888  0026F4                     __ptext47:
  6889                           	callstack 0
  6890  0026F4                     i2_strlen:
  6891                           	callstack 13
  6892  0026F4  C001  F003         	movff	i2strlen@s,i2strlen@a
  6893  0026F8  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  6894  0026FC  EF82  F013         	goto	i2l3080
  6895  002700                     i2l3078:
  6896  002700  4A01               	infsnz	i2strlen@s^0,f,c
  6897  002702  2A02               	incf	(i2strlen@s+1)^0,f,c
  6898  002704                     i2l3080:
  6899  002704  C001  FFD9         	movff	i2strlen@s,fsr2l
  6900  002708  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  6901  00270C  50DF               	movf	indf2,w,c
  6902  00270E  A4D8               	btfss	status,2,c
  6903  002710  EF8C  F013         	goto	i2u266_41
  6904  002714  EF8E  F013         	goto	i2u266_40
  6905  002718                     i2u266_41:
  6906  002718  EF80  F013         	goto	i2l3078
  6907  00271C                     i2u266_40:
  6908  00271C  5003               	movf	i2strlen@a^0,w,c
  6909  00271E  5C01               	subwf	i2strlen@s^0,w,c
  6910  002720  6E01               	movwf	?i2_strlen^0,c
  6911  002722  5004               	movf	(i2strlen@a+1)^0,w,c
  6912  002724  5802               	subwfb	(i2strlen@s+1)^0,w,c
  6913  002726  6E02               	movwf	(?i2_strlen+1)^0,c
  6914  002728  0012               	return		;funcret
  6915  00272A                     __end_ofi2_strlen:
  6916                           	callstack 0
  6917                           
  6918 ;; *************** function i2_fputs *****************
  6919 ;; Defined at:
  6920 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6923 ;;		 -> dbuf(32), 
  6924 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6925 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  i               2   14[COMRAM] int 
  6928 ;;  c               1   13[COMRAM] unsigned char 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  2    9[COMRAM] int 
  6931 ;; Registers used:
  6932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6938 ;;      Params:         4       0       0       0       0       0       0       0       0
  6939 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6941 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6942 ;;Total ram usage:        7 bytes
  6943 ;; Hardware stack levels used: 1
  6944 ;; Hardware stack levels required when called: 2
  6945 ;; This function calls:
  6946 ;;		i2_fputc
  6947 ;; This function is called by:
  6948 ;;		i2_pad
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text48
  6953  002502                     __ptext48:
  6954                           	callstack 0
  6955  002502                     i2_fputs:
  6956                           	callstack 11
  6957  002502  0E00               	movlw	0
  6958  002504  6E10               	movwf	(i2fputs@i+1)^0,c
  6959  002506  0E00               	movlw	0
  6960  002508  6E0F               	movwf	i2fputs@i^0,c
  6961  00250A  EF92  F012         	goto	i2l3074
  6962  00250E                     i2l3070:
  6963  00250E  C00E  F001         	movff	i2fputs@c,i2fputc@c
  6964  002512  6A02               	clrf	(i2fputc@c+1)^0,c
  6965  002514  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  6966  002518  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  6967  00251C  EC7F  F00D         	call	i2_fputc	;wreg free
  6968  002520  4A0F               	infsnz	i2fputs@i^0,f,c
  6969  002522  2A10               	incf	(i2fputs@i+1)^0,f,c
  6970  002524                     i2l3074:
  6971  002524  500F               	movf	i2fputs@i^0,w,c
  6972  002526  240A               	addwf	i2fputs@s^0,w,c
  6973  002528  6ED9               	movwf	fsr2l,c
  6974  00252A  5010               	movf	(i2fputs@i+1)^0,w,c
  6975  00252C  200B               	addwfc	(i2fputs@s+1)^0,w,c
  6976  00252E  6EDA               	movwf	fsr2h,c
  6977  002530  50DF               	movf	indf2,w,c
  6978  002532  6E0E               	movwf	i2fputs@c^0,c
  6979  002534  500E               	movf	i2fputs@c^0,w,c
  6980  002536  A4D8               	btfss	status,2,c
  6981  002538  EFA0  F012         	goto	i2u265_41
  6982  00253C  EFA2  F012         	goto	i2u265_40
  6983  002540                     i2u265_41:
  6984  002540  EF87  F012         	goto	i2l3070
  6985  002544                     i2u265_40:
  6986  002544  0012               	return		;funcret
  6987  002546                     __end_ofi2_fputs:
  6988                           	callstack 0
  6989                           
  6990 ;; *************** function i2_fputc *****************
  6991 ;; Defined at:
  6992 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  c               2    0[COMRAM] int 
  6995 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6996 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;		None
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  2    0[COMRAM] int 
  7001 ;; Registers used:
  7002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7008 ;;      Params:         4       0       0       0       0       0       0       0       0
  7009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7010 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7011 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7012 ;;Total ram usage:        9 bytes
  7013 ;; Hardware stack levels used: 1
  7014 ;; Hardware stack levels required when called: 1
  7015 ;; This function calls:
  7016 ;;		i2_putch
  7017 ;; This function is called by:
  7018 ;;		i2_pad
  7019 ;;		i2_vfpfcnvrt
  7020 ;;		i2_fputs
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           	psect	text49
  7025  001AFE                     __ptext49:
  7026                           	callstack 0
  7027  001AFE                     i2_fputc:
  7028                           	callstack 14
  7029  001AFE  5003               	movf	i2fputc@fp^0,w,c
  7030  001B00  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  7031  001B02  B4D8               	btfsc	status,2,c
  7032  001B04  EF86  F00D         	goto	i2u257_41
  7033  001B08  EF88  F00D         	goto	i2u257_40
  7034  001B0C                     i2u257_41:
  7035  001B0C  EF91  F00D         	goto	i2l3044
  7036  001B10                     i2u257_40:
  7037  001B10  5003               	movf	i2fputc@fp^0,w,c
  7038  001B12  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  7039  001B14  A4D8               	btfss	status,2,c
  7040  001B16  EF8F  F00D         	goto	i2u258_41
  7041  001B1A  EF91  F00D         	goto	i2u258_40
  7042  001B1E                     i2u258_41:
  7043  001B1E  EF96  F00D         	goto	i2l3046
  7044  001B22                     i2u258_40:
  7045  001B22                     i2l3044:
  7046  001B22  5001               	movf	i2fputc@c^0,w,c
  7047  001B24  EC76  F014         	call	i2_putch
  7048  001B28  EFE3  F00D         	goto	i2l1009
  7049  001B2C                     i2l3046:
  7050  001B2C  EE20 F004          	lfsr	2,4
  7051  001B30  5003               	movf	i2fputc@fp^0,w,c
  7052  001B32  26D9               	addwf	fsr2l,f,c
  7053  001B34  5004               	movf	(i2fputc@fp+1)^0,w,c
  7054  001B36  22DA               	addwfc	fsr2h,f,c
  7055  001B38  50DE               	movf	postinc2,w,c
  7056  001B3A  10DE               	iorwf	postinc2,w,c
  7057  001B3C  B4D8               	btfsc	status,2,c
  7058  001B3E  EFA3  F00D         	goto	i2u259_41
  7059  001B42  EFA5  F00D         	goto	i2u259_40
  7060  001B46                     i2u259_41:
  7061  001B46  EFC0  F00D         	goto	i2l3050
  7062  001B4A                     i2u259_40:
  7063  001B4A  EE20 F004          	lfsr	2,4
  7064  001B4E  5003               	movf	i2fputc@fp^0,w,c
  7065  001B50  26D9               	addwf	fsr2l,f,c
  7066  001B52  5004               	movf	(i2fputc@fp+1)^0,w,c
  7067  001B54  22DA               	addwfc	fsr2h,f,c
  7068  001B56  EE10 F002          	lfsr	1,2
  7069  001B5A  5003               	movf	i2fputc@fp^0,w,c
  7070  001B5C  26E1               	addwf	fsr1l,f,c
  7071  001B5E  5004               	movf	(i2fputc@fp+1)^0,w,c
  7072  001B60  22E2               	addwfc	fsr1h,f,c
  7073  001B62  50DE               	movf	postinc2,w,c
  7074  001B64  5CE6               	subwf	postinc1,w,c
  7075  001B66  50E6               	movf	postinc1,w,c
  7076  001B68  0A80               	xorlw	128
  7077  001B6A  6E09               	movwf	(??i2_fputc+4)^0,c
  7078  001B6C  50DE               	movf	postinc2,w,c
  7079  001B6E  0A80               	xorlw	128
  7080  001B70  5809               	subwfb	(??i2_fputc+4)^0,w,c
  7081  001B72  B0D8               	btfsc	status,0,c
  7082  001B74  EFBE  F00D         	goto	i2u260_41
  7083  001B78  EFC0  F00D         	goto	i2u260_40
  7084  001B7C                     i2u260_41:
  7085  001B7C  EFE3  F00D         	goto	i2l1009
  7086  001B80                     i2u260_40:
  7087  001B80                     i2l3050:
  7088  001B80  EE20 F002          	lfsr	2,2
  7089  001B84  5003               	movf	i2fputc@fp^0,w,c
  7090  001B86  26D9               	addwf	fsr2l,f,c
  7091  001B88  5004               	movf	(i2fputc@fp+1)^0,w,c
  7092  001B8A  22DA               	addwfc	fsr2h,f,c
  7093  001B8C  CFDE F005          	movff	postinc2,??i2_fputc
  7094  001B90  CFDD F006          	movff	postdec2,??i2_fputc+1
  7095  001B94  C003  FFD9         	movff	i2fputc@fp,fsr2l
  7096  001B98  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  7097  001B9C  CFDE F007          	movff	postinc2,??i2_fputc+2
  7098  001BA0  CFDD F008          	movff	postdec2,??i2_fputc+3
  7099  001BA4  5005               	movf	??i2_fputc^0,w,c
  7100  001BA6  2407               	addwf	(??i2_fputc+2)^0,w,c
  7101  001BA8  6ED9               	movwf	fsr2l,c
  7102  001BAA  5006               	movf	(??i2_fputc+1)^0,w,c
  7103  001BAC  2008               	addwfc	(??i2_fputc+3)^0,w,c
  7104  001BAE  6EDA               	movwf	fsr2h,c
  7105  001BB0  C001  FFDF         	movff	i2fputc@c,indf2
  7106  001BB4  EE20 F002          	lfsr	2,2
  7107  001BB8  5003               	movf	i2fputc@fp^0,w,c
  7108  001BBA  26D9               	addwf	fsr2l,f,c
  7109  001BBC  5004               	movf	(i2fputc@fp+1)^0,w,c
  7110  001BBE  22DA               	addwfc	fsr2h,f,c
  7111  001BC0  2ADE               	incf	postinc2,f,c
  7112  001BC2  0E00               	movlw	0
  7113  001BC4  22DD               	addwfc	postdec2,f,c
  7114  001BC6                     i2l1009:
  7115  001BC6  0012               	return		;funcret
  7116  001BC8                     __end_ofi2_fputc:
  7117                           	callstack 0
  7118                           
  7119 ;; *************** function i2_putch *****************
  7120 ;; Defined at:
  7121 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  c               1    wreg     unsigned char 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  c               1  (no storage) unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1    wreg      void 
  7128 ;; Registers used:
  7129 ;;		wreg
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7135 ;;      Params:         0       0       0       0       0       0       0       0       0
  7136 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7138 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7139 ;;Total ram usage:        0 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		i2_fputc
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text50
  7149  0028EC                     __ptext50:
  7150                           	callstack 0
  7151  0028EC                     i2_putch:
  7152                           	callstack 14
  7153  0028EC  0012               	return		;funcret
  7154  0028EE                     __end_ofi2_putch:
  7155                           	callstack 0
  7156                           
  7157 ;; *************** function i2_abs *****************
  7158 ;; Defined at:
  7159 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  a               2   18[COMRAM] int 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  2   18[COMRAM] int 
  7166 ;; Registers used:
  7167 ;;		wreg, status,2, status,0
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7173 ;;      Params:         2       0       0       0       0       0       0       0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7175 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7176 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7177 ;;Total ram usage:        4 bytes
  7178 ;; Hardware stack levels used: 1
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		i2_dtoa
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text51
  7187  0025C8                     __ptext51:
  7188                           	callstack 0
  7189  0025C8                     i2_abs:
  7190                           	callstack 14
  7191  0025C8  BE14               	btfsc	(i2abs@a+1)^0,7,c
  7192  0025CA  EFF1  F012         	goto	i2u286_40
  7193  0025CE  5014               	movf	(i2abs@a+1)^0,w,c
  7194  0025D0  E106               	bnz	i2u286_41
  7195  0025D2  0413               	decf	i2abs@a^0,w,c
  7196  0025D4  B0D8               	btfsc	status,0,c
  7197  0025D6  EFEF  F012         	goto	i2u286_41
  7198  0025DA  EFF1  F012         	goto	i2u286_40
  7199  0025DE                     i2u286_41:
  7200  0025DE  EFFF  F012         	goto	i2l994
  7201  0025E2                     i2u286_40:
  7202  0025E2  C013  F015         	movff	i2abs@a,??i2_abs
  7203  0025E6  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  7204  0025EA  1E15               	comf	??i2_abs^0,f,c
  7205  0025EC  1E16               	comf	(??i2_abs+1)^0,f,c
  7206  0025EE  4A15               	infsnz	??i2_abs^0,f,c
  7207  0025F0  2A16               	incf	(??i2_abs+1)^0,f,c
  7208  0025F2  C015  F013         	movff	??i2_abs,?i2_abs
  7209  0025F6  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  7210  0025FA  EF03  F013         	goto	i2l997
  7211  0025FE                     i2l994:
  7212  0025FE  C013  F013         	movff	i2abs@a,?i2_abs
  7213  002602  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  7214  002606                     i2l997:
  7215  002606  0012               	return		;funcret
  7216  002608                     __end_ofi2_abs:
  7217                           	callstack 0
  7218                           
  7219 ;; *************** function i2___aomod *****************
  7220 ;; Defined at:
  7221 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  dividend        8    0[COMRAM] long long 
  7224 ;;  divisor         8    8[COMRAM] long long 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  sign            1   17[COMRAM] unsigned char 
  7227 ;;  counter         1   16[COMRAM] unsigned char 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  8    0[COMRAM] long long 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7237 ;;      Params:        16       0       0       0       0       0       0       0       0
  7238 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7240 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7241 ;;Total ram usage:       18 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; This function calls:
  7244 ;;		Nothing
  7245 ;; This function is called by:
  7246 ;;		i2_dtoa
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text52
  7251  00160C                     __ptext52:
  7252                           	callstack 0
  7253  00160C                     i2___aomod:
  7254                           	callstack 14
  7255  00160C  0E00               	movlw	0
  7256  00160E  6E12               	movwf	i2___aomod@sign^0,c
  7257  001610  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
  7258  001612  EF0F  F00B         	goto	i2u276_40
  7259  001616  EF0D  F00B         	goto	i2u276_41
  7260  00161A                     i2u276_41:
  7261  00161A  EF21  F00B         	goto	i2l3156
  7262  00161E                     i2u276_40:
  7263  00161E  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  7264  001620  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  7265  001622  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  7266  001624  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  7267  001626  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  7268  001628  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  7269  00162A  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  7270  00162C  6C01               	negf	i2___aomod@dividend^0,c
  7271  00162E  0E00               	movlw	0
  7272  001630  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  7273  001632  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  7274  001634  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  7275  001636  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  7276  001638  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  7277  00163A  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  7278  00163C  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  7279  00163E  0E01               	movlw	1
  7280  001640  6E12               	movwf	i2___aomod@sign^0,c
  7281  001642                     i2l3156:
  7282  001642  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
  7283  001644  EF28  F00B         	goto	i2u277_40
  7284  001648  EF26  F00B         	goto	i2u277_41
  7285  00164C                     i2u277_41:
  7286  00164C  EF38  F00B         	goto	i2l3160
  7287  001650                     i2u277_40:
  7288  001650  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  7289  001652  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  7290  001654  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  7291  001656  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  7292  001658  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  7293  00165A  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  7294  00165C  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  7295  00165E  6C09               	negf	i2___aomod@divisor^0,c
  7296  001660  0E00               	movlw	0
  7297  001662  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  7298  001664  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  7299  001666  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  7300  001668  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  7301  00166A  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  7302  00166C  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  7303  00166E  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  7304  001670                     i2l3160:
  7305  001670  5009               	movf	i2___aomod@divisor^0,w,c
  7306  001672  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  7307  001674  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  7308  001676  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  7309  001678  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  7310  00167A  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  7311  00167C  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  7312  00167E  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  7313  001680  B4D8               	btfsc	status,2,c
  7314  001682  EF45  F00B         	goto	i2u278_41
  7315  001686  EF47  F00B         	goto	i2u278_40
  7316  00168A                     i2u278_41:
  7317  00168A  EF8F  F00B         	goto	i2l3176
  7318  00168E                     i2u278_40:
  7319  00168E  0E01               	movlw	1
  7320  001690  6E11               	movwf	i2___aomod@counter^0,c
  7321  001692  EF55  F00B         	goto	i2l3166
  7322  001696                     i2l3164:
  7323  001696  90D8               	bcf	status,0,c
  7324  001698  3609               	rlcf	i2___aomod@divisor^0,f,c
  7325  00169A  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  7326  00169C  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  7327  00169E  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  7328  0016A0  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  7329  0016A2  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  7330  0016A4  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  7331  0016A6  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  7332  0016A8  2A11               	incf	i2___aomod@counter^0,f,c
  7333  0016AA                     i2l3166:
  7334  0016AA  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  7335  0016AC  EF5A  F00B         	goto	i2u279_41
  7336  0016B0  EF5C  F00B         	goto	i2u279_40
  7337  0016B4                     i2u279_41:
  7338  0016B4  EF4B  F00B         	goto	i2l3164
  7339  0016B8                     i2u279_40:
  7340  0016B8                     i2l3168:
  7341  0016B8  5009               	movf	i2___aomod@divisor^0,w,c
  7342  0016BA  5C01               	subwf	i2___aomod@dividend^0,w,c
  7343  0016BC  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  7344  0016BE  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  7345  0016C0  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  7346  0016C2  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  7347  0016C4  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  7348  0016C6  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  7349  0016C8  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  7350  0016CA  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  7351  0016CC  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  7352  0016CE  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  7353  0016D0  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  7354  0016D2  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  7355  0016D4  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  7356  0016D6  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  7357  0016D8  A0D8               	btfss	status,0,c
  7358  0016DA  EF71  F00B         	goto	i2u280_41
  7359  0016DE  EF73  F00B         	goto	i2u280_40
  7360  0016E2                     i2u280_41:
  7361  0016E2  EF83  F00B         	goto	i2l3172
  7362  0016E6                     i2u280_40:
  7363  0016E6  5009               	movf	i2___aomod@divisor^0,w,c
  7364  0016E8  5E01               	subwf	i2___aomod@dividend^0,f,c
  7365  0016EA  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  7366  0016EC  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  7367  0016EE  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  7368  0016F0  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  7369  0016F2  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  7370  0016F4  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  7371  0016F6  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  7372  0016F8  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  7373  0016FA  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  7374  0016FC  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  7375  0016FE  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  7376  001700  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  7377  001702  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  7378  001704  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  7379  001706                     i2l3172:
  7380  001706  90D8               	bcf	status,0,c
  7381  001708  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  7382  00170A  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  7383  00170C  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  7384  00170E  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  7385  001710  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  7386  001712  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  7387  001714  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  7388  001716  3209               	rrcf	i2___aomod@divisor^0,f,c
  7389  001718  2E11               	decfsz	i2___aomod@counter^0,f,c
  7390  00171A  EF5C  F00B         	goto	i2l3168
  7391  00171E                     i2l3176:
  7392  00171E  5012               	movf	i2___aomod@sign^0,w,c
  7393  001720  B4D8               	btfsc	status,2,c
  7394  001722  EF95  F00B         	goto	i2u281_41
  7395  001726  EF97  F00B         	goto	i2u281_40
  7396  00172A                     i2u281_41:
  7397  00172A  EFA7  F00B         	goto	i2l3180
  7398  00172E                     i2u281_40:
  7399  00172E  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  7400  001730  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  7401  001732  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  7402  001734  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  7403  001736  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  7404  001738  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  7405  00173A  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  7406  00173C  6C01               	negf	i2___aomod@dividend^0,c
  7407  00173E  0E00               	movlw	0
  7408  001740  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  7409  001742  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  7410  001744  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  7411  001746  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  7412  001748  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  7413  00174A  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  7414  00174C  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  7415  00174E                     i2l3180:
  7416  00174E  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  7417  001752  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  7418  001756  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  7419  00175A  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  7420  00175E  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  7421  001762  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  7422  001766  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  7423  00176A  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  7424  00176E  0012               	return		;funcret
  7425  001770                     __end_ofi2___aomod:
  7426                           	callstack 0
  7427                           
  7428 ;; *************** function i2___aodiv *****************
  7429 ;; Defined at:
  7430 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  dividend        8    0[COMRAM] long long 
  7433 ;;  divisor         8    8[COMRAM] long long 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  quotient        8   18[COMRAM] long long 
  7436 ;;  sign            1   17[COMRAM] unsigned char 
  7437 ;;  counter         1   16[COMRAM] unsigned char 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  8    0[COMRAM] long long 
  7440 ;; Registers used:
  7441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7447 ;;      Params:        16       0       0       0       0       0       0       0       0
  7448 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7450 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7451 ;;Total ram usage:       26 bytes
  7452 ;; Hardware stack levels used: 1
  7453 ;; This function calls:
  7454 ;;		Nothing
  7455 ;; This function is called by:
  7456 ;;		i2_dtoa
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text53
  7461  00131E                     __ptext53:
  7462                           	callstack 0
  7463  00131E                     i2___aodiv:
  7464                           	callstack 14
  7465  00131E  0E00               	movlw	0
  7466  001320  6E12               	movwf	i2___aodiv@sign^0,c
  7467  001322  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
  7468  001324  EF98  F009         	goto	i2u269_40
  7469  001328  EF96  F009         	goto	i2u269_41
  7470  00132C                     i2u269_41:
  7471  00132C  EFAA  F009         	goto	i2l3112
  7472  001330                     i2u269_40:
  7473  001330  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  7474  001332  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  7475  001334  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  7476  001336  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  7477  001338  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  7478  00133A  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  7479  00133C  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  7480  00133E  6C09               	negf	i2___aodiv@divisor^0,c
  7481  001340  0E00               	movlw	0
  7482  001342  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  7483  001344  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  7484  001346  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  7485  001348  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  7486  00134A  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  7487  00134C  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  7488  00134E  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  7489  001350  0E01               	movlw	1
  7490  001352  6E12               	movwf	i2___aodiv@sign^0,c
  7491  001354                     i2l3112:
  7492  001354  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
  7493  001356  EFB1  F009         	goto	i2u270_40
  7494  00135A  EFAF  F009         	goto	i2u270_41
  7495  00135E                     i2u270_41:
  7496  00135E  EFC3  F009         	goto	i2l3118
  7497  001362                     i2u270_40:
  7498  001362  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  7499  001364  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  7500  001366  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  7501  001368  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  7502  00136A  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  7503  00136C  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  7504  00136E  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  7505  001370  6C01               	negf	i2___aodiv@dividend^0,c
  7506  001372  0E00               	movlw	0
  7507  001374  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  7508  001376  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  7509  001378  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  7510  00137A  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  7511  00137C  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  7512  00137E  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  7513  001380  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  7514  001382  0E01               	movlw	1
  7515  001384  1A12               	xorwf	i2___aodiv@sign^0,f,c
  7516  001386                     i2l3118:
  7517  001386  EE20  F013         	lfsr	2,i2___aodiv@quotient
  7518  00138A  0E07               	movlw	7
  7519  00138C                     i2u271_41:
  7520  00138C  6ADE               	clrf	postinc2,c
  7521  00138E  06E8               	decf	wreg,f,c
  7522  001390  E2FD               	bc	i2u271_41
  7523  001392  5009               	movf	i2___aodiv@divisor^0,w,c
  7524  001394  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  7525  001396  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  7526  001398  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  7527  00139A  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  7528  00139C  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  7529  00139E  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  7530  0013A0  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  7531  0013A2  B4D8               	btfsc	status,2,c
  7532  0013A4  EFD6  F009         	goto	i2u272_41
  7533  0013A8  EFD8  F009         	goto	i2u272_40
  7534  0013AC                     i2u272_41:
  7535  0013AC  EF2A  F00A         	goto	i2l3140
  7536  0013B0                     i2u272_40:
  7537  0013B0  0E01               	movlw	1
  7538  0013B2  6E11               	movwf	i2___aodiv@counter^0,c
  7539  0013B4  EFE6  F009         	goto	i2l3126
  7540  0013B8                     i2l3124:
  7541  0013B8  90D8               	bcf	status,0,c
  7542  0013BA  3609               	rlcf	i2___aodiv@divisor^0,f,c
  7543  0013BC  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  7544  0013BE  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  7545  0013C0  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  7546  0013C2  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  7547  0013C4  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  7548  0013C6  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  7549  0013C8  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  7550  0013CA  2A11               	incf	i2___aodiv@counter^0,f,c
  7551  0013CC                     i2l3126:
  7552  0013CC  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  7553  0013CE  EFEB  F009         	goto	i2u273_41
  7554  0013D2  EFED  F009         	goto	i2u273_40
  7555  0013D6                     i2u273_41:
  7556  0013D6  EFDC  F009         	goto	i2l3124
  7557  0013DA                     i2u273_40:
  7558  0013DA                     i2l3128:
  7559  0013DA  90D8               	bcf	status,0,c
  7560  0013DC  3613               	rlcf	i2___aodiv@quotient^0,f,c
  7561  0013DE  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  7562  0013E0  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  7563  0013E2  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  7564  0013E4  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  7565  0013E6  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  7566  0013E8  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  7567  0013EA  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  7568  0013EC  5009               	movf	i2___aodiv@divisor^0,w,c
  7569  0013EE  5C01               	subwf	i2___aodiv@dividend^0,w,c
  7570  0013F0  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  7571  0013F2  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  7572  0013F4  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  7573  0013F6  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  7574  0013F8  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  7575  0013FA  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  7576  0013FC  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  7577  0013FE  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  7578  001400  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  7579  001402  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  7580  001404  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  7581  001406  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  7582  001408  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  7583  00140A  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  7584  00140C  A0D8               	btfss	status,0,c
  7585  00140E  EF0B  F00A         	goto	i2u274_41
  7586  001412  EF0D  F00A         	goto	i2u274_40
  7587  001416                     i2u274_41:
  7588  001416  EF1E  F00A         	goto	i2l3136
  7589  00141A                     i2u274_40:
  7590  00141A  5009               	movf	i2___aodiv@divisor^0,w,c
  7591  00141C  5E01               	subwf	i2___aodiv@dividend^0,f,c
  7592  00141E  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  7593  001420  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  7594  001422  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  7595  001424  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  7596  001426  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  7597  001428  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  7598  00142A  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  7599  00142C  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  7600  00142E  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  7601  001430  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  7602  001432  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  7603  001434  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  7604  001436  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  7605  001438  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  7606  00143A  8013               	bsf	i2___aodiv@quotient^0,0,c
  7607  00143C                     i2l3136:
  7608  00143C  90D8               	bcf	status,0,c
  7609  00143E  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  7610  001440  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  7611  001442  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  7612  001444  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  7613  001446  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  7614  001448  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  7615  00144A  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  7616  00144C  3209               	rrcf	i2___aodiv@divisor^0,f,c
  7617  00144E  2E11               	decfsz	i2___aodiv@counter^0,f,c
  7618  001450  EFED  F009         	goto	i2l3128
  7619  001454                     i2l3140:
  7620  001454  5012               	movf	i2___aodiv@sign^0,w,c
  7621  001456  B4D8               	btfsc	status,2,c
  7622  001458  EF30  F00A         	goto	i2u275_41
  7623  00145C  EF32  F00A         	goto	i2u275_40
  7624  001460                     i2u275_41:
  7625  001460  EF42  F00A         	goto	i2l3144
  7626  001464                     i2u275_40:
  7627  001464  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  7628  001466  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  7629  001468  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  7630  00146A  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  7631  00146C  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  7632  00146E  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  7633  001470  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  7634  001472  6C13               	negf	i2___aodiv@quotient^0,c
  7635  001474  0E00               	movlw	0
  7636  001476  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  7637  001478  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  7638  00147A  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  7639  00147C  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  7640  00147E  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  7641  001480  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  7642  001482  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  7643  001484                     i2l3144:
  7644  001484  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  7645  001488  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  7646  00148C  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  7647  001490  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  7648  001494  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  7649  001498  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  7650  00149C  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  7651  0014A0  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  7652  0014A4  0012               	return		;funcret
  7653  0014A6                     __end_ofi2___aodiv:
  7654                           	callstack 0
  7655                           
  7656 ;; *************** function i2_instr_wr *****************
  7657 ;; Defined at:
  7658 ;;		line 8 in file "lcd.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  inst            1    wreg     unsigned char 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  inst            1    1[COMRAM] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      void 
  7665 ;; Registers used:
  7666 ;;		wreg, cstack
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7672 ;;      Params:         0       0       0       0       0       0       0       0       0
  7673 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7675 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7676 ;;Total ram usage:        1 bytes
  7677 ;; Hardware stack levels used: 1
  7678 ;; Hardware stack levels required when called: 1
  7679 ;; This function calls:
  7680 ;;		i2_atraso_lcd
  7681 ;; This function is called by:
  7682 ;;		_printAttentionMessage
  7683 ;;		_printPlayingMessage
  7684 ;;		_printErrorMessage
  7685 ;;		_printSucessMessage
  7686 ;;		_printWinnerMessage
  7687 ;;		i2_printStartMessage
  7688 ;;		i2_inicializa
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text54
  7693  0028A0                     __ptext54:
  7694                           	callstack 0
  7695  0028A0                     i2_instr_wr:
  7696                           	callstack 17
  7697                           
  7698                           ;incstack = 0
  7699                           ;i2instr_wr@inst stored from wreg
  7700  0028A0  6E02               	movwf	i2instr_wr@inst^0,c
  7701  0028A2                     
  7702                           ;lcd.c: 9:     LATEbits.LATE1 = 1;
  7703  0028A2  828D               	bsf	141,1,c	;volatile
  7704                           
  7705                           ;lcd.c: 10:     LATEbits.LATE0 = 0;
  7706  0028A4  908D               	bcf	141,0,c	;volatile
  7707                           
  7708                           ;lcd.c: 11:     LATEbits.LATE2 = 0;
  7709  0028A6  948D               	bcf	141,2,c	;volatile
  7710  0028A8                     
  7711                           ;lcd.c: 12:     LATD = inst;
  7712  0028A8  C002  FF8C         	movff	i2instr_wr@inst,3980	;volatile
  7713  0028AC                     
  7714                           ;lcd.c: 13:     LATEbits.LATE1 = 0;
  7715  0028AC  928D               	bcf	141,1,c	;volatile
  7716  0028AE                     
  7717                           ;lcd.c: 14:     atraso_lcd();
  7718  0028AE  EC6D  F014         	call	i2_atraso_lcd	;wreg free
  7719  0028B2  0012               	return		;funcret
  7720  0028B4                     __end_ofi2_instr_wr:
  7721                           	callstack 0
  7722                           
  7723 ;; *************** function i2_escreve_texto *****************
  7724 ;; Defined at:
  7725 ;;		line 35 in file "lcd.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  linha           2    2[COMRAM] PTR unsigned char 
  7728 ;;		 -> linha2(16), linha1(16), 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;  i               2    4[COMRAM] int 
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  1    wreg      void 
  7733 ;; Registers used:
  7734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7740 ;;      Params:         2       0       0       0       0       0       0       0       0
  7741 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7743 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7744 ;;Total ram usage:        4 bytes
  7745 ;; Hardware stack levels used: 1
  7746 ;; Hardware stack levels required when called: 2
  7747 ;; This function calls:
  7748 ;;		i2_dado_wr
  7749 ;; This function is called by:
  7750 ;;		_printAttentionMessage
  7751 ;;		_printPlayingMessage
  7752 ;;		_printErrorMessage
  7753 ;;		_printSucessMessage
  7754 ;;		_printWinnerMessage
  7755 ;;		i2_printStartMessage
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text55
  7760  002644                     __ptext55:
  7761                           	callstack 0
  7762  002644                     i2_escreve_texto:
  7763                           	callstack 16
  7764  002644                     
  7765                           ;lcd.c: 36:     for (int i = 0; i < 16; i++) {
  7766  002644  0E00               	movlw	0
  7767  002646  6E06               	movwf	(i2escreve_texto@i+1)^0,c
  7768  002648  0E00               	movlw	0
  7769  00264A  6E05               	movwf	i2escreve_texto@i^0,c
  7770  00264C                     i2l2650:
  7771                           
  7772                           ;lcd.c: 37:         dado_wr(linha[i]);
  7773  00264C  5005               	movf	i2escreve_texto@i^0,w,c
  7774  00264E  2403               	addwf	i2escreve_texto@linha^0,w,c
  7775  002650  6ED9               	movwf	fsr2l,c
  7776  002652  5006               	movf	(i2escreve_texto@i+1)^0,w,c
  7777  002654  2004               	addwfc	(i2escreve_texto@linha+1)^0,w,c
  7778  002656  6EDA               	movwf	fsr2h,c
  7779  002658  50DF               	movf	indf2,w,c
  7780  00265A  EC5A  F014         	call	i2_dado_wr
  7781  00265E                     
  7782                           ;lcd.c: 38:     }
  7783  00265E  4A05               	infsnz	i2escreve_texto@i^0,f,c
  7784  002660  2A06               	incf	(i2escreve_texto@i+1)^0,f,c
  7785  002662  BE06               	btfsc	(i2escreve_texto@i+1)^0,7,c
  7786  002664  EF3D  F013         	goto	i2u228_41
  7787  002668  5006               	movf	(i2escreve_texto@i+1)^0,w,c
  7788  00266A  E109               	bnz	i2u228_40
  7789  00266C  0E10               	movlw	16
  7790  00266E  5C05               	subwf	i2escreve_texto@i^0,w,c
  7791  002670  A0D8               	btfss	status,0,c
  7792  002672  EF3D  F013         	goto	i2u228_41
  7793  002676  EF3F  F013         	goto	i2u228_40
  7794  00267A                     i2u228_41:
  7795  00267A  EF26  F013         	goto	i2l2650
  7796  00267E                     i2u228_40:
  7797  00267E  0012               	return		;funcret
  7798  002680                     __end_ofi2_escreve_texto:
  7799                           	callstack 0
  7800                           
  7801 ;; *************** function i2_dado_wr *****************
  7802 ;; Defined at:
  7803 ;;		line 17 in file "lcd.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  texto           1    wreg     unsigned char 
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  texto           1    1[COMRAM] unsigned char 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg, cstack
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7817 ;;      Params:         0       0       0       0       0       0       0       0       0
  7818 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7820 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7821 ;;Total ram usage:        1 bytes
  7822 ;; Hardware stack levels used: 1
  7823 ;; Hardware stack levels required when called: 1
  7824 ;; This function calls:
  7825 ;;		i2_atraso_lcd
  7826 ;; This function is called by:
  7827 ;;		i2_escreve_texto
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           	psect	text56
  7832  0028B4                     __ptext56:
  7833                           	callstack 0
  7834  0028B4                     i2_dado_wr:
  7835                           	callstack 16
  7836                           
  7837                           ;incstack = 0
  7838                           ;i2dado_wr@texto stored from wreg
  7839  0028B4  6E02               	movwf	i2dado_wr@texto^0,c
  7840  0028B6                     
  7841                           ;lcd.c: 18:     LATEbits.LATE1 = 1;
  7842  0028B6  828D               	bsf	141,1,c	;volatile
  7843                           
  7844                           ;lcd.c: 19:     LATEbits.LATE0 = 1;
  7845  0028B8  808D               	bsf	141,0,c	;volatile
  7846                           
  7847                           ;lcd.c: 20:     LATEbits.LATE2 = 0;
  7848  0028BA  948D               	bcf	141,2,c	;volatile
  7849  0028BC                     
  7850                           ;lcd.c: 21:     LATD = texto;
  7851  0028BC  C002  FF8C         	movff	i2dado_wr@texto,3980	;volatile
  7852  0028C0                     
  7853                           ;lcd.c: 22:     LATEbits.LATE1 = 0;
  7854  0028C0  928D               	bcf	141,1,c	;volatile
  7855  0028C2                     
  7856                           ;lcd.c: 23:     atraso_lcd();
  7857  0028C2  EC6D  F014         	call	i2_atraso_lcd	;wreg free
  7858  0028C6  0012               	return		;funcret
  7859  0028C8                     __end_ofi2_dado_wr:
  7860                           	callstack 0
  7861                           
  7862 ;; *************** function i2_atraso_lcd *****************
  7863 ;; Defined at:
  7864 ;;		line 4 in file "lcd.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0
  7879 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7880 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7881 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7882 ;;Total ram usage:        1 bytes
  7883 ;; Hardware stack levels used: 1
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		i2_instr_wr
  7888 ;;		i2_dado_wr
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text57
  7893  0028DA                     __ptext57:
  7894                           	callstack 0
  7895  0028DA                     i2_atraso_lcd:
  7896                           	callstack 17
  7897  0028DA                     
  7898                           ;lcd.c: 5:     _delay((unsigned long)((3)*(20000000/4000.0)));
  7899  0028DA  0E14               	movlw	20
  7900  0028DC  6E01               	movwf	??i2_atraso_lcd^0,c
  7901  0028DE  0E7A               	movlw	122
  7902  0028E0                     i2u370_47:
  7903  0028E0  2EE8               	decfsz	wreg,f,c
  7904  0028E2  D7FE               	bra	i2u370_47
  7905  0028E4  2E01               	decfsz	??i2_atraso_lcd^0,f,c
  7906  0028E6  D7FC               	bra	i2u370_47
  7907  0028E8  0012               	return		;funcret
  7908  0028EA                     __end_ofi2_atraso_lcd:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function i2_clear *****************
  7912 ;; Defined at:
  7913 ;;		line 41 in file "lcd.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  linha           2    0[COMRAM] PTR unsigned char 
  7916 ;;		 -> linha2(16), linha1(16), 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  i               2    2[COMRAM] int 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      void 
  7921 ;; Registers used:
  7922 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7928 ;;      Params:         2       0       0       0       0       0       0       0       0
  7929 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7931 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7932 ;;Total ram usage:        4 bytes
  7933 ;; Hardware stack levels used: 1
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_printAttentionMessage
  7938 ;;		_printPlayingMessage
  7939 ;;		_printErrorMessage
  7940 ;;		_printSucessMessage
  7941 ;;		_printWinnerMessage
  7942 ;;		i2_printStartMessage
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text58
  7947  0026BA                     __ptext58:
  7948                           	callstack 0
  7949  0026BA                     i2_clear:
  7950                           	callstack 18
  7951  0026BA                     
  7952                           ;lcd.c: 41: void clear(char linha[16]);lcd.c: 42: {;lcd.c: 43:     for (int i = 0; i < 1
      +                          6; i++) {
  7953  0026BA  0E00               	movlw	0
  7954  0026BC  6E04               	movwf	(i2clear@i+1)^0,c
  7955  0026BE  0E00               	movlw	0
  7956  0026C0  6E03               	movwf	i2clear@i^0,c
  7957  0026C2                     i2l2662:
  7958                           
  7959                           ;lcd.c: 44:         linha[i] = 0;
  7960  0026C2  5003               	movf	i2clear@i^0,w,c
  7961  0026C4  2401               	addwf	i2clear@linha^0,w,c
  7962  0026C6  6ED9               	movwf	fsr2l,c
  7963  0026C8  5004               	movf	(i2clear@i+1)^0,w,c
  7964  0026CA  2002               	addwfc	(i2clear@linha+1)^0,w,c
  7965  0026CC  6EDA               	movwf	fsr2h,c
  7966  0026CE  0E00               	movlw	0
  7967  0026D0  6EDF               	movwf	indf2,c
  7968  0026D2                     
  7969                           ;lcd.c: 45:     }
  7970  0026D2  4A03               	infsnz	i2clear@i^0,f,c
  7971  0026D4  2A04               	incf	(i2clear@i+1)^0,f,c
  7972  0026D6  BE04               	btfsc	(i2clear@i+1)^0,7,c
  7973  0026D8  EF77  F013         	goto	i2u229_41
  7974  0026DC  5004               	movf	(i2clear@i+1)^0,w,c
  7975  0026DE  E109               	bnz	i2u229_40
  7976  0026E0  0E10               	movlw	16
  7977  0026E2  5C03               	subwf	i2clear@i^0,w,c
  7978  0026E4  A0D8               	btfss	status,0,c
  7979  0026E6  EF77  F013         	goto	i2u229_41
  7980  0026EA  EF79  F013         	goto	i2u229_40
  7981  0026EE                     i2u229_41:
  7982  0026EE  EF61  F013         	goto	i2l2662
  7983  0026F2                     i2u229_40:
  7984  0026F2  0012               	return		;funcret
  7985  0026F4                     __end_ofi2_clear:
  7986                           	callstack 0
  7987                           
  7988                           	psect	rparam
  7989  0000                     
  7990                           	psect	temp
  7991  00005F                     btemp:
  7992                           	callstack 0
  7993  00005F                     	ds	1
  7994  0000                     int$flags	set	btemp
  7995  0000                     wtemp8	set	btemp+1
  7996  0000                     ttemp5	set	btemp+1
  7997  0000                     ttemp6	set	btemp+4
  7998  0000                     ttemp7	set	btemp+8
  7999                           
  8000                           	psect	idloc
  8001                           
  8002                           ;Config register IDLOC0 @ 0x200000
  8003                           ;	unspecified, using default values
  8004  200000                     	org	2097152
  8005  200000  FF                 	db	255
  8006                           
  8007                           ;Config register IDLOC1 @ 0x200001
  8008                           ;	unspecified, using default values
  8009  200001                     	org	2097153
  8010  200001  FF                 	db	255
  8011                           
  8012                           ;Config register IDLOC2 @ 0x200002
  8013                           ;	unspecified, using default values
  8014  200002                     	org	2097154
  8015  200002  FF                 	db	255
  8016                           
  8017                           ;Config register IDLOC3 @ 0x200003
  8018                           ;	unspecified, using default values
  8019  200003                     	org	2097155
  8020  200003  FF                 	db	255
  8021                           
  8022                           ;Config register IDLOC4 @ 0x200004
  8023                           ;	unspecified, using default values
  8024  200004                     	org	2097156
  8025  200004  FF                 	db	255
  8026                           
  8027                           ;Config register IDLOC5 @ 0x200005
  8028                           ;	unspecified, using default values
  8029  200005                     	org	2097157
  8030  200005  FF                 	db	255
  8031                           
  8032                           ;Config register IDLOC6 @ 0x200006
  8033                           ;	unspecified, using default values
  8034  200006                     	org	2097158
  8035  200006  FF                 	db	255
  8036                           
  8037                           ;Config register IDLOC7 @ 0x200007
  8038                           ;	unspecified, using default values
  8039  200007                     	org	2097159
  8040  200007  FF                 	db	255
  8041                           
  8042                           	psect	config
  8043                           
  8044                           ;Config register CONFIG1L @ 0x300000
  8045                           ;	unspecified, using default values
  8046                           ;	PLL Prescaler Selection bits
  8047                           ;	PLLDIV = 0x0, unprogrammed default
  8048                           ;	System Clock Postscaler Selection bits
  8049                           ;	CPUDIV = 0x0, unprogrammed default
  8050                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8051                           ;	USBDIV = 0x0, unprogrammed default
  8052  300000                     	org	3145728
  8053  300000  00                 	db	0
  8054                           
  8055                           ;Config register CONFIG1H @ 0x300001
  8056                           ;	Oscillator Selection bits
  8057                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8058                           ;	Fail-Safe Clock Monitor Enable bit
  8059                           ;	FCMEN = 0x0, unprogrammed default
  8060                           ;	Internal/External Oscillator Switchover bit
  8061                           ;	IESO = 0x0, unprogrammed default
  8062  300001                     	org	3145729
  8063  300001  09                 	db	9
  8064                           
  8065                           ;Config register CONFIG2L @ 0x300002
  8066                           ;	unspecified, using default values
  8067                           ;	Power-up Timer Enable bit
  8068                           ;	PWRT = 0x1, unprogrammed default
  8069                           ;	Brown-out Reset Enable bits
  8070                           ;	BOR = 0x3, unprogrammed default
  8071                           ;	Brown-out Reset Voltage bits
  8072                           ;	BORV = 0x3, unprogrammed default
  8073                           ;	USB Voltage Regulator Enable bit
  8074                           ;	VREGEN = 0x0, unprogrammed default
  8075  300002                     	org	3145730
  8076  300002  1F                 	db	31
  8077                           
  8078                           ;Config register CONFIG2H @ 0x300003
  8079                           ;	Watchdog Timer Enable bit
  8080                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8081                           ;	Watchdog Timer Postscale Select bits
  8082                           ;	WDTPS = 0xF, unprogrammed default
  8083  300003                     	org	3145731
  8084  300003  1E                 	db	30
  8085                           
  8086                           ; Padding undefined space
  8087  300004                     	org	3145732
  8088  300004  FF                 	db	255
  8089                           
  8090                           ;Config register CONFIG3H @ 0x300005
  8091                           ;	CCP2 MUX bit
  8092                           ;	CCP2MX = 0x1, unprogrammed default
  8093                           ;	PORTB A/D Enable bit
  8094                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8095                           ;	Low-Power Timer 1 Oscillator Enable bit
  8096                           ;	LPT1OSC = 0x0, unprogrammed default
  8097                           ;	MCLR Pin Enable bit
  8098                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8099  300005                     	org	3145733
  8100  300005  01                 	db	1
  8101                           
  8102                           ;Config register CONFIG4L @ 0x300006
  8103                           ;	unspecified, using default values
  8104                           ;	Stack Full/Underflow Reset Enable bit
  8105                           ;	STVREN = 0x1, unprogrammed default
  8106                           ;	Single-Supply ICSP Enable bit
  8107                           ;	LVP = 0x1, unprogrammed default
  8108                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8109                           ;	ICPRT = 0x0, unprogrammed default
  8110                           ;	Extended Instruction Set Enable bit
  8111                           ;	XINST = 0x0, unprogrammed default
  8112                           ;	Background Debugger Enable bit
  8113                           ;	DEBUG = 0x1, unprogrammed default
  8114  300006                     	org	3145734
  8115  300006  85                 	db	133
  8116                           
  8117                           ; Padding undefined space
  8118  300007                     	org	3145735
  8119  300007  FF                 	db	255
  8120                           
  8121                           ;Config register CONFIG5L @ 0x300008
  8122                           ;	unspecified, using default values
  8123                           ;	Code Protection bit
  8124                           ;	CP0 = 0x1, unprogrammed default
  8125                           ;	Code Protection bit
  8126                           ;	CP1 = 0x1, unprogrammed default
  8127                           ;	Code Protection bit
  8128                           ;	CP2 = 0x1, unprogrammed default
  8129                           ;	Code Protection bit
  8130                           ;	CP3 = 0x1, unprogrammed default
  8131  300008                     	org	3145736
  8132  300008  0F                 	db	15
  8133                           
  8134                           ;Config register CONFIG5H @ 0x300009
  8135                           ;	unspecified, using default values
  8136                           ;	Boot Block Code Protection bit
  8137                           ;	CPB = 0x1, unprogrammed default
  8138                           ;	Data EEPROM Code Protection bit
  8139                           ;	CPD = 0x1, unprogrammed default
  8140  300009                     	org	3145737
  8141  300009  C0                 	db	192
  8142                           
  8143                           ;Config register CONFIG6L @ 0x30000A
  8144                           ;	unspecified, using default values
  8145                           ;	Write Protection bit
  8146                           ;	WRT0 = 0x1, unprogrammed default
  8147                           ;	Write Protection bit
  8148                           ;	WRT1 = 0x1, unprogrammed default
  8149                           ;	Write Protection bit
  8150                           ;	WRT2 = 0x1, unprogrammed default
  8151                           ;	Write Protection bit
  8152                           ;	WRT3 = 0x1, unprogrammed default
  8153  30000A                     	org	3145738
  8154  30000A  0F                 	db	15
  8155                           
  8156                           ;Config register CONFIG6H @ 0x30000B
  8157                           ;	unspecified, using default values
  8158                           ;	Configuration Register Write Protection bit
  8159                           ;	WRTC = 0x1, unprogrammed default
  8160                           ;	Boot Block Write Protection bit
  8161                           ;	WRTB = 0x1, unprogrammed default
  8162                           ;	Data EEPROM Write Protection bit
  8163                           ;	WRTD = 0x1, unprogrammed default
  8164  30000B                     	org	3145739
  8165  30000B  E0                 	db	224
  8166                           
  8167                           ;Config register CONFIG7L @ 0x30000C
  8168                           ;	unspecified, using default values
  8169                           ;	Table Read Protection bit
  8170                           ;	EBTR0 = 0x1, unprogrammed default
  8171                           ;	Table Read Protection bit
  8172                           ;	EBTR1 = 0x1, unprogrammed default
  8173                           ;	Table Read Protection bit
  8174                           ;	EBTR2 = 0x1, unprogrammed default
  8175                           ;	Table Read Protection bit
  8176                           ;	EBTR3 = 0x1, unprogrammed default
  8177  30000C                     	org	3145740
  8178  30000C  0F                 	db	15
  8179                           
  8180                           ;Config register CONFIG7H @ 0x30000D
  8181                           ;	unspecified, using default values
  8182                           ;	Boot Block Table Read Protection bit
  8183                           ;	EBTRB = 0x1, unprogrammed default
  8184  30000D                     	org	3145741
  8185  30000D  40                 	db	64
  8186                           tosu	equ	0xFFF
  8187                           tosh	equ	0xFFE
  8188                           tosl	equ	0xFFD
  8189                           stkptr	equ	0xFFC
  8190                           pclatu	equ	0xFFB
  8191                           pclath	equ	0xFFA
  8192                           pcl	equ	0xFF9
  8193                           tblptru	equ	0xFF8
  8194                           tblptrh	equ	0xFF7
  8195                           tblptrl	equ	0xFF6
  8196                           tablat	equ	0xFF5
  8197                           prodh	equ	0xFF4
  8198                           prodl	equ	0xFF3
  8199                           indf0	equ	0xFEF
  8200                           postinc0	equ	0xFEE
  8201                           postdec0	equ	0xFED
  8202                           preinc0	equ	0xFEC
  8203                           plusw0	equ	0xFEB
  8204                           fsr0h	equ	0xFEA
  8205                           fsr0l	equ	0xFE9
  8206                           wreg	equ	0xFE8
  8207                           indf1	equ	0xFE7
  8208                           postinc1	equ	0xFE6
  8209                           postdec1	equ	0xFE5
  8210                           preinc1	equ	0xFE4
  8211                           plusw1	equ	0xFE3
  8212                           fsr1h	equ	0xFE2
  8213                           fsr1l	equ	0xFE1
  8214                           bsr	equ	0xFE0
  8215                           indf2	equ	0xFDF
  8216                           postinc2	equ	0xFDE
  8217                           postdec2	equ	0xFDD
  8218                           preinc2	equ	0xFDC
  8219                           plusw2	equ	0xFDB
  8220                           fsr2h	equ	0xFDA
  8221                           fsr2l	equ	0xFD9
  8222                           status	equ	0xFD8

Data Sizes:
    Strings     94
    Constant    0
    Data        0
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160    111     128
    BANK1           256     30     119
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> linha2(BANK1[16]), linha1(BANK1[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[1]), STR_11(CODE[15]), STR_10(CODE[1]), STR_9(CODE[11]), 
		 -> STR_8(CODE[1]), STR_7(CODE[14]), STR_6(CODE[9]), STR_5(CODE[8]), 
		 -> STR_4(CODE[1]), STR_3(CODE[8]), STR_2(CODE[17]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[1]), STR_11(CODE[15]), STR_10(CODE[1]), STR_9(CODE[11]), 
		 -> STR_8(CODE[1]), STR_7(CODE[14]), STR_6(CODE[9]), STR_5(CODE[8]), 
		 -> STR_4(CODE[1]), STR_3(CODE[8]), STR_2(CODE[17]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[1]), STR_11(CODE[15]), STR_10(CODE[1]), STR_9(CODE[11]), 
		 -> STR_8(CODE[1]), STR_7(CODE[14]), STR_6(CODE[9]), STR_5(CODE[8]), 
		 -> STR_4(CODE[1]), STR_3(CODE[8]), STR_2(CODE[17]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S670_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK1[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK1[16]), 

    clear@linha	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK1[16]), 

    escreve_texto@linha	PTR unsigned char  size(2) Largest target is 16
		 -> linha2(BANK1[16]), linha1(BANK1[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupcao in COMRAM

    _interrupcao->_checkPlayerInput
    _initGame->_printPlayingMessage
    _generateGameSequence->___awmod
    _rand->___lmul
    ___awmod->_rand
    _checkPlayerInput->_printErrorMessage
    _checkPlayerInput->_printSucessMessage
    _checkPlayerInput->_printWinnerMessage
    i2_inicializa->i2_instr_wr
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_instr_wr->i2_atraso_lcd
    i2_escreve_texto->i2_dado_wr
    i2_dado_wr->i2_atraso_lcd

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _inicializa->_instr_wr
    _instr_wr->_atraso_lcd
    _escreve_texto->_dado_wr
    _dado_wr->_atraso_lcd

Critical Paths under _interrupcao in BANK0

    _interrupcao->_checkPlayerInput
    _initGame->_printPlayingMessage
    _checkPlayerInput->_printPlayingMessage
    i2_printStartMessage->i2_sprintf
    _printWinnerMessage->i2_sprintf
    _printSucessMessage->i2_sprintf
    _printPlayingMessage->i2_sprintf
    _printErrorMessage->i2_sprintf
    _printAttentionMessage->i2_sprintf

Critical Paths under _main in BANK1

    _main->_printStartMessage
    _printStartMessage->_sprintf
    _sprintf->_vfprintf

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5   11890
                                             23 BANK1      7     2      5
                   _EEPROM_WriteByte
                  _printStartMessage
                           _setupInt
                          _setupTmr0
 ---------------------------------------------------------------------------------
 (1) _setupTmr0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupInt                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printStartMessage                                    1     1      0   11647
                                             22 BANK1      1     1      0
                    _EEPROM_ReadByte
                              _clear
                      _escreve_texto
                         _inicializa
                           _instr_wr
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    9769
                                              8 BANK1     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7976
                                              0 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7458
                                             95 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             59 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             48 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             32 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             41 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             32 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             50 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             32 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             32 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _inicializa                                           0     0      0      31
                           _instr_wr
 ---------------------------------------------------------------------------------
 (2) _instr_wr                                             1     1      0      31
                                             33 BANK0      1     1      0
                         _atraso_lcd
 ---------------------------------------------------------------------------------
 (2) _escreve_texto                                        4     2      2     891
                                             34 BANK0      4     2      2
                            _dado_wr
 ---------------------------------------------------------------------------------
 (3) _dado_wr                                              1     1      0      31
                                             33 BANK0      1     1      0
                         _atraso_lcd
 ---------------------------------------------------------------------------------
 (3) _atraso_lcd                                           1     1      0       0
                                             32 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                4     2      2     860
                                             32 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      1     1      0      31
                                             32 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WriteByte                                     3     2      1     243
                                             32 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _interrupcao                                         8     8      0   61681
                                             24 BANK0      8     8      0
                   _checkPlayerInput
                           _initGame
 ---------------------------------------------------------------------------------
 (11) _initGame                                            0     0      0   16285
               _generateGameSequence
              _printAttentionMessage
                _printPlayingMessage
                   _showGameSequence
 ---------------------------------------------------------------------------------
 (12) _generateGameSequence                                3     3      0    1007
                                             24 COMRAM     3     3      0
                            ___awmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (13) _srand                                               6     4      2      98
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) _rand                                                6     4      2     370
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     448
                                             18 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (11) _checkPlayerInput                                   10    10      0   45396
                                             89 COMRAM     3     3      0
                                             17 BANK0      7     7      0
              _printAttentionMessage
                  _printErrorMessage
                _printPlayingMessage
                 _printSucessMessage
                 _printWinnerMessage
                   _showGameSequence
                  i2_EEPROM_ReadByte
                 i2_EEPROM_WriteByte
                i2_printStartMessage
 ---------------------------------------------------------------------------------
 (12) i2_printStartMessage                                 1     1      0    7528
                                             87 COMRAM     1     1      0
                  i2_EEPROM_ReadByte
                            i2_clear
                    i2_escreve_texto
                       i2_inicializa
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (13) i2_inicializa                                        0     0      0      22
                         i2_instr_wr
 ---------------------------------------------------------------------------------
 (13) i2_EEPROM_ReadByte                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_EEPROM_WriteByte                                  3     2      1     119
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (12) _showGameSequence                                    3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (12) _printWinnerMessage                                  2     2      0    7450
                                             87 COMRAM     2     2      0
                            i2_clear
                    i2_escreve_texto
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) _printSucessMessage                                  2     2      0    7450
                                             87 COMRAM     2     2      0
                            i2_clear
                    i2_escreve_texto
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) _printPlayingMessage                                 2     1      1    7782
                                             87 COMRAM     1     1      0
                                             16 BANK0      1     0      1
                            i2_clear
                    i2_escreve_texto
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) _printErrorMessage                                   2     2      0    7450
                                             87 COMRAM     2     2      0
                            i2_clear
                    i2_escreve_texto
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) _printAttentionMessage                               0     0      0    7450
                            i2_clear
                    i2_escreve_texto
                         i2_instr_wr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (13) i2_sprintf                                          18    10      8    6602
                                              0 BANK0     16     8      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (14) i2_vfprintf                                          8     2      6    5456
                                             79 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (15) i2_vfpfcnvrt                                        42    36      6    5148
                                             63 COMRAM    16    10      6
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_dtoa                                             36    26     10    3978
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2_pad                                              11     5      6    2097
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) i2_fputs                                             7     3      4     877
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_fputc                                             9     5      4     597
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (17) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (17) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (13) i2_instr_wr                                          1     1      0      22
                                              1 COMRAM     1     1      0
                       i2_atraso_lcd
 ---------------------------------------------------------------------------------
 (13) i2_escreve_texto                                     4     2      2     424
                                              2 COMRAM     4     2      2
                          i2_dado_wr
 ---------------------------------------------------------------------------------
 (14) i2_dado_wr                                           1     1      0      22
                                              1 COMRAM     1     1      0
                       i2_atraso_lcd
 ---------------------------------------------------------------------------------
 (14) i2_atraso_lcd                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_clear                                             4     2      2     402
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_WriteByte
   _printStartMessage
     _EEPROM_ReadByte
     _clear
     _escreve_texto
       _dado_wr
         _atraso_lcd
     _inicializa
       _instr_wr
         _atraso_lcd
     _instr_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _setupInt
   _setupTmr0

 _interrupcao (ROOT)
   _checkPlayerInput
     _printAttentionMessage
       i2_clear
       i2_escreve_texto
         i2_dado_wr
           i2_atraso_lcd
       i2_instr_wr
         i2_atraso_lcd
       i2_sprintf
         i2_vfprintf
           i2_vfpfcnvrt
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                 i2_fputs
                   i2_fputc
                 i2_strlen
             i2_fputc
     _printErrorMessage
       i2_clear
       i2_escreve_texto
       i2_instr_wr
       i2_sprintf
     _printPlayingMessage
       i2_clear
       i2_escreve_texto
       i2_instr_wr
       i2_sprintf
     _printSucessMessage
       i2_clear
       i2_escreve_texto
       i2_instr_wr
       i2_sprintf
     _printWinnerMessage
       i2_clear
       i2_escreve_texto
       i2_instr_wr
       i2_sprintf
     _showGameSequence
     i2_EEPROM_ReadByte
     i2_EEPROM_WriteByte
     i2_printStartMessage
       i2_EEPROM_ReadByte
       i2_clear
       i2_escreve_texto
       i2_inicializa
         i2_instr_wr
       i2_instr_wr
       i2_sprintf
   _initGame
     _generateGameSequence
       ___awmod
         _rand (ARG)
           ___lmul
       _rand
       _srand
     _printAttentionMessage
     _printPlayingMessage
     _showGameSequence

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1E      77       7       46.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6F      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     155      20        0.0%
DATA                 0      0     155       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 07 18:06:07 2021

                             l75 285E                               l78 28D8  
                             _RD 007D30                               _WR 007D31  
                            l100 232E                              l101 232E  
                            l221 2874                              l160 275C  
                            l224 288A                              l232 25C6  
                            l154 247A                              l218 289E  
                            l163 2780                              l227 281E  
                            l157 24BC                              l237 2642  
                            l167 1DD2                              l354 131C  
                            l367 160A                              l950 1AFC  
                            l918 23DA                              l945 1A7C  
                            l948 1AC0                              l956 0900  
                            l958 0908                              l990 227A  
                            l983 0FDE                              l976 0B42  
                            l994 257E                              _GIE 007F97  
                            l997 2586                              l989 2272  
                            _PSA 007EAB               i2___aodiv@quotient 0013  
                            _abs 2546                              _pad 1A34  
             escreve_texto@linha 0082                     ___awmod@sign 0018  
                            wreg 000FE8              __end_ofi2_vfpfcnvrt 1194  
         __size_of_escreve_texto 0040                       i2_dtoa$743 002E  
       _initialized@lcd_kit$F215 00D9       __end_ofi2_EEPROM_WriteByte 2502  
     __end_of_printWinnerMessage 1EE4                             l1020 28EA  
                           l1009 1A32                             l1017 2474  
                           l1034 26B8                             ?_abs 0092  
                           l3100 26AA                             l3210 1194  
                           l3220 11DA                             l3212 119A  
                           l3060 1998                             l3300 1A88  
                           l3230 1230                             l3222 11FA  
                           l3214 11A8                             l3062 19B6  
                           l3054 1968                             l3302 1A9C  
                           l3240 12B2                             l3232 1244  
                           l3224 11FE                             l3216 11C8  
                           l3312 2546                             l3064 19EC  
                           l3056 197C                             l3304 1AA2  
                           l3400 093E                             l3250 12FC  
                           l3242 12B4                             l3234 1252  
                           l3226 120A                             l3218 11CC  
                           l3314 2562                             l3058 198E  
                           l3090 244E                             l3306 1ACE  
                           l3410 09DE                             l3402 0948  
                           l3244 12C6                             l3236 1264  
                           l3228 1228                             l3260 14DA  
                           l3092 2454                             l3308 1AE2  
                           l3420 0AB0                             l3404 094E  
                           l3412 0A42                             l3238 1292  
                           l3246 12CC                             l3270 1532  
                           l3262 14DE                             l3254 14A6  
                           l3086 242E                             l3094 2680  
                           l3430 0AF6                             l3414 0A5E  
                           l3422 0ABE                             l3406 09D2  
                           l3502 0F38                             l3248 12DC  
                           l3280 15B4                             l3272 1546  
                           l3264 14EC                             l3256 14AC  
                           l3088 243C                             l3096 268C  
                           l3432 0B02                             l3424 0AD0  
                           l3416 0A7C                             l3408 09D8  
                           l3520 0FCC                             l3504 0F5C  
                           l3512 0F8C                             l3600 239C  
                           l3610 2588                             l3274 1554  
                           l3282 15BA                             l3266 150C  
                           l3258 14BA                             l3098 2692  
                           l3290 1A34                             l3434 0B0A  
                           l3426 0ADE                             l3418 0A96  
                           l3514 0F9A                             l3506 0F6A  
                           l3602 23A4                             l3620 25AA  
                           l3540 2870                             l3284 15CA  
                           l3276 1582                             l3268 152A  
                           l3292 1A44                             l3428 0AE4  
                           l3436 0B1A                             l3380 0880  
                           l3508 0F7E                             l3604 23AC  
                           l3542 287A                             l3534 2864  
                           l3286 15EA                             l3278 15A2  
                           l3294 1A58                             l3390 08F4  
                           l3382 08AA                             l3518 0FA6  
                           l3550 221A                             l3606 23C8  
                           l3544 2880                             l3616 2592  
                           l3536 286A                             l3296 1A68  
                           l3392 0910                             l3384 08CA  
                           l3552 2222                             l3570 275C  
                           l3482 288C                             l3546 2884  
                           l3618 25A4                             l3538 286E  
                           l3298 1A74                             l3394 0922  
                           l3386 08D8                             l3378 0860  
                           l3490 0E6C                             l3554 2230  
                           l2940 248C                             l3572 276A  
                           l3548 2886                             l3396 0930  
                           l3388 08DA                             l3492 0E70  
                           l3484 0E28                             l3556 2256  
                           l2950 24A2                             l2942 2490  
                           l3574 2778                             l3582 27FA  
                           l3398 0936                             l3494 0E94  
                           l3486 0E4C                             l2870 2846  
                           l3830 22DE                             ?_pad 0090  
   __end_of_generateGameSequence 238A                             l2952 24A6  
                           l2944 2492                             l2936 247A  
                           l3576 277C                             l3592 2612  
                           l3584 2818                             l3496 0EB8  
                           l3488 0E5A                             l2872 28C8  
                           l3840 2318                             l3832 22EE  
                           l2954 24A8                             l2946 249C  
                           l2938 2488                             l3578 277E  
                           l3594 2622                             l3586 2608  
                           l3498 0F00                             l3770 1D54  
                           l2874 28CE                             l3842 2322  
                           l3834 22F0                             l2956 24BA  
                           l2948 249E                             l3596 2626  
                           l3780 1DA8                             l3772 1D62  
                           l2876 28D6                             l3844 2326  
                           l3836 230A                             l3598 238A  
                           l3782 1DBE                             l3774 1D7A  
                           l3766 1D3E                             l3846 232A  
                           l3838 2310                             l3784 1DC4  
                           l3776 1D94                             l3768 1D50  
                           l3778 1D9A                             STR_1 082F  
                           STR_2 0801                             STR_3 084F  
                           STR_4 082E                             STR_5 0857  
                           STR_6 0846                             STR_7 0821  
                           STR_8 082E                             STR_9 083B  
                           _T0CS 007EAD                             u3000 1A44  
                           u3001 1A40                             u3010 1A68  
                           u3011 1A64                             u3020 1AC0  
                           u3021 1ABC                             u3030 1ACE  
                           u3031 1ACA                             u3040 2562  
                           u3200 0892                             _LATD 000F8C  
                           u3041 255E                             u3201 088C  
                           u3210 0894                             u3300 0AB0  
                           u3220 08AA                             u3301 0AAC  
                           u3221 08A6                             u3310 0ABE  
                           u3230 08D8                             u3311 0ABA  
                           u3231 08D4                             u3320 0AD0  
                           u3240 08F4                             u3400 0E94  
                           u3321 0ACC                             u3241 08F0  
                           u3401 0E90                             u2610 197C  
                           u3330 0ADE                             u3250 0922  
                           u3410 0EB8                             u2611 1978  
                           u3331 0ADA                             u3251 091E  
                           u3411 0EB4                             u2460 2488  
                           u2620 198E                             u3340 0AF6  
                           u3260 0930                             u3420 0F5C  
                           u2461 2484                             u2621 198A  
                           u3341 0AF2                             u3261 092C  
                           u3421 0F58                             u2470 24B8  
                           u2630 19B6                             u3270 0A5E  
                           u2471 24B2                             u2631 19B2  
                           u3271 0A5A                             u2640 19EC  
                           u3280 0A7C                             u3440 2272  
                           u2641 19E8                             u3281 0A78  
                           u3441 226E                             u3450 276A  
                           u3290 0A96                             u3451 2766  
                           u3291 0A92                             u3460 2778  
                           u2900 1228                             u2485 24BA  
                           u3461 2774                             u2901 1224  
                           u3470 2642                             u2910 1252  
                           u2670 2474                             u3390 0E4C  
                           u3550 1D50                             u3471 263E  
                           u2911 124E                             u2671 2470  
                           u3391 0E48                             u3551 1D4C  
                           u3480 25C6                             u2920 1292  
                           u2680 26AA                             u3481 25C2  
                           u2921 128E                             u2681 26A6  
                           u2930 12DC                             u2931 12D8  
                           u2940 14BA                             u2941 14B6  
                           u3637 22FC                             u2870 11A8  
                           u2950 14EC                             u3647 2894  
                           u2871 11A4                             u2951 14E8  
                           u2880 11DA                             u2960 152A  
                           u2881 11D6                             u2961 1526  
                           u2970 1554                             u2891 1204  
                           u2971 1550                             u2980 1582  
                           u2981 157E                             u2990 15CA  
                           u2991 15C6                             i2l95 1944  
                           _WREN 007D32                             abs@a 0092  
                           _dbuf 0100                             _cont 00D7  
                           _main 22DE                             _dtoa 0860  
                           _rand 20D8                             _seed 00DC  
                           _prec 00D3                             _nout 00CF  
                           pad@i 0097                             pad@p 0094  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 0099                             fsr2l 000FD9  
                           btemp 005F                  __end_ofi2_clear 26F4  
                           start 000E                       i2_instr_wr 28A0  
                __end_ofi2_fputc 1BC8                  __end_ofi2_fputs 2546  
       __size_of_EEPROM_ReadByte 002A                   escreve_texto@i 0084  
                __end_ofi2_putch 28EE        __size_of_showGameSequence 0078  
                   ___param_bank 000000                            ??_abs 0094  
                          ??_pad 0096                       i2_vfprintf 227C  
                __end_of___aodiv 131E                            ?_main 0170  
                          ?_dtoa 009B                  __end_of___aomod 160C  
                          ?_rand 000D                            _EEADR 000FA9  
                          STR_10 082E                            STR_11 0812  
                          STR_12 082E                  __end_of___awmod 1D3E  
                          _INT0F 007F91                            _INT1F 007F80  
                          _INT2F 007F81                            i2l221 28B2  
                          i2l207 1872                            i2l224 28C6  
                          i2l232 267E                            i2l160 27D4  
                          i2l218 28E8                            i2l170 2218  
                          i2l154 24C0                            i2l163 27F8  
                          i2l227 2844                            i2l251 219E  
                          i2l252 21AE                            i2l237 26F2  
                          i2l173 20D6                            i2l157 2500  
                          i2l182 1EE2                            i2l167 1E60  
                          i2l176 1FE6                            i2l193 205E  
                          i2l354 14A4                            i2l179 1F64  
                          i2l187 2388                            i2l196 27A8  
                          i2l367 176E                            i2l484 1D3C  
                          i2l950 1C8C                            i2l918 242C  
                          i2l945 1C0E                            i2l948 1C50  
                          i2l956 0BE4                            i2l958 0BEC  
                          i2l990 22DC                            i2l983 1192  
                          i2l976 0E26                            i2l994 25FE  
                          i2l997 2606                            i2l989 22D4  
                   vfpfcnvrt@fmt 00C1                            _TMR0H 000FD7  
                          _TMR0L 000FD6                  __end_of_dado_wr 288C  
                          _TRISB 000F93                            _TRISD 000F95  
                          _TRISE 000F96                            i2_abs 25C8  
                          i2_pad 1BC8              ___lmul@multiplicand 0005  
   __size_ofi2_printStartMessage 008E         __end_of_checkPlayerInput 1874  
                          _clear 2608                            _flags 00D5  
                          _level 005D                            _fputc 1968  
                          _fputs 242E                            _srand 27AA  
                          pad@fp 0090                            _width 00D1  
                          _putch 28EA                            dtoa@d 009D  
                          dtoa@i 00BD                            dtoa@n 00B5  
                          dtoa@p 00AF                            dtoa@s 00B3  
                          dtoa@w 00B1                            tablat 000FF5  
                          ttemp5 0060                            ttemp6 0063  
                          ttemp7 0067                            status 000FD8  
                          wtemp8 0060                  __end_of_sprintf 23DC  
             __size_ofi2___aodiv 0188               __size_ofi2___aomod 0164  
    __end_of_printPlayingMessage 20D8                    _escreve_texto 2588  
               __end_ofi2_strlen 272A               __size_ofi2_dado_wr 0014  
              i2_EEPROM_ReadByte 27D2            __size_ofi2_atraso_lcd 0010  
                __initialization 272A                     ?_interrupcao 0001  
                   __end_of_main 2336                     __end_of_dtoa 0B44  
                   __end_of_rand 2146               ?i2_EEPROM_ReadByte 0001  
                    i2_vfpfcnvrt 0FE0                    i2vfpfcnvrt@ap 0044  
                  i2vfpfcnvrt@fp 0040                    i2vfpfcnvrt@ll 0048  
          __size_ofi2_inicializa 0026                           ??_main 0175  
                         ??_dtoa 00A5                           ??_rand 000F  
       __size_ofi2_escreve_texto 003C                    __activetblptr 000001  
            ??i2_EEPROM_ReadByte 0001                       i2sprintf@f 006A  
                     i2sprintf@s 0060               __size_ofi2_sprintf 0052  
                         ?i2_abs 0013                           ?i2_pad 0011  
                         ?_clear 0080                           ?_fputc 0080  
                         ?_fputs 0089                           _EEDATA 000FA8  
                         _EECON2 000FA7                           _T08BIT 007EAE  
                         ?_srand 0001   __size_of_printAttentionMessage 006A  
                         ?_putch 0001    __end_of_printAttentionMessage 221A  
                      ??i2_clear 0003                           _INT0IE 007F94  
                         _INT0IF 007F91                           _INT1IE 007F83  
                         _INT1IF 007F80                           _INT2IE 007F84  
                         _INT2IF 007F81                           i2l1020 28EC  
                         i2l1009 1BC6                           i2l1017 2544  
                         i2l1025 27D0                           i2l1034 2728  
                         i2l1028 2144                           i2l3110 1350  
                         i2l3120 1392                           i2l3112 1354  
                         i2l3104 131E                           i2l3040 1AFE  
                         i2l3200 1C60                           i2l3130 13EC  
                         i2l3122 13B0                           i2l3114 1362  
                         i2l3106 1322                           i2l3050 1B80  
                         i2l3042 1B10                           i2l3202 1C74  
                         i2l3132 141A                           i2l3124 13B8  
                         i2l3140 1454                           i2l3116 1382  
                         i2l3108 1330                           i2l3044 1B22  
                         i2l3142 1464                           i2l3134 143A  
                         i2l3126 13CC                           i2l3118 1386  
                         i2l3150 1610                           i2l3206 25C8  
                         i2l3046 1B2C                           i2l3070 250E  
                         i2l3144 1484                           i2l3136 143C  
                         i2l3128 13DA                           i2l3160 1670  
                         i2l3152 161E                           i2l3208 25E2  
                         i2l3048 1B4A                           i2l3072 2520  
                         i2l3080 2704                           i2l3320 0B8C  
                         i2l2600 1CDC                           i2l3138 144E  
                         i2l3170 16E6                           i2l3162 168E  
                         i2l3154 163E                           i2l3074 2524  
                         i2l3082 271C                           i2l3330 0BF4  
                         i2l3322 0BAC                           i2l2610 1D16  
                         i2l2602 1CE4                           i2l2540 28AC  
                         i2l3180 174E                           i2l3172 1706  
                         i2l3164 1696                           i2l3156 1642  
                         i2l3148 160C                           i2l3068 2502  
                         i2l3076 26F4                           i2l3340 0C2C  
                         i2l3332 0C06                           i2l3324 0BBC  
                         i2l3316 0B44                           i2l2604 1CF2  
                         i2l2612 1D1C                           i2l2438 28DA  
                         i2l2550 28C2                           i2l2542 28AE  
                         i2l3174 1718                           i2l3166 16AA  
                         i2l3158 1650                           i2l3078 2700  
                         i2l3190 1BFA                           i2l3342 0C32  
                         i2l3350 0D24                           i2l3334 0C14  
                         i2l3326 0BBE                           i2l3318 0B64  
                         i2l2630 27E2                           i2l2614 1D2C  
                         i2l2606 1D08                           i2l2544 28B6  
                         i2l2536 28A2                           i2l3168 16B8  
                         i2l3176 171E                           i2l3192 1C06  
                         i2l3184 1BC8                           i2l3352 0D3E  
                         i2l3360 0DA0                           i2l3344 0CB4  
                         i2l3336 0C1A                           i2l3328 0BD8  
                         i2l3440 0FE0                           i2l2632 27F0  
                         i2l2640 2820                           i2l2616 1D34  
                         i2l2608 1D10                           i2l2800 233E  
                         i2l2546 28BC                           i2l2650 264C  
                         i2l2538 28A8                           i2l3178 172E  
                         i2l3194 1C1A                           i2l3186 1BD8  
                         i2l3370 0DE6                           i2l3362 0DB2  
                         i2l3354 0D5C                           i2l3346 0CBA  
                         i2l3338 0C22                           i2l3450 104C  
                         i2l3442 1004                           i2l3530 2292  
                         i2l2634 27F4                           i2l2642 283E  
                         i2l2490 2174                           i2l2570 20D8  
                         i2l2810 2376                           i2l2802 234A  
                         i2l2548 28C0                           i2l2652 265E  
                         i2l2644 2644                           i2l3196 1C2E  
                         i2l3188 1BEC                           i2l3372 0DEE  
                         i2l3364 0DC2                           i2l3356 0D76  
                         i2l3348 0CC0                           i2l3460 1114  
                         i2l3452 1070                           i2l3444 1012  
                         i2l3532 22B8                           i2l2820 2032  
                         i2l2636 27F6                           i2l2628 27D4  
                         i2l3700 1E2C                           i2l2492 217E  
                         i2l2484 2146                           i2l2572 2116  
                         i2l2812 2378                           i2l2662 26C2  
                         i2l2654 2662                           i2l3198 1C32  
                         i2l3366 0DC8                           i2l3374 0DFE  
                         i2l3358 0D90                           i2l3470 1150  
                         i2l3462 1122                           i2l3454 10B8  
                         i2l3446 1024                           i2l3526 227C  
                         i2l3630 21F0                           i2l3622 21B0  
                         i2l2822 2034                           i2l2814 1FE8  
                         i2l2830 24CE                           i2l3702 1E38  
                         i2l2590 1CA8                           i2l2486 2156  
                         i2l3710 2784                           i2l2664 26D2  
                         i2l2656 26BA                           i2l3368 0DDA  
                         i2l3464 1136                           i2l3448 1028  
                         i2l3528 2284                           i2l3560 23EE  
                         i2l3632 220C                           i2l3624 21C8  
                         i2l3640 2096                           i2l2824 204A  
                         i2l2816 1FF0                           i2l2840 24E2  
                         i2l2832 24D2                           i2l3704 1E4E  
                         i2l3720 1772                           i2l2592 1CAC  
                         i2l2584 1C8E                           i2l2488 2164  
                         i2l2568 27AA                           i2l2808 234E  
                         i2l3712 2792                           i2l3800 18E6  
                         i2l2666 26D6                           i2l3458 10F0  
                         i2l3474 115C                           i2l3562 23F6  
                         i2l3626 21DE                           i2l3650 1F94  
                         i2l3642 20A2                           i2l3634 2062  
                         i2l2818 201A                           i2l2826 204C  
                         i2l2842 24E6                           i2l2834 24D6  
                         i2l3706 1E54                           i2l3730 17B4  
                         i2l3722 1790                           i2l2594 1CBA  
                         i2l2586 1C92                           i2l3714 2796  
                         i2l3810 1916                           i2l3802 18EE  
                         i2l3476 1180                           i2l3468 1142  
                         i2l3564 23FE                           i2l3628 21E4  
                         i2l3652 1F9A                           i2l3644 20CA  
                         i2l3636 207A                           i2l3660 1EE4  
                         i2l2844 24EA                           i2l2836 24D8  
                         i2l2828 24C0                           i2l3740 17EE  
                         i2l3732 17C4                           i2l3724 1792  
                         i2l2596 1CC2                           i2l2588 1CA0  
                         i2l3716 279A                           i2l3708 2782  
                         i2l3812 191E                           i2l3804 18F4  
                         i2l3566 241A                           i2l3558 23DC  
                         i2l3654 1FA6                           i2l3646 1F66  
                         i2l3638 2090                           i2l3670 1F40  
                         i2l3662 1EFC                           i2l2846 24EC  
                         i2l2838 24E0                           i2l3750 1800  
                         i2l3742 17F0                           i2l3734 17CE  
                         i2l3726 17A4                           i2l2598 1CD4  
                         i2l3718 279E                           i2l3822 1934  
                         i2l3814 1924                           i2l3806 18F6  
                         i2l3656 1FC2                           i2l3648 1F7E  
                         i2l3672 1F4C                           i2l3664 1F12  
                         i2l3680 1E96                           i2l2848 24FE  
                         i2l3760 1864                           i2l3744 17F4  
                         i2l3752 180E                           i2l3736 17D4  
                         i2l3728 17AC                           i2l3824 193A  
                         i2l3808 1904                           i2l3816 1926  
                         i2l3658 1FCE                           i2l3666 1F18  
                         i2l3682 1EA2                           i2l3674 1E62  
                         i2l3690 1DE6                           i2l3746 17F8  
                         i2l3738 17DC                           i2l3754 181C  
                         i2l3826 193E                           i2l3668 1F24  
                         i2l3684 1EBE                           i2l3676 1E7A  
                         i2l3692 1DEA                           i2l3756 1820  
                         i2l3748 17FC                           i2l3828 1942  
                         i2l3686 1ECA                           i2l3678 1E90  
                         i2l3694 1DF6                           i2l3758 1828  
                         i2l2798 2336                           i2l3790 18B6  
                         i2l3696 1E0A                           i2l3688 1DD4  
                         i2l3792 18BE                           i2l3698 1E26  
                         i2l3794 18C4                           i2l3786 1896  
                         i2l3788 18A4                           i2l3796 18C6  
                         i2l3798 18D4                        ??i2_fputc 0005  
                      ??i2_fputs 000E                     i2_atraso_lcd 28DA  
                         _OSCCON 000FD3                           _TMR0IE 007F95  
                         _TMR0IF 007F92                        ??i2_putch 0001  
                         _TMR0ON 007EAF                   i2___aodiv@sign 0012  
                         i2abs@a 0013                           i2_dtoa 0B44  
      __end_ofi2_EEPROM_ReadByte 27FA                           i2pad@i 0018  
                         i2pad@p 0015                           i2pad@w 001A  
                 ?_escreve_texto 0082                      ?i2_instr_wr 0001  
                   i2_inicializa 2820                     vfprintf@cfmt 015F  
                 i2___aomod@sign 0012                           ___lmul 2146  
                      ??___aodiv 0090                    i2vfprintf@fmt 0052  
                      ??___aomod 0090                        ??___awmod 0017  
               __end_of_initGame 27AA                      ?i2_vfprintf 0050  
                         _linha1 0149                           _linha2 0139  
                      ??_dado_wr 0081                ??_EEPROM_ReadByte 0080  
           _generateGameSequence 2336                           clear@i 0082  
                         clear_0 2730                           clear_1 273C  
                ___awmod@divisor 0015                           isa$std 000001  
                ___awmod@counter 0017         __end_of_EEPROM_WriteByte 24BE  
                         pad@buf 0092                           dtoa@fp 009B  
                         _strlen 2680                 __end_of_instr_wr 2876  
                         fputc@c 0080                           fputs@c 008D  
                         fputs@i 008E                __end_ofi2___aodiv 14A6  
                         fputs@s 0089                __end_ofi2___aomod 1770  
                   __mediumconst 0000                 __end_of_setupInt 2860  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                __end_ofi2_dado_wr 28C8  
                         srand@s 0001                     i2clear@linha 0001  
                         putch@c 0001               i2___aomod@dividend 0001  
               __end_of_vfprintf 227C                        ??_sprintf 00CF  
    printPlayingMessage@position 0058                       __accesstop 0060  
        __end_of__initialization 2746                _printErrorMessage 1F66  
                  ___rparam_used 000001               ?_printErrorMessage 0001  
              __end_ofi2_sprintf 242E                    __end_ofi2_abs 2608  
                  __end_ofi2_pad 1C8E                 _showGameSequence 1FE8  
                 __pcstackCOMRAM 0001               _printSucessMessage 1EE4  
                  __end_of_clear 2644              ??_printErrorMessage 0058  
                  __end_of_fputc 1A34                    __end_of_fputs 2476  
          ?_generateGameSequence 0001                    __end_of_srand 27D2  
                  __end_of_putch 28EC                   _playerPosition 005E  
            ?_printSucessMessage 0001                          ??i2_abs 0015  
                        ??i2_pad 0017  i2EEPROM_WriteByte@eepromAddress 0002  
  EEPROM_WriteByte@eepromAddress 0081              __size_ofi2_instr_wr 0014  
                 i2vfpfcnvrt@fmt 0042                          ??_clear 0082  
                      ?i2_strlen 0001                ??i2_escreve_texto 0005  
                        ??_fputc 0084                          ??_fputs 008D  
                        ??_srand 0003                          ??_putch 0080  
      __end_of_printErrorMessage 1FE8                     _gameSequence 0120  
                     __pbssBANK0 00CF                       __pbssBANK1 0100  
                    i2sprintf@ap 0068              __size_ofi2_vfprintf 0062  
           ??_printSucessMessage 0058           checkPlayerInput@record 005B  
                ??_escreve_texto 0084           checkPlayerInput@option 005A  
                        ?i2_dtoa 001C       __size_ofi2_EEPROM_ReadByte 0028  
            i2_printStartMessage 1DD4               i2_EEPROM_WriteByte 24BE  
             _printWinnerMessage 1E62                          ?___lmul 0001  
   EEPROM_ReadByte@eepromAddress 0080             __size_of_interrupcao 1960  
                 ___lmul@product 0009              ?i2_EEPROM_WriteByte 0001  
            ?_printWinnerMessage 0001                          ?_strlen 0080  
                        _INTEDG0 007F8E                          _INTEDG1 007F8D  
                        _INTEDG2 007F8C               __size_of_setupTmr0 0012  
           ?i2_printStartMessage 0001               __size_of_vfpfcnvrt 01B8  
                     ??i2_strlen 0003                ?_checkPlayerInput 0001  
                        i2_clear 26BA               ??_checkPlayerInput 0071  
                     _atraso_lcd 288C             ??i2_EEPROM_WriteByte 0002  
                        i2_fputc 1AFE                          i2_fputs 2502  
                      ?_initGame 0001             ??_printWinnerMessage 0058  
              showGameSequence@i 0003                          i2pad@fp 0011  
                        i2_putch 28EC                          i2dtoa@d 001E  
                        i2dtoa@i 003E                          i2dtoa@n 0036  
                        i2dtoa@p 0030                          i2dtoa@s 0034  
                        i2dtoa@w 0032                  __size_ofi2_dtoa 02E4  
                      ?_instr_wr 0001                          __Hparam 0000  
                        __Lparam 0000                       _inicializa 27FA  
                      ?_setupInt 0001                          ___aodiv 1194  
         ??_generateGameSequence 0019                          ___aomod 14A6  
                __size_of___lmul 006A                          ___awmod 1C8E  
                      ?_vfprintf 0159                   i2vfprintf@cfmt 0056  
                   __psmallconst 0800                          _dado_wr 2876  
                   ?i2_vfpfcnvrt 0040                          __pcinit 272A  
                        __ramtop 0800                          __ptext0 22DE  
                        __ptext1 28C8                          __ptext2 2846  
                        __ptext3 1D3E                          __ptext4 238A  
                        __ptext5 221A                          __ptext6 0E28  
                        __ptext7 0860                          __ptext8 1A34  
                        __ptext9 2680                  __size_of_strlen 003A  
                   __size_of_abs 0042             i2escreve_texto@linha 0003  
                   __size_of_pad 00CA            ??i2_printStartMessage 0058  
               ___awmod@dividend 0013                          _playing 00DB  
                     clear@linha 0080                          _sprintf 238A  
                 __pintcode_body 1874             end_of_initialization 2746  
     __size_of_printErrorMessage 0082                       ??_initGame 0059  
                        fputc@fp 0082                          int_func 1874  
                        fputs@fp 008B                  _EEPROM_ReadByte 2758  
                   ??i2_instr_wr 0002                       ??_instr_wr 0081  
              __end_of_setupTmr0 28DA                __end_of_vfpfcnvrt 0FE0  
                     ??_setupInt 0080                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                     ??i2_vfprintf 0056  
                     ??_vfprintf 00CF     __size_of_printPlayingMessage 0078  
                        strlen@a 0082                          strlen@s 0080  
              ?_EEPROM_WriteByte 0080                i2___aodiv@divisor 0009  
              i2___aodiv@counter 0011               ??_EEPROM_WriteByte 0081  
       __end_of_showGameSequence 2060               __end_ofi2_instr_wr 28B4  
                      i2___aodiv 131E                        i2___aomod 160C  
                    ?_atraso_lcd 0001                        i2_dado_wr 28B4  
             __end_ofi2_vfprintf 22DE            _printAttentionMessage 21B0  
                 __end_ofi2_dtoa 0E28                      ?_inicializa 0001  
                      i2_sprintf 23DC                   __end_of___lmul 21B0  
                    vfpfcnvrt@ap 00C3                      vfpfcnvrt@fp 00BF  
                    vfpfcnvrt@ll 00C7                  i2_escreve_texto 2644  
                      i2fputc@fp 0003                        i2fputs@fp 000C  
                   dado_wr@texto 0081                   __end_of_strlen 26BA  
            start_initialization 272A                      __end_of_abs 2588  
                    __end_of_pad 1AFE                       ?i2___aodiv 0001  
                     ?i2___aomod 0001          __end_of_EEPROM_ReadByte 2782  
        printStartMessage@record 016F                       ?i2_dado_wr 0001  
              __size_ofi2_strlen 0036                        i2strlen@a 0003  
                      i2strlen@s 0001                         ??i2_dtoa 0026  
                    vfprintf@fmt 015B                     i2vfprintf@ap 0054  
                   i2vfprintf@fp 0050                         ??___lmul 0009  
                     ?i2_sprintf 0060              __size_of_atraso_lcd 0014  
              i2___aomod@divisor 0009                         ??_strlen 0082  
              i2___aomod@counter 0011             __size_ofi2_vfpfcnvrt 01B4  
                   i2sprintf@fmt 0062                      __pbssCOMRAM 005D  
                  __pcstackBANK0 0060                    __pcstackBANK1 0159  
              _printStartMessage 1D3E                 ___aodiv@dividend 0080  
            __size_of_inicializa 0026   i2EEPROM_ReadByte@eepromAddress 0001  
             ?_printStartMessage 0001                         ?i2_clear 0001  
         ?_printAttentionMessage 0001                         ?i2_fputc 0001  
                       ?i2_fputs 000A                         ?i2_putch 0001  
    __size_of_printSucessMessage 0082              ??_printStartMessage 00CF  
              __size_of_initGame 0028            __end_of_escreve_texto 25C8  
                  ??_interrupcao 0078          __end_ofi2_escreve_texto 2680  
      __size_of_checkPlayerInput 0104                        __pintcode 0008  
              __size_of_instr_wr 0016                         ?___aodiv 0080  
                       ?___aomod 0080                 ___aodiv@quotient 0092  
                       ?___awmod 0013     i2EEPROM_WriteByte@gie_Status 0003  
                   instr_wr@inst 0081                         ?_dado_wr 0001  
              __size_of_setupInt 001A                __size_of_vfprintf 0062  
   i2EEPROM_WriteByte@eepromData 0001                      __smallconst 0800  
      __end_of_printStartMessage 1DD4                   __size_ofi2_abs 0040  
                 __size_ofi2_pad 00C6                   __size_of_clear 003C  
                    ??i2___aodiv 0011                      ??i2___aomod 0011  
                       ?_sprintf 0161                   __size_of_fputc 00CC  
                 __size_of_fputs 0048                 ?_EEPROM_ReadByte 0001  
                 __size_of_srand 0028                   __size_of_putch 0002  
            _printPlayingMessage 2060                      ??i2_dado_wr 0002  
       printPlayingMessage@total 0070                    ?i2_atraso_lcd 0001  
    __size_ofi2_EEPROM_WriteByte 0044      __size_of_printWinnerMessage 0082  
                       _LATEbits 000F8D                         i2u211_40 2164  
                       i2u211_41 2160                         i2u220_40 1CBA  
                       i2u212_40 219E                         i2u220_41 1CB6  
                       i2u212_41 219A                         i2u221_40 1CD4  
                       i2u221_41 1CD0                         i2u310_40 0C06  
                       i2u222_40 1CF2                         i2u310_41 0C02  
                       i2u222_41 1CEE                         i2u311_40 0C14  
                       i2u223_40 1D08                         i2u311_41 0C10  
                       i2u223_41 1D04                         i2u312_40 0D3E  
                       i2u224_40 1D2C                         i2u312_41 0D3A  
                       i2u224_41 1D28                         i2u313_40 0D5C  
                       i2u305_40 0B74                         i2u313_41 0D58  
                       i2u305_41 0B6E                         i2u314_40 0D76  
                       i2u306_40 0B76                         i2u226_40 27E2  
                       i2u218_40 2136                         i2u234_40 2388  
                       i2u314_41 0D72                         i2u226_41 27DE  
                       i2u234_41 2384                         i2u218_45 212C  
                       i2u315_40 0D90                         i2u307_40 0B8C  
                       i2u227_40 27F0                         i2u219_40 1CA0  
                       i2u315_41 0D8C                         i2u307_41 0B88  
                       i2u227_41 27EC                         i2u219_41 1C9C  
                       i2u235_44 200E                         i2u235_45 200A  
                       i2u228_40 267E                         i2u260_40 1B80  
                       i2u316_40 0DA0                         i2u308_40 0BBC  
                       i2u236_40 205E                         i2u228_41 267A  
                       i2u260_41 1B7C                         i2u316_41 0D9C  
                       i2u308_41 0BB8                         i2u236_41 205A  
                       i2u229_40 26F2                         i2u317_40 0DB2  
                       i2u309_40 0BD8                         i2u237_40 24CE  
                       i2u229_41 26EE                         i2u317_41 0DAE  
                       i2u309_41 0BD4                         i2u237_41 24CA  
                       i2u270_40 1362                         i2u318_40 0DC2  
                       i2u238_40 24FC                         i2u350_40 1790  
                       i2u270_41 135E                         i2u318_41 0DBE  
                       i2u238_41 24F6                         i2u350_41 178C  
                       i2u319_40 0DDA                         i2u335_40 1004  
                       i2u343_40 22D4                         i2u351_40 17A4  
                       i2u271_41 138C                         i2u319_41 0DD6  
                       i2u335_41 1000                         i2u343_41 22D0  
                       i2u351_41 17A0                         i2u239_45 24FE  
                       i2u272_40 13B0                         i2u280_40 16E6  
                       i2u336_40 104C                         i2u352_40 17C4  
                       i2u360_40 1904                         i2u272_41 13AC  
                       i2u280_41 16E2                         i2u336_41 1048  
                       i2u352_41 17C0                         i2u360_41 1900  
                       i2u273_40 13DA                         i2u281_40 172E  
                       i2u257_40 1B10                         i2u265_40 2544  
                       i2u337_40 1070                         i2u353_40 17EE  
                       i2u361_40 1916                         i2u273_41 13D6  
                       i2u281_41 172A                         i2u257_41 1B0C  
                       i2u265_41 2540                         i2u337_41 106C  
                       i2u353_41 17EA                         i2u361_41 1912  
                       i2u274_40 141A                         i2u258_40 1B22  
                       i2u266_40 271C                         i2u282_40 1BD8  
                       i2u338_40 1114                         i2u354_40 1864  
                       i2u362_40 1934                         i2u274_41 1416  
                       i2u258_41 1B1E                         i2u266_41 2718  
                       i2u282_41 1BD4                         i2u338_41 1110  
                       i2u354_41 1860                         i2u362_41 1930  
                       i2u370_47 28E0                         i2u275_40 1464  
                       i2u259_40 1B4A                         i2u283_40 1BFA  
                       i2u275_41 1460                         i2u259_41 1B46  
                       i2u283_41 1BF6                         i2u276_40 161E  
                       i2u284_40 1C50                         i2u356_40 18A4  
                       i2u276_41 161A                         i2u284_41 1C4C  
                       i2u356_41 18A0                         i2u269_40 1330  
                       i2u277_40 1650                         i2u285_40 1C60  
                       i2u349_40 1DE6                         i2u357_40 18B6  
                       i2u269_41 132C                         i2u277_41 164C  
                       i2u285_41 1C5C                         i2u349_41 1DE2  
                       i2u357_41 18B2                         i2u365_47 2024  
                       i2u278_40 168E                         i2u286_40 25E2  
                       i2u358_40 18D4                         i2u278_41 168A  
                       i2u286_41 25DE                         i2u358_41 18D0  
                  ?i2_inicializa 0001                         i2u366_47 203E  
                       i2u279_40 16B8                         i2u359_40 18E6  
                       i2u279_41 16B4                         i2u359_41 18E2  
                       i2u367_47 1ED4                         i2u368_47 1F56  
                       i2u369_47 1FD8                      ??i2_sprintf 0058  
                      _setupTmr0 28C8             ?_printPlayingMessage 0070  
    __end_ofi2_printStartMessage 1E62    __size_of_generateGameSequence 0054  
                      _vfpfcnvrt 0E28       EEPROM_WriteByte@gie_Status 0082  
            __end_of_interrupcao 1968                   i2dado_wr@texto 0002  
                       i2clear@i 0003       EEPROM_WriteByte@eepromData 0080  
                       i2pad@buf 0013                ?_showGameSequence 0001  
                       i2dtoa@fp 001C                         i2_strlen 26F4  
              ___lmul@multiplier 0001                         i2fputc@c 0001  
                       i2fputs@c 000E                         i2fputs@i 000F  
                       i2fputs@s 000A                   ??i2_atraso_lcd 0001  
             ??_showGameSequence 0001                     ??_atraso_lcd 0080  
               __size_ofi2_clear 003A        __size_of_EEPROM_WriteByte 0048  
               __size_ofi2_fputc 00CA                 __size_ofi2_fputs 0044  
               __size_ofi2_putch 0002                   ??i2_inicializa 0003  
                       __Hrparam 0000                     ??_inicializa 0082  
                     vfprintf@ap 015D                         __Lrparam 0000  
                     vfprintf@fp 0159                 ?i2_escreve_texto 0003  
                   __Lsmallconst 0800            ??_printPlayingMessage 0058  
                     ?_setupTmr0 0001                 __size_of___aodiv 018A  
               __size_of___aomod 0166                 __size_of___awmod 00B0  
                     ?_vfpfcnvrt 00BF                 __size_of_dado_wr 0016  
                ___aodiv@divisor 0088                  ___aodiv@counter 0090  
             __end_of_atraso_lcd 28A0       __size_of_printStartMessage 0096  
                     sprintf@fmt 0163                         _dtoa$743 00AD  
                    _initialized 00DA                         __ptext10 242E  
                       __ptext11 1968                         __ptext20 288C  
                       __ptext12 28EA                         __ptext21 2608  
                       __ptext13 2546                         __ptext30 1C8E  
                       __ptext22 2758                         __ptext14 14A6  
                       __ptext31 1770                         __ptext23 2476  
                       __ptext15 1194                         __ptext40 1F66  
                       __ptext32 1DD4                         __ptext16 27FA  
                       __ptext41 21B0                         __ptext33 2820  
                       __ptext25 2782                         __ptext17 2860  
                       __ptext50 28EC                         __ptext42 23DC  
                       __ptext34 27D2                         __ptext26 2336  
                       __ptext18 2588                         __ptext51 25C8  
                       __ptext43 227C                         __ptext35 24BE  
                       __ptext27 27AA                         __ptext19 2876  
                       __ptext52 160C                         __ptext44 0FE0  
                       __ptext36 1FE8                         __ptext28 20D8  
                       __ptext53 131E                         __ptext45 0B44  
                       __ptext37 1E62                         __ptext29 2146  
                       __ptext54 28A0                         __ptext46 1BC8  
                       __ptext38 1EE4                         __ptext55 2644  
                       __ptext47 26F4                         __ptext39 2060  
                       __ptext56 28B4                         __ptext48 2502  
                       __ptext57 28DA                         __ptext49 1AFE  
                       __ptext58 26BA               __end_of_inicializa 2820  
               __size_of_sprintf 0052                         _initGame 2782  
                  __size_of_main 0058                    __size_of_dtoa 02E4  
                  __size_of_rand 006E                         _instr_wr 2860  
               _checkPlayerInput 1770                      _interrupcao 0008  
                       isa$xinst 000000                         _setupInt 2846  
                       int$flags 005F                         _vfprintf 221A  
                       main@argc 0170                         main@argv 0172  
                 i2instr_wr@inst 0002                 ___aomod@dividend 0080  
     checkPlayerInput@record_191 005C                 i2escreve_texto@i 0005  
        ??_printAttentionMessage 0058                         intlevel2 0000  
                      sprintf@ap 0167        i2printStartMessage@record 0058  
                    ??_setupTmr0 0080                  ___aomod@divisor 0088  
                  ??i2_vfpfcnvrt 0046                      ??_vfpfcnvrt 00C5  
                ___aomod@counter 0090             __end_ofi2_atraso_lcd 28EA  
                       sprintf@f 0169                         sprintf@s 0161  
           __end_ofi2_inicializa 2846       __end_of_printSucessMessage 1F66  
                   ___aodiv@sign 0091               i2___aodiv@dividend 0001  
               _EEPROM_WriteByte 2476          generateGameSequence@toc 0019  
                   ___aomod@sign 0091            generateGameSequence@i 001B  
