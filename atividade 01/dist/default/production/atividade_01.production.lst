

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 03 18:21:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4550 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     _TRISCbits	set	3988
    90  0000                     _OSCCON	set	4051
    91  0000                     _TRISE	set	3990
    92  0000                     _TRISD	set	3989
    93  0000                     _SPBRG	set	4015
    94  0000                     _BAUDCON	set	4024
    95  0000                     _RCREG	set	4014
    96  0000                     _TXREG	set	4013
    97  0000                     _RCIE	set	31981
    98  0000                     _PEIE	set	32662
    99  0000                     _GIE	set	32663
   100  0000                     _CREN	set	32092
   101  0000                     _SPEN	set	32095
   102  0000                     _BRGH	set	32098
   103  0000                     _SYNC	set	32100
   104  0000                     _TXEN	set	32101
   105  0000                     _RCIF	set	31989
   106  0000                     _TXIF	set	31988
   107  0000                     _LATE1	set	31849
   108  0000                     _LATE0	set	31848
   109  0000                     _LATD7	set	31847
   110  0000                     _LATD6	set	31846
   111  0000                     _LATD5	set	31845
   112  0000                     _LATD4	set	31844
   113                           
   114                           	psect	smallconst
   115  000800                     __psmallconst:
   116                           	callstack 0
   117  000800  00                 	db	0
   118  000801                     STR_4:
   119  000801  20                 	db	32
   120  000802  20                 	db	32
   121  000803  20                 	db	32
   122  000804  20                 	db	32
   123  000805  20                 	db	32
   124  000806  20                 	db	32
   125  000807  53                 	db	83	;'S'
   126  000808  4F                 	db	79	;'O'
   127  000809  4D                 	db	77	;'M'
   128  00080A  41                 	db	65	;'A'
   129  00080B  20                 	db	32
   130  00080C  20                 	db	32
   131  00080D  20                 	db	32
   132  00080E  20                 	db	32
   133  00080F  20                 	db	32
   134  000810  20                 	db	32
   135  000811  00                 	db	0
   136  000812                     STR_3:
   137  000812  25                 	db	37
   138  000813  35                 	db	53	;'5'
   139  000814  75                 	db	117	;'u'
   140  000815  20                 	db	32
   141  000816  20                 	db	32
   142  000817  20                 	db	32
   143  000818  20                 	db	32
   144  000819  20                 	db	32
   145  00081A  20                 	db	32
   146  00081B  20                 	db	32
   147  00081C  20                 	db	32
   148  00081D  20                 	db	32
   149  00081E  20                 	db	32
   150  00081F  20                 	db	32
   151  000820  00                 	db	0
   152  000821                     STR_1:
   153  000821  20                 	db	32
   154  000822  20                 	db	32
   155  000823  20                 	db	32
   156  000824  20                 	db	32
   157  000825  20                 	db	32
   158  000826  20                 	db	32
   159  000827  20                 	db	32
   160  000828  61                 	db	97	;'a'
   161  000829  6E                 	db	110	;'n'
   162  00082A  73                 	db	115	;'s'
   163  00082B  3D                 	db	61	;'='
   164  00082C  25                 	db	37
   165  00082D  35                 	db	53	;'5'
   166  00082E  75                 	db	117	;'u'
   167  00082F  00                 	db	0
   168  000830                     STR_5:
   169  000830  54                 	db	84	;'T'
   170  000831  65                 	db	101	;'e'
   171  000832  73                 	db	115	;'s'
   172  000833  74                 	db	116	;'t'
   173  000834  65                 	db	101	;'e'
   174  000835  00                 	db	0
   175  000836                     STR_2:
   176  000836  25                 	db	37
   177  000837  75                 	db	117	;'u'
   178  000838  0D                 	db	13
   179  000839  00                 	db	0
   180  00083A  00                 	db	0	; dummy byte at the end
   181  0000                     
   182                           ; #config settings
   183                           
   184                           	psect	cinit
   185  001A78                     __pcinit:
   186                           	callstack 0
   187  001A78                     start_initialization:
   188                           	callstack 0
   189  001A78                     __initialization:
   190                           	callstack 0
   191                           
   192                           ; Clear objects allocated to BITBANK0 (1 bytes)
   193  001A78  0100               	movlb	0
   194  001A7A  6BED               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   195                           
   196                           ; Clear objects allocated to BANK0 (111 bytes)
   197  001A7C  EE00  F060         	lfsr	0,__pbssBANK0
   198  001A80  0E6F               	movlw	111
   199  001A82                     clear_0:
   200  001A82  6AEE               	clrf	postinc0,c
   201  001A84  06E8               	decf	wreg,f,c
   202  001A86  E1FD               	bnz	clear_0
   203  001A88                     end_of_initialization:
   204                           	callstack 0
   205  001A88                     __end_of__initialization:
   206                           	callstack 0
   207  001A88  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   208  001A8A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   209  001A8C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   210  001A8E  6EF8               	movwf	tblptru,c
   211  001A90  0100               	movlb	0
   212  001A92  EF77  F009         	goto	_main	;jump to C main() function
   213                           
   214                           	psect	bitbssBANK0
   215  000768                     __pbitbssBANK0:
   216                           	callstack 0
   217  000768                     _flag_interrupcao:
   218                           	callstack 0
   219  000768                     	ds	1
   220                           
   221                           	psect	bssBANK0
   222  000060                     __pbssBANK0:
   223                           	callstack 0
   224  000060                     _nout:
   225                           	callstack 0
   226  000060                     	ds	2
   227  000062                     _width:
   228                           	callstack 0
   229  000062                     	ds	2
   230  000064                     _prec:
   231                           	callstack 0
   232  000064                     	ds	2
   233  000066                     _flags:
   234                           	callstack 0
   235  000066                     	ds	2
   236  000068                     _digito:
   237                           	callstack 0
   238  000068                     	ds	2
   239  00006A                     _result:
   240                           	callstack 0
   241  00006A                     	ds	2
   242  00006C                     _y:
   243                           	callstack 0
   244  00006C                     	ds	2
   245  00006E                     _x:
   246                           	callstack 0
   247  00006E                     	ds	2
   248  000070                     _caracter:
   249                           	callstack 0
   250  000070                     	ds	1
   251  000071                     _dbuf:
   252                           	callstack 0
   253  000071                     	ds	32
   254  000091                     _tx_string:
   255                           	callstack 0
   256  000091                     	ds	30
   257  0000AF                     _linha2:
   258                           	callstack 0
   259  0000AF                     	ds	16
   260  0000BF                     _linha1:
   261                           	callstack 0
   262  0000BF                     	ds	16
   263                           
   264                           	psect	cstackBANK1
   265  000100                     __pcstackBANK1:
   266                           	callstack 0
   267  000100                     ??_main:
   268                           
   269                           ; 1 bytes @ 0x0
   270  000100                     	ds	2
   271                           
   272                           	psect	cstackBANK0
   273  0000CF                     __pcstackBANK0:
   274                           	callstack 0
   275  0000CF                     sprintf@ap:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x0
   279  0000CF                     	ds	2
   280  0000D1                     sprintf@f:
   281                           	callstack 0
   282                           
   283                           ; 6 bytes @ 0x2
   284  0000D1                     	ds	6
   285  0000D7                     ??_RS232:
   286                           
   287                           ; 1 bytes @ 0x8
   288  0000D7                     	ds	10
   289  0000E1                     ?_strlen:
   290                           	callstack 0
   291  0000E1                     Lcd_Port@a:
   292                           	callstack 0
   293  0000E1                     serial_send@character:
   294                           	callstack 0
   295  0000E1                     strlen@s:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x12
   299  0000E1                     	ds	1
   300  0000E2                     ??_Lcd_Cmd:
   301  0000E2                     Lcd_Write_Char@temp:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x13
   305  0000E2                     	ds	1
   306  0000E3                     Lcd_Cmd@a:
   307                           	callstack 0
   308  0000E3                     Lcd_Write_Char@y:
   309                           	callstack 0
   310  0000E3                     strlen@a:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x14
   314  0000E3                     	ds	1
   315  0000E4                     ??_Lcd_Init:
   316  0000E4                     Lcd_Set_Cursor@b:
   317                           	callstack 0
   318  0000E4                     Lcd_Write_Char@a:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x15
   322  0000E4                     	ds	1
   323  0000E5                     Lcd_Set_Cursor@a:
   324                           	callstack 0
   325  0000E5                     Lcd_Write_String@a:
   326                           	callstack 0
   327  0000E5                     serial_sendString@phrase:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x16
   331  0000E5                     	ds	1
   332  0000E6                     Lcd_Set_Cursor@z:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x17
   336  0000E6                     	ds	1
   337  0000E7                     ??_Lcd_Write_String:
   338  0000E7                     ??_serial_sendString:
   339  0000E7                     Lcd_Set_Cursor@y:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x18
   343  0000E7                     	ds	1
   344  0000E8                     Lcd_Set_Cursor@temp:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x19
   348  0000E8                     	ds	1
   349  0000E9                     Lcd_Write_String@i:
   350                           	callstack 0
   351  0000E9                     serial_sendString@size:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x1A
   355  0000E9                     	ds	2
   356  0000EB                     serial_sendString@index:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x1C
   360  0000EB                     	ds	2
   361                           
   362                           	psect	cstackCOMRAM
   363  000001                     __pcstackCOMRAM:
   364                           	callstack 0
   365  000001                     ?_isdigit:
   366                           	callstack 0
   367  000001                     ?_isspace:
   368                           	callstack 0
   369  000001                     ?___wmul:
   370                           	callstack 0
   371  000001                     ?i2_strlen:
   372                           	callstack 0
   373  000001                     ?___lodiv:
   374                           	callstack 0
   375  000001                     ?___lomod:
   376                           	callstack 0
   377  000001                     i2Lcd_Port@a:
   378                           	callstack 0
   379  000001                     i2serial_send@character:
   380                           	callstack 0
   381  000001                     ___wmul@multiplier:
   382                           	callstack 0
   383  000001                     isdigit@c:
   384                           	callstack 0
   385  000001                     isspace@c:
   386                           	callstack 0
   387  000001                     fputc@c:
   388                           	callstack 0
   389  000001                     i2strlen@s:
   390                           	callstack 0
   391  000001                     ___lodiv@dividend:
   392                           	callstack 0
   393  000001                     ___lomod@dividend:
   394                           	callstack 0
   395                           
   396                           ; 8 bytes @ 0x0
   397  000001                     	ds	1
   398  000002                     ??i2_Lcd_Cmd:
   399  000002                     i2Lcd_Write_Char@temp:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x1
   403  000002                     	ds	1
   404  000003                     ??_isdigit:
   405  000003                     ??_isspace:
   406  000003                     i2Lcd_Cmd@a:
   407                           	callstack 0
   408  000003                     i2Lcd_Write_Char@y:
   409                           	callstack 0
   410  000003                     ___wmul@multiplicand:
   411                           	callstack 0
   412  000003                     fputc@fp:
   413                           	callstack 0
   414  000003                     i2strlen@a:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x2
   418  000003                     	ds	1
   419  000004                     i2Lcd_Set_Cursor@b:
   420                           	callstack 0
   421  000004                     i2Lcd_Write_Char@a:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x3
   425  000004                     	ds	1
   426  000005                     ??_fputc:
   427  000005                     i2Lcd_Set_Cursor@a:
   428                           	callstack 0
   429  000005                     ___wmul@product:
   430                           	callstack 0
   431  000005                     i2Lcd_Write_String@a:
   432                           	callstack 0
   433  000005                     i2serial_sendString@phrase:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x4
   437  000005                     	ds	1
   438  000006                     i2Lcd_Set_Cursor@z:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x5
   442  000006                     	ds	1
   443  000007                     ??i2_Lcd_Write_String:
   444  000007                     ??i2_serial_sendString:
   445  000007                     _isspace$727:
   446                           	callstack 0
   447  000007                     i2Lcd_Set_Cursor@y:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x6
   451  000007                     	ds	1
   452  000008                     ?_atoi:
   453                           	callstack 0
   454  000008                     i2Lcd_Set_Cursor@temp:
   455                           	callstack 0
   456  000008                     atoi@s:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x7
   460  000008                     	ds	1
   461  000009                     i2Lcd_Write_String@i:
   462                           	callstack 0
   463  000009                     i2serial_sendString@size:
   464                           	callstack 0
   465  000009                     ___lodiv@divisor:
   466                           	callstack 0
   467  000009                     ___lomod@divisor:
   468                           	callstack 0
   469                           
   470                           ; 8 bytes @ 0x8
   471  000009                     	ds	1
   472  00000A                     ??_atoi:
   473  00000A                     fputs@s:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x9
   477  00000A                     	ds	1
   478  00000B                     i2serial_sendString@index:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0xA
   482  00000B                     	ds	1
   483  00000C                     fputs@fp:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0xB
   487  00000C                     	ds	2
   488  00000E                     fputs@c:
   489                           	callstack 0
   490  00000E                     atoi@neg:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0xD
   494  00000E                     	ds	1
   495  00000F                     fputs@i:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0xE
   499  00000F                     	ds	1
   500  000010                     _atoi$709:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0xF
   504  000010                     	ds	1
   505  000011                     ?_pad:
   506                           	callstack 0
   507  000011                     ___lomod@counter:
   508                           	callstack 0
   509  000011                     pad@fp:
   510                           	callstack 0
   511  000011                     ___lodiv@quotient:
   512                           	callstack 0
   513                           
   514                           ; 8 bytes @ 0x10
   515  000011                     	ds	1
   516  000012                     _atoi$711:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x11
   520  000012                     	ds	1
   521  000013                     pad@buf:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x12
   525  000013                     	ds	1
   526  000014                     _atoi$710:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x13
   530  000014                     	ds	1
   531  000015                     pad@p:
   532                           	callstack 0
   533  000015                     atoi@n:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x14
   537  000015                     	ds	2
   538  000017                     ??_pad:
   539                           
   540                           ; 1 bytes @ 0x16
   541  000017                     	ds	1
   542  000018                     pad@i:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x17
   546  000018                     	ds	1
   547  000019                     ___lodiv@counter:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x18
   551  000019                     	ds	1
   552  00001A                     pad@w:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x19
   556  00001A                     	ds	2
   557  00001C                     ?_utoa:
   558                           	callstack 0
   559  00001C                     utoa@fp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x1B
   563  00001C                     	ds	2
   564  00001E                     utoa@d:
   565                           	callstack 0
   566                           
   567                           ; 8 bytes @ 0x1D
   568  00001E                     	ds	8
   569  000026                     ??_utoa:
   570                           
   571                           ; 1 bytes @ 0x25
   572  000026                     	ds	8
   573  00002E                     utoa@p:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x2D
   577  00002E                     	ds	2
   578  000030                     utoa@w:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x2F
   582  000030                     	ds	2
   583  000032                     utoa@n:
   584                           	callstack 0
   585                           
   586                           ; 8 bytes @ 0x31
   587  000032                     	ds	8
   588  00003A                     utoa@i:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x39
   592  00003A                     	ds	2
   593  00003C                     ?_vfpfcnvrt:
   594                           	callstack 0
   595  00003C                     vfpfcnvrt@fp:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x3B
   599  00003C                     	ds	2
   600  00003E                     vfpfcnvrt@fmt:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x3D
   604  00003E                     	ds	2
   605  000040                     vfpfcnvrt@ap:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x3F
   609  000040                     	ds	2
   610  000042                     ??_vfpfcnvrt:
   611                           
   612                           ; 1 bytes @ 0x41
   613  000042                     	ds	4
   614  000046                     vfpfcnvrt@llu:
   615                           	callstack 0
   616                           
   617                           ; 8 bytes @ 0x45
   618  000046                     	ds	8
   619  00004E                     _vfpfcnvrt$691:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x4D
   623  00004E                     	ds	2
   624  000050                     ?_vfprintf:
   625                           	callstack 0
   626  000050                     vfprintf@fp:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x4F
   630  000050                     	ds	2
   631  000052                     vfprintf@fmt:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x51
   635  000052                     	ds	2
   636  000054                     vfprintf@ap:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x53
   640  000054                     	ds	2
   641  000056                     vfprintf@cfmt:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x55
   645  000056                     	ds	2
   646  000058                     ?_sprintf:
   647                           	callstack 0
   648  000058                     sprintf@s:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x57
   652  000058                     	ds	2
   653  00005A                     sprintf@fmt:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x59
   657  00005A                     	ds	4
   658  00005E                     
   659                           ; 1 bytes @ 0x5D
   660 ;;
   661 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   662 ;;
   663 ;; *************** function _main *****************
   664 ;; Defined at:
   665 ;;		line 101 in file "main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   679 ;;      Params:         0       0       0       0       0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0       0       0
   681 ;;      Temps:          0       0       2       0       0       0       0       0       0
   682 ;;      Totals:         0       0       2       0       0       0       0       0       0
   683 ;;Total ram usage:        2 bytes
   684 ;; Hardware stack levels required when called: 12
   685 ;; This function calls:
   686 ;;		_Lcd_Clear
   687 ;;		_Lcd_Init
   688 ;;		_Lcd_Set_Cursor
   689 ;;		_Lcd_Write_String
   690 ;;		_serial_send
   691 ;;		_serial_sendString
   692 ;;		_setup_Interruptions
   693 ;;		_setup_RS232
   694 ;; This function is called by:
   695 ;;		Startup code after reset
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text0
   700  0012EE                     __ptext0:
   701                           	callstack 0
   702  0012EE                     _main:
   703                           	callstack 19
   704  0012EE                     
   705                           ;main.c: 103:     TRISD = 0;
   706  0012EE  0E00               	movlw	0
   707  0012F0  6E95               	movwf	149,c	;volatile
   708                           
   709                           ;main.c: 104:     TRISE = 0;
   710  0012F2  0E00               	movlw	0
   711  0012F4  6E96               	movwf	150,c	;volatile
   712                           
   713                           ;main.c: 106:     OSCCON = 0b01100000;
   714  0012F6  0E60               	movlw	96
   715  0012F8  6ED3               	movwf	211,c	;volatile
   716  0012FA                     
   717                           ;main.c: 107:     TRISCbits.RC6 = 1;
   718  0012FA  8C94               	bsf	148,6,c	;volatile
   719  0012FC                     
   720                           ;main.c: 108:     TRISCbits.RC7 = 1;
   721  0012FC  8E94               	bsf	148,7,c	;volatile
   722  0012FE                     
   723                           ;main.c: 109:     setup_RS232();
   724  0012FE  EC64  F00D         	call	_setup_RS232	;wreg free
   725                           
   726                           ;main.c: 110:     setup_Interruptions();
   727  001302  EC75  F00D         	call	_setup_Interruptions	;wreg free
   728  001306                     
   729                           ;main.c: 111:     Lcd_Init();
   730  001306  EC47  F00A         	call	_Lcd_Init	;wreg free
   731  00130A                     
   732                           ;main.c: 112:     Lcd_Clear();
   733  00130A  EC6E  F00D         	call	_Lcd_Clear	;wreg free
   734  00130E                     
   735                           ;main.c: 113:     Lcd_Set_Cursor(1, 1);
   736  00130E  0E01               	movlw	1
   737  001310  0100               	movlb	0	; () banked
   738  001312  6FE4               	movwf	Lcd_Set_Cursor@b& (0+255),b
   739  001314  0E01               	movlw	1
   740  001316  ECBC  F00A         	call	_Lcd_Set_Cursor
   741  00131A                     
   742                           ;main.c: 114:     Lcd_Write_String("      SOMA      ");
   743  00131A  0E01               	movlw	low STR_4
   744  00131C  0100               	movlb	0	; () banked
   745  00131E  6FE5               	movwf	Lcd_Write_String@a& (0+255),b
   746  001320  0E08               	movlw	high STR_4
   747  001322  6FE6               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   748  001324  ECC6  F009         	call	_Lcd_Write_String	;wreg free
   749  001328                     
   750                           ;main.c: 115:     Lcd_Set_Cursor(2, 1);
   751  001328  0E01               	movlw	1
   752  00132A  0100               	movlb	0	; () banked
   753  00132C  6FE4               	movwf	Lcd_Set_Cursor@b& (0+255),b
   754  00132E  0E02               	movlw	2
   755  001330  ECBC  F00A         	call	_Lcd_Set_Cursor
   756  001334                     
   757                           ;main.c: 116:     Lcd_Write_String("Teste");
   758  001334  0E30               	movlw	low STR_5
   759  001336  0100               	movlb	0	; () banked
   760  001338  6FE5               	movwf	Lcd_Write_String@a& (0+255),b
   761  00133A  0E08               	movlw	high STR_5
   762  00133C  6FE6               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   763  00133E  ECC6  F009         	call	_Lcd_Write_String	;wreg free
   764  001342                     
   765                           ;main.c: 117:     _delay((unsigned long)((200)*(4000000/4000.0)));
   766  001342  0E02               	movlw	2
   767  001344  0101               	movlb	1	; () banked
   768  001346  6F01               	movwf	(??_main+1)& (0+255),b
   769  001348  0E04               	movlw	4
   770  00134A  6F00               	movwf	??_main& (0+255),b
   771  00134C  0EBA               	movlw	186
   772  00134E                     u1647:
   773  00134E  2EE8               	decfsz	wreg,f,c
   774  001350  D7FE               	bra	u1647
   775  001352  2F00               	decfsz	??_main& (0+255),f,b
   776  001354  D7FC               	bra	u1647
   777  001356  2F01               	decfsz	(??_main+1)& (0+255),f,b
   778  001358  D7FA               	bra	u1647
   779  00135A  F000               	nop	
   780  00135C                     
   781                           ;main.c: 118:     serial_sendString("Teste");
   782  00135C  0E30               	movlw	low STR_5
   783  00135E  0100               	movlb	0	; () banked
   784  001360  6FE5               	movwf	serial_sendString@phrase& (0+255),b
   785  001362  0E08               	movlw	high STR_5
   786  001364  6FE6               	movwf	(serial_sendString@phrase+1)& (0+255),b
   787  001366  EC83  F00A         	call	_serial_sendString	;wreg free
   788  00136A                     l2266:
   789                           
   790                           ;main.c: 120:         if (flag_interrupcao == 1) {
   791  00136A  0100               	movlb	0	; () banked
   792  00136C  A1ED               	btfss	(_flag_interrupcao/(0+8))& (0+255),_flag_interrupcao& (0+7),b
   793  00136E  EFBB  F009         	goto	u1631
   794  001372  EFBD  F009         	goto	u1630
   795  001376                     u1631:
   796  001376  EFB5  F009         	goto	l2266
   797  00137A                     u1630:
   798  00137A                     
   799                           ; BSR set to: 0
   800                           ;main.c: 121:             serial_send(caracter);
   801  00137A  0E00               	movlw	0
   802  00137C  EC4B  F00D         	call	_serial_send
   803  001380                     
   804                           ;main.c: 122:             flag_interrupcao = 0;
   805  001380  0100               	movlb	0	; () banked
   806  001382  91ED               	bcf	(_flag_interrupcao/(0+8))& (0+255),_flag_interrupcao& (0+7),b
   807  001384  EFB5  F009         	goto	l2266
   808  001388  EF07  F000         	goto	start
   809  00138C                     __end_of_main:
   810                           	callstack 0
   811                           
   812 ;; *************** function _setup_RS232 *****************
   813 ;; Defined at:
   814 ;;		line 85 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   828 ;;      Params:         0       0       0       0       0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0
   831 ;;      Totals:         0       0       0       0       0       0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 9
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text1
   843  001AC8                     __ptext1:
   844                           	callstack 0
   845  001AC8                     _setup_RS232:
   846                           	callstack 21
   847  001AC8                     
   848                           ;main.c: 86:     TXEN = 1;
   849  001AC8  8AAC               	bsf	4012,5,c	;volatile
   850                           
   851                           ;main.c: 87:     SYNC = 0;
   852  001ACA  98AC               	bcf	4012,4,c	;volatile
   853                           
   854                           ;main.c: 88:     BRGH = 1;
   855  001ACC  84AC               	bsf	4012,2,c	;volatile
   856                           
   857                           ;main.c: 89:     SPEN = 1;
   858  001ACE  8EAB               	bsf	4011,7,c	;volatile
   859                           
   860                           ;main.c: 90:     CREN = 1;
   861  001AD0  88AB               	bsf	4011,4,c	;volatile
   862  001AD2                     
   863                           ;main.c: 91:     BAUDCON = 0x00;
   864  001AD2  0E00               	movlw	0
   865  001AD4  6EB8               	movwf	184,c	;volatile
   866                           
   867                           ;main.c: 92:     SPBRG = 25;
   868  001AD6  0E19               	movlw	25
   869  001AD8  6EAF               	movwf	175,c	;volatile
   870  001ADA  0012               	return		;funcret
   871  001ADC                     __end_of_setup_RS232:
   872                           	callstack 0
   873                           
   874 ;; *************** function _setup_Interruptions *****************
   875 ;; Defined at:
   876 ;;		line 95 in file "main.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		None
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   890 ;;      Params:         0       0       0       0       0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0
   893 ;;      Totals:         0       0       0       0       0       0       0       0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 9
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text2
   905  001AEA                     __ptext2:
   906                           	callstack 0
   907  001AEA                     _setup_Interruptions:
   908                           	callstack 21
   909  001AEA                     
   910                           ;main.c: 96:     GIE = 1;
   911  001AEA  8EF2               	bsf	4082,7,c	;volatile
   912                           
   913                           ;main.c: 97:     PEIE = 1;
   914  001AEC  8CF2               	bsf	4082,6,c	;volatile
   915                           
   916                           ;main.c: 98:     RCIE = 1;
   917  001AEE  8A9D               	bsf	3997,5,c	;volatile
   918  001AF0  0012               	return		;funcret
   919  001AF2                     __end_of_setup_Interruptions:
   920                           	callstack 0
   921                           
   922 ;; *************** function _serial_sendString *****************
   923 ;; Defined at:
   924 ;;		line 55 in file "main.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  phrase          2   22[BANK0 ] PTR const unsigned char 
   927 ;;		 -> STR_6(6), tx_string(30), 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  index           2   28[BANK0 ] unsigned int 
   930 ;;  size            2   26[BANK0 ] unsigned int 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   940 ;;      Params:         0       2       0       0       0       0       0       0       0
   941 ;;      Locals:         0       4       0       0       0       0       0       0       0
   942 ;;      Temps:          0       2       0       0       0       0       0       0       0
   943 ;;      Totals:         0       8       0       0       0       0       0       0       0
   944 ;;Total ram usage:        8 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; Hardware stack levels required when called: 10
   947 ;; This function calls:
   948 ;;		_serial_send
   949 ;;		_strlen
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text3
   956  001506                     __ptext3:
   957                           	callstack 0
   958  001506                     _serial_sendString:
   959                           	callstack 20
   960  001506                     
   961                           ;main.c: 56:     unsigned int index = 0;
   962  001506  0E00               	movlw	0
   963  001508  0100               	movlb	0	; () banked
   964  00150A  6FEC               	movwf	(serial_sendString@index+1)& (0+255),b
   965  00150C  0E00               	movlw	0
   966  00150E  6FEB               	movwf	serial_sendString@index& (0+255),b
   967  001510                     
   968                           ; BSR set to: 0
   969                           ;main.c: 57:     unsigned int size = strlen(phrase);
   970  001510  C0E5  F0E1         	movff	serial_sendString@phrase,strlen@s
   971  001514  C0E6  F0E2         	movff	serial_sendString@phrase+1,strlen@s+1
   972  001518  ECEB  F00B         	call	_strlen	;wreg free
   973  00151C  C0E1  F0E9         	movff	?_strlen,serial_sendString@size
   974  001520  C0E2  F0EA         	movff	?_strlen+1,serial_sendString@size+1
   975                           
   976                           ;main.c: 58:     while (index < size) {
   977  001524  EFAF  F00A         	goto	l2230
   978  001528                     l2226:
   979                           
   980                           ; BSR set to: 0
   981                           ;main.c: 59:         serial_send(phrase[index]);
   982  001528  51EB               	movf	serial_sendString@index& (0+255),w,b
   983  00152A  25E5               	addwf	serial_sendString@phrase& (0+255),w,b
   984  00152C  6FE7               	movwf	??_serial_sendString& (0+255),b
   985  00152E  51EC               	movf	(serial_sendString@index+1)& (0+255),w,b
   986  001530  21E6               	addwfc	(serial_sendString@phrase+1)& (0+255),w,b
   987  001532  6FE8               	movwf	(??_serial_sendString+1)& (0+255),b
   988  001534  C0E7  FFF6         	movff	??_serial_sendString,tblptrl
   989  001538  C0E8  FFF7         	movff	??_serial_sendString+1,tblptrh
   990  00153C  6AF8               	clrf	tblptru,c
   991  00153E  0E07               	movlw	(high __ramtop+-1)
   992  001540  64F7               	cpfsgt	tblptrh,c
   993  001542  D003               	bra	u1617
   994  001544  0008               	tblrd		*
   995  001546  50F5               	movf	tablat,w,c
   996  001548  D005               	bra	u1610
   997  00154A                     u1617:
   998  00154A  CFF6 FFE1          	movff	tblptrl,fsr1l
   999  00154E  CFF7 FFE2          	movff	tblptrh,fsr1h
  1000  001552  50E7               	movf	indf1,w,c
  1001  001554                     u1610:
  1002  001554  EC4B  F00D         	call	_serial_send
  1003  001558                     
  1004                           ;main.c: 60:         index++;
  1005  001558  0100               	movlb	0	; () banked
  1006  00155A  4BEB               	infsnz	serial_sendString@index& (0+255),f,b
  1007  00155C  2BEC               	incf	(serial_sendString@index+1)& (0+255),f,b
  1008  00155E                     l2230:
  1009                           
  1010                           ;main.c: 58:     while (index < size) {
  1011  00155E  0100               	movlb	0	; () banked
  1012  001560  51E9               	movf	serial_sendString@size& (0+255),w,b
  1013  001562  5DEB               	subwf	serial_sendString@index& (0+255),w,b
  1014  001564  51EA               	movf	(serial_sendString@size+1)& (0+255),w,b
  1015  001566  59EC               	subwfb	(serial_sendString@index+1)& (0+255),w,b
  1016  001568  A0D8               	btfss	status,0,c
  1017  00156A  EFB9  F00A         	goto	u1621
  1018  00156E  EFBB  F00A         	goto	u1620
  1019  001572                     u1621:
  1020  001572  EF94  F00A         	goto	l2226
  1021  001576                     u1620:
  1022  001576                     
  1023                           ; BSR set to: 0
  1024  001576  0012               	return		;funcret
  1025  001578                     __end_of_serial_sendString:
  1026                           	callstack 0
  1027                           
  1028 ;; *************** function _strlen *****************
  1029 ;; Defined at:
  1030 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  s               2   18[BANK0 ] PTR const unsigned char 
  1033 ;;		 -> dbuf(32), STR_6(6), tx_string(30), 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  a               2   20[BANK0 ] PTR const unsigned char 
  1036 ;;		 -> dbuf(32), STR_6(6), tx_string(30), 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  2   18[BANK0 ] unsigned int 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1046 ;;      Params:         0       2       0       0       0       0       0       0       0
  1047 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1049 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1050 ;;Total ram usage:        4 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 9
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_serial_sendString
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text4
  1061  0017D6                     __ptext4:
  1062                           	callstack 0
  1063  0017D6                     _strlen:
  1064                           	callstack 20
  1065  0017D6  C0E1  F0E3         	movff	strlen@s,strlen@a
  1066  0017DA  C0E2  F0E4         	movff	strlen@s+1,strlen@a+1
  1067  0017DE  EFF4  F00B         	goto	l2162
  1068  0017E2                     l2160:
  1069  0017E2  0100               	movlb	0	; () banked
  1070  0017E4  4BE1               	infsnz	strlen@s& (0+255),f,b
  1071  0017E6  2BE2               	incf	(strlen@s+1)& (0+255),f,b
  1072  0017E8                     l2162:
  1073  0017E8  C0E1  FFF6         	movff	strlen@s,tblptrl
  1074  0017EC  C0E2  FFF7         	movff	strlen@s+1,tblptrh
  1075  0017F0  6AF8               	clrf	tblptru,c
  1076  0017F2  0E07               	movlw	(high __ramtop+-1)
  1077  0017F4  64F7               	cpfsgt	tblptrh,c
  1078  0017F6  D003               	bra	u1547
  1079  0017F8  0008               	tblrd		*
  1080  0017FA  50F5               	movf	tablat,w,c
  1081  0017FC  D005               	bra	u1540
  1082  0017FE                     u1547:
  1083  0017FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  1084  001802  CFF7 FFE2          	movff	tblptrh,fsr1h
  1085  001806  50E7               	movf	indf1,w,c
  1086  001808                     u1540:
  1087  001808  0900               	iorlw	0
  1088  00180A  A4D8               	btfss	status,2,c
  1089  00180C  EF0A  F00C         	goto	u1551
  1090  001810  EF0C  F00C         	goto	u1550
  1091  001814                     u1551:
  1092  001814  EFF1  F00B         	goto	l2160
  1093  001818                     u1550:
  1094  001818  0100               	movlb	0	; () banked
  1095  00181A  51E3               	movf	strlen@a& (0+255),w,b
  1096  00181C  5DE1               	subwf	strlen@s& (0+255),w,b
  1097  00181E  6FE1               	movwf	?_strlen& (0+255),b
  1098  001820  51E4               	movf	(strlen@a+1)& (0+255),w,b
  1099  001822  59E2               	subwfb	(strlen@s+1)& (0+255),w,b
  1100  001824  6FE2               	movwf	(?_strlen+1)& (0+255),b
  1101  001826                     
  1102                           ; BSR set to: 0
  1103  001826  0012               	return		;funcret
  1104  001828                     __end_of_strlen:
  1105                           	callstack 0
  1106                           
  1107 ;; *************** function _serial_send *****************
  1108 ;; Defined at:
  1109 ;;		line 49 in file "main.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  character       1    wreg     unsigned char 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  character       1   18[BANK0 ] unsigned char 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1123 ;;      Params:         0       0       0       0       0       0       0       0       0
  1124 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1126 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1127 ;;Total ram usage:        1 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 9
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_serial_sendString
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text5
  1139  001A96                     __ptext5:
  1140                           	callstack 0
  1141  001A96                     _serial_send:
  1142                           	callstack 20
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;incstack = 0
  1146                           ;serial_send@character stored from wreg
  1147  001A96  0100               	movlb	0	; () banked
  1148  001A98  6FE1               	movwf	serial_send@character& (0+255),b
  1149  001A9A                     
  1150                           ;main.c: 50:     TXIF = 0;
  1151  001A9A  989E               	bcf	3998,4,c	;volatile
  1152  001A9C                     
  1153                           ;main.c: 51:     TXREG = character;
  1154  001A9C  C0E1  FFAD         	movff	serial_send@character,4013	;volatile
  1155  001AA0                     l116:
  1156  001AA0  A89E               	btfss	3998,4,c	;volatile
  1157  001AA2  EF55  F00D         	goto	u1531
  1158  001AA6  EF57  F00D         	goto	u1530
  1159  001AAA                     u1531:
  1160  001AAA  EF50  F00D         	goto	l116
  1161  001AAE                     u1530:
  1162  001AAE  0012               	return		;funcret
  1163  001AB0                     __end_of_serial_send:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _Lcd_Write_String *****************
  1167 ;; Defined at:
  1168 ;;		line 88 in file "./lcd.h"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  a               2   22[BANK0 ] PTR unsigned char 
  1171 ;;		 -> STR_5(6), STR_4(17), linha1(16), linha2(16), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  i               2   26[BANK0 ] int 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1183 ;;      Params:         0       2       0       0       0       0       0       0       0
  1184 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1185 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1186 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1187 ;;Total ram usage:        6 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 11
  1190 ;; This function calls:
  1191 ;;		_Lcd_Write_Char
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text6
  1198  00138C                     __ptext6:
  1199                           	callstack 0
  1200  00138C                     _Lcd_Write_String:
  1201                           	callstack 19
  1202  00138C                     
  1203                           ;./lcd.h: 89:     int i;;./lcd.h: 90:     for (i = 0; a[i] != '\0'; i++)
  1204  00138C  0E00               	movlw	0
  1205  00138E  0100               	movlb	0	; () banked
  1206  001390  6FEA               	movwf	(Lcd_Write_String@i+1)& (0+255),b
  1207  001392  0E00               	movlw	0
  1208  001394  6FE9               	movwf	Lcd_Write_String@i& (0+255),b
  1209  001396  EFE9  F009         	goto	l2220
  1210  00139A                     l2216:
  1211                           
  1212                           ;./lcd.h: 91:         Lcd_Write_Char(a[i]);
  1213  00139A  0100               	movlb	0	; () banked
  1214  00139C  51E9               	movf	Lcd_Write_String@i& (0+255),w,b
  1215  00139E  25E5               	addwf	Lcd_Write_String@a& (0+255),w,b
  1216  0013A0  6FE7               	movwf	??_Lcd_Write_String& (0+255),b
  1217  0013A2  51EA               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  1218  0013A4  21E6               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  1219  0013A6  6FE8               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  1220  0013A8  C0E7  FFF6         	movff	??_Lcd_Write_String,tblptrl
  1221  0013AC  C0E8  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  1222  0013B0  6AF8               	clrf	tblptru,c
  1223  0013B2  0E07               	movlw	(high __ramtop+-1)
  1224  0013B4  64F7               	cpfsgt	tblptrh,c
  1225  0013B6  D003               	bra	u1587
  1226  0013B8  0008               	tblrd		*
  1227  0013BA  50F5               	movf	tablat,w,c
  1228  0013BC  D005               	bra	u1580
  1229  0013BE                     u1587:
  1230  0013BE  CFF6 FFE1          	movff	tblptrl,fsr1l
  1231  0013C2  CFF7 FFE2          	movff	tblptrh,fsr1h
  1232  0013C6  50E7               	movf	indf1,w,c
  1233  0013C8                     u1580:
  1234  0013C8  ECAF  F00C         	call	_Lcd_Write_Char
  1235  0013CC  0100               	movlb	0	; () banked
  1236  0013CE  4BE9               	infsnz	Lcd_Write_String@i& (0+255),f,b
  1237  0013D0  2BEA               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
  1238  0013D2                     l2220:
  1239                           
  1240                           ; BSR set to: 0
  1241  0013D2  51E9               	movf	Lcd_Write_String@i& (0+255),w,b
  1242  0013D4  25E5               	addwf	Lcd_Write_String@a& (0+255),w,b
  1243  0013D6  6FE7               	movwf	??_Lcd_Write_String& (0+255),b
  1244  0013D8  51EA               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  1245  0013DA  21E6               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  1246  0013DC  6FE8               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  1247  0013DE  C0E7  FFF6         	movff	??_Lcd_Write_String,tblptrl
  1248  0013E2  C0E8  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  1249  0013E6  6AF8               	clrf	tblptru,c
  1250  0013E8  0E07               	movlw	(high __ramtop+-1)
  1251  0013EA  64F7               	cpfsgt	tblptrh,c
  1252  0013EC  D003               	bra	u1597
  1253  0013EE  0008               	tblrd		*
  1254  0013F0  50F5               	movf	tablat,w,c
  1255  0013F2  D005               	bra	u1590
  1256  0013F4                     u1597:
  1257  0013F4  CFF6 FFE1          	movff	tblptrl,fsr1l
  1258  0013F8  CFF7 FFE2          	movff	tblptrh,fsr1h
  1259  0013FC  50E7               	movf	indf1,w,c
  1260  0013FE                     u1590:
  1261  0013FE  0900               	iorlw	0
  1262  001400  A4D8               	btfss	status,2,c
  1263  001402  EF05  F00A         	goto	u1601
  1264  001406  EF07  F00A         	goto	u1600
  1265  00140A                     u1601:
  1266  00140A  EFCD  F009         	goto	l2216
  1267  00140E                     u1600:
  1268  00140E  0012               	return		;funcret
  1269  001410                     __end_of_Lcd_Write_String:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _Lcd_Write_Char *****************
  1273 ;; Defined at:
  1274 ;;		line 73 in file "./lcd.h"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  a               1    wreg     unsigned char 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  a               1   21[BANK0 ] unsigned char 
  1279 ;;  y               1   20[BANK0 ] unsigned char 
  1280 ;;  temp            1   19[BANK0 ] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0
  1291 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1293 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1294 ;;Total ram usage:        3 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 10
  1297 ;; This function calls:
  1298 ;;		_Lcd_Port
  1299 ;; This function is called by:
  1300 ;;		_Lcd_Write_String
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text7
  1305  00195E                     __ptext7:
  1306                           	callstack 0
  1307  00195E                     _Lcd_Write_Char:
  1308                           	callstack 19
  1309                           
  1310                           ;incstack = 0
  1311                           ;Lcd_Write_Char@a stored from wreg
  1312  00195E  0100               	movlb	0	; () banked
  1313  001960  6FE4               	movwf	Lcd_Write_Char@a& (0+255),b
  1314  001962                     
  1315                           ;./lcd.h: 74:     char temp, y;;./lcd.h: 75:     temp = a & 0x0F;
  1316  001962  0100               	movlb	0	; () banked
  1317  001964  51E4               	movf	Lcd_Write_Char@a& (0+255),w,b
  1318  001966  0B0F               	andlw	15
  1319  001968  6FE2               	movwf	Lcd_Write_Char@temp& (0+255),b
  1320                           
  1321                           ;./lcd.h: 76:     y = a & 0xF0;
  1322  00196A  51E4               	movf	Lcd_Write_Char@a& (0+255),w,b
  1323  00196C  0BF0               	andlw	240
  1324  00196E  6FE3               	movwf	Lcd_Write_Char@y& (0+255),b
  1325  001970                     
  1326                           ; BSR set to: 0
  1327                           ;./lcd.h: 77:     LATE0 = 1;
  1328  001970  808D               	bsf	3981,0,c	;volatile
  1329  001972                     
  1330                           ; BSR set to: 0
  1331                           ;./lcd.h: 78:     Lcd_Port(y >> 4);
  1332  001972  39E3               	swapf	Lcd_Write_Char@y& (0+255),w,b
  1333  001974  0B0F               	andlw	15
  1334  001976  EC8D  F00B         	call	_Lcd_Port
  1335  00197A                     
  1336                           ;./lcd.h: 79:     LATE1 = 1;
  1337  00197A  828D               	bsf	3981,1,c	;volatile
  1338  00197C                     
  1339                           ;./lcd.h: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1340  00197C  0E0D               	movlw	13
  1341  00197E                     u1657:
  1342  00197E  2EE8               	decfsz	wreg,f,c
  1343  001980  D7FE               	bra	u1657
  1344  001982  F000               	nop	
  1345  001984                     
  1346                           ;./lcd.h: 81:     LATE1 = 0;
  1347  001984  928D               	bcf	3981,1,c	;volatile
  1348  001986                     
  1349                           ;./lcd.h: 82:     Lcd_Port(temp);
  1350  001986  0100               	movlb	0	; () banked
  1351  001988  51E2               	movf	Lcd_Write_Char@temp& (0+255),w,b
  1352  00198A  EC8D  F00B         	call	_Lcd_Port
  1353  00198E                     
  1354                           ;./lcd.h: 83:     LATE1 = 1;
  1355  00198E  828D               	bsf	3981,1,c	;volatile
  1356  001990                     
  1357                           ;./lcd.h: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1358  001990  0E0D               	movlw	13
  1359  001992                     u1667:
  1360  001992  2EE8               	decfsz	wreg,f,c
  1361  001994  D7FE               	bra	u1667
  1362  001996  F000               	nop	
  1363  001998                     
  1364                           ;./lcd.h: 85:     LATE1 = 0;
  1365  001998  928D               	bcf	3981,1,c	;volatile
  1366  00199A  0012               	return		;funcret
  1367  00199C                     __end_of_Lcd_Write_Char:
  1368                           	callstack 0
  1369                           
  1370 ;; *************** function _Lcd_Set_Cursor *****************
  1371 ;; Defined at:
  1372 ;;		line 38 in file "./lcd.h"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  a               1    wreg     unsigned char 
  1375 ;;  b               1   21[BANK0 ] unsigned char 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  a               1   22[BANK0 ] unsigned char 
  1378 ;;  temp            1   25[BANK0 ] unsigned char 
  1379 ;;  y               1   24[BANK0 ] unsigned char 
  1380 ;;  z               1   23[BANK0 ] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1390 ;;      Params:         0       1       0       0       0       0       0       0       0
  1391 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1393 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1394 ;;Total ram usage:        5 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 11
  1397 ;; This function calls:
  1398 ;;		_Lcd_Cmd
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text8
  1405  001578                     __ptext8:
  1406                           	callstack 0
  1407  001578                     _Lcd_Set_Cursor:
  1408                           	callstack 19
  1409                           
  1410                           ;incstack = 0
  1411                           ;Lcd_Set_Cursor@a stored from wreg
  1412  001578  0100               	movlb	0	; () banked
  1413  00157A  6FE5               	movwf	Lcd_Set_Cursor@a& (0+255),b
  1414  00157C                     
  1415                           ;./lcd.h: 39:     char temp, z, y;;./lcd.h: 40:     if (a == 1) {
  1416  00157C  0100               	movlb	0	; () banked
  1417  00157E  05E5               	decf	Lcd_Set_Cursor@a& (0+255),w,b
  1418  001580  A4D8               	btfss	status,2,c
  1419  001582  EFC5  F00A         	goto	u1561
  1420  001586  EFC7  F00A         	goto	u1560
  1421  00158A                     u1561:
  1422  00158A  EFD9  F00A         	goto	l2178
  1423  00158E                     u1560:
  1424  00158E                     
  1425                           ; BSR set to: 0
  1426                           ;./lcd.h: 41:         temp = 0x80 + b - 1;
  1427  00158E  51E4               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  1428  001590  0F7F               	addlw	127
  1429  001592  6FE8               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  1430                           
  1431                           ;./lcd.h: 42:         z = temp >> 4;
  1432  001594  39E8               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  1433  001596  0B0F               	andlw	15
  1434  001598  6FE6               	movwf	Lcd_Set_Cursor@z& (0+255),b
  1435                           
  1436                           ;./lcd.h: 43:         y = temp & 0x0F;
  1437  00159A  51E8               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  1438  00159C  0B0F               	andlw	15
  1439  00159E  6FE7               	movwf	Lcd_Set_Cursor@y& (0+255),b
  1440  0015A0                     
  1441                           ; BSR set to: 0
  1442                           ;./lcd.h: 44:         Lcd_Cmd(z);
  1443  0015A0  51E6               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  1444  0015A2  EC06  F00D         	call	_Lcd_Cmd
  1445  0015A6                     
  1446                           ;./lcd.h: 45:         Lcd_Cmd(y);
  1447  0015A6  0100               	movlb	0	; () banked
  1448  0015A8  51E7               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  1449  0015AA  EC06  F00D         	call	_Lcd_Cmd
  1450                           
  1451                           ;./lcd.h: 46:     } else if (a == 2) {
  1452  0015AE  EFF2  F00A         	goto	l77
  1453  0015B2                     l2178:
  1454                           
  1455                           ; BSR set to: 0
  1456  0015B2  0E02               	movlw	2
  1457  0015B4  19E5               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  1458  0015B6  A4D8               	btfss	status,2,c
  1459  0015B8  EFE0  F00A         	goto	u1571
  1460  0015BC  EFE2  F00A         	goto	u1570
  1461  0015C0                     u1571:
  1462  0015C0  EFF2  F00A         	goto	l77
  1463  0015C4                     u1570:
  1464  0015C4                     
  1465                           ; BSR set to: 0
  1466                           ;./lcd.h: 47:         temp = 0xC0 + b - 1;
  1467  0015C4  51E4               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  1468  0015C6  0FBF               	addlw	191
  1469  0015C8  6FE8               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  1470                           
  1471                           ;./lcd.h: 48:         z = temp >> 4;
  1472  0015CA  39E8               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  1473  0015CC  0B0F               	andlw	15
  1474  0015CE  6FE6               	movwf	Lcd_Set_Cursor@z& (0+255),b
  1475                           
  1476                           ;./lcd.h: 49:         y = temp & 0x0F;
  1477  0015D0  51E8               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  1478  0015D2  0B0F               	andlw	15
  1479  0015D4  6FE7               	movwf	Lcd_Set_Cursor@y& (0+255),b
  1480  0015D6                     
  1481                           ; BSR set to: 0
  1482                           ;./lcd.h: 50:         Lcd_Cmd(z);
  1483  0015D6  51E6               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  1484  0015D8  EC06  F00D         	call	_Lcd_Cmd
  1485  0015DC                     
  1486                           ;./lcd.h: 51:         Lcd_Cmd(y);
  1487  0015DC  0100               	movlb	0	; () banked
  1488  0015DE  51E7               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  1489  0015E0  EC06  F00D         	call	_Lcd_Cmd
  1490  0015E4                     l77:
  1491  0015E4  0012               	return		;funcret
  1492  0015E6                     __end_of_Lcd_Set_Cursor:
  1493                           	callstack 0
  1494                           
  1495 ;; *************** function _Lcd_Init *****************
  1496 ;; Defined at:
  1497 ;;		line 55 in file "./lcd.h"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1513 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1514 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1515 ;;Total ram usage:        1 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 11
  1518 ;; This function calls:
  1519 ;;		_Lcd_Cmd
  1520 ;;		_Lcd_Port
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text9
  1527  00148E                     __ptext9:
  1528                           	callstack 0
  1529  00148E                     _Lcd_Init:
  1530                           	callstack 19
  1531  00148E                     
  1532                           ;./lcd.h: 56:     Lcd_Port(0x00);
  1533  00148E  0E00               	movlw	0
  1534  001490  EC8D  F00B         	call	_Lcd_Port
  1535  001494                     
  1536                           ;./lcd.h: 57:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1537  001494  0E1A               	movlw	26
  1538  001496  0100               	movlb	0	; () banked
  1539  001498  6FE4               	movwf	??_Lcd_Init& (0+255),b
  1540  00149A  0EF8               	movlw	248
  1541  00149C                     u1677:
  1542  00149C  2EE8               	decfsz	wreg,f,c
  1543  00149E  D7FE               	bra	u1677
  1544  0014A0  2FE4               	decfsz	??_Lcd_Init& (0+255),f,b
  1545  0014A2  D7FC               	bra	u1677
  1546  0014A4  F000               	nop	
  1547  0014A6                     
  1548                           ;./lcd.h: 58:     Lcd_Cmd(0x03);
  1549  0014A6  0E03               	movlw	3
  1550  0014A8  EC06  F00D         	call	_Lcd_Cmd
  1551  0014AC                     
  1552                           ;./lcd.h: 59:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1553  0014AC  0E07               	movlw	7
  1554  0014AE  0100               	movlb	0	; () banked
  1555  0014B0  6FE4               	movwf	??_Lcd_Init& (0+255),b
  1556  0014B2  0E7D               	movlw	125
  1557  0014B4                     u1687:
  1558  0014B4  2EE8               	decfsz	wreg,f,c
  1559  0014B6  D7FE               	bra	u1687
  1560  0014B8  2FE4               	decfsz	??_Lcd_Init& (0+255),f,b
  1561  0014BA  D7FC               	bra	u1687
  1562  0014BC                     
  1563                           ;./lcd.h: 60:     Lcd_Cmd(0x03);
  1564  0014BC  0E03               	movlw	3
  1565  0014BE  EC06  F00D         	call	_Lcd_Cmd
  1566  0014C2                     
  1567                           ;./lcd.h: 61:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1568  0014C2  0E0F               	movlw	15
  1569  0014C4  0100               	movlb	0	; () banked
  1570  0014C6  6FE4               	movwf	??_Lcd_Init& (0+255),b
  1571  0014C8  0E47               	movlw	71
  1572  0014CA                     u1697:
  1573  0014CA  2EE8               	decfsz	wreg,f,c
  1574  0014CC  D7FE               	bra	u1697
  1575  0014CE  2FE4               	decfsz	??_Lcd_Init& (0+255),f,b
  1576  0014D0  D7FC               	bra	u1697
  1577  0014D2  D000               	nop2	
  1578  0014D4                     
  1579                           ;./lcd.h: 62:     Lcd_Cmd(0x03);
  1580  0014D4  0E03               	movlw	3
  1581  0014D6  EC06  F00D         	call	_Lcd_Cmd
  1582  0014DA                     
  1583                           ;./lcd.h: 64:     Lcd_Cmd(0x02);
  1584  0014DA  0E02               	movlw	2
  1585  0014DC  EC06  F00D         	call	_Lcd_Cmd
  1586  0014E0                     
  1587                           ;./lcd.h: 65:     Lcd_Cmd(0x02);
  1588  0014E0  0E02               	movlw	2
  1589  0014E2  EC06  F00D         	call	_Lcd_Cmd
  1590  0014E6                     
  1591                           ;./lcd.h: 66:     Lcd_Cmd(0x08);
  1592  0014E6  0E08               	movlw	8
  1593  0014E8  EC06  F00D         	call	_Lcd_Cmd
  1594  0014EC                     
  1595                           ;./lcd.h: 67:     Lcd_Cmd(0x00);
  1596  0014EC  0E00               	movlw	0
  1597  0014EE  EC06  F00D         	call	_Lcd_Cmd
  1598  0014F2                     
  1599                           ;./lcd.h: 68:     Lcd_Cmd(0x0C);
  1600  0014F2  0E0C               	movlw	12
  1601  0014F4  EC06  F00D         	call	_Lcd_Cmd
  1602  0014F8                     
  1603                           ;./lcd.h: 69:     Lcd_Cmd(0x00);
  1604  0014F8  0E00               	movlw	0
  1605  0014FA  EC06  F00D         	call	_Lcd_Cmd
  1606  0014FE                     
  1607                           ;./lcd.h: 70:     Lcd_Cmd(0x06);
  1608  0014FE  0E06               	movlw	6
  1609  001500  EC06  F00D         	call	_Lcd_Cmd
  1610  001504  0012               	return		;funcret
  1611  001506                     __end_of_Lcd_Init:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function _Lcd_Clear *****************
  1615 ;; Defined at:
  1616 ;;		line 33 in file "./lcd.h"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1633 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1634 ;;Total ram usage:        0 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 11
  1637 ;; This function calls:
  1638 ;;		_Lcd_Cmd
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text10
  1645  001ADC                     __ptext10:
  1646                           	callstack 0
  1647  001ADC                     _Lcd_Clear:
  1648                           	callstack 19
  1649  001ADC                     
  1650                           ;./lcd.h: 34:     Lcd_Cmd(0);
  1651  001ADC  0E00               	movlw	0
  1652  001ADE  EC06  F00D         	call	_Lcd_Cmd
  1653                           
  1654                           ;./lcd.h: 35:     Lcd_Cmd(1);
  1655  001AE2  0E01               	movlw	1
  1656  001AE4  EC06  F00D         	call	_Lcd_Cmd
  1657  001AE8  0012               	return		;funcret
  1658  001AEA                     __end_of_Lcd_Clear:
  1659                           	callstack 0
  1660                           
  1661 ;; *************** function _Lcd_Cmd *****************
  1662 ;; Defined at:
  1663 ;;		line 25 in file "./lcd.h"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  a               1    wreg     unsigned char 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  a               1   20[BANK0 ] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1677 ;;      Params:         0       0       0       0       0       0       0       0       0
  1678 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1679 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1680 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1681 ;;Total ram usage:        2 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; Hardware stack levels required when called: 10
  1684 ;; This function calls:
  1685 ;;		_Lcd_Port
  1686 ;; This function is called by:
  1687 ;;		_Lcd_Clear
  1688 ;;		_Lcd_Set_Cursor
  1689 ;;		_Lcd_Init
  1690 ;;		_Lcd_Shift_Right
  1691 ;;		_Lcd_Shift_Left
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text11
  1696  001A0C                     __ptext11:
  1697                           	callstack 0
  1698  001A0C                     _Lcd_Cmd:
  1699                           	callstack 19
  1700                           
  1701                           ;incstack = 0
  1702                           ;Lcd_Cmd@a stored from wreg
  1703  001A0C  0100               	movlb	0	; () banked
  1704  001A0E  6FE3               	movwf	Lcd_Cmd@a& (0+255),b
  1705  001A10                     
  1706                           ;./lcd.h: 26:     LATE0 = 0;
  1707  001A10  908D               	bcf	3981,0,c	;volatile
  1708  001A12                     
  1709                           ;./lcd.h: 27:     Lcd_Port(a);
  1710  001A12  0100               	movlb	0	; () banked
  1711  001A14  51E3               	movf	Lcd_Cmd@a& (0+255),w,b
  1712  001A16  EC8D  F00B         	call	_Lcd_Port
  1713  001A1A                     
  1714                           ;./lcd.h: 28:     LATE1 = 1;
  1715  001A1A  828D               	bsf	3981,1,c	;volatile
  1716  001A1C                     
  1717                           ;./lcd.h: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1718  001A1C  0E06               	movlw	6
  1719  001A1E  0100               	movlb	0	; () banked
  1720  001A20  6FE2               	movwf	??_Lcd_Cmd& (0+255),b
  1721  001A22  0E30               	movlw	48
  1722  001A24                     u1707:
  1723  001A24  2EE8               	decfsz	wreg,f,c
  1724  001A26  D7FE               	bra	u1707
  1725  001A28  2FE2               	decfsz	??_Lcd_Cmd& (0+255),f,b
  1726  001A2A  D7FC               	bra	u1707
  1727  001A2C  F000               	nop	
  1728  001A2E                     
  1729                           ;./lcd.h: 30:     LATE1 = 0;
  1730  001A2E  928D               	bcf	3981,1,c	;volatile
  1731  001A30  0012               	return		;funcret
  1732  001A32                     __end_of_Lcd_Cmd:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _Lcd_Port *****************
  1736 ;; Defined at:
  1737 ;;		line 3 in file "./lcd.h"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  a               1    wreg     unsigned char 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  a               1   18[BANK0 ] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0
  1752 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1754 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1755 ;;Total ram usage:        1 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 9
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_Lcd_Cmd
  1762 ;;		_Lcd_Init
  1763 ;;		_Lcd_Write_Char
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text12
  1768  00171A                     __ptext12:
  1769                           	callstack 0
  1770  00171A                     _Lcd_Port:
  1771                           	callstack 19
  1772                           
  1773                           ;incstack = 0
  1774                           ;Lcd_Port@a stored from wreg
  1775  00171A  0100               	movlb	0	; () banked
  1776  00171C  6FE1               	movwf	Lcd_Port@a& (0+255),b
  1777  00171E                     
  1778                           ;./lcd.h: 4:     if (a & 1)
  1779  00171E  0100               	movlb	0	; () banked
  1780  001720  A1E1               	btfss	Lcd_Port@a& (0+255),0,b
  1781  001722  EF95  F00B         	goto	u1491
  1782  001726  EF97  F00B         	goto	u1490
  1783  00172A                     u1491:
  1784  00172A  EF9A  F00B         	goto	l57
  1785  00172E                     u1490:
  1786  00172E                     
  1787                           ; BSR set to: 0
  1788                           ;./lcd.h: 5:         LATD4 = 1;
  1789  00172E  888C               	bsf	3980,4,c	;volatile
  1790  001730  EF9B  F00B         	goto	l2112
  1791  001734                     l57:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;./lcd.h: 7:         LATD4 = 0;
  1795  001734  988C               	bcf	3980,4,c	;volatile
  1796  001736                     l2112:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;./lcd.h: 9:     if (a & 2)
  1800  001736  A3E1               	btfss	Lcd_Port@a& (0+255),1,b
  1801  001738  EFA0  F00B         	goto	u1501
  1802  00173C  EFA2  F00B         	goto	u1500
  1803  001740                     u1501:
  1804  001740  EFA5  F00B         	goto	l59
  1805  001744                     u1500:
  1806  001744                     
  1807                           ; BSR set to: 0
  1808                           ;./lcd.h: 10:         LATD5 = 1;
  1809  001744  8A8C               	bsf	3980,5,c	;volatile
  1810  001746  EFA6  F00B         	goto	l2116
  1811  00174A                     l59:
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;./lcd.h: 12:         LATD5 = 0;
  1815  00174A  9A8C               	bcf	3980,5,c	;volatile
  1816  00174C                     l2116:
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;./lcd.h: 14:     if (a & 4)
  1820  00174C  A5E1               	btfss	Lcd_Port@a& (0+255),2,b
  1821  00174E  EFAB  F00B         	goto	u1511
  1822  001752  EFAD  F00B         	goto	u1510
  1823  001756                     u1511:
  1824  001756  EFB0  F00B         	goto	l61
  1825  00175A                     u1510:
  1826  00175A                     
  1827                           ; BSR set to: 0
  1828                           ;./lcd.h: 15:         LATD6 = 1;
  1829  00175A  8C8C               	bsf	3980,6,c	;volatile
  1830  00175C  EFB1  F00B         	goto	l2120
  1831  001760                     l61:
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;./lcd.h: 17:         LATD6 = 0;
  1835  001760  9C8C               	bcf	3980,6,c	;volatile
  1836  001762                     l2120:
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;./lcd.h: 19:     if (a & 8)
  1840  001762  A7E1               	btfss	Lcd_Port@a& (0+255),3,b
  1841  001764  EFB6  F00B         	goto	u1521
  1842  001768  EFB8  F00B         	goto	u1520
  1843  00176C                     u1521:
  1844  00176C  EFBB  F00B         	goto	l63
  1845  001770                     u1520:
  1846  001770                     
  1847                           ; BSR set to: 0
  1848                           ;./lcd.h: 20:         LATD7 = 1;
  1849  001770  8E8C               	bsf	3980,7,c	;volatile
  1850  001772  EFBC  F00B         	goto	l65
  1851  001776                     l63:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;./lcd.h: 22:         LATD7 = 0;
  1855  001776  9E8C               	bcf	3980,7,c	;volatile
  1856  001778                     l65:
  1857                           
  1858                           ; BSR set to: 0
  1859  001778  0012               	return		;funcret
  1860  00177A                     __end_of_Lcd_Port:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _RS232 *****************
  1864 ;; Defined at:
  1865 ;;		line 64 in file "main.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1881 ;;      Temps:          0      10       0       0       0       0       0       0       0
  1882 ;;      Totals:         0      10       0       0       0       0       0       0       0
  1883 ;;Total ram usage:       10 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 8
  1886 ;; This function calls:
  1887 ;;		___wmul
  1888 ;;		_sprintf
  1889 ;;		i2_Lcd_Set_Cursor
  1890 ;;		i2_Lcd_Write_String
  1891 ;;		i2_serial_sendString
  1892 ;; This function is called by:
  1893 ;;		Interrupt level 2
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	intcode
  1898  000008                     __pintcode:
  1899                           	callstack 0
  1900  000008                     _RS232:
  1901                           	callstack 19
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;incstack = 0
  1905  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1906  00000A  ED2E  F007         	call	int_func,f	;refresh shadow registers
  1907                           
  1908                           	psect	intcode_body
  1909  000E5C                     __pintcode_body:
  1910                           	callstack 19
  1911  000E5C                     int_func:
  1912                           	callstack 19
  1913  000E5C  0006               	pop		; remove dummy address from shadow register refresh
  1914  000E5E  CFE1 F0D7          	movff	fsr1l,??_RS232
  1915  000E62  CFE2 F0D8          	movff	fsr1h,??_RS232+1
  1916  000E66  CFD9 F0D9          	movff	fsr2l,??_RS232+2
  1917  000E6A  CFDA F0DA          	movff	fsr2h,??_RS232+3
  1918  000E6E  CFF3 F0DB          	movff	prodl,??_RS232+4
  1919  000E72  CFF4 F0DC          	movff	prodh,??_RS232+5
  1920  000E76  CFF6 F0DD          	movff	tblptrl,??_RS232+6
  1921  000E7A  CFF7 F0DE          	movff	tblptrh,??_RS232+7
  1922  000E7E  CFF8 F0DF          	movff	tblptru,??_RS232+8
  1923  000E82  CFF5 F0E0          	movff	tablat,??_RS232+9
  1924  000E86                     
  1925                           ;main.c: 65:     if (RCIF) {
  1926  000E86  AA9E               	btfss	3998,5,c	;volatile
  1927  000E88  EF48  F007         	goto	i2u146_41
  1928  000E8C  EF4A  F007         	goto	i2u146_40
  1929  000E90                     i2u146_41:
  1930  000E90  EFB9  F007         	goto	i2l133
  1931  000E94                     i2u146_40:
  1932  000E94                     
  1933                           ;main.c: 66:         if (RCREG == '\r') {
  1934  000E94  0E0D               	movlw	13
  1935  000E96  18AE               	xorwf	174,w,c	;volatile
  1936  000E98  A4D8               	btfss	status,2,c
  1937  000E9A  EF51  F007         	goto	i2u147_41
  1938  000E9E  EF53  F007         	goto	i2u147_40
  1939  000EA2                     i2u147_41:
  1940  000EA2  EF87  F007         	goto	i2l2046
  1941  000EA6                     i2u147_40:
  1942  000EA6                     
  1943                           ;main.c: 67:             sprintf(linha2, "       ans=%5u", x);
  1944  000EA6  0EAF               	movlw	low _linha2
  1945  000EA8  6E58               	movwf	sprintf@s^0,c
  1946  000EAA  0E00               	movlw	high _linha2
  1947  000EAC  6E59               	movwf	(sprintf@s+1)^0,c
  1948  000EAE  0E21               	movlw	low STR_1
  1949  000EB0  6E5A               	movwf	sprintf@fmt^0,c
  1950  000EB2  0E08               	movlw	high STR_1
  1951  000EB4  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1952  000EB6  C06E  F05C         	movff	_x,?_sprintf+4
  1953  000EBA  C06F  F05D         	movff	_x+1,?_sprintf+5
  1954  000EBE  EC14  F00C         	call	_sprintf	;wreg free
  1955  000EC2                     
  1956                           ;main.c: 68:             Lcd_Set_Cursor(2, 1);
  1957  000EC2  0E01               	movlw	1
  1958  000EC4  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  1959  000EC6  0E02               	movlw	2
  1960  000EC8  EC29  F00B         	call	i2_Lcd_Set_Cursor
  1961  000ECC                     
  1962                           ;main.c: 69:             Lcd_Write_String(linha2);
  1963  000ECC  0EAF               	movlw	low _linha2
  1964  000ECE  6E05               	movwf	i2Lcd_Write_String@a^0,c
  1965  000ED0  0E00               	movlw	high _linha2
  1966  000ED2  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  1967  000ED4  EC08  F00A         	call	i2_Lcd_Write_String	;wreg free
  1968  000ED8                     
  1969                           ;main.c: 71:             sprintf(tx_string, "%u\r", x);
  1970  000ED8  0E91               	movlw	low _tx_string
  1971  000EDA  6E58               	movwf	sprintf@s^0,c
  1972  000EDC  0E00               	movlw	high _tx_string
  1973  000EDE  6E59               	movwf	(sprintf@s+1)^0,c
  1974  000EE0  0E36               	movlw	low STR_2
  1975  000EE2  6E5A               	movwf	sprintf@fmt^0,c
  1976  000EE4  0E08               	movlw	high STR_2
  1977  000EE6  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1978  000EE8  C06E  F05C         	movff	_x,?_sprintf+4
  1979  000EEC  C06F  F05D         	movff	_x+1,?_sprintf+5
  1980  000EF0  EC14  F00C         	call	_sprintf	;wreg free
  1981  000EF4                     
  1982                           ;main.c: 72:             serial_sendString(tx_string);
  1983  000EF4  0E91               	movlw	low _tx_string
  1984  000EF6  6E05               	movwf	i2serial_sendString@phrase^0,c
  1985  000EF8  0E00               	movlw	high _tx_string
  1986  000EFA  6E06               	movwf	(i2serial_sendString@phrase+1)^0,c
  1987  000EFC  ECF3  F00A         	call	i2_serial_sendString	;wreg free
  1988  000F00                     
  1989                           ;main.c: 73:             x = 0;
  1990  000F00  0E00               	movlw	0
  1991  000F02  0100               	movlb	0	; () banked
  1992  000F04  6F6F               	movwf	(_x+1)& (0+255),b
  1993  000F06  0E00               	movlw	0
  1994  000F08  6F6E               	movwf	_x& (0+255),b
  1995                           
  1996                           ;main.c: 74:         } else {
  1997  000F0A  EFB8  F007         	goto	i2l2056
  1998  000F0E                     i2l2046:
  1999                           
  2000                           ;main.c: 75:             digito = RCREG - 0x30;
  2001  000F0E  0ED0               	movlw	208
  2002  000F10  24AE               	addwf	174,w,c	;volatile
  2003  000F12  0100               	movlb	0	; () banked
  2004  000F14  6F68               	movwf	_digito& (0+255),b
  2005  000F16  6B69               	clrf	(_digito+1)& (0+255),b
  2006  000F18  0EFF               	movlw	255
  2007  000F1A  2369               	addwfc	(_digito+1)& (0+255),f,b
  2008  000F1C                     
  2009                           ; BSR set to: 0
  2010                           ;main.c: 76:             x = x * 10 + digito;
  2011  000F1C  C06E  F001         	movff	_x,___wmul@multiplier
  2012  000F20  C06F  F002         	movff	_x+1,___wmul@multiplier+1
  2013  000F24  0E00               	movlw	0
  2014  000F26  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2015  000F28  0E0A               	movlw	10
  2016  000F2A  6E03               	movwf	___wmul@multiplicand^0,c
  2017  000F2C  EC19  F00D         	call	___wmul	;wreg free
  2018  000F30  0100               	movlb	0	; () banked
  2019  000F32  5168               	movf	_digito& (0+255),w,b
  2020  000F34  2401               	addwf	?___wmul^0,w,c
  2021  000F36  6F6E               	movwf	_x& (0+255),b
  2022  000F38  5169               	movf	(_digito+1)& (0+255),w,b
  2023  000F3A  2002               	addwfc	(?___wmul+1)^0,w,c
  2024  000F3C  6F6F               	movwf	(_x+1)& (0+255),b
  2025  000F3E                     
  2026                           ; BSR set to: 0
  2027                           ;main.c: 77:             sprintf(linha1, "%5u           ", x);
  2028  000F3E  0EBF               	movlw	low _linha1
  2029  000F40  6E58               	movwf	sprintf@s^0,c
  2030  000F42  0E00               	movlw	high _linha1
  2031  000F44  6E59               	movwf	(sprintf@s+1)^0,c
  2032  000F46  0E12               	movlw	low STR_3
  2033  000F48  6E5A               	movwf	sprintf@fmt^0,c
  2034  000F4A  0E08               	movlw	high STR_3
  2035  000F4C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2036  000F4E  C06E  F05C         	movff	_x,?_sprintf+4
  2037  000F52  C06F  F05D         	movff	_x+1,?_sprintf+5
  2038  000F56  EC14  F00C         	call	_sprintf	;wreg free
  2039  000F5A                     
  2040                           ;main.c: 78:             Lcd_Set_Cursor(1, 1);
  2041  000F5A  0E01               	movlw	1
  2042  000F5C  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  2043  000F5E  0E01               	movlw	1
  2044  000F60  EC29  F00B         	call	i2_Lcd_Set_Cursor
  2045  000F64                     
  2046                           ;main.c: 79:             Lcd_Write_String(linha1);
  2047  000F64  0EBF               	movlw	low _linha1
  2048  000F66  6E05               	movwf	i2Lcd_Write_String@a^0,c
  2049  000F68  0E00               	movlw	high _linha1
  2050  000F6A  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  2051  000F6C  EC08  F00A         	call	i2_Lcd_Write_String	;wreg free
  2052  000F70                     i2l2056:
  2053                           
  2054                           ;main.c: 81:         RCIF = 0;
  2055  000F70  9A9E               	bcf	3998,5,c	;volatile
  2056  000F72                     i2l133:
  2057  000F72  C0E0  FFF5         	movff	??_RS232+9,tablat
  2058  000F76  C0DF  FFF8         	movff	??_RS232+8,tblptru
  2059  000F7A  C0DE  FFF7         	movff	??_RS232+7,tblptrh
  2060  000F7E  C0DD  FFF6         	movff	??_RS232+6,tblptrl
  2061  000F82  C0DC  FFF4         	movff	??_RS232+5,prodh
  2062  000F86  C0DB  FFF3         	movff	??_RS232+4,prodl
  2063  000F8A  C0DA  FFDA         	movff	??_RS232+3,fsr2h
  2064  000F8E  C0D9  FFD9         	movff	??_RS232+2,fsr2l
  2065  000F92  C0D8  FFE2         	movff	??_RS232+1,fsr1h
  2066  000F96  C0D7  FFE1         	movff	??_RS232,fsr1l
  2067  000F9A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2068  000F9C  0011               	retfie		f
  2069  000F9E                     __end_of_RS232:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function i2_serial_sendString *****************
  2073 ;; Defined at:
  2074 ;;		line 55 in file "main.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  phrase          2    4[COMRAM] PTR const unsigned char 
  2077 ;;		 -> STR_6(6), tx_string(30), 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  index           2   10[COMRAM] unsigned int 
  2080 ;;  size            2    8[COMRAM] unsigned int 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2090 ;;      Params:         2       0       0       0       0       0       0       0       0
  2091 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2092 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2093 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2094 ;;Total ram usage:        8 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 1
  2097 ;; This function calls:
  2098 ;;		i2_serial_send
  2099 ;;		i2_strlen
  2100 ;; This function is called by:
  2101 ;;		_RS232
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text14
  2106  0015E6                     __ptext14:
  2107                           	callstack 0
  2108  0015E6                     i2_serial_sendString:
  2109                           	callstack 25
  2110  0015E6                     
  2111                           ;main.c: 56:     unsigned int index = 0;
  2112  0015E6  0E00               	movlw	0
  2113  0015E8  6E0C               	movwf	(i2serial_sendString@index+1)^0,c
  2114  0015EA  0E00               	movlw	0
  2115  0015EC  6E0B               	movwf	i2serial_sendString@index^0,c
  2116  0015EE                     
  2117                           ;main.c: 57:     unsigned int size = strlen(phrase);
  2118  0015EE  C005  F001         	movff	i2serial_sendString@phrase,i2strlen@s
  2119  0015F2  C006  F002         	movff	i2serial_sendString@phrase+1,i2strlen@s+1
  2120  0015F6  EC66  F00C         	call	i2_strlen	;wreg free
  2121  0015FA  C001  F009         	movff	?i2_strlen,i2serial_sendString@size
  2122  0015FE  C002  F00A         	movff	?i2_strlen+1,i2serial_sendString@size+1
  2123                           
  2124                           ;main.c: 58:     while (index < size) {
  2125  001602  EF1D  F00B         	goto	i2l2024
  2126  001606                     i2l2020:
  2127                           
  2128                           ;main.c: 59:         serial_send(phrase[index]);
  2129  001606  500B               	movf	i2serial_sendString@index^0,w,c
  2130  001608  2405               	addwf	i2serial_sendString@phrase^0,w,c
  2131  00160A  6E07               	movwf	??i2_serial_sendString^0,c
  2132  00160C  500C               	movf	(i2serial_sendString@index+1)^0,w,c
  2133  00160E  2006               	addwfc	(i2serial_sendString@phrase+1)^0,w,c
  2134  001610  6E08               	movwf	(??i2_serial_sendString+1)^0,c
  2135  001612  C007  FFF6         	movff	??i2_serial_sendString,tblptrl
  2136  001616  C008  FFF7         	movff	??i2_serial_sendString+1,tblptrh
  2137  00161A  6AF8               	clrf	tblptru,c
  2138  00161C  0E07               	movlw	(high __ramtop+-1)
  2139  00161E  64F7               	cpfsgt	tblptrh,c
  2140  001620  D003               	bra	i2u144_47
  2141  001622  0008               	tblrd		*
  2142  001624  50F5               	movf	tablat,w,c
  2143  001626  D005               	bra	i2u144_40
  2144  001628                     i2u144_47:
  2145  001628  CFF6 FFE1          	movff	tblptrl,fsr1l
  2146  00162C  CFF7 FFE2          	movff	tblptrh,fsr1h
  2147  001630  50E7               	movf	indf1,w,c
  2148  001632                     i2u144_40:
  2149  001632  EC58  F00D         	call	i2_serial_send
  2150  001636                     
  2151                           ;main.c: 60:         index++;
  2152  001636  4A0B               	infsnz	i2serial_sendString@index^0,f,c
  2153  001638  2A0C               	incf	(i2serial_sendString@index+1)^0,f,c
  2154  00163A                     i2l2024:
  2155                           
  2156                           ;main.c: 58:     while (index < size) {
  2157  00163A  5009               	movf	i2serial_sendString@size^0,w,c
  2158  00163C  5C0B               	subwf	i2serial_sendString@index^0,w,c
  2159  00163E  500A               	movf	(i2serial_sendString@size+1)^0,w,c
  2160  001640  580C               	subwfb	(i2serial_sendString@index+1)^0,w,c
  2161  001642  A0D8               	btfss	status,0,c
  2162  001644  EF26  F00B         	goto	i2u145_41
  2163  001648  EF28  F00B         	goto	i2u145_40
  2164  00164C                     i2u145_41:
  2165  00164C  EF03  F00B         	goto	i2l2020
  2166  001650                     i2u145_40:
  2167  001650  0012               	return		;funcret
  2168  001652                     __end_ofi2_serial_sendString:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function i2_serial_send *****************
  2172 ;; Defined at:
  2173 ;;		line 49 in file "main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  character       1    wreg     unsigned char 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  character       1    0[COMRAM] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0
  2188 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2190 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2191 ;;Total ram usage:        1 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		i2_serial_sendString
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text15
  2201  001AB0                     __ptext15:
  2202                           	callstack 0
  2203  001AB0                     i2_serial_send:
  2204                           	callstack 25
  2205                           
  2206                           ;incstack = 0
  2207                           ;i2serial_send@character stored from wreg
  2208  001AB0  6E01               	movwf	i2serial_send@character^0,c
  2209  001AB2                     
  2210                           ;main.c: 50:     TXIF = 0;
  2211  001AB2  989E               	bcf	3998,4,c	;volatile
  2212  001AB4                     
  2213                           ;main.c: 51:     TXREG = character;
  2214  001AB4  C001  FFAD         	movff	i2serial_send@character,4013	;volatile
  2215  001AB8                     i2l116:
  2216  001AB8  A89E               	btfss	3998,4,c	;volatile
  2217  001ABA  EF61  F00D         	goto	i2u131_41
  2218  001ABE  EF63  F00D         	goto	i2u131_40
  2219  001AC2                     i2u131_41:
  2220  001AC2  EF5C  F00D         	goto	i2l116
  2221  001AC6                     i2u131_40:
  2222  001AC6  0012               	return		;funcret
  2223  001AC8                     __end_ofi2_serial_send:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function i2_Lcd_Write_String *****************
  2227 ;; Defined at:
  2228 ;;		line 88 in file "./lcd.h"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  a               2    4[COMRAM] PTR unsigned char 
  2231 ;;		 -> STR_5(6), STR_4(17), linha1(16), linha2(16), 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  i               2    8[COMRAM] int 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2243 ;;      Params:         2       0       0       0       0       0       0       0       0
  2244 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2245 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2246 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2247 ;;Total ram usage:        6 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 2
  2250 ;; This function calls:
  2251 ;;		i2_Lcd_Write_Char
  2252 ;; This function is called by:
  2253 ;;		_RS232
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text16
  2258  001410                     __ptext16:
  2259                           	callstack 0
  2260  001410                     i2_Lcd_Write_String:
  2261                           	callstack 24
  2262  001410                     
  2263                           ;./lcd.h: 89:     int i;;./lcd.h: 90:     for (i = 0; a[i] != '\0'; i++)
  2264  001410  0E00               	movlw	0
  2265  001412  6E0A               	movwf	(i2Lcd_Write_String@i+1)^0,c
  2266  001414  0E00               	movlw	0
  2267  001416  6E09               	movwf	i2Lcd_Write_String@i^0,c
  2268  001418  EF28  F00A         	goto	i2l2014
  2269  00141C                     i2l2010:
  2270                           
  2271                           ;./lcd.h: 91:         Lcd_Write_Char(a[i]);
  2272  00141C  5009               	movf	i2Lcd_Write_String@i^0,w,c
  2273  00141E  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  2274  001420  6E07               	movwf	??i2_Lcd_Write_String^0,c
  2275  001422  500A               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  2276  001424  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  2277  001426  6E08               	movwf	(??i2_Lcd_Write_String+1)^0,c
  2278  001428  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  2279  00142C  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  2280  001430  6AF8               	clrf	tblptru,c
  2281  001432  0E07               	movlw	(high __ramtop+-1)
  2282  001434  64F7               	cpfsgt	tblptrh,c
  2283  001436  D003               	bra	i2u141_47
  2284  001438  0008               	tblrd		*
  2285  00143A  50F5               	movf	tablat,w,c
  2286  00143C  D005               	bra	i2u141_40
  2287  00143E                     i2u141_47:
  2288  00143E  CFF6 FFE1          	movff	tblptrl,fsr1l
  2289  001442  CFF7 FFE2          	movff	tblptrh,fsr1h
  2290  001446  50E7               	movf	indf1,w,c
  2291  001448                     i2u141_40:
  2292  001448  ECCE  F00C         	call	i2_Lcd_Write_Char
  2293  00144C  4A09               	infsnz	i2Lcd_Write_String@i^0,f,c
  2294  00144E  2A0A               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  2295  001450                     i2l2014:
  2296  001450  5009               	movf	i2Lcd_Write_String@i^0,w,c
  2297  001452  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  2298  001454  6E07               	movwf	??i2_Lcd_Write_String^0,c
  2299  001456  500A               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  2300  001458  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  2301  00145A  6E08               	movwf	(??i2_Lcd_Write_String+1)^0,c
  2302  00145C  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  2303  001460  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  2304  001464  6AF8               	clrf	tblptru,c
  2305  001466  0E07               	movlw	(high __ramtop+-1)
  2306  001468  64F7               	cpfsgt	tblptrh,c
  2307  00146A  D003               	bra	i2u142_47
  2308  00146C  0008               	tblrd		*
  2309  00146E  50F5               	movf	tablat,w,c
  2310  001470  D005               	bra	i2u142_40
  2311  001472                     i2u142_47:
  2312  001472  CFF6 FFE1          	movff	tblptrl,fsr1l
  2313  001476  CFF7 FFE2          	movff	tblptrh,fsr1h
  2314  00147A  50E7               	movf	indf1,w,c
  2315  00147C                     i2u142_40:
  2316  00147C  0900               	iorlw	0
  2317  00147E  A4D8               	btfss	status,2,c
  2318  001480  EF44  F00A         	goto	i2u143_41
  2319  001484  EF46  F00A         	goto	i2u143_40
  2320  001488                     i2u143_41:
  2321  001488  EF0E  F00A         	goto	i2l2010
  2322  00148C                     i2u143_40:
  2323  00148C  0012               	return		;funcret
  2324  00148E                     __end_ofi2_Lcd_Write_String:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function i2_Lcd_Write_Char *****************
  2328 ;; Defined at:
  2329 ;;		line 73 in file "./lcd.h"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  a               1    wreg     unsigned char 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  a               1    3[COMRAM] unsigned char 
  2334 ;;  y               1    2[COMRAM] unsigned char 
  2335 ;;  temp            1    1[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0
  2346 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2348 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2349 ;;Total ram usage:        3 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 1
  2352 ;; This function calls:
  2353 ;;		i2_Lcd_Port
  2354 ;; This function is called by:
  2355 ;;		i2_Lcd_Write_String
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text17
  2360  00199C                     __ptext17:
  2361                           	callstack 0
  2362  00199C                     i2_Lcd_Write_Char:
  2363                           	callstack 24
  2364                           
  2365                           ;incstack = 0
  2366                           ;i2Lcd_Write_Char@a stored from wreg
  2367  00199C  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  2368  00199E                     
  2369                           ;./lcd.h: 74:     char temp, y;;./lcd.h: 75:     temp = a & 0x0F;
  2370  00199E  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  2371  0019A0  0B0F               	andlw	15
  2372  0019A2  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  2373                           
  2374                           ;./lcd.h: 76:     y = a & 0xF0;
  2375  0019A4  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  2376  0019A6  0BF0               	andlw	240
  2377  0019A8  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  2378  0019AA                     
  2379                           ;./lcd.h: 77:     LATE0 = 1;
  2380  0019AA  808D               	bsf	3981,0,c	;volatile
  2381  0019AC                     
  2382                           ;./lcd.h: 78:     Lcd_Port(y >> 4);
  2383  0019AC  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  2384  0019AE  0B0F               	andlw	15
  2385  0019B0  ECBD  F00B         	call	i2_Lcd_Port
  2386  0019B4                     
  2387                           ;./lcd.h: 79:     LATE1 = 1;
  2388  0019B4  828D               	bsf	3981,1,c	;volatile
  2389  0019B6                     
  2390                           ;./lcd.h: 80:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2391  0019B6  0E0D               	movlw	13
  2392  0019B8                     i2u171_47:
  2393  0019B8  2EE8               	decfsz	wreg,f,c
  2394  0019BA  D7FE               	bra	i2u171_47
  2395  0019BC  F000               	nop	
  2396  0019BE                     
  2397                           ;./lcd.h: 81:     LATE1 = 0;
  2398  0019BE  928D               	bcf	3981,1,c	;volatile
  2399  0019C0                     
  2400                           ;./lcd.h: 82:     Lcd_Port(temp);
  2401  0019C0  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  2402  0019C2  ECBD  F00B         	call	i2_Lcd_Port
  2403  0019C6                     
  2404                           ;./lcd.h: 83:     LATE1 = 1;
  2405  0019C6  828D               	bsf	3981,1,c	;volatile
  2406  0019C8                     
  2407                           ;./lcd.h: 84:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2408  0019C8  0E0D               	movlw	13
  2409  0019CA                     i2u172_47:
  2410  0019CA  2EE8               	decfsz	wreg,f,c
  2411  0019CC  D7FE               	bra	i2u172_47
  2412  0019CE  F000               	nop	
  2413  0019D0                     
  2414                           ;./lcd.h: 85:     LATE1 = 0;
  2415  0019D0  928D               	bcf	3981,1,c	;volatile
  2416  0019D2  0012               	return		;funcret
  2417  0019D4                     __end_ofi2_Lcd_Write_Char:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function i2_Lcd_Set_Cursor *****************
  2421 ;; Defined at:
  2422 ;;		line 38 in file "./lcd.h"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  a               1    wreg     unsigned char 
  2425 ;;  b               1    3[COMRAM] unsigned char 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  a               1    4[COMRAM] unsigned char 
  2428 ;;  temp            1    7[COMRAM] unsigned char 
  2429 ;;  y               1    6[COMRAM] unsigned char 
  2430 ;;  z               1    5[COMRAM] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2440 ;;      Params:         1       0       0       0       0       0       0       0       0
  2441 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2443 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2444 ;;Total ram usage:        5 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 2
  2447 ;; This function calls:
  2448 ;;		i2_Lcd_Cmd
  2449 ;; This function is called by:
  2450 ;;		_RS232
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text18
  2455  001652                     __ptext18:
  2456                           	callstack 0
  2457  001652                     i2_Lcd_Set_Cursor:
  2458                           	callstack 24
  2459                           
  2460                           ;incstack = 0
  2461                           ;i2Lcd_Set_Cursor@a stored from wreg
  2462  001652  6E05               	movwf	i2Lcd_Set_Cursor@a^0,c
  2463  001654                     
  2464                           ;./lcd.h: 39:     char temp, z, y;;./lcd.h: 40:     if (a == 1) {
  2465  001654  0405               	decf	i2Lcd_Set_Cursor@a^0,w,c
  2466  001656  A4D8               	btfss	status,2,c
  2467  001658  EF30  F00B         	goto	i2u139_41
  2468  00165C  EF32  F00B         	goto	i2u139_40
  2469  001660                     i2u139_41:
  2470  001660  EF43  F00B         	goto	i2l2000
  2471  001664                     i2u139_40:
  2472  001664                     
  2473                           ;./lcd.h: 41:         temp = 0x80 + b - 1;
  2474  001664  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  2475  001666  0F7F               	addlw	127
  2476  001668  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  2477                           
  2478                           ;./lcd.h: 42:         z = temp >> 4;
  2479  00166A  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  2480  00166C  0B0F               	andlw	15
  2481  00166E  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  2482                           
  2483                           ;./lcd.h: 43:         y = temp & 0x0F;
  2484  001670  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  2485  001672  0B0F               	andlw	15
  2486  001674  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  2487  001676                     
  2488                           ;./lcd.h: 44:         Lcd_Cmd(z);
  2489  001676  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  2490  001678  EC2C  F00D         	call	i2_Lcd_Cmd
  2491  00167C                     
  2492                           ;./lcd.h: 45:         Lcd_Cmd(y);
  2493  00167C  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  2494  00167E  EC2C  F00D         	call	i2_Lcd_Cmd
  2495                           
  2496                           ;./lcd.h: 46:     } else if (a == 2) {
  2497  001682  EF5B  F00B         	goto	i2l77
  2498  001686                     i2l2000:
  2499  001686  0E02               	movlw	2
  2500  001688  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  2501  00168A  A4D8               	btfss	status,2,c
  2502  00168C  EF4A  F00B         	goto	i2u140_41
  2503  001690  EF4C  F00B         	goto	i2u140_40
  2504  001694                     i2u140_41:
  2505  001694  EF5B  F00B         	goto	i2l77
  2506  001698                     i2u140_40:
  2507  001698                     
  2508                           ;./lcd.h: 47:         temp = 0xC0 + b - 1;
  2509  001698  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  2510  00169A  0FBF               	addlw	191
  2511  00169C  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  2512                           
  2513                           ;./lcd.h: 48:         z = temp >> 4;
  2514  00169E  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  2515  0016A0  0B0F               	andlw	15
  2516  0016A2  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  2517                           
  2518                           ;./lcd.h: 49:         y = temp & 0x0F;
  2519  0016A4  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  2520  0016A6  0B0F               	andlw	15
  2521  0016A8  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  2522  0016AA                     
  2523                           ;./lcd.h: 50:         Lcd_Cmd(z);
  2524  0016AA  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  2525  0016AC  EC2C  F00D         	call	i2_Lcd_Cmd
  2526  0016B0                     
  2527                           ;./lcd.h: 51:         Lcd_Cmd(y);
  2528  0016B0  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  2529  0016B2  EC2C  F00D         	call	i2_Lcd_Cmd
  2530  0016B6                     i2l77:
  2531  0016B6  0012               	return		;funcret
  2532  0016B8                     __end_ofi2_Lcd_Set_Cursor:
  2533                           	callstack 0
  2534                           
  2535 ;; *************** function i2_Lcd_Cmd *****************
  2536 ;; Defined at:
  2537 ;;		line 25 in file "./lcd.h"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  a               1    wreg     unsigned char 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  a               1    2[COMRAM] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2551 ;;      Params:         0       0       0       0       0       0       0       0       0
  2552 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2553 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2554 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2555 ;;Total ram usage:        2 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 1
  2558 ;; This function calls:
  2559 ;;		i2_Lcd_Port
  2560 ;; This function is called by:
  2561 ;;		i2_Lcd_Set_Cursor
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text19
  2566  001A58                     __ptext19:
  2567                           	callstack 0
  2568  001A58                     i2_Lcd_Cmd:
  2569                           	callstack 24
  2570                           
  2571                           ;incstack = 0
  2572                           ;i2Lcd_Cmd@a stored from wreg
  2573  001A58  6E03               	movwf	i2Lcd_Cmd@a^0,c
  2574  001A5A                     
  2575                           ;./lcd.h: 26:     LATE0 = 0;
  2576  001A5A  908D               	bcf	3981,0,c	;volatile
  2577  001A5C                     
  2578                           ;./lcd.h: 27:     Lcd_Port(a);
  2579  001A5C  5003               	movf	i2Lcd_Cmd@a^0,w,c
  2580  001A5E  ECBD  F00B         	call	i2_Lcd_Port
  2581  001A62                     
  2582                           ;./lcd.h: 28:     LATE1 = 1;
  2583  001A62  828D               	bsf	3981,1,c	;volatile
  2584  001A64                     
  2585                           ;./lcd.h: 29:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2586  001A64  0E06               	movlw	6
  2587  001A66  6E02               	movwf	??i2_Lcd_Cmd^0,c
  2588  001A68  0E30               	movlw	48
  2589  001A6A                     i2u173_47:
  2590  001A6A  2EE8               	decfsz	wreg,f,c
  2591  001A6C  D7FE               	bra	i2u173_47
  2592  001A6E  2E02               	decfsz	??i2_Lcd_Cmd^0,f,c
  2593  001A70  D7FC               	bra	i2u173_47
  2594  001A72  D000               	nop2	
  2595  001A74                     
  2596                           ;./lcd.h: 30:     LATE1 = 0;
  2597  001A74  928D               	bcf	3981,1,c	;volatile
  2598  001A76  0012               	return		;funcret
  2599  001A78                     __end_ofi2_Lcd_Cmd:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function i2_Lcd_Port *****************
  2603 ;; Defined at:
  2604 ;;		line 3 in file "./lcd.h"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  a               1    wreg     unsigned char 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  a               1    0[COMRAM] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0
  2619 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2621 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2622 ;;Total ram usage:        1 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		i2_Lcd_Cmd
  2628 ;;		i2_Lcd_Write_Char
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text20
  2633  00177A                     __ptext20:
  2634                           	callstack 0
  2635  00177A                     i2_Lcd_Port:
  2636                           	callstack 24
  2637                           
  2638                           ;incstack = 0
  2639                           ;i2Lcd_Port@a stored from wreg
  2640  00177A  6E01               	movwf	i2Lcd_Port@a^0,c
  2641  00177C                     
  2642                           ;./lcd.h: 4:     if (a & 1)
  2643  00177C  A001               	btfss	i2Lcd_Port@a^0,0,c
  2644  00177E  EFC3  F00B         	goto	i2u123_41
  2645  001782  EFC5  F00B         	goto	i2u123_40
  2646  001786                     i2u123_41:
  2647  001786  EFC8  F00B         	goto	i2l57
  2648  00178A                     i2u123_40:
  2649  00178A                     
  2650                           ;./lcd.h: 5:         LATD4 = 1;
  2651  00178A  888C               	bsf	3980,4,c	;volatile
  2652  00178C  EFC9  F00B         	goto	i2l1812
  2653  001790                     i2l57:
  2654                           
  2655                           ;./lcd.h: 7:         LATD4 = 0;
  2656  001790  988C               	bcf	3980,4,c	;volatile
  2657  001792                     i2l1812:
  2658                           
  2659                           ;./lcd.h: 9:     if (a & 2)
  2660  001792  A201               	btfss	i2Lcd_Port@a^0,1,c
  2661  001794  EFCE  F00B         	goto	i2u124_41
  2662  001798  EFD0  F00B         	goto	i2u124_40
  2663  00179C                     i2u124_41:
  2664  00179C  EFD3  F00B         	goto	i2l59
  2665  0017A0                     i2u124_40:
  2666  0017A0                     
  2667                           ;./lcd.h: 10:         LATD5 = 1;
  2668  0017A0  8A8C               	bsf	3980,5,c	;volatile
  2669  0017A2  EFD4  F00B         	goto	i2l1816
  2670  0017A6                     i2l59:
  2671                           
  2672                           ;./lcd.h: 12:         LATD5 = 0;
  2673  0017A6  9A8C               	bcf	3980,5,c	;volatile
  2674  0017A8                     i2l1816:
  2675                           
  2676                           ;./lcd.h: 14:     if (a & 4)
  2677  0017A8  A401               	btfss	i2Lcd_Port@a^0,2,c
  2678  0017AA  EFD9  F00B         	goto	i2u125_41
  2679  0017AE  EFDB  F00B         	goto	i2u125_40
  2680  0017B2                     i2u125_41:
  2681  0017B2  EFDE  F00B         	goto	i2l61
  2682  0017B6                     i2u125_40:
  2683  0017B6                     
  2684                           ;./lcd.h: 15:         LATD6 = 1;
  2685  0017B6  8C8C               	bsf	3980,6,c	;volatile
  2686  0017B8  EFDF  F00B         	goto	i2l1820
  2687  0017BC                     i2l61:
  2688                           
  2689                           ;./lcd.h: 17:         LATD6 = 0;
  2690  0017BC  9C8C               	bcf	3980,6,c	;volatile
  2691  0017BE                     i2l1820:
  2692                           
  2693                           ;./lcd.h: 19:     if (a & 8)
  2694  0017BE  A601               	btfss	i2Lcd_Port@a^0,3,c
  2695  0017C0  EFE4  F00B         	goto	i2u126_41
  2696  0017C4  EFE6  F00B         	goto	i2u126_40
  2697  0017C8                     i2u126_41:
  2698  0017C8  EFE9  F00B         	goto	i2l63
  2699  0017CC                     i2u126_40:
  2700  0017CC                     
  2701                           ;./lcd.h: 20:         LATD7 = 1;
  2702  0017CC  8E8C               	bsf	3980,7,c	;volatile
  2703  0017CE  EFEA  F00B         	goto	i2l65
  2704  0017D2                     i2l63:
  2705                           
  2706                           ;./lcd.h: 22:         LATD7 = 0;
  2707  0017D2  9E8C               	bcf	3980,7,c	;volatile
  2708  0017D4                     i2l65:
  2709  0017D4  0012               	return		;funcret
  2710  0017D6                     __end_ofi2_Lcd_Port:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _sprintf *****************
  2714 ;; Defined at:
  2715 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  s               2   87[COMRAM] PTR unsigned char 
  2718 ;;		 -> linha1(16), tx_string(30), linha2(16), 
  2719 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2720 ;;		 -> STR_3(15), STR_2(4), STR_1(15), 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  f               6    2[BANK0 ] struct _IO_FILE
  2723 ;;  ap              2    0[BANK0 ] PTR void [1]
  2724 ;;		 -> ?_sprintf(2), 
  2725 ;;  ret             2    0        int 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  2   87[COMRAM] int 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2735 ;;      Params:         6       0       0       0       0       0       0       0       0
  2736 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2738 ;;      Totals:         6       8       0       0       0       0       0       0       0
  2739 ;;Total ram usage:       14 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 7
  2742 ;; This function calls:
  2743 ;;		_vfprintf
  2744 ;; This function is called by:
  2745 ;;		_RS232
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text21
  2750  001828                     __ptext21:
  2751                           	callstack 0
  2752  001828                     _sprintf:
  2753                           	callstack 19
  2754  001828  0E5C               	movlw	low (?_sprintf+4)
  2755  00182A  0100               	movlb	0	; () banked
  2756  00182C  6FCF               	movwf	sprintf@ap& (0+255),b
  2757  00182E  0E00               	movlw	high (?_sprintf+4)
  2758  001830  6FD0               	movwf	(sprintf@ap+1)& (0+255),b
  2759  001832  C058  F0D1         	movff	sprintf@s,sprintf@f
  2760  001836  C059  F0D2         	movff	sprintf@s+1,sprintf@f+1
  2761  00183A                     
  2762                           ; BSR set to: 0
  2763  00183A  0E00               	movlw	0
  2764  00183C  6FD4               	movwf	(sprintf@f+3)& (0+255),b
  2765  00183E  0E00               	movlw	0
  2766  001840  6FD3               	movwf	(sprintf@f+2)& (0+255),b
  2767  001842                     
  2768                           ; BSR set to: 0
  2769  001842  0E00               	movlw	0
  2770  001844  6FD6               	movwf	(sprintf@f+5)& (0+255),b
  2771  001846  0E00               	movlw	0
  2772  001848  6FD5               	movwf	(sprintf@f+4)& (0+255),b
  2773  00184A                     
  2774                           ; BSR set to: 0
  2775  00184A  0ED1               	movlw	low sprintf@f
  2776  00184C  6E50               	movwf	vfprintf@fp^0,c
  2777  00184E  0E00               	movlw	high sprintf@f
  2778  001850  6E51               	movwf	(vfprintf@fp+1)^0,c
  2779  001852  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  2780  001856  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2781  00185A  0ECF               	movlw	low sprintf@ap
  2782  00185C  6E54               	movwf	vfprintf@ap^0,c
  2783  00185E  0E00               	movlw	high sprintf@ap
  2784  001860  6E55               	movwf	(vfprintf@ap+1)^0,c
  2785  001862  EC5C  F00B         	call	_vfprintf	;wreg free
  2786  001866  0100               	movlb	0	; () banked
  2787  001868  51D3               	movf	(sprintf@f+2)& (0+255),w,b
  2788  00186A  2458               	addwf	sprintf@s^0,w,c
  2789  00186C  6ED9               	movwf	fsr2l,c
  2790  00186E  51D4               	movf	(sprintf@f+3)& (0+255),w,b
  2791  001870  2059               	addwfc	(sprintf@s+1)^0,w,c
  2792  001872  6EDA               	movwf	fsr2h,c
  2793  001874  0E00               	movlw	0
  2794  001876  6EDF               	movwf	indf2,c
  2795  001878                     
  2796                           ; BSR set to: 0
  2797  001878  0012               	return		;funcret
  2798  00187A                     __end_of_sprintf:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function _vfprintf *****************
  2802 ;; Defined at:
  2803 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2806 ;;		 -> sprintf@f(6), 
  2807 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2808 ;;		 -> STR_3(15), STR_2(4), STR_1(15), 
  2809 ;;  ap              2   83[COMRAM] PTR PTR void 
  2810 ;;		 -> sprintf@ap(2), 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2813 ;;		 -> STR_3(15), STR_2(4), STR_1(15), 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  2   79[COMRAM] int 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2823 ;;      Params:         6       0       0       0       0       0       0       0       0
  2824 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2826 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2827 ;;Total ram usage:        8 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 6
  2830 ;; This function calls:
  2831 ;;		_vfpfcnvrt
  2832 ;; This function is called by:
  2833 ;;		_sprintf
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text22
  2838  0016B8                     __ptext22:
  2839                           	callstack 0
  2840  0016B8                     _vfprintf:
  2841                           	callstack 19
  2842  0016B8                     
  2843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2844  0016B8  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2845  0016BC  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2846  0016C0                     
  2847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2848  0016C0  0E00               	movlw	0
  2849  0016C2  0100               	movlb	0	; () banked
  2850  0016C4  6F61               	movwf	(_nout+1)& (0+255),b
  2851  0016C6  0E00               	movlw	0
  2852  0016C8  6F60               	movwf	_nout& (0+255),b
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2855  0016CA  EF7A  F00B         	goto	i2l1874
  2856  0016CE                     i2l1872:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2860  0016CE  C050  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2861  0016D2  C051  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2862  0016D6  0E56               	movlw	low vfprintf@cfmt
  2863  0016D8  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  2864  0016DA  0E00               	movlw	high vfprintf@cfmt
  2865  0016DC  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2866  0016DE  C054  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  2867  0016E2  C055  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2868  0016E6  EC1E  F004         	call	_vfpfcnvrt	;wreg free
  2869  0016EA  503C               	movf	?_vfpfcnvrt^0,w,c
  2870  0016EC  0100               	movlb	0	; () banked
  2871  0016EE  2760               	addwf	_nout& (0+255),f,b
  2872  0016F0  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
  2873  0016F2  2361               	addwfc	(_nout+1)& (0+255),f,b
  2874  0016F4                     i2l1874:
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2878  0016F4  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2879  0016F8  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2880  0016FC                     	if	0	;tblptru may be non-zero
  2881  0016FC                     	endif
  2882  0016FC                     	if	0	;tblptru may be non-zero
  2883  0016FC                     	endif
  2884  0016FC  0008               	tblrd		*
  2885  0016FE  50F5               	movf	tablat,w,c
  2886  001700  0900               	iorlw	0
  2887  001702  A4D8               	btfss	status,2,c
  2888  001704  EF86  F00B         	goto	i2u130_41
  2889  001708  EF88  F00B         	goto	i2u130_40
  2890  00170C                     i2u130_41:
  2891  00170C  EF67  F00B         	goto	i2l1872
  2892  001710                     i2u130_40:
  2893  001710                     
  2894                           ; BSR set to: 0
  2895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2896  001710  C060  F050         	movff	_nout,?_vfprintf
  2897  001714  C061  F051         	movff	_nout+1,?_vfprintf+1
  2898  001718                     
  2899                           ; BSR set to: 0
  2900  001718  0012               	return		;funcret
  2901  00171A                     __end_of_vfprintf:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _vfpfcnvrt *****************
  2905 ;; Defined at:
  2906 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  2909 ;;		 -> sprintf@f(6), 
  2910 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  2911 ;;		 -> vfprintf@cfmt(2), 
  2912 ;;  ap              2   63[COMRAM] PTR PTR void 
  2913 ;;		 -> sprintf@ap(2), 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  llu             8   69[COMRAM] unsigned long long 
  2916 ;;  ll              8    0        long long 
  2917 ;;  f               4    0        long long 
  2918 ;;  vp              3    0        PTR void 
  2919 ;;  ct              3    0        unsigned char [3]
  2920 ;;  cp              3    0        PTR unsigned char 
  2921 ;;  i               2    0        int 
  2922 ;;  done            2    0        int 
  2923 ;;  c               1    0        unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  2   59[COMRAM] int 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2933 ;;      Params:         6       0       0       0       0       0       0       0       0
  2934 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2935 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2936 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2937 ;;Total ram usage:       20 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 5
  2940 ;; This function calls:
  2941 ;;		_atoi
  2942 ;;		_fputc
  2943 ;;		_isdigit
  2944 ;;		_utoa
  2945 ;; This function is called by:
  2946 ;;		_vfprintf
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text23
  2951  00083C                     __ptext23:
  2952                           	callstack 0
  2953  00083C                     _vfpfcnvrt:
  2954                           	callstack 19
  2955  00083C                     
  2956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2957  00083C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2958  000840  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2959  000844  CFDE FFF6          	movff	postinc2,tblptrl
  2960  000848  CFDD FFF7          	movff	postdec2,tblptrh
  2961  00084C                     	if	0	;tblptru may be non-zero
  2962  00084C                     	endif
  2963  00084C                     	if	0	;tblptru may be non-zero
  2964  00084C                     	endif
  2965  00084C  0008               	tblrd		*
  2966  00084E  50F5               	movf	tablat,w,c
  2967  000850  0A25               	xorlw	37
  2968  000852  A4D8               	btfss	status,2,c
  2969  000854  EF2E  F004         	goto	i2u115_41
  2970  000858  EF30  F004         	goto	i2u115_40
  2971  00085C                     i2u115_41:
  2972  00085C  EF49  F005         	goto	i2l1800
  2973  000860                     i2u115_40:
  2974  000860                     
  2975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2976  000860  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2977  000864  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2978  000868  2ADE               	incf	postinc2,f,c
  2979  00086A  0E00               	movlw	0
  2980  00086C  22DD               	addwfc	postdec2,f,c
  2981  00086E                     
  2982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2983  00086E  0E00               	movlw	0
  2984  000870  0100               	movlb	0	; () banked
  2985  000872  6F63               	movwf	(_width+1)& (0+255),b
  2986  000874  0E00               	movlw	0
  2987  000876  6F62               	movwf	_width& (0+255),b
  2988  000878  C062  F066         	movff	_width,_flags
  2989  00087C  C063  F067         	movff	_width+1,_flags+1
  2990  000880                     
  2991                           ; BSR set to: 0
  2992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2993  000880  6964               	setf	_prec& (0+255),b
  2994  000882  6965               	setf	(_prec+1)& (0+255),b
  2995  000884                     
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2998  000884  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2999  000888  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3000  00088C  CFDE FFF6          	movff	postinc2,tblptrl
  3001  000890  CFDD FFF7          	movff	postdec2,tblptrh
  3002  000894                     	if	0	;tblptru may be non-zero
  3003  000894                     	endif
  3004  000894                     	if	0	;tblptru may be non-zero
  3005  000894                     	endif
  3006  000894  0008               	tblrd		*
  3007  000896  50F5               	movf	tablat,w,c
  3008  000898  0A2A               	xorlw	42
  3009  00089A  A4D8               	btfss	status,2,c
  3010  00089C  EF52  F004         	goto	i2u116_41
  3011  0008A0  EF54  F004         	goto	i2u116_40
  3012  0008A4                     i2u116_41:
  3013  0008A4  EF7D  F004         	goto	i2l1766
  3014  0008A8                     i2u116_40:
  3015  0008A8                     
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  3018  0008A8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3019  0008AC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3020  0008B0  2ADE               	incf	postinc2,f,c
  3021  0008B2  0E00               	movlw	0
  3022  0008B4  22DD               	addwfc	postdec2,f,c
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3025  0008B6  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3026  0008BA  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3027  0008BE  CFDF F042          	movff	indf2,??_vfpfcnvrt
  3028  0008C2  0E02               	movlw	2
  3029  0008C4  26DE               	addwf	postinc2,f,c
  3030  0008C6  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  3031  0008CA  0E00               	movlw	0
  3032  0008CC  22DD               	addwfc	postdec2,f,c
  3033  0008CE  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3034  0008D2  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3035  0008D6  CFDE F062          	movff	postinc2,_width
  3036  0008DA  CFDD F063          	movff	postdec2,_width+1
  3037  0008DE                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  3040  0008DE  BF63               	btfsc	(_width+1)& (0+255),7,b
  3041  0008E0  EF76  F004         	goto	i2u117_40
  3042  0008E4  EF74  F004         	goto	i2u117_41
  3043  0008E8                     i2u117_41:
  3044  0008E8  EFC0  F004         	goto	i2l1776
  3045  0008EC                     i2u117_40:
  3046  0008EC                     
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  3049  0008EC  8166               	bsf	_flags& (0+255),0,b
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  3052  0008EE  6D62               	negf	_width& (0+255),b
  3053  0008F0  1F63               	comf	(_width+1)& (0+255),f,b
  3054  0008F2  B0D8               	btfsc	status,0,c
  3055  0008F4  2B63               	incf	(_width+1)& (0+255),f,b
  3056  0008F6  EFC0  F004         	goto	i2l1776
  3057  0008FA                     i2l1766:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  3061  0008FA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3062  0008FE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3063  000902  CFDE F008          	movff	postinc2,atoi@s
  3064  000906  CFDD F009          	movff	postdec2,atoi@s+1
  3065  00090A  EC66  F006         	call	_atoi	;wreg free
  3066  00090E  C008  F062         	movff	?_atoi,_width
  3067  000912  C009  F063         	movff	?_atoi+1,_width+1
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3070  000916  EF94  F004         	goto	i2l1770
  3071  00091A                     i2l1768:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  3074  00091A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3075  00091E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3076  000922  2ADE               	incf	postinc2,f,c
  3077  000924  0E00               	movlw	0
  3078  000926  22DD               	addwfc	postdec2,f,c
  3079  000928                     i2l1770:
  3080  000928  0ED0               	movlw	208
  3081  00092A  6E42               	movwf	??_vfpfcnvrt^0,c
  3082  00092C  0EFF               	movlw	255
  3083  00092E  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  3084  000930  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3085  000934  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3086  000938  CFDE FFF6          	movff	postinc2,tblptrl
  3087  00093C  CFDD FFF7          	movff	postdec2,tblptrh
  3088  000940                     	if	0	;tblptru may be non-zero
  3089  000940                     	endif
  3090  000940                     	if	0	;tblptru may be non-zero
  3091  000940                     	endif
  3092  000940  0008               	tblrd		*
  3093  000942  50F5               	movf	tablat,w,c
  3094  000944  6E44               	movwf	(??_vfpfcnvrt+2)^0,c
  3095  000946  6A45               	clrf	(??_vfpfcnvrt+3)^0,c
  3096  000948  5042               	movf	??_vfpfcnvrt^0,w,c
  3097  00094A  2644               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3098  00094C  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  3099  00094E  2245               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3100  000950  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  3101  000952  E10A               	bnz	i2u118_40
  3102  000954  0E0A               	movlw	10
  3103  000956  5C44               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3104  000958  A0D8               	btfss	status,0,c
  3105  00095A  EFB1  F004         	goto	i2u118_41
  3106  00095E  EFB4  F004         	goto	i2u118_40
  3107  000962                     i2u118_41:
  3108  000962  0E01               	movlw	1
  3109  000964  EFB5  F004         	goto	i2u119_40
  3110  000968                     i2u118_40:
  3111  000968  0E00               	movlw	0
  3112  00096A                     i2u119_40:
  3113  00096A  6E4E               	movwf	_vfpfcnvrt$691^0,c
  3114  00096C  6A4F               	clrf	(_vfpfcnvrt$691+1)^0,c
  3115  00096E  504E               	movf	_vfpfcnvrt$691^0,w,c
  3116  000970  104F               	iorwf	(_vfpfcnvrt$691+1)^0,w,c
  3117  000972  A4D8               	btfss	status,2,c
  3118  000974  EFBE  F004         	goto	i2u120_41
  3119  000978  EFC0  F004         	goto	i2u120_40
  3120  00097C                     i2u120_41:
  3121  00097C  EF8D  F004         	goto	i2l1768
  3122  000980                     i2u120_40:
  3123  000980                     i2l1776:
  3124                           
  3125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3126  000980  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3127  000984  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3128  000988  CFDE FFF6          	movff	postinc2,tblptrl
  3129  00098C  CFDD FFF7          	movff	postdec2,tblptrh
  3130  000990                     	if	0	;tblptru may be non-zero
  3131  000990                     	endif
  3132  000990                     	if	0	;tblptru may be non-zero
  3133  000990                     	endif
  3134  000990  0008               	tblrd		*
  3135  000992  50F5               	movf	tablat,w,c
  3136  000994  0A75               	xorlw	117
  3137  000996  A4D8               	btfss	status,2,c
  3138  000998  EFD0  F004         	goto	i2u121_41
  3139  00099C  EFD2  F004         	goto	i2u121_40
  3140  0009A0                     i2u121_41:
  3141  0009A0  EF13  F005         	goto	i2l1784
  3142  0009A4                     i2u121_40:
  3143  0009A4                     
  3144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3145  0009A4  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3146  0009A8  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3147  0009AC  2ADE               	incf	postinc2,f,c
  3148  0009AE  0E00               	movlw	0
  3149  0009B0  22DD               	addwfc	postdec2,f,c
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3152  0009B2  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3153  0009B6  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3154  0009BA  CFDF F042          	movff	indf2,??_vfpfcnvrt
  3155  0009BE  0E02               	movlw	2
  3156  0009C0  26DE               	addwf	postinc2,f,c
  3157  0009C2  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  3158  0009C6  0E00               	movlw	0
  3159  0009C8  22DD               	addwfc	postdec2,f,c
  3160  0009CA  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3161  0009CE  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3162  0009D2  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  3163  0009D6  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  3164  0009DA  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3165  0009DE  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3166  0009E2  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  3167  0009E4  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  3168  0009E6  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  3169  0009E8  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  3170  0009EA  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  3171  0009EC  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  3172  0009EE                     
  3173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  3174  0009EE  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3175  0009F2  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3176  0009F6  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3177  0009FA  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3178  0009FE  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3179  000A02  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3180  000A06  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3181  000A0A  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3182  000A0E  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3183  000A12  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3184  000A16  EC65  F005         	call	_utoa	;wreg free
  3185  000A1A  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  3186  000A1E  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  3187  000A22  EF64  F005         	goto	i2l893
  3188  000A26                     i2l1784:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3191  000A26  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3192  000A2A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3193  000A2E  CFDE FFF6          	movff	postinc2,tblptrl
  3194  000A32  CFDD FFF7          	movff	postdec2,tblptrh
  3195  000A36                     	if	0	;tblptru may be non-zero
  3196  000A36                     	endif
  3197  000A36                     	if	0	;tblptru may be non-zero
  3198  000A36                     	endif
  3199  000A36  0008               	tblrd		*
  3200  000A38  50F5               	movf	tablat,w,c
  3201  000A3A  0A25               	xorlw	37
  3202  000A3C  A4D8               	btfss	status,2,c
  3203  000A3E  EF23  F005         	goto	i2u122_41
  3204  000A42  EF25  F005         	goto	i2u122_40
  3205  000A46                     i2u122_41:
  3206  000A46  EF3C  F005         	goto	i2l1794
  3207  000A4A                     i2u122_40:
  3208  000A4A                     
  3209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3210  000A4A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3211  000A4E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3212  000A52  2ADE               	incf	postinc2,f,c
  3213  000A54  0E00               	movlw	0
  3214  000A56  22DD               	addwfc	postdec2,f,c
  3215  000A58                     
  3216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3217  000A58  0E00               	movlw	0
  3218  000A5A  6E02               	movwf	(fputc@c+1)^0,c
  3219  000A5C  0E25               	movlw	37
  3220  000A5E  6E01               	movwf	fputc@c^0,c
  3221  000A60  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3222  000A64  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3223  000A68  ECAF  F008         	call	_fputc	;wreg free
  3224  000A6C                     i2l1790:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3227  000A6C  0E00               	movlw	0
  3228  000A6E  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  3229  000A70  0E01               	movlw	1
  3230  000A72  6E3C               	movwf	?_vfpfcnvrt^0,c
  3231  000A74  EF64  F005         	goto	i2l893
  3232  000A78                     i2l1794:
  3233                           
  3234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3235  000A78  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3236  000A7C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3237  000A80  2ADE               	incf	postinc2,f,c
  3238  000A82  0E00               	movlw	0
  3239  000A84  22DD               	addwfc	postdec2,f,c
  3240  000A86                     
  3241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3242  000A86  0E00               	movlw	0
  3243  000A88  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  3244  000A8A  0E00               	movlw	0
  3245  000A8C  6E3C               	movwf	?_vfpfcnvrt^0,c
  3246  000A8E  EF64  F005         	goto	i2l893
  3247  000A92                     i2l1800:
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3250  000A92  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3251  000A96  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3252  000A9A  CFDE FFF6          	movff	postinc2,tblptrl
  3253  000A9E  CFDD FFF7          	movff	postdec2,tblptrh
  3254  000AA2                     	if	0	;tblptru may be non-zero
  3255  000AA2                     	endif
  3256  000AA2                     	if	0	;tblptru may be non-zero
  3257  000AA2                     	endif
  3258  000AA2  0008               	tblrd		*
  3259  000AA4  50F5               	movf	tablat,w,c
  3260  000AA6  6E01               	movwf	fputc@c^0,c
  3261  000AA8  6A02               	clrf	(fputc@c+1)^0,c
  3262  000AAA  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3263  000AAE  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3264  000AB2  ECAF  F008         	call	_fputc	;wreg free
  3265  000AB6                     
  3266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3267  000AB6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3268  000ABA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3269  000ABE  2ADE               	incf	postinc2,f,c
  3270  000AC0  0E00               	movlw	0
  3271  000AC2  22DD               	addwfc	postdec2,f,c
  3272  000AC4  EF36  F005         	goto	i2l1790
  3273  000AC8                     i2l893:
  3274  000AC8  0012               	return		;funcret
  3275  000ACA                     __end_of_vfpfcnvrt:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _utoa *****************
  3279 ;; Defined at:
  3280 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3283 ;;		 -> sprintf@f(6), 
  3284 ;;  d               8   29[COMRAM] unsigned long long 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  n               8   49[COMRAM] unsigned long long 
  3287 ;;  i               2   57[COMRAM] int 
  3288 ;;  w               2   47[COMRAM] int 
  3289 ;;  p               2   45[COMRAM] int 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  2   27[COMRAM] int 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3299 ;;      Params:        10       0       0       0       0       0       0       0       0
  3300 ;;      Locals:        14       0       0       0       0       0       0       0       0
  3301 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3302 ;;      Totals:        32       0       0       0       0       0       0       0       0
  3303 ;;Total ram usage:       32 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: 4
  3306 ;; This function calls:
  3307 ;;		___lodiv
  3308 ;;		___lomod
  3309 ;;		_pad
  3310 ;; This function is called by:
  3311 ;;		_vfpfcnvrt
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text24
  3316  000ACA                     __ptext24:
  3317                           	callstack 0
  3318  000ACA                     _utoa:
  3319                           	callstack 19
  3320  000ACA                     
  3321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  3322  000ACA  0100               	movlb	0	; () banked
  3323  000ACC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3324  000ACE  EF6B  F005         	goto	i2u97_41
  3325  000AD2  EF6D  F005         	goto	i2u97_40
  3326  000AD6                     i2u97_41:
  3327  000AD6  EF6E  F005         	goto	i2l1660
  3328  000ADA                     i2u97_40:
  3329  000ADA                     
  3330                           ; BSR set to: 0
  3331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  3332  000ADA  9366               	bcf	_flags& (0+255),1,b
  3333  000ADC                     i2l1660:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  3337  000ADC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3338  000ADE  EF7B  F005         	goto	i2u98_40
  3339  000AE2  5165               	movf	(_prec+1)& (0+255),w,b
  3340  000AE4  E106               	bnz	i2u98_41
  3341  000AE6  0564               	decf	_prec& (0+255),w,b
  3342  000AE8  B0D8               	btfsc	status,0,c
  3343  000AEA  EF79  F005         	goto	i2u98_41
  3344  000AEE  EF7B  F005         	goto	i2u98_40
  3345  000AF2                     i2u98_41:
  3346  000AF2  EF81  F005         	goto	i2l868
  3347  000AF6                     i2u98_40:
  3348  000AF6                     
  3349                           ; BSR set to: 0
  3350  000AF6  0E00               	movlw	0
  3351  000AF8  6E2F               	movwf	(utoa@p+1)^0,c
  3352  000AFA  0E01               	movlw	1
  3353  000AFC  6E2E               	movwf	utoa@p^0,c
  3354  000AFE  EF85  F005         	goto	i2l870
  3355  000B02                     i2l868:
  3356                           
  3357                           ; BSR set to: 0
  3358  000B02  C064  F02E         	movff	_prec,utoa@p
  3359  000B06  C065  F02F         	movff	_prec+1,utoa@p+1
  3360  000B0A                     i2l870:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  3364  000B0A  C062  F030         	movff	_width,utoa@w
  3365  000B0E  C063  F031         	movff	_width+1,utoa@w+1
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  3368  000B12  C01E  F032         	movff	utoa@d,utoa@n
  3369  000B16  C01F  F033         	movff	utoa@d+1,utoa@n+1
  3370  000B1A  C020  F034         	movff	utoa@d+2,utoa@n+2
  3371  000B1E  C021  F035         	movff	utoa@d+3,utoa@n+3
  3372  000B22  C022  F036         	movff	utoa@d+4,utoa@n+4
  3373  000B26  C023  F037         	movff	utoa@d+5,utoa@n+5
  3374  000B2A  C024  F038         	movff	utoa@d+6,utoa@n+6
  3375  000B2E  C025  F039         	movff	utoa@d+7,utoa@n+7
  3376  000B32                     
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  3379  000B32  0E00               	movlw	0
  3380  000B34  6E3B               	movwf	(utoa@i+1)^0,c
  3381  000B36  0E1F               	movlw	31
  3382  000B38  6E3A               	movwf	utoa@i^0,c
  3383  000B3A                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  3386  000B3A  0E00               	movlw	0
  3387  000B3C  6F90               	movwf	(_dbuf+31)& (0+255),b
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3390  000B3E  EF17  F006         	goto	i2l1678
  3391  000B42                     i2l1668:
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  3394  000B42  063A               	decf	utoa@i^0,f,c
  3395  000B44  A0D8               	btfss	status,0,c
  3396  000B46  063B               	decf	(utoa@i+1)^0,f,c
  3397  000B48                     
  3398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  3399  000B48  0E71               	movlw	low _dbuf
  3400  000B4A  243A               	addwf	utoa@i^0,w,c
  3401  000B4C  6ED9               	movwf	fsr2l,c
  3402  000B4E  0E00               	movlw	high _dbuf
  3403  000B50  203B               	addwfc	(utoa@i+1)^0,w,c
  3404  000B52  6EDA               	movwf	fsr2h,c
  3405  000B54  C032  F001         	movff	utoa@n,___lomod@dividend
  3406  000B58  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  3407  000B5C  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  3408  000B60  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  3409  000B64  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  3410  000B68  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  3411  000B6C  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  3412  000B70  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  3413  000B74  0E0A               	movlw	10
  3414  000B76  6E09               	movwf	___lomod@divisor^0,c
  3415  000B78  0E00               	movlw	0
  3416  000B7A  6E0A               	movwf	(___lomod@divisor+1)^0,c
  3417  000B7C  0E00               	movlw	0
  3418  000B7E  6E0B               	movwf	(___lomod@divisor+2)^0,c
  3419  000B80  0E00               	movlw	0
  3420  000B82  6E0C               	movwf	(___lomod@divisor+3)^0,c
  3421  000B84  0E00               	movlw	0
  3422  000B86  6E0D               	movwf	(___lomod@divisor+4)^0,c
  3423  000B88  0E00               	movlw	0
  3424  000B8A  6E0E               	movwf	(___lomod@divisor+5)^0,c
  3425  000B8C  0E00               	movlw	0
  3426  000B8E  6E0F               	movwf	(___lomod@divisor+6)^0,c
  3427  000B90  0E00               	movlw	0
  3428  000B92  6E10               	movwf	(___lomod@divisor+7)^0,c
  3429  000B94  EC47  F008         	call	___lomod	;wreg free
  3430  000B98  C001  F026         	movff	?___lomod,??_utoa
  3431  000B9C  C002  F027         	movff	?___lomod+1,??_utoa+1
  3432  000BA0  C003  F028         	movff	?___lomod+2,??_utoa+2
  3433  000BA4  C004  F029         	movff	?___lomod+3,??_utoa+3
  3434  000BA8  C005  F02A         	movff	?___lomod+4,??_utoa+4
  3435  000BAC  C006  F02B         	movff	?___lomod+5,??_utoa+5
  3436  000BB0  C007  F02C         	movff	?___lomod+6,??_utoa+6
  3437  000BB4  C008  F02D         	movff	?___lomod+7,??_utoa+7
  3438  000BB8  5026               	movf	??_utoa^0,w,c
  3439  000BBA  0F30               	addlw	48
  3440  000BBC  6EDF               	movwf	indf2,c
  3441  000BBE                     
  3442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  3443  000BBE  062E               	decf	utoa@p^0,f,c
  3444  000BC0  A0D8               	btfss	status,0,c
  3445  000BC2  062F               	decf	(utoa@p+1)^0,f,c
  3446  000BC4                     
  3447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  3448  000BC4  0630               	decf	utoa@w^0,f,c
  3449  000BC6  A0D8               	btfss	status,0,c
  3450  000BC8  0631               	decf	(utoa@w+1)^0,f,c
  3451  000BCA                     
  3452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  3453  000BCA  C032  F001         	movff	utoa@n,___lodiv@dividend
  3454  000BCE  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  3455  000BD2  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  3456  000BD6  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  3457  000BDA  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  3458  000BDE  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  3459  000BE2  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  3460  000BE6  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  3461  000BEA  0E0A               	movlw	10
  3462  000BEC  6E09               	movwf	___lodiv@divisor^0,c
  3463  000BEE  0E00               	movlw	0
  3464  000BF0  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  3465  000BF2  0E00               	movlw	0
  3466  000BF4  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  3467  000BF6  0E00               	movlw	0
  3468  000BF8  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  3469  000BFA  0E00               	movlw	0
  3470  000BFC  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  3471  000BFE  0E00               	movlw	0
  3472  000C00  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  3473  000C02  0E00               	movlw	0
  3474  000C04  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  3475  000C06  0E00               	movlw	0
  3476  000C08  6E10               	movwf	(___lodiv@divisor+7)^0,c
  3477  000C0A  ECCF  F007         	call	___lodiv	;wreg free
  3478  000C0E  C001  F032         	movff	?___lodiv,utoa@n
  3479  000C12  C002  F033         	movff	?___lodiv+1,utoa@n+1
  3480  000C16  C003  F034         	movff	?___lodiv+2,utoa@n+2
  3481  000C1A  C004  F035         	movff	?___lodiv+3,utoa@n+3
  3482  000C1E  C005  F036         	movff	?___lodiv+4,utoa@n+4
  3483  000C22  C006  F037         	movff	?___lodiv+5,utoa@n+5
  3484  000C26  C007  F038         	movff	?___lodiv+6,utoa@n+6
  3485  000C2A  C008  F039         	movff	?___lodiv+7,utoa@n+7
  3486  000C2E                     i2l1678:
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3489  000C2E  503A               	movf	utoa@i^0,w,c
  3490  000C30  103B               	iorwf	(utoa@i+1)^0,w,c
  3491  000C32  B4D8               	btfsc	status,2,c
  3492  000C34  EF1E  F006         	goto	i2u99_41
  3493  000C38  EF20  F006         	goto	i2u99_40
  3494  000C3C                     i2u99_41:
  3495  000C3C  EF51  F006         	goto	i2l1688
  3496  000C40                     i2u99_40:
  3497  000C40  5032               	movf	utoa@n^0,w,c
  3498  000C42  1033               	iorwf	(utoa@n+1)^0,w,c
  3499  000C44  1034               	iorwf	(utoa@n+2)^0,w,c
  3500  000C46  1035               	iorwf	(utoa@n+3)^0,w,c
  3501  000C48  1036               	iorwf	(utoa@n+4)^0,w,c
  3502  000C4A  1037               	iorwf	(utoa@n+5)^0,w,c
  3503  000C4C  1038               	iorwf	(utoa@n+6)^0,w,c
  3504  000C4E  1039               	iorwf	(utoa@n+7)^0,w,c
  3505  000C50  A4D8               	btfss	status,2,c
  3506  000C52  EF2D  F006         	goto	i2u100_41
  3507  000C56  EF2F  F006         	goto	i2u100_40
  3508  000C5A                     i2u100_41:
  3509  000C5A  EFA1  F005         	goto	i2l1668
  3510  000C5E                     i2u100_40:
  3511  000C5E  BE2F               	btfsc	(utoa@p+1)^0,7,c
  3512  000C60  EF3C  F006         	goto	i2u101_40
  3513  000C64  502F               	movf	(utoa@p+1)^0,w,c
  3514  000C66  E106               	bnz	i2u101_41
  3515  000C68  042E               	decf	utoa@p^0,w,c
  3516  000C6A  B0D8               	btfsc	status,0,c
  3517  000C6C  EF3A  F006         	goto	i2u101_41
  3518  000C70  EF3C  F006         	goto	i2u101_40
  3519  000C74                     i2u101_41:
  3520  000C74  EFA1  F005         	goto	i2l1668
  3521  000C78                     i2u101_40:
  3522  000C78  BE31               	btfsc	(utoa@w+1)^0,7,c
  3523  000C7A  EF47  F006         	goto	i2u102_41
  3524  000C7E  5031               	movf	(utoa@w+1)^0,w,c
  3525  000C80  E108               	bnz	i2u102_40
  3526  000C82  0430               	decf	utoa@w^0,w,c
  3527  000C84  A0D8               	btfss	status,0,c
  3528  000C86  EF47  F006         	goto	i2u102_41
  3529  000C8A  EF49  F006         	goto	i2u102_40
  3530  000C8E                     i2u102_41:
  3531  000C8E  EF51  F006         	goto	i2l1688
  3532  000C92                     i2u102_40:
  3533  000C92  0100               	movlb	0	; () banked
  3534  000C94  B366               	btfsc	_flags& (0+255),1,b
  3535  000C96  EF4F  F006         	goto	i2u103_41
  3536  000C9A  EF51  F006         	goto	i2u103_40
  3537  000C9E                     i2u103_41:
  3538  000C9E  EFA1  F005         	goto	i2l1668
  3539  000CA2                     i2u103_40:
  3540  000CA2                     i2l1688:
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  3543  000CA2  C01C  F011         	movff	utoa@fp,pad@fp
  3544  000CA6  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  3545  000CAA  0E71               	movlw	low _dbuf
  3546  000CAC  243A               	addwf	utoa@i^0,w,c
  3547  000CAE  6E13               	movwf	pad@buf^0,c
  3548  000CB0  0E00               	movlw	high _dbuf
  3549  000CB2  203B               	addwfc	(utoa@i+1)^0,w,c
  3550  000CB4  6E14               	movwf	(pad@buf+1)^0,c
  3551  000CB6  C030  F015         	movff	utoa@w,pad@p
  3552  000CBA  C031  F016         	movff	utoa@w+1,pad@p+1
  3553  000CBE  EC14  F009         	call	_pad	;wreg free
  3554  000CC2  C011  F01C         	movff	?_pad,?_utoa
  3555  000CC6  C012  F01D         	movff	?_pad+1,?_utoa+1
  3556  000CCA  0012               	return		;funcret
  3557  000CCC                     __end_of_utoa:
  3558                           	callstack 0
  3559                           
  3560 ;; *************** function _pad *****************
  3561 ;; Defined at:
  3562 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3565 ;;		 -> sprintf@f(6), 
  3566 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3567 ;;		 -> dbuf(32), 
  3568 ;;  p               2   20[COMRAM] int 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  w               2   25[COMRAM] int 
  3571 ;;  i               2   23[COMRAM] int 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  2   16[COMRAM] int 
  3574 ;; Registers used:
  3575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3581 ;;      Params:         6       0       0       0       0       0       0       0       0
  3582 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3583 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3584 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3585 ;;Total ram usage:       11 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; Hardware stack levels required when called: 3
  3588 ;; This function calls:
  3589 ;;		_fputc
  3590 ;;		_fputs
  3591 ;;		i2_strlen
  3592 ;; This function is called by:
  3593 ;;		_utoa
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text25
  3598  001228                     __ptext25:
  3599                           	callstack 0
  3600  001228                     _pad:
  3601                           	callstack 19
  3602  001228                     
  3603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3604  001228  0100               	movlb	0	; () banked
  3605  00122A  A166               	btfss	_flags& (0+255),0,b
  3606  00122C  EF1A  F009         	goto	i2u89_41
  3607  001230  EF1C  F009         	goto	i2u89_40
  3608  001234                     i2u89_41:
  3609  001234  EF26  F009         	goto	i2l1622
  3610  001238                     i2u89_40:
  3611  001238                     
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3614  001238  C013  F00A         	movff	pad@buf,fputs@s
  3615  00123C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3616  001240  C011  F00C         	movff	pad@fp,fputs@fp
  3617  001244  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3618  001248  EC8D  F00C         	call	_fputs	;wreg free
  3619  00124C                     i2l1622:
  3620                           
  3621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3622  00124C  BE16               	btfsc	(pad@p+1)^0,7,c
  3623  00124E  EF2B  F009         	goto	i2u90_41
  3624  001252  EF2D  F009         	goto	i2u90_40
  3625  001256                     i2u90_41:
  3626  001256  EF33  F009         	goto	i2l1626
  3627  00125A                     i2u90_40:
  3628  00125A  C015  F01A         	movff	pad@p,pad@w
  3629  00125E  C016  F01B         	movff	pad@p+1,pad@w+1
  3630  001262  EF37  F009         	goto	i2l858
  3631  001266                     i2l1626:
  3632  001266  0E00               	movlw	0
  3633  001268  6E1B               	movwf	(pad@w+1)^0,c
  3634  00126A  0E00               	movlw	0
  3635  00126C  6E1A               	movwf	pad@w^0,c
  3636  00126E                     i2l858:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3639  00126E  0E00               	movlw	0
  3640  001270  6E19               	movwf	(pad@i+1)^0,c
  3641  001272  0E00               	movlw	0
  3642  001274  6E18               	movwf	pad@i^0,c
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3645  001276  EF49  F009         	goto	i2l1632
  3646  00127A                     i2l1628:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3649  00127A  0E00               	movlw	0
  3650  00127C  6E02               	movwf	(fputc@c+1)^0,c
  3651  00127E  0E20               	movlw	32
  3652  001280  6E01               	movwf	fputc@c^0,c
  3653  001282  C011  F003         	movff	pad@fp,fputc@fp
  3654  001286  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3655  00128A  ECAF  F008         	call	_fputc	;wreg free
  3656  00128E                     
  3657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3658  00128E  4A18               	infsnz	pad@i^0,f,c
  3659  001290  2A19               	incf	(pad@i+1)^0,f,c
  3660  001292                     i2l1632:
  3661                           
  3662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3663  001292  501A               	movf	pad@w^0,w,c
  3664  001294  5C18               	subwf	pad@i^0,w,c
  3665  001296  5019               	movf	(pad@i+1)^0,w,c
  3666  001298  0A80               	xorlw	128
  3667  00129A  6E17               	movwf	??_pad^0,c
  3668  00129C  501B               	movf	(pad@w+1)^0,w,c
  3669  00129E  0A80               	xorlw	128
  3670  0012A0  5817               	subwfb	??_pad^0,w,c
  3671  0012A2  A0D8               	btfss	status,0,c
  3672  0012A4  EF56  F009         	goto	i2u91_41
  3673  0012A8  EF58  F009         	goto	i2u91_40
  3674  0012AC                     i2u91_41:
  3675  0012AC  EF3D  F009         	goto	i2l1628
  3676  0012B0                     i2u91_40:
  3677  0012B0                     
  3678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3679  0012B0  0100               	movlb	0	; () banked
  3680  0012B2  B166               	btfsc	_flags& (0+255),0,b
  3681  0012B4  EF5E  F009         	goto	i2u92_41
  3682  0012B8  EF60  F009         	goto	i2u92_40
  3683  0012BC                     i2u92_41:
  3684  0012BC  EF6A  F009         	goto	i2l1636
  3685  0012C0                     i2u92_40:
  3686  0012C0                     
  3687                           ; BSR set to: 0
  3688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3689  0012C0  C013  F00A         	movff	pad@buf,fputs@s
  3690  0012C4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3691  0012C8  C011  F00C         	movff	pad@fp,fputs@fp
  3692  0012CC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3693  0012D0  EC8D  F00C         	call	_fputs	;wreg free
  3694  0012D4                     i2l1636:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3697  0012D4  C013  F001         	movff	pad@buf,i2strlen@s
  3698  0012D8  C014  F002         	movff	pad@buf+1,i2strlen@s+1
  3699  0012DC  EC66  F00C         	call	i2_strlen	;wreg free
  3700  0012E0  501A               	movf	pad@w^0,w,c
  3701  0012E2  2401               	addwf	?i2_strlen^0,w,c
  3702  0012E4  6E11               	movwf	?_pad^0,c
  3703  0012E6  501B               	movf	(pad@w+1)^0,w,c
  3704  0012E8  2002               	addwfc	(?i2_strlen+1)^0,w,c
  3705  0012EA  6E12               	movwf	(?_pad+1)^0,c
  3706  0012EC  0012               	return		;funcret
  3707  0012EE                     __end_of_pad:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function i2_strlen *****************
  3711 ;; Defined at:
  3712 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3715 ;;		 -> dbuf(32), STR_6(6), tx_string(30), 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3718 ;;		 -> dbuf(32), STR_6(6), tx_string(30), 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  2    0[COMRAM] unsigned int 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3728 ;;      Params:         2       0       0       0       0       0       0       0       0
  3729 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3731 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3732 ;;Total ram usage:        4 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_pad
  3738 ;;		i2_serial_sendString
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text26
  3743  0018CC                     __ptext26:
  3744                           	callstack 0
  3745  0018CC                     i2_strlen:
  3746                           	callstack 25
  3747  0018CC  C001  F003         	movff	i2strlen@s,i2strlen@a
  3748  0018D0  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  3749  0018D4  EF6E  F00C         	goto	i2l1568
  3750  0018D8                     i2l1566:
  3751  0018D8  4A01               	infsnz	i2strlen@s^0,f,c
  3752  0018DA  2A02               	incf	(i2strlen@s+1)^0,f,c
  3753  0018DC                     i2l1568:
  3754  0018DC  C001  FFF6         	movff	i2strlen@s,tblptrl
  3755  0018E0  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  3756  0018E4  6AF8               	clrf	tblptru,c
  3757  0018E6  0E07               	movlw	(high __ramtop+-1)
  3758  0018E8  64F7               	cpfsgt	tblptrh,c
  3759  0018EA  D003               	bra	i2u80_47
  3760  0018EC  0008               	tblrd		*
  3761  0018EE  50F5               	movf	tablat,w,c
  3762  0018F0  D005               	bra	i2u80_40
  3763  0018F2                     i2u80_47:
  3764  0018F2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3765  0018F6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3766  0018FA  50E7               	movf	indf1,w,c
  3767  0018FC                     i2u80_40:
  3768  0018FC  0900               	iorlw	0
  3769  0018FE  A4D8               	btfss	status,2,c
  3770  001900  EF84  F00C         	goto	i2u81_41
  3771  001904  EF86  F00C         	goto	i2u81_40
  3772  001908                     i2u81_41:
  3773  001908  EF6C  F00C         	goto	i2l1566
  3774  00190C                     i2u81_40:
  3775  00190C  5003               	movf	i2strlen@a^0,w,c
  3776  00190E  5C01               	subwf	i2strlen@s^0,w,c
  3777  001910  6E01               	movwf	?i2_strlen^0,c
  3778  001912  5004               	movf	(i2strlen@a+1)^0,w,c
  3779  001914  5802               	subwfb	(i2strlen@s+1)^0,w,c
  3780  001916  6E02               	movwf	(?i2_strlen+1)^0,c
  3781  001918  0012               	return		;funcret
  3782  00191A                     __end_ofi2_strlen:
  3783                           	callstack 0
  3784                           
  3785 ;; *************** function _fputs *****************
  3786 ;; Defined at:
  3787 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3790 ;;		 -> dbuf(32), 
  3791 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3792 ;;		 -> sprintf@f(6), 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  i               2   14[COMRAM] int 
  3795 ;;  c               1   13[COMRAM] unsigned char 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  2    9[COMRAM] int 
  3798 ;; Registers used:
  3799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3805 ;;      Params:         4       0       0       0       0       0       0       0       0
  3806 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3808 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3809 ;;Total ram usage:        7 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 2
  3812 ;; This function calls:
  3813 ;;		_fputc
  3814 ;; This function is called by:
  3815 ;;		_pad
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text27
  3820  00191A                     __ptext27:
  3821                           	callstack 0
  3822  00191A                     _fputs:
  3823                           	callstack 19
  3824  00191A  0E00               	movlw	0
  3825  00191C  6E10               	movwf	(fputs@i+1)^0,c
  3826  00191E  0E00               	movlw	0
  3827  001920  6E0F               	movwf	fputs@i^0,c
  3828  001922  EF9E  F00C         	goto	i2l1562
  3829  001926                     i2l1558:
  3830  001926  C00E  F001         	movff	fputs@c,fputc@c
  3831  00192A  6A02               	clrf	(fputc@c+1)^0,c
  3832  00192C  C00C  F003         	movff	fputs@fp,fputc@fp
  3833  001930  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3834  001934  ECAF  F008         	call	_fputc	;wreg free
  3835  001938  4A0F               	infsnz	fputs@i^0,f,c
  3836  00193A  2A10               	incf	(fputs@i+1)^0,f,c
  3837  00193C                     i2l1562:
  3838  00193C  500F               	movf	fputs@i^0,w,c
  3839  00193E  240A               	addwf	fputs@s^0,w,c
  3840  001940  6ED9               	movwf	fsr2l,c
  3841  001942  5010               	movf	(fputs@i+1)^0,w,c
  3842  001944  200B               	addwfc	(fputs@s+1)^0,w,c
  3843  001946  6EDA               	movwf	fsr2h,c
  3844  001948  50DF               	movf	indf2,w,c
  3845  00194A  6E0E               	movwf	fputs@c^0,c
  3846  00194C  500E               	movf	fputs@c^0,w,c
  3847  00194E  A4D8               	btfss	status,2,c
  3848  001950  EFAC  F00C         	goto	i2u79_41
  3849  001954  EFAE  F00C         	goto	i2u79_40
  3850  001958                     i2u79_41:
  3851  001958  EF93  F00C         	goto	i2l1558
  3852  00195C                     i2u79_40:
  3853  00195C  0012               	return		;funcret
  3854  00195E                     __end_of_fputs:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _fputc *****************
  3858 ;; Defined at:
  3859 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  c               2    0[COMRAM] int 
  3862 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3863 ;;		 -> sprintf@f(6), 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  2    0[COMRAM] int 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3875 ;;      Params:         4       0       0       0       0       0       0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3877 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3878 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3879 ;;Total ram usage:        9 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; Hardware stack levels required when called: 1
  3882 ;; This function calls:
  3883 ;;		_putch
  3884 ;; This function is called by:
  3885 ;;		_pad
  3886 ;;		_vfpfcnvrt
  3887 ;;		_fputs
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text28
  3892  00115E                     __ptext28:
  3893                           	callstack 0
  3894  00115E                     _fputc:
  3895                           	callstack 19
  3896  00115E  5003               	movf	fputc@fp^0,w,c
  3897  001160  1004               	iorwf	(fputc@fp+1)^0,w,c
  3898  001162  B4D8               	btfsc	status,2,c
  3899  001164  EFB6  F008         	goto	i2u75_41
  3900  001168  EFB8  F008         	goto	i2u75_40
  3901  00116C                     i2u75_41:
  3902  00116C  EFC1  F008         	goto	i2l1546
  3903  001170                     i2u75_40:
  3904  001170  5003               	movf	fputc@fp^0,w,c
  3905  001172  1004               	iorwf	(fputc@fp+1)^0,w,c
  3906  001174  A4D8               	btfss	status,2,c
  3907  001176  EFBF  F008         	goto	i2u76_41
  3908  00117A  EFC1  F008         	goto	i2u76_40
  3909  00117E                     i2u76_41:
  3910  00117E  EFC6  F008         	goto	i2l1548
  3911  001182                     i2u76_40:
  3912  001182                     i2l1546:
  3913  001182  5001               	movf	fputc@c^0,w,c
  3914  001184  EC79  F00D         	call	_putch
  3915  001188  EF13  F009         	goto	i2l957
  3916  00118C                     i2l1548:
  3917  00118C  EE20 F004          	lfsr	2,4
  3918  001190  5003               	movf	fputc@fp^0,w,c
  3919  001192  26D9               	addwf	fsr2l,f,c
  3920  001194  5004               	movf	(fputc@fp+1)^0,w,c
  3921  001196  22DA               	addwfc	fsr2h,f,c
  3922  001198  50DE               	movf	postinc2,w,c
  3923  00119A  10DE               	iorwf	postinc2,w,c
  3924  00119C  B4D8               	btfsc	status,2,c
  3925  00119E  EFD3  F008         	goto	i2u77_41
  3926  0011A2  EFD5  F008         	goto	i2u77_40
  3927  0011A6                     i2u77_41:
  3928  0011A6  EFF0  F008         	goto	i2l1552
  3929  0011AA                     i2u77_40:
  3930  0011AA  EE20 F004          	lfsr	2,4
  3931  0011AE  5003               	movf	fputc@fp^0,w,c
  3932  0011B0  26D9               	addwf	fsr2l,f,c
  3933  0011B2  5004               	movf	(fputc@fp+1)^0,w,c
  3934  0011B4  22DA               	addwfc	fsr2h,f,c
  3935  0011B6  EE10 F002          	lfsr	1,2
  3936  0011BA  5003               	movf	fputc@fp^0,w,c
  3937  0011BC  26E1               	addwf	fsr1l,f,c
  3938  0011BE  5004               	movf	(fputc@fp+1)^0,w,c
  3939  0011C0  22E2               	addwfc	fsr1h,f,c
  3940  0011C2  50DE               	movf	postinc2,w,c
  3941  0011C4  5CE6               	subwf	postinc1,w,c
  3942  0011C6  50E6               	movf	postinc1,w,c
  3943  0011C8  0A80               	xorlw	128
  3944  0011CA  6E09               	movwf	(??_fputc+4)^0,c
  3945  0011CC  50DE               	movf	postinc2,w,c
  3946  0011CE  0A80               	xorlw	128
  3947  0011D0  5809               	subwfb	(??_fputc+4)^0,w,c
  3948  0011D2  B0D8               	btfsc	status,0,c
  3949  0011D4  EFEE  F008         	goto	i2u78_41
  3950  0011D8  EFF0  F008         	goto	i2u78_40
  3951  0011DC                     i2u78_41:
  3952  0011DC  EF13  F009         	goto	i2l957
  3953  0011E0                     i2u78_40:
  3954  0011E0                     i2l1552:
  3955  0011E0  EE20 F002          	lfsr	2,2
  3956  0011E4  5003               	movf	fputc@fp^0,w,c
  3957  0011E6  26D9               	addwf	fsr2l,f,c
  3958  0011E8  5004               	movf	(fputc@fp+1)^0,w,c
  3959  0011EA  22DA               	addwfc	fsr2h,f,c
  3960  0011EC  CFDE F005          	movff	postinc2,??_fputc
  3961  0011F0  CFDD F006          	movff	postdec2,??_fputc+1
  3962  0011F4  C003  FFD9         	movff	fputc@fp,fsr2l
  3963  0011F8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3964  0011FC  CFDE F007          	movff	postinc2,??_fputc+2
  3965  001200  CFDD F008          	movff	postdec2,??_fputc+3
  3966  001204  5005               	movf	??_fputc^0,w,c
  3967  001206  2407               	addwf	(??_fputc+2)^0,w,c
  3968  001208  6ED9               	movwf	fsr2l,c
  3969  00120A  5006               	movf	(??_fputc+1)^0,w,c
  3970  00120C  2008               	addwfc	(??_fputc+3)^0,w,c
  3971  00120E  6EDA               	movwf	fsr2h,c
  3972  001210  C001  FFDF         	movff	fputc@c,indf2
  3973  001214  EE20 F002          	lfsr	2,2
  3974  001218  5003               	movf	fputc@fp^0,w,c
  3975  00121A  26D9               	addwf	fsr2l,f,c
  3976  00121C  5004               	movf	(fputc@fp+1)^0,w,c
  3977  00121E  22DA               	addwfc	fsr2h,f,c
  3978  001220  2ADE               	incf	postinc2,f,c
  3979  001222  0E00               	movlw	0
  3980  001224  22DD               	addwfc	postdec2,f,c
  3981  001226                     i2l957:
  3982  001226  0012               	return		;funcret
  3983  001228                     __end_of_fputc:
  3984                           	callstack 0
  3985                           
  3986 ;; *************** function _putch *****************
  3987 ;; Defined at:
  3988 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  c               1    wreg     unsigned char 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  c               1    0[COMRAM] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4002 ;;      Params:         0       0       0       0       0       0       0       0       0
  4003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4005 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4006 ;;Total ram usage:        0 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_fputc
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text29
  4016  001AF2                     __ptext29:
  4017                           	callstack 0
  4018  001AF2                     _putch:
  4019                           	callstack 19
  4020  001AF2  0012               	return		;funcret
  4021  001AF4                     __end_of_putch:
  4022                           	callstack 0
  4023                           
  4024 ;; *************** function ___lomod *****************
  4025 ;; Defined at:
  4026 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  dividend        8    0[COMRAM] unsigned long long 
  4029 ;;  divisor         8    8[COMRAM] unsigned long long 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  counter         1   16[COMRAM] unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  8    0[COMRAM] unsigned long long 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2, status,0
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4041 ;;      Params:        16       0       0       0       0       0       0       0       0
  4042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4044 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4045 ;;Total ram usage:       17 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; This function calls:
  4048 ;;		Nothing
  4049 ;; This function is called by:
  4050 ;;		_utoa
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text30
  4055  00108E                     __ptext30:
  4056                           	callstack 0
  4057  00108E                     ___lomod:
  4058                           	callstack 22
  4059  00108E  5009               	movf	___lomod@divisor^0,w,c
  4060  001090  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  4061  001092  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  4062  001094  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  4063  001096  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  4064  001098  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  4065  00109A  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  4066  00109C  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  4067  00109E  B4D8               	btfsc	status,2,c
  4068  0010A0  EF54  F008         	goto	i2u86_41
  4069  0010A4  EF56  F008         	goto	i2u86_40
  4070  0010A8                     i2u86_41:
  4071  0010A8  EF9E  F008         	goto	i2l599
  4072  0010AC                     i2u86_40:
  4073  0010AC  0E01               	movlw	1
  4074  0010AE  6E11               	movwf	___lomod@counter^0,c
  4075  0010B0  EF64  F008         	goto	i2l1608
  4076  0010B4                     i2l1606:
  4077  0010B4  90D8               	bcf	status,0,c
  4078  0010B6  3609               	rlcf	___lomod@divisor^0,f,c
  4079  0010B8  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  4080  0010BA  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  4081  0010BC  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  4082  0010BE  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  4083  0010C0  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  4084  0010C2  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  4085  0010C4  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  4086  0010C6  2A11               	incf	___lomod@counter^0,f,c
  4087  0010C8                     i2l1608:
  4088  0010C8  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  4089  0010CA  EF69  F008         	goto	i2u87_41
  4090  0010CE  EF6B  F008         	goto	i2u87_40
  4091  0010D2                     i2u87_41:
  4092  0010D2  EF5A  F008         	goto	i2l1606
  4093  0010D6                     i2u87_40:
  4094  0010D6                     i2l1610:
  4095  0010D6  5009               	movf	___lomod@divisor^0,w,c
  4096  0010D8  5C01               	subwf	___lomod@dividend^0,w,c
  4097  0010DA  500A               	movf	(___lomod@divisor+1)^0,w,c
  4098  0010DC  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  4099  0010DE  500B               	movf	(___lomod@divisor+2)^0,w,c
  4100  0010E0  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  4101  0010E2  500C               	movf	(___lomod@divisor+3)^0,w,c
  4102  0010E4  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  4103  0010E6  500D               	movf	(___lomod@divisor+4)^0,w,c
  4104  0010E8  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  4105  0010EA  500E               	movf	(___lomod@divisor+5)^0,w,c
  4106  0010EC  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  4107  0010EE  500F               	movf	(___lomod@divisor+6)^0,w,c
  4108  0010F0  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  4109  0010F2  5010               	movf	(___lomod@divisor+7)^0,w,c
  4110  0010F4  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  4111  0010F6  A0D8               	btfss	status,0,c
  4112  0010F8  EF80  F008         	goto	i2u88_41
  4113  0010FC  EF82  F008         	goto	i2u88_40
  4114  001100                     i2u88_41:
  4115  001100  EF92  F008         	goto	i2l1614
  4116  001104                     i2u88_40:
  4117  001104  5009               	movf	___lomod@divisor^0,w,c
  4118  001106  5E01               	subwf	___lomod@dividend^0,f,c
  4119  001108  500A               	movf	(___lomod@divisor+1)^0,w,c
  4120  00110A  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  4121  00110C  500B               	movf	(___lomod@divisor+2)^0,w,c
  4122  00110E  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  4123  001110  500C               	movf	(___lomod@divisor+3)^0,w,c
  4124  001112  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  4125  001114  500D               	movf	(___lomod@divisor+4)^0,w,c
  4126  001116  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  4127  001118  500E               	movf	(___lomod@divisor+5)^0,w,c
  4128  00111A  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  4129  00111C  500F               	movf	(___lomod@divisor+6)^0,w,c
  4130  00111E  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  4131  001120  5010               	movf	(___lomod@divisor+7)^0,w,c
  4132  001122  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  4133  001124                     i2l1614:
  4134  001124  90D8               	bcf	status,0,c
  4135  001126  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  4136  001128  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  4137  00112A  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  4138  00112C  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  4139  00112E  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  4140  001130  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  4141  001132  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  4142  001134  3209               	rrcf	___lomod@divisor^0,f,c
  4143  001136  2E11               	decfsz	___lomod@counter^0,f,c
  4144  001138  EF6B  F008         	goto	i2l1610
  4145  00113C                     i2l599:
  4146  00113C  C001  F001         	movff	___lomod@dividend,?___lomod
  4147  001140  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4148  001144  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4149  001148  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4150  00114C  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4151  001150  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4152  001154  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4153  001158  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4154  00115C  0012               	return		;funcret
  4155  00115E                     __end_of___lomod:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function ___lodiv *****************
  4159 ;; Defined at:
  4160 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  dividend        8    0[COMRAM] unsigned long long 
  4163 ;;  divisor         8    8[COMRAM] unsigned long long 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  quotient        8   16[COMRAM] unsigned long long 
  4166 ;;  counter         1   24[COMRAM] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  8    0[COMRAM] unsigned long long 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4176 ;;      Params:        16       0       0       0       0       0       0       0       0
  4177 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4179 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4180 ;;Total ram usage:       25 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_utoa
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text31
  4190  000F9E                     __ptext31:
  4191                           	callstack 0
  4192  000F9E                     ___lodiv:
  4193                           	callstack 22
  4194  000F9E  EE20  F011         	lfsr	2,___lodiv@quotient
  4195  000FA2  0E07               	movlw	7
  4196  000FA4                     i2u82_41:
  4197  000FA4  6ADE               	clrf	postinc2,c
  4198  000FA6  06E8               	decf	wreg,f,c
  4199  000FA8  E2FD               	bc	i2u82_41
  4200  000FAA  5009               	movf	___lodiv@divisor^0,w,c
  4201  000FAC  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  4202  000FAE  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  4203  000FB0  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  4204  000FB2  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  4205  000FB4  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  4206  000FB6  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  4207  000FB8  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  4208  000FBA  B4D8               	btfsc	status,2,c
  4209  000FBC  EFE2  F007         	goto	i2u83_41
  4210  000FC0  EFE4  F007         	goto	i2u83_40
  4211  000FC4                     i2u83_41:
  4212  000FC4  EF36  F008         	goto	i2l589
  4213  000FC8                     i2u83_40:
  4214  000FC8  0E01               	movlw	1
  4215  000FCA  6E19               	movwf	___lodiv@counter^0,c
  4216  000FCC  EFF2  F007         	goto	i2l1588
  4217  000FD0                     i2l1586:
  4218  000FD0  90D8               	bcf	status,0,c
  4219  000FD2  3609               	rlcf	___lodiv@divisor^0,f,c
  4220  000FD4  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  4221  000FD6  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  4222  000FD8  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  4223  000FDA  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  4224  000FDC  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  4225  000FDE  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  4226  000FE0  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  4227  000FE2  2A19               	incf	___lodiv@counter^0,f,c
  4228  000FE4                     i2l1588:
  4229  000FE4  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  4230  000FE6  EFF7  F007         	goto	i2u84_41
  4231  000FEA  EFF9  F007         	goto	i2u84_40
  4232  000FEE                     i2u84_41:
  4233  000FEE  EFE8  F007         	goto	i2l1586
  4234  000FF2                     i2u84_40:
  4235  000FF2                     i2l1590:
  4236  000FF2  90D8               	bcf	status,0,c
  4237  000FF4  3611               	rlcf	___lodiv@quotient^0,f,c
  4238  000FF6  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  4239  000FF8  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  4240  000FFA  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  4241  000FFC  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  4242  000FFE  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  4243  001000  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  4244  001002  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  4245  001004  5009               	movf	___lodiv@divisor^0,w,c
  4246  001006  5C01               	subwf	___lodiv@dividend^0,w,c
  4247  001008  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4248  00100A  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  4249  00100C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4250  00100E  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  4251  001010  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4252  001012  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  4253  001014  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4254  001016  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  4255  001018  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4256  00101A  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  4257  00101C  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4258  00101E  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  4259  001020  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4260  001022  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  4261  001024  A0D8               	btfss	status,0,c
  4262  001026  EF17  F008         	goto	i2u85_41
  4263  00102A  EF19  F008         	goto	i2u85_40
  4264  00102E                     i2u85_41:
  4265  00102E  EF2A  F008         	goto	i2l1598
  4266  001032                     i2u85_40:
  4267  001032  5009               	movf	___lodiv@divisor^0,w,c
  4268  001034  5E01               	subwf	___lodiv@dividend^0,f,c
  4269  001036  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4270  001038  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  4271  00103A  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4272  00103C  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  4273  00103E  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4274  001040  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  4275  001042  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4276  001044  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  4277  001046  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4278  001048  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  4279  00104A  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4280  00104C  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  4281  00104E  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4282  001050  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  4283  001052  8011               	bsf	___lodiv@quotient^0,0,c
  4284  001054                     i2l1598:
  4285  001054  90D8               	bcf	status,0,c
  4286  001056  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  4287  001058  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  4288  00105A  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  4289  00105C  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  4290  00105E  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  4291  001060  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  4292  001062  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  4293  001064  3209               	rrcf	___lodiv@divisor^0,f,c
  4294  001066  2E19               	decfsz	___lodiv@counter^0,f,c
  4295  001068  EFF9  F007         	goto	i2l1590
  4296  00106C                     i2l589:
  4297  00106C  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4298  001070  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4299  001074  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4300  001078  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4301  00107C  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4302  001080  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4303  001084  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4304  001088  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4305  00108C  0012               	return		;funcret
  4306  00108E                     __end_of___lodiv:
  4307                           	callstack 0
  4308                           
  4309 ;; *************** function _atoi *****************
  4310 ;; Defined at:
  4311 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  s               2    7[COMRAM] PTR const unsigned char 
  4314 ;;		 -> STR_3(15), STR_2(4), STR_1(15), 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  n               2   20[COMRAM] int 
  4317 ;;  neg             2   13[COMRAM] int 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2    7[COMRAM] int 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4327 ;;      Params:         2       0       0       0       0       0       0       0       0
  4328 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4329 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4330 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4331 ;;Total ram usage:       15 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 1
  4334 ;; This function calls:
  4335 ;;		___wmul
  4336 ;;		_isdigit
  4337 ;;		_isspace
  4338 ;; This function is called by:
  4339 ;;		_vfpfcnvrt
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text32
  4344  000CCC                     __ptext32:
  4345                           	callstack 0
  4346  000CCC                     _atoi:
  4347                           	callstack 22
  4348  000CCC  0E00               	movlw	0
  4349  000CCE  6E16               	movwf	(atoi@n+1)^0,c
  4350  000CD0  0E00               	movlw	0
  4351  000CD2  6E15               	movwf	atoi@n^0,c
  4352  000CD4  0E00               	movlw	0
  4353  000CD6  6E0F               	movwf	(atoi@neg+1)^0,c
  4354  000CD8  0E00               	movlw	0
  4355  000CDA  6E0E               	movwf	atoi@neg^0,c
  4356  000CDC  EF72  F006         	goto	i2l1696
  4357  000CE0                     i2l1694:
  4358  000CE0  4A08               	infsnz	atoi@s^0,f,c
  4359  000CE2  2A09               	incf	(atoi@s+1)^0,f,c
  4360  000CE4                     i2l1696:
  4361  000CE4  0E01               	movlw	1
  4362  000CE6  6E14               	movwf	_atoi$710^0,c
  4363  000CE8  C008  FFF6         	movff	atoi@s,tblptrl
  4364  000CEC  C009  FFF7         	movff	atoi@s+1,tblptrh
  4365  000CF0                     	if	0	;tblptru may be non-zero
  4366  000CF0                     	endif
  4367  000CF0                     	if	0	;tblptru may be non-zero
  4368  000CF0                     	endif
  4369  000CF0  0008               	tblrd		*
  4370  000CF2  50F5               	movf	tablat,w,c
  4371  000CF4  0A20               	xorlw	32
  4372  000CF6  B4D8               	btfsc	status,2,c
  4373  000CF8  EF80  F006         	goto	i2u104_41
  4374  000CFC  EF82  F006         	goto	i2u104_40
  4375  000D00                     i2u104_41:
  4376  000D00  EF9F  F006         	goto	i2l1704
  4377  000D04                     i2u104_40:
  4378  000D04  0EF7               	movlw	247
  4379  000D06  6E0A               	movwf	??_atoi^0,c
  4380  000D08  0EFF               	movlw	255
  4381  000D0A  6E0B               	movwf	(??_atoi+1)^0,c
  4382  000D0C  C008  FFF6         	movff	atoi@s,tblptrl
  4383  000D10  C009  FFF7         	movff	atoi@s+1,tblptrh
  4384  000D14                     	if	0	;tblptru may be non-zero
  4385  000D14                     	endif
  4386  000D14                     	if	0	;tblptru may be non-zero
  4387  000D14                     	endif
  4388  000D14  0008               	tblrd		*
  4389  000D16  50F5               	movf	tablat,w,c
  4390  000D18  6E0C               	movwf	(??_atoi+2)^0,c
  4391  000D1A  6A0D               	clrf	(??_atoi+3)^0,c
  4392  000D1C  500A               	movf	??_atoi^0,w,c
  4393  000D1E  260C               	addwf	(??_atoi+2)^0,f,c
  4394  000D20  500B               	movf	(??_atoi+1)^0,w,c
  4395  000D22  220D               	addwfc	(??_atoi+3)^0,f,c
  4396  000D24  500D               	movf	(??_atoi+3)^0,w,c
  4397  000D26  E109               	bnz	i2u105_40
  4398  000D28  0E05               	movlw	5
  4399  000D2A  5C0C               	subwf	(??_atoi+2)^0,w,c
  4400  000D2C  A0D8               	btfss	status,0,c
  4401  000D2E  EF9B  F006         	goto	i2u105_41
  4402  000D32  EF9D  F006         	goto	i2u105_40
  4403  000D36                     i2u105_41:
  4404  000D36  EF9F  F006         	goto	i2l1704
  4405  000D3A                     i2u105_40:
  4406  000D3A  0E00               	movlw	0
  4407  000D3C  6E14               	movwf	_atoi$710^0,c
  4408  000D3E                     i2l1704:
  4409  000D3E  C014  F010         	movff	_atoi$710,_atoi$709
  4410  000D42  6A11               	clrf	(_atoi$709+1)^0,c
  4411  000D44  5010               	movf	_atoi$709^0,w,c
  4412  000D46  1011               	iorwf	(_atoi$709+1)^0,w,c
  4413  000D48  A4D8               	btfss	status,2,c
  4414  000D4A  EFA9  F006         	goto	i2u106_41
  4415  000D4E  EFAB  F006         	goto	i2u106_40
  4416  000D52                     i2u106_41:
  4417  000D52  EF70  F006         	goto	i2l1694
  4418  000D56                     i2u106_40:
  4419  000D56  EFB5  F006         	goto	i2l1714
  4420  000D5A                     i2l1710:
  4421  000D5A  0E00               	movlw	0
  4422  000D5C  6E0F               	movwf	(atoi@neg+1)^0,c
  4423  000D5E  0E01               	movlw	1
  4424  000D60  6E0E               	movwf	atoi@neg^0,c
  4425  000D62                     i2l1712:
  4426  000D62  4A08               	infsnz	atoi@s^0,f,c
  4427  000D64  2A09               	incf	(atoi@s+1)^0,f,c
  4428  000D66  EFEA  F006         	goto	i2l1720
  4429  000D6A                     i2l1714:
  4430  000D6A  C008  FFF6         	movff	atoi@s,tblptrl
  4431  000D6E  C009  FFF7         	movff	atoi@s+1,tblptrh
  4432  000D72                     	if	0	;tblptru may be non-zero
  4433  000D72                     	endif
  4434  000D72                     	if	0	;tblptru may be non-zero
  4435  000D72                     	endif
  4436  000D72  0008               	tblrd		*
  4437  000D74  50F5               	movf	tablat,w,c
  4438  000D76  6E0A               	movwf	??_atoi^0,c
  4439  000D78  6A0B               	clrf	(??_atoi+1)^0,c
  4440                           
  4441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4442                           ; Switch size 1, requested type "simple"
  4443                           ; Number of cases is 1, Range of values is 0 to 0
  4444                           ; switch strategies available:
  4445                           ; Name         Instructions Cycles
  4446                           ; simple_byte            4     3 (average)
  4447                           ;	Chosen strategy is simple_byte
  4448  000D7A  500B               	movf	(??_atoi+1)^0,w,c
  4449  000D7C  0A00               	xorlw	0	; case 0
  4450  000D7E  B4D8               	btfsc	status,2,c
  4451  000D80  EFC4  F006         	goto	i2l2292
  4452  000D84  EFEA  F006         	goto	i2l1720
  4453  000D88                     i2l2292:
  4454                           
  4455                           ; Switch size 1, requested type "simple"
  4456                           ; Number of cases is 2, Range of values is 43 to 45
  4457                           ; switch strategies available:
  4458                           ; Name         Instructions Cycles
  4459                           ; simple_byte            7     4 (average)
  4460                           ;	Chosen strategy is simple_byte
  4461  000D88  500A               	movf	??_atoi^0,w,c
  4462  000D8A  0A2B               	xorlw	43	; case 43
  4463  000D8C  B4D8               	btfsc	status,2,c
  4464  000D8E  EFB1  F006         	goto	i2l1712
  4465  000D92  0A06               	xorlw	6	; case 45
  4466  000D94  B4D8               	btfsc	status,2,c
  4467  000D96  EFAD  F006         	goto	i2l1710
  4468  000D9A  EFEA  F006         	goto	i2l1720
  4469  000D9E                     i2l1716:
  4470  000D9E  C015  F001         	movff	atoi@n,___wmul@multiplier
  4471  000DA2  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  4472  000DA6  0E00               	movlw	0
  4473  000DA8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4474  000DAA  0E0A               	movlw	10
  4475  000DAC  6E03               	movwf	___wmul@multiplicand^0,c
  4476  000DAE  EC19  F00D         	call	___wmul	;wreg free
  4477  000DB2  C008  FFF6         	movff	atoi@s,tblptrl
  4478  000DB6  C009  FFF7         	movff	atoi@s+1,tblptrh
  4479  000DBA                     	if	0	;tblptru may be non-zero
  4480  000DBA                     	endif
  4481  000DBA                     	if	0	;tblptru may be non-zero
  4482  000DBA                     	endif
  4483  000DBA  0008               	tblrd		*
  4484  000DBC  50F5               	movf	tablat,w,c
  4485  000DBE  5E01               	subwf	?___wmul^0,f,c
  4486  000DC0  0E00               	movlw	0
  4487  000DC2  5A02               	subwfb	(?___wmul+1)^0,f,c
  4488  000DC4  0E30               	movlw	48
  4489  000DC6  2401               	addwf	?___wmul^0,w,c
  4490  000DC8  6E15               	movwf	atoi@n^0,c
  4491  000DCA  0E00               	movlw	0
  4492  000DCC  2002               	addwfc	(?___wmul+1)^0,w,c
  4493  000DCE  6E16               	movwf	(atoi@n+1)^0,c
  4494  000DD0  EFB1  F006         	goto	i2l1712
  4495  000DD4                     i2l1720:
  4496  000DD4  0ED0               	movlw	208
  4497  000DD6  6E0A               	movwf	??_atoi^0,c
  4498  000DD8  0EFF               	movlw	255
  4499  000DDA  6E0B               	movwf	(??_atoi+1)^0,c
  4500  000DDC  C008  FFF6         	movff	atoi@s,tblptrl
  4501  000DE0  C009  FFF7         	movff	atoi@s+1,tblptrh
  4502  000DE4                     	if	0	;tblptru may be non-zero
  4503  000DE4                     	endif
  4504  000DE4                     	if	0	;tblptru may be non-zero
  4505  000DE4                     	endif
  4506  000DE4  0008               	tblrd		*
  4507  000DE6  50F5               	movf	tablat,w,c
  4508  000DE8  6E0C               	movwf	(??_atoi+2)^0,c
  4509  000DEA  6A0D               	clrf	(??_atoi+3)^0,c
  4510  000DEC  500A               	movf	??_atoi^0,w,c
  4511  000DEE  260C               	addwf	(??_atoi+2)^0,f,c
  4512  000DF0  500B               	movf	(??_atoi+1)^0,w,c
  4513  000DF2  220D               	addwfc	(??_atoi+3)^0,f,c
  4514  000DF4  500D               	movf	(??_atoi+3)^0,w,c
  4515  000DF6  E10A               	bnz	i2u107_40
  4516  000DF8  0E0A               	movlw	10
  4517  000DFA  5C0C               	subwf	(??_atoi+2)^0,w,c
  4518  000DFC  A0D8               	btfss	status,0,c
  4519  000DFE  EF03  F007         	goto	i2u107_41
  4520  000E02  EF06  F007         	goto	i2u107_40
  4521  000E06                     i2u107_41:
  4522  000E06  0E01               	movlw	1
  4523  000E08  EF07  F007         	goto	i2u108_40
  4524  000E0C                     i2u107_40:
  4525  000E0C  0E00               	movlw	0
  4526  000E0E                     i2u108_40:
  4527  000E0E  6E12               	movwf	_atoi$711^0,c
  4528  000E10  6A13               	clrf	(_atoi$711+1)^0,c
  4529  000E12  5012               	movf	_atoi$711^0,w,c
  4530  000E14  1013               	iorwf	(_atoi$711+1)^0,w,c
  4531  000E16  A4D8               	btfss	status,2,c
  4532  000E18  EF10  F007         	goto	i2u109_41
  4533  000E1C  EF12  F007         	goto	i2u109_40
  4534  000E20                     i2u109_41:
  4535  000E20  EFCF  F006         	goto	i2l1716
  4536  000E24                     i2u109_40:
  4537  000E24  500E               	movf	atoi@neg^0,w,c
  4538  000E26  100F               	iorwf	(atoi@neg+1)^0,w,c
  4539  000E28  A4D8               	btfss	status,2,c
  4540  000E2A  EF19  F007         	goto	i2u110_41
  4541  000E2E  EF1B  F007         	goto	i2u110_40
  4542  000E32                     i2u110_41:
  4543  000E32  EF29  F007         	goto	i2l928
  4544  000E36                     i2u110_40:
  4545  000E36  C015  F00A         	movff	atoi@n,??_atoi
  4546  000E3A  C016  F00B         	movff	atoi@n+1,??_atoi+1
  4547  000E3E  1E0A               	comf	??_atoi^0,f,c
  4548  000E40  1E0B               	comf	(??_atoi+1)^0,f,c
  4549  000E42  4A0A               	infsnz	??_atoi^0,f,c
  4550  000E44  2A0B               	incf	(??_atoi+1)^0,f,c
  4551  000E46  C00A  F008         	movff	??_atoi,?_atoi
  4552  000E4A  C00B  F009         	movff	??_atoi+1,?_atoi+1
  4553  000E4E  EF2D  F007         	goto	i2l931
  4554  000E52                     i2l928:
  4555  000E52  C015  F008         	movff	atoi@n,?_atoi
  4556  000E56  C016  F009         	movff	atoi@n+1,?_atoi+1
  4557  000E5A                     i2l931:
  4558  000E5A  0012               	return		;funcret
  4559  000E5C                     __end_of_atoi:
  4560                           	callstack 0
  4561                           
  4562 ;; *************** function _isspace *****************
  4563 ;; Defined at:
  4564 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  c               2    0[COMRAM] int 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  2    0[COMRAM] int 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4578 ;;      Params:         2       0       0       0       0       0       0       0       0
  4579 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4580 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4581 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4582 ;;Total ram usage:        7 bytes
  4583 ;; Hardware stack levels used: 1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_atoi
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text33
  4592  00187A                     __ptext33:
  4593                           	callstack 0
  4594  00187A                     _isspace:
  4595                           	callstack 22
  4596  00187A  0E01               	movlw	1
  4597  00187C  6E07               	movwf	_isspace$727^0,c
  4598  00187E  0E20               	movlw	32
  4599  001880  1801               	xorwf	isspace@c^0,w,c
  4600  001882  1002               	iorwf	(isspace@c+1)^0,w,c
  4601  001884  B4D8               	btfsc	status,2,c
  4602  001886  EF47  F00C         	goto	i2u95_41
  4603  00188A  EF49  F00C         	goto	i2u95_40
  4604  00188E                     i2u95_41:
  4605  00188E  EF62  F00C         	goto	i2l1652
  4606  001892                     i2u95_40:
  4607  001892  0EF7               	movlw	247
  4608  001894  6E03               	movwf	??_isspace^0,c
  4609  001896  0EFF               	movlw	255
  4610  001898  6E04               	movwf	(??_isspace+1)^0,c
  4611  00189A  C001  F005         	movff	isspace@c,??_isspace+2
  4612  00189E  C002  F006         	movff	isspace@c+1,??_isspace+3
  4613  0018A2  5003               	movf	??_isspace^0,w,c
  4614  0018A4  2605               	addwf	(??_isspace+2)^0,f,c
  4615  0018A6  5004               	movf	(??_isspace+1)^0,w,c
  4616  0018A8  2206               	addwfc	(??_isspace+3)^0,f,c
  4617  0018AA  5006               	movf	(??_isspace+3)^0,w,c
  4618  0018AC  E109               	bnz	i2u96_40
  4619  0018AE  0E05               	movlw	5
  4620  0018B0  5C05               	subwf	(??_isspace+2)^0,w,c
  4621  0018B2  A0D8               	btfss	status,0,c
  4622  0018B4  EF5E  F00C         	goto	i2u96_41
  4623  0018B8  EF60  F00C         	goto	i2u96_40
  4624  0018BC                     i2u96_41:
  4625  0018BC  EF62  F00C         	goto	i2l1652
  4626  0018C0                     i2u96_40:
  4627  0018C0  0E00               	movlw	0
  4628  0018C2  6E07               	movwf	_isspace$727^0,c
  4629  0018C4                     i2l1652:
  4630  0018C4  C007  F001         	movff	_isspace$727,?_isspace
  4631  0018C8  6A02               	clrf	(?_isspace+1)^0,c
  4632  0018CA  0012               	return		;funcret
  4633  0018CC                     __end_of_isspace:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _isdigit *****************
  4637 ;; Defined at:
  4638 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  c               2    0[COMRAM] int 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  2    0[COMRAM] int 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4652 ;;      Params:         2       0       0       0       0       0       0       0       0
  4653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4654 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4655 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4656 ;;Total ram usage:        6 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_vfpfcnvrt
  4662 ;;		_atoi
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text34
  4667  0019D4                     __ptext34:
  4668                           	callstack 0
  4669  0019D4                     _isdigit:
  4670                           	callstack 23
  4671  0019D4  0ED0               	movlw	208
  4672  0019D6  6E03               	movwf	??_isdigit^0,c
  4673  0019D8  0EFF               	movlw	255
  4674  0019DA  6E04               	movwf	(??_isdigit+1)^0,c
  4675  0019DC  C001  F005         	movff	isdigit@c,??_isdigit+2
  4676  0019E0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  4677  0019E4  5003               	movf	??_isdigit^0,w,c
  4678  0019E6  2605               	addwf	(??_isdigit+2)^0,f,c
  4679  0019E8  5004               	movf	(??_isdigit+1)^0,w,c
  4680  0019EA  2206               	addwfc	(??_isdigit+3)^0,f,c
  4681  0019EC  5006               	movf	(??_isdigit+3)^0,w,c
  4682  0019EE  E10A               	bnz	i2u93_40
  4683  0019F0  0E0A               	movlw	10
  4684  0019F2  5C05               	subwf	(??_isdigit+2)^0,w,c
  4685  0019F4  A0D8               	btfss	status,0,c
  4686  0019F6  EFFF  F00C         	goto	i2u93_41
  4687  0019FA  EF02  F00D         	goto	i2u93_40
  4688  0019FE                     i2u93_41:
  4689  0019FE  0E01               	movlw	1
  4690  001A00  EF03  F00D         	goto	i2u94_40
  4691  001A04                     i2u93_40:
  4692  001A04  0E00               	movlw	0
  4693  001A06                     i2u94_40:
  4694  001A06  6E01               	movwf	?_isdigit^0,c
  4695  001A08  6A02               	clrf	(?_isdigit+1)^0,c
  4696  001A0A  0012               	return		;funcret
  4697  001A0C                     __end_of_isdigit:
  4698                           	callstack 0
  4699                           
  4700 ;; *************** function ___wmul *****************
  4701 ;; Defined at:
  4702 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  multiplier      2    0[COMRAM] unsigned int 
  4705 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  product         2    4[COMRAM] unsigned int 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  2    0[COMRAM] unsigned int 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0, prodl, prodh
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4717 ;;      Params:         4       0       0       0       0       0       0       0       0
  4718 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4720 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4721 ;;Total ram usage:        6 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_RS232
  4727 ;;		_atoi
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text35
  4732  001A32                     __ptext35:
  4733                           	callstack 0
  4734  001A32                     ___wmul:
  4735                           	callstack 22
  4736  001A32  5001               	movf	___wmul@multiplier^0,w,c
  4737  001A34  0203               	mulwf	___wmul@multiplicand^0,c
  4738  001A36  CFF3 F005          	movff	prodl,___wmul@product
  4739  001A3A  CFF4 F006          	movff	prodh,___wmul@product+1
  4740  001A3E  5001               	movf	___wmul@multiplier^0,w,c
  4741  001A40  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4742  001A42  50F3               	movf	243,w,c
  4743  001A44  2606               	addwf	(___wmul@product+1)^0,f,c
  4744  001A46  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4745  001A48  0203               	mulwf	___wmul@multiplicand^0,c
  4746  001A4A  50F3               	movf	243,w,c
  4747  001A4C  2606               	addwf	(___wmul@product+1)^0,f,c
  4748  001A4E  C005  F001         	movff	___wmul@product,?___wmul
  4749  001A52  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4750  001A56  0012               	return		;funcret
  4751  001A58                     __end_of___wmul:
  4752                           	callstack 0
  4753                           
  4754                           	psect	rparam
  4755  0000                     
  4756                           	psect	temp
  4757  00005E                     btemp:
  4758                           	callstack 0
  4759  00005E                     	ds	1
  4760  0000                     int$flags	set	btemp
  4761  0000                     wtemp8	set	btemp+1
  4762  0000                     ttemp5	set	btemp+1
  4763  0000                     ttemp6	set	btemp+4
  4764  0000                     ttemp7	set	btemp+8
  4765                           
  4766                           	psect	idloc
  4767                           
  4768                           ;Config register IDLOC0 @ 0x200000
  4769                           ;	unspecified, using default values
  4770  200000                     	org	2097152
  4771  200000  FF                 	db	255
  4772                           
  4773                           ;Config register IDLOC1 @ 0x200001
  4774                           ;	unspecified, using default values
  4775  200001                     	org	2097153
  4776  200001  FF                 	db	255
  4777                           
  4778                           ;Config register IDLOC2 @ 0x200002
  4779                           ;	unspecified, using default values
  4780  200002                     	org	2097154
  4781  200002  FF                 	db	255
  4782                           
  4783                           ;Config register IDLOC3 @ 0x200003
  4784                           ;	unspecified, using default values
  4785  200003                     	org	2097155
  4786  200003  FF                 	db	255
  4787                           
  4788                           ;Config register IDLOC4 @ 0x200004
  4789                           ;	unspecified, using default values
  4790  200004                     	org	2097156
  4791  200004  FF                 	db	255
  4792                           
  4793                           ;Config register IDLOC5 @ 0x200005
  4794                           ;	unspecified, using default values
  4795  200005                     	org	2097157
  4796  200005  FF                 	db	255
  4797                           
  4798                           ;Config register IDLOC6 @ 0x200006
  4799                           ;	unspecified, using default values
  4800  200006                     	org	2097158
  4801  200006  FF                 	db	255
  4802                           
  4803                           ;Config register IDLOC7 @ 0x200007
  4804                           ;	unspecified, using default values
  4805  200007                     	org	2097159
  4806  200007  FF                 	db	255
  4807                           
  4808                           	psect	config
  4809                           
  4810                           ;Config register CONFIG1L @ 0x300000
  4811                           ;	unspecified, using default values
  4812                           ;	PLL Prescaler Selection bits
  4813                           ;	PLLDIV = 0x0, unprogrammed default
  4814                           ;	System Clock Postscaler Selection bits
  4815                           ;	CPUDIV = 0x0, unprogrammed default
  4816                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4817                           ;	USBDIV = 0x0, unprogrammed default
  4818  300000                     	org	3145728
  4819  300000  00                 	db	0
  4820                           
  4821                           ;Config register CONFIG1H @ 0x300001
  4822                           ;	Oscillator Selection bits
  4823                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4824                           ;	Fail-Safe Clock Monitor Enable bit
  4825                           ;	FCMEN = 0x0, unprogrammed default
  4826                           ;	Internal/External Oscillator Switchover bit
  4827                           ;	IESO = 0x0, unprogrammed default
  4828  300001                     	org	3145729
  4829  300001  09                 	db	9
  4830                           
  4831                           ;Config register CONFIG2L @ 0x300002
  4832                           ;	unspecified, using default values
  4833                           ;	Power-up Timer Enable bit
  4834                           ;	PWRT = 0x1, unprogrammed default
  4835                           ;	Brown-out Reset Enable bits
  4836                           ;	BOR = 0x3, unprogrammed default
  4837                           ;	Brown-out Reset Voltage bits
  4838                           ;	BORV = 0x3, unprogrammed default
  4839                           ;	USB Voltage Regulator Enable bit
  4840                           ;	VREGEN = 0x0, unprogrammed default
  4841  300002                     	org	3145730
  4842  300002  1F                 	db	31
  4843                           
  4844                           ;Config register CONFIG2H @ 0x300003
  4845                           ;	Watchdog Timer Enable bit
  4846                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4847                           ;	Watchdog Timer Postscale Select bits
  4848                           ;	WDTPS = 0xF, unprogrammed default
  4849  300003                     	org	3145731
  4850  300003  1E                 	db	30
  4851                           
  4852                           ; Padding undefined space
  4853  300004                     	org	3145732
  4854  300004  FF                 	db	255
  4855                           
  4856                           ;Config register CONFIG3H @ 0x300005
  4857                           ;	CCP2 MUX bit
  4858                           ;	CCP2MX = 0x1, unprogrammed default
  4859                           ;	PORTB A/D Enable bit
  4860                           ;	PBADEN = 0x1, unprogrammed default
  4861                           ;	Low-Power Timer 1 Oscillator Enable bit
  4862                           ;	LPT1OSC = 0x0, unprogrammed default
  4863                           ;	MCLR Pin Enable bit
  4864                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4865  300005                     	org	3145733
  4866  300005  03                 	db	3
  4867                           
  4868                           ;Config register CONFIG4L @ 0x300006
  4869                           ;	unspecified, using default values
  4870                           ;	Stack Full/Underflow Reset Enable bit
  4871                           ;	STVREN = 0x1, unprogrammed default
  4872                           ;	Single-Supply ICSP Enable bit
  4873                           ;	LVP = 0x1, unprogrammed default
  4874                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4875                           ;	ICPRT = 0x0, unprogrammed default
  4876                           ;	Extended Instruction Set Enable bit
  4877                           ;	XINST = 0x0, unprogrammed default
  4878                           ;	Background Debugger Enable bit
  4879                           ;	DEBUG = 0x1, unprogrammed default
  4880  300006                     	org	3145734
  4881  300006  85                 	db	133
  4882                           
  4883                           ; Padding undefined space
  4884  300007                     	org	3145735
  4885  300007  FF                 	db	255
  4886                           
  4887                           ;Config register CONFIG5L @ 0x300008
  4888                           ;	unspecified, using default values
  4889                           ;	Code Protection bit
  4890                           ;	CP0 = 0x1, unprogrammed default
  4891                           ;	Code Protection bit
  4892                           ;	CP1 = 0x1, unprogrammed default
  4893                           ;	Code Protection bit
  4894                           ;	CP2 = 0x1, unprogrammed default
  4895                           ;	Code Protection bit
  4896                           ;	CP3 = 0x1, unprogrammed default
  4897  300008                     	org	3145736
  4898  300008  0F                 	db	15
  4899                           
  4900                           ;Config register CONFIG5H @ 0x300009
  4901                           ;	unspecified, using default values
  4902                           ;	Boot Block Code Protection bit
  4903                           ;	CPB = 0x1, unprogrammed default
  4904                           ;	Data EEPROM Code Protection bit
  4905                           ;	CPD = 0x1, unprogrammed default
  4906  300009                     	org	3145737
  4907  300009  C0                 	db	192
  4908                           
  4909                           ;Config register CONFIG6L @ 0x30000A
  4910                           ;	unspecified, using default values
  4911                           ;	Write Protection bit
  4912                           ;	WRT0 = 0x1, unprogrammed default
  4913                           ;	Write Protection bit
  4914                           ;	WRT1 = 0x1, unprogrammed default
  4915                           ;	Write Protection bit
  4916                           ;	WRT2 = 0x1, unprogrammed default
  4917                           ;	Write Protection bit
  4918                           ;	WRT3 = 0x1, unprogrammed default
  4919  30000A                     	org	3145738
  4920  30000A  0F                 	db	15
  4921                           
  4922                           ;Config register CONFIG6H @ 0x30000B
  4923                           ;	unspecified, using default values
  4924                           ;	Configuration Register Write Protection bit
  4925                           ;	WRTC = 0x1, unprogrammed default
  4926                           ;	Boot Block Write Protection bit
  4927                           ;	WRTB = 0x1, unprogrammed default
  4928                           ;	Data EEPROM Write Protection bit
  4929                           ;	WRTD = 0x1, unprogrammed default
  4930  30000B                     	org	3145739
  4931  30000B  E0                 	db	224
  4932                           
  4933                           ;Config register CONFIG7L @ 0x30000C
  4934                           ;	unspecified, using default values
  4935                           ;	Table Read Protection bit
  4936                           ;	EBTR0 = 0x1, unprogrammed default
  4937                           ;	Table Read Protection bit
  4938                           ;	EBTR1 = 0x1, unprogrammed default
  4939                           ;	Table Read Protection bit
  4940                           ;	EBTR2 = 0x1, unprogrammed default
  4941                           ;	Table Read Protection bit
  4942                           ;	EBTR3 = 0x1, unprogrammed default
  4943  30000C                     	org	3145740
  4944  30000C  0F                 	db	15
  4945                           
  4946                           ;Config register CONFIG7H @ 0x30000D
  4947                           ;	unspecified, using default values
  4948                           ;	Boot Block Table Read Protection bit
  4949                           ;	EBTRB = 0x1, unprogrammed default
  4950  30000D                     	org	3145741
  4951  30000D  40                 	db	64
  4952                           tosu	equ	0xFFF
  4953                           tosh	equ	0xFFE
  4954                           tosl	equ	0xFFD
  4955                           stkptr	equ	0xFFC
  4956                           pclatu	equ	0xFFB
  4957                           pclath	equ	0xFFA
  4958                           pcl	equ	0xFF9
  4959                           tblptru	equ	0xFF8
  4960                           tblptrh	equ	0xFF7
  4961                           tblptrl	equ	0xFF6
  4962                           tablat	equ	0xFF5
  4963                           prodh	equ	0xFF4
  4964                           prodl	equ	0xFF3
  4965                           indf0	equ	0xFEF
  4966                           postinc0	equ	0xFEE
  4967                           postdec0	equ	0xFED
  4968                           preinc0	equ	0xFEC
  4969                           plusw0	equ	0xFEB
  4970                           fsr0h	equ	0xFEA
  4971                           fsr0l	equ	0xFE9
  4972                           wreg	equ	0xFE8
  4973                           indf1	equ	0xFE7
  4974                           postinc1	equ	0xFE6
  4975                           postdec1	equ	0xFE5
  4976                           preinc1	equ	0xFE4
  4977                           plusw1	equ	0xFE3
  4978                           fsr1h	equ	0xFE2
  4979                           fsr1l	equ	0xFE1
  4980                           bsr	equ	0xFE0
  4981                           indf2	equ	0xFDF
  4982                           postinc2	equ	0xFDE
  4983                           postdec2	equ	0xFDD
  4984                           preinc2	equ	0xFDC
  4985                           plusw2	equ	0xFDB
  4986                           fsr2h	equ	0xFDA
  4987                           fsr2l	equ	0xFD9
  4988                           status	equ	0xFD8

Data Sizes:
    Strings     57
    Constant    0
    Data        0
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     30     142
    BANK1           256      2       2
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), STR_6(CODE[6]), tx_string(BANK0[30]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), STR_6(CODE[6]), tx_string(BANK0[30]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> linha1(BANK0[16]), tx_string(BANK0[30]), linha2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[4]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[4]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[4]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[4]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> linha1(BANK0[16]), tx_string(BANK0[30]), linha2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S604_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> linha1(BANK0[16]), tx_string(BANK0[30]), linha2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> linha1(BANK0[16]), tx_string(BANK0[30]), linha2(BANK0[16]), 

    serial_sendString@phrase	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_6(CODE[6]), tx_string(BANK0[30]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[6]), STR_4(CODE[17]), linha1(BANK0[16]), linha2(BANK0[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _RS232 in COMRAM

    _RS232->_sprintf
    i2_serial_sendString->i2_strlen
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace

Critical Paths under _main in BANK0

    _main->_serial_sendString
    _serial_sendString->_strlen
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _RS232 in BANK0

    _RS232->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _RS232 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RS232 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RS232 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RS232 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RS232 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RS232 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RS232 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2589
                                              0 BANK1      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _serial_send
                  _serial_sendString
                _setup_Interruptions
                        _setup_RS232
 ---------------------------------------------------------------------------------
 (1) _setup_RS232                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_Interruptions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_sendString                                    8     6      2     615
                                             22 BANK0      8     6      2
                        _serial_send
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     275
                                             18 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _serial_send                                          1     1      0      31
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     674
                                             22 BANK0      6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     254
                                             19 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     835
                                             21 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     279
                                             21 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     155
                                             19 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RS232                                               10    10      0    9453
                                              8 BANK0     10    10      0
                             ___wmul
                            _sprintf
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
                i2_serial_sendString
 ---------------------------------------------------------------------------------
 (5) i2_serial_sendString                                  8     6      2     303
                                              4 COMRAM     8     6      2
                      i2_serial_send
                           i2_strlen
 ---------------------------------------------------------------------------------
 (6) i2_serial_send                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) i2_Lcd_Write_String                                   6     4      2     320
                                              4 COMRAM     6     4      2
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (6) i2_Lcd_Write_Char                                     3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (5) i2_Lcd_Set_Cursor                                     5     4      1     432
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i2_Lcd_Cmd                                            2     2      0     110
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i2_Lcd_Port                                           1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             16    10      6    7889
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (6) _vfprintf                                             8     2      6    7232
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (7) _vfpfcnvrt                                           46    40      6    6871
                                             59 COMRAM    20    14      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                32    22     10    3735
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (9) _pad                                                 11     5      6    2685
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (6) i2_strlen                                             4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _fputs                                               7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (11) _fputc                                               9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (12) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (9) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (9) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (8) _atoi                                                15    13      2    1350
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (9) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     509
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _serial_send
   _serial_sendString
     _serial_send
     _strlen
   _setup_Interruptions
   _setup_RS232

 _RS232 (ROOT)
   ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
             i2_strlen
   i2_Lcd_Set_Cursor
     i2_Lcd_Cmd
       i2_Lcd_Port
   i2_Lcd_Write_String
     i2_Lcd_Write_Char
       i2_Lcd_Port
   i2_serial_sendString
     i2_serial_send
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2       2       7        0.8%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     1E      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      ED      20        0.0%
DATA                 0      0      ED       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 03 18:21:49 2021

                           _x 006E                             _y 006C  __size_of_setup_Interruptions 0008  
                          l61 1760                            l63 1776                            l71 1AE8  
                          l80 1504                            l65 1778                            l57 1734  
                          l59 174A                            l83 199A                            l68 1A30  
                          l77 15E4                            l89 140E           ___wmul@multiplicand 0003  
 __end_ofi2_serial_sendString 1652                           l116 1AA0                           l125 1576  
   __size_ofi2_Lcd_Write_Char 0038                           l119 1AAE                           l136 1ADA  
                         l139 1AF0                           l974 1826                           _GIE 007F97  
                         _pad 1228                           wreg 000FE8                          l2110 172E  
                        l2120 1762                          l2112 1736                          l2200 14DA  
                        l2122 1770                          l2114 1744                          l2130 1A1C  
                        l2210 14F8                          l2202 14E0                          l2116 174C  
                        l2108 171E                          l2132 1A2E                          l2124 1A10  
                        l2212 14FE                          l2204 14E6                          l2140 197A  
                        l2220 13D2                          l2118 175A                          l2126 1A12  
                        l2206 14EC                          l2150 1990                          l2142 197C  
                        l2134 1962                          l2214 138C                          l2230 155E  
                        l2222 1506                          l2128 1A1A                          l2208 14F2  
                        l2152 1998                          l2144 1984                          l2136 1970  
                        l2216 139A                          l2160 17E2                          l2224 1510  
                        l2232 1AC8                          l2170 157C                          l2146 1986  
                        l2138 1972                          l2218 13CC                          l2154 1A9A  
                        l2162 17E8                          l2226 1528                          l2234 1AD2  
                        l2250 1306                          l2242 12EE                          l2180 15C4  
                        l2172 158E                          l2148 198E                          l2156 1A9C  
                        l2164 1818                          l2228 1558                          l2236 1AEA  
                        l2260 1334                          l2252 130A                          l2244 12FA  
                        l2190 14A6                          l2182 15D6                          l2174 15A0  
                        l2158 17D6                          l2270 1380                          l2262 1342  
                        l2254 130E                          l2246 12FC                          l2168 1ADC  
                        l2192 14AC                          l2184 15DC                          l2176 15A6  
                        l2264 135C                          l2256 131A                          l2248 12FE  
                        l2194 14BC                          l2186 148E                          l2178 15B2  
                        l2266 136A                          l2258 1328                          l2196 14C2  
                        l2188 1494                          l2268 137A                          l2198 14D4  
                        ?_pad 0011                          STR_1 0821                          STR_2 0836  
                        STR_3 0812                          STR_4 0801                          STR_5 0830  
                        STR_6 0830                          _BRGH 007D62                          _CREN 007D5C  
                        u1500 1744                          u1501 1740                          u1510 175A  
                        u1511 1756                          u1520 1770                          u1600 140E  
                        u1521 176C                          u1601 140A                          u1530 1AAE  
                        u1610 1554                          u1531 1AAA                          u1540 1808  
                        u1620 1576                          u1621 1572                          u1550 1818  
                        u1630 137A                          u1551 1814                          u1631 1376  
                        u1560 158E                          u1561 158A                          u1617 154A  
                        u1490 172E                          u1570 15C4                          u1491 172A  
                        u1707 1A24                          u1571 15C0                          u1547 17FE  
                        u1580 13C8                          u1590 13FE                          u1647 134E  
                        u1657 197E                          u1667 1992                          u1587 13BE  
                        u1677 149C                          u1597 13F4                          u1687 14B4  
                        u1697 14CA                          _PEIE 007F96                          _RCIE 007CED  
                        _RCIF 007CF5                          i2l61 17BC                          i2l63 17D2  
                        i2l65 17D4                          i2l57 1790                          i2l59 17A6  
                        i2l83 19D2                          i2l68 1A76                          i2l77 16B6  
                        i2l89 148C                          _SPEN 007D5F                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64             ?_Lcd_Write_String 00E5  
                        _dbuf 0071                          _atoi 0CCC                          _main 12EE  
                        _prec 0064                          _nout 0060                          pad@i 0018  
                        pad@p 0015                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 001A                          fsr2l 000FD9                          btemp 005E  
                        _utoa 0ACA                          prodh 000FF4                          prodl 000FF3  
                        start 000E            ??_Lcd_Write_String 00E7               __end_of_Lcd_Cmd 1A32  
                ___param_bank 000000         __end_ofi2_serial_send 1AC8                         ??_pad 0017  
                       ?_atoi 0008                         ?_main 0001                         ?_utoa 001C  
             __end_of___lodiv 108E                         _LATE0 007C68                         _LATE1 007C69  
                       _LATD4 007C64                         _LATD5 007C65                         _LATD6 007C66  
                       _LATD7 007C67               __end_of___lomod 115E                         _RS232 0008  
                       i2l116 1AB8                         i2l125 1650                         i2l133 0F72  
                       i2l151 1A56                         i2l119 1AC6                         i2l606 115C  
                       i2l900 1718                         i2l931 0E5A                         i2l596 108C  
                       i2l589 106C                         i2l861 12B0                         i2l829 1878  
                       i2l934 1A0A                         i2l942 18CA                         i2l870 0B0A  
                       i2l599 113C                         i2l863 12EC                         i2l928 0E52  
                       i2l858 126E                         i2l868 0B02                         i2l957 1226  
                       i2l965 195C                         i2l893 0AC8                         i2l974 1918  
                       i2l878 0CCA                         i2l968 1AF2                         i2l899 1710  
                       _RCREG 000FAE                  vfpfcnvrt@fmt 003E                  vfpfcnvrt@llu 0046  
                       _SPBRG 000FAF       __size_of_Lcd_Set_Cursor 006E                         _TRISD 000F95  
                       _TRISE 000F96                         _TXREG 000FAD    __size_of_serial_sendString 0072  
          __size_ofi2_Lcd_Cmd 0020                   ?i2_Lcd_Port 0001                         _flags 0066  
                       _fputc 115E                         _fputs 191A               __end_of_isdigit 1A0C  
                       atoi@n 0015                         pad@fp 0011                         atoi@s 0008  
                       _width 0062                         _putch 1AF2               __end_of_isspace 18CC  
                       tablat 000FF5                         ttemp5 005F                         ttemp6 0062  
                       ttemp7 0066                         utoa@d 001E                         utoa@i 003A  
                       utoa@n 0032                         utoa@p 002E                         utoa@w 0030  
                       status 000FD8                         wtemp8 005F               __end_of_sprintf 187A  
            ___lodiv@dividend 0001              i2_Lcd_Set_Cursor 1652              __end_of_Lcd_Init 1506  
            __end_of_Lcd_Port 177A              __end_ofi2_strlen 191A               __initialization 1A78  
                __end_of_atoi 0E5C                  __end_of_main 138C                  __end_of_utoa 0CCC  
       serial_sendString@size 00E9                        ??_atoi 000A                        ??_main 0100  
                      ??_utoa 0026            __size_of_Lcd_Clear 000E                 __activetblptr 000002  
                      ?_RS232 0001              ___lodiv@quotient 0011                        ?_fputc 0001  
                      ?_fputs 000A                        ?_putch 0001                        i2l2000 1686  
                      i2l2002 1698                        i2l2010 141C                        i2l2004 16AA  
                      i2l2012 144C                        i2l2020 1606                        i2l2006 16B0  
                      i2l2014 1450                        i2l2022 1636                        i2l2030 0E86  
                      i2l2008 1410                        i2l2024 163A                        i2l2016 15E6  
                      i2l2040 0ED8                        i2l2032 0E94                        i2l2018 15EE  
                      i2l2050 0F3E                        i2l2042 0EF4                        i2l2034 0EA6  
                      i2l2052 0F5A                        i2l2044 0F00                        i2l2036 0EC2  
                      i2l2054 0F64                        i2l2038 0ECC                        i2l2046 0F0E  
                      i2l1600 1066                        i2l2048 0F1C                        i2l2056 0F70  
                      i2l1610 10D6                        i2l1602 108E                        i2l1700 0D04  
                      i2l1612 1104                        i2l1604 10AC                        i2l1620 1238  
                      i2l1710 0D5A                        i2l1702 0D3A                        i2l1614 1124  
                      i2l1606 10B4                        i2l1550 11AA                        i2l1542 115E  
                      i2l1630 128E                        i2l1622 124C                        i2l1640 19D4  
                      i2l1720 0DD4                        i2l1712 0D62                        i2l1704 0D3E  
                      i2l1616 1136                        i2l1608 10C8                        i2l1552 11E0  
                      i2l1544 1170                        i2l1560 1938                        i2l1632 1292  
                      i2l1624 125A                        i2l1800 0A92                        i2l1650 18C0  
                      i2l1714 0D6A                        i2l1546 1182                        i2l1562 193C  
                      i2l1570 190C                        i2l1634 12C0                        i2l1626 1266  
                      i2l1618 1228                        i2l1802 0AB6                        i2l1810 178A  
                      i2l1652 18C4                        i2l1644 187A                        i2l1724 0E12  
                      i2l1716 0D9E                        i2l2292 0D88                        i2l1708 0D44  
                      i2l1580 0F9E                        i2l1548 118C                        i2l1556 191A  
                      i2l1564 18CC                        i2l1636 12D4                        i2l1628 127A  
                      i2l1660 0ADC                        i2l1820 17BE                        i2l1812 1792  
                      i2l1900 19C6                        i2l1574 1A32                        i2l1646 187E  
                      i2l1726 0E24                        i2l1590 0FF2                        i2l1582 0FAA  
                      i2l1558 1926                        i2l1566 18D8                        i2l1670 0B48  
                      i2l1662 0AF6                        i2l1750 083C                        i2l1822 17CC  
                      i2l1814 17A0                        i2l1902 19C8                        i2l1576 1A4E  
                      i2l1648 1892                        i2l1728 0E36                        i2l1592 1004  
                      i2l1584 0FC8                        i2l1568 18DC                        i2l1680 0C40  
                      i2l1672 0BBE                        i2l1664 0B32                        i2l1656 0ACA  
                      i2l1760 08A8                        i2l1752 0860                        i2l1816 17A8  
                      i2l1808 177C                        i2l1904 19D0                        i2l1594 1032  
                      i2l1586 0FD0                        i2l1682 0C5E                        i2l1674 0BC4  
                      i2l1666 0B3A                        i2l1658 0ADA                        i2l1770 0928  
                      i2l1762 08DE                        i2l1754 086E                        i2l1818 17B6  
                      i2l1906 1AB2                        i2l1692 0CCC                        i2l1596 1052  
                      i2l1588 0FE4                        i2l1684 0C78                        i2l1676 0BCA  
                      i2l1668 0B42                        i2l1780 09EE                        i2l1764 08EC  
                      i2l1756 0880                        i2l1908 1AB4                        i2l1694 0CE0  
                      i2l1598 1054                        i2l1686 0C92                        i2l1678 0C2E  
                      i2l1790 0A6C                        i2l1774 096E                        i2l1766 08FA  
                      i2l1758 0884                        i2l1870 16C0                        i2l1696 0CE4  
                      i2l1688 0CA2                        i2l1784 0A26                        i2l1768 091A  
                      i2l1776 0980                        i2l1872 16CE                        i2l1880 1A62  
                      i2l1698 0CE8                        i2l1786 0A4A                        i2l1794 0A78  
                      i2l1778 09A4                        i2l1874 16F4                        i2l1882 1A64  
                      i2l1890 19AC                        i2l1796 0A86                        i2l1788 0A58  
                      i2l1868 16B8                        i2l1980 184A                        i2l1884 1A74  
                      i2l1876 1A5A                        i2l1892 19B4                        i2l1982 1866  
                      i2l1974 1828                        i2l1878 1A5C                        i2l1894 19B6  
                      i2l1886 199E                        i2l1976 183A                        i2l1992 1654  
                      i2l1896 19BE                        i2l1888 19AA                        i2l1978 1842  
                      i2l1994 1664                        i2l1898 19C0                        i2l1996 1676  
                      i2l1998 167C                        _OSCCON 000FD3                     ??_Lcd_Cmd 00E2  
     __size_of_Lcd_Write_Char 003E                  vfprintf@cfmt 0056                  ?_serial_send 0001  
           __end_ofi2_Lcd_Cmd 1A78                        ___wmul 1A32                     ??___lodiv 0011  
                   ??___lomod 0011                        _digito 0068           __size_ofi2_Lcd_Port 005C  
         i2Lcd_Write_String@a 0005           i2Lcd_Write_String@i 0009                        _linha1 00BF  
                      _linha2 00AF                        clear_0 1A82                        isa$std 000001  
                      _result 006A                        pad@buf 0013              i2_Lcd_Write_Char 199C  
                      _strlen 17D6                        fputc@c 0001                        fputs@c 000E  
                      fputs@i 000F                        fputs@s 000A                     ??_isdigit 0003  
                ?_setup_RS232 0001                  __mediumconst 0000                     ??_isspace 0003  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      putch@c 0001              __end_of_vfprintf 171A                        utoa@fp 001C  
                   ??_sprintf 005E           _setup_Interruptions 1AEA               Lcd_Set_Cursor@a 00E5  
             Lcd_Set_Cursor@b 00E4               Lcd_Set_Cursor@y 00E7               Lcd_Set_Cursor@z 00E6  
                  __accesstop 0060       __end_of__initialization 1A88             __end_of_Lcd_Clear 1AEA  
               ___rparam_used 000001                 __end_of_RS232 0F9E                __pcstackCOMRAM 0001  
        ?_setup_Interruptions 0001                 __end_of_fputc 1228                 __end_of_fputs 195E  
               __end_of_putch 1AF4   __size_ofi2_Lcd_Write_String 007E             i2Lcd_Write_Char@a 0004  
           i2Lcd_Write_Char@y 0003        serial_sendString@index 00EB                       ??_RS232 00D7  
              _Lcd_Set_Cursor 1578                     ?_Lcd_Init 0001                     ?_Lcd_Port 0001  
                   ?i2_strlen 0001                       ??_fputc 0005                       ??_fputs 000E  
        i2Lcd_Write_Char@temp 0002                       ??_putch 0001                    __pbssBANK0 0060  
       ??_setup_Interruptions 00E1                       ?___wmul 0001       i2serial_sendString@size 0009  
                     _BAUDCON 000FB8          i2Lcd_Set_Cursor@temp 0008     __size_of_Lcd_Write_String 0084  
      __end_of_Lcd_Set_Cursor 15E6                       ?_strlen 00E1      __end_ofi2_Lcd_Set_Cursor 16B8  
          __size_of_vfpfcnvrt 028E                       i2u80_40 18FC                       i2u80_47 18F2  
                     i2u81_40 190C                       i2u81_41 1908                       i2u90_40 125A  
                     i2u82_41 0FA4                       i2u90_41 1256                       i2u83_40 0FC8  
                     i2u75_40 1170                       i2u91_40 12B0                       i2u83_41 0FC4  
                     i2u75_41 116C                       i2u91_41 12AC                       i2u84_40 0FF2  
                     i2u76_40 1182                       i2u92_40 12C0                       i2u84_41 0FEE  
                     i2u76_41 117E                       i2u92_41 12BC                       i2u93_40 1A04  
                     i2u85_40 1032                       i2u77_40 11AA                    ??_Lcd_Init 00E4  
                     i2u93_41 19FE                       i2u85_41 102E                       i2u77_41 11A6  
                     i2u94_40 1A06                       i2u86_40 10AC                       i2u78_40 11E0  
                     i2u86_41 10A8                       i2u78_41 11DC                       i2u95_40 1892  
                     i2u87_40 10D6                       i2u79_40 195C                       i2u95_41 188E  
                     i2u87_41 10D2                       i2u79_41 1958                       i2u96_40 18C0  
                     i2u88_40 1104                       i2u96_41 18BC                       i2u88_41 1100  
                     i2u89_40 1238                       i2u97_40 0ADA                       i2u89_41 1234  
                     i2u97_41 0AD6                       i2u98_40 0AF6                       i2u98_41 0AF2  
                     i2u99_40 0C40                       i2u99_41 0C3C                  ??i2_Lcd_Port 0001  
                  ??_Lcd_Port 00E1                    ??i2_strlen 0003  __size_ofi2_serial_sendString 006C  
            ___lomod@dividend 0001                _Lcd_Write_Char 195E                       _Lcd_Cmd 1A0C  
                     __Hparam 0000                       __Lparam 0000              _flag_interrupcao 0768  
             __size_of___wmul 0026                       ___lodiv 0F9E                       ___lomod 108E  
                   ?_vfprintf 0050                  __psmallconst 0800          __size_of_serial_send 001A  
      i2serial_send@character 0001            __end_ofi2_Lcd_Port 17D6                       __pcinit 1A78  
                     __ramtop 0800               ?_Lcd_Set_Cursor 00E4                       __ptext0 12EE  
                     __ptext1 1AC8                       __ptext2 1AEA                       __ptext3 1506  
                     __ptext4 17D6                       __ptext5 1A96                       __ptext6 138C  
                     __ptext7 195E                       __ptext8 1578                       __ptext9 148E  
             __size_of_strlen 0052                  __size_of_pad 00C6                       _isdigit 19D4  
                     _isspace 187A                       atoi@neg 000E                       _sprintf 1828  
        __size_of_setup_RS232 0014        __size_ofi2_serial_send 0018        __end_of_Lcd_Write_Char 199C  
              __pintcode_body 0E5C          end_of_initialization 1A88                       fputc@fp 0003  
               __Lmediumconst 0000                       int_func 0E5C                       fputs@fp 000C  
    __end_ofi2_Lcd_Write_Char 19D4             __end_of_vfpfcnvrt 0ACA                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                   Lcd_Port@a 00E1                    ??_vfprintf 0056                       strlen@a 00E3  
                     strlen@s 00E1                     i2_Lcd_Cmd 1A58                     _TRISCbits 000F94  
             ?_Lcd_Write_Char 0001             Lcd_Write_String@a 00E5             Lcd_Write_String@i 00E9  
                   _Lcd_Clear 1ADC                 i2_serial_send 1AB0                   vfpfcnvrt@ap 0040  
                 vfpfcnvrt@fp 003C                __end_of___wmul 1A58              _Lcd_Write_String 138C  
                  ?i2_Lcd_Cmd 0001                 __pbitbssBANK0 0768                __end_of_strlen 1828  
         start_initialization 1A78               ___lodiv@divisor 0009               ___lodiv@counter 0019  
                 __end_of_pad 12EE             __size_of_Lcd_Init 0078             __size_of_Lcd_Port 0060  
           __size_ofi2_strlen 004E                     i2strlen@a 0003       serial_sendString@phrase 00E5  
                   i2strlen@s 0001                   vfprintf@fmt 0052                    ?_Lcd_Clear 0001  
              ?i2_serial_send 0001    __end_ofi2_Lcd_Write_String 148E                      ??___wmul 0005  
         i2_serial_sendString 15E6               Lcd_Write_Char@a 00E4               Lcd_Write_Char@y 00E3  
                    ??_strlen 00E3                 __pcstackBANK0 00CF                 __pcstackBANK1 0100  
           ?i2_Lcd_Set_Cursor 0004          ?i2_serial_sendString 0005            ??i2_Lcd_Set_Cursor 0005  
                    ?_Lcd_Cmd 0001   __end_of_setup_Interruptions 1AF2              ??_Lcd_Set_Cursor 00E5  
                   __pintcode 0008                      ?___lodiv 0001                      ?___lomod 0001  
    i2serial_sendString@index 000B                   ??i2_Lcd_Cmd 0002             __size_of_vfprintf 0062  
             ___lomod@divisor 0009                   __smallconst 0800                __size_of_RS232 0F96  
             ___lomod@counter 0011                      ?_isdigit 0001                      ?_isspace 0001  
       ??i2_serial_sendString 0007                      ?_sprintf 0058                __size_of_fputc 00CA  
              __size_of_fputs 0044                __size_of_putch 0002                ___wmul@product 0005  
           ?i2_Lcd_Write_Char 0001                      i2u100_40 0C5E                      i2u100_41 0C5A  
                    i2u101_40 0C78                      i2u101_41 0C74                      i2u110_40 0E36  
                    i2u102_40 0C92                      i2u110_41 0E32                      i2u102_41 0C8E  
                    i2u103_40 0CA2                      i2u103_41 0C9E               ??i2_serial_send 0001  
                    i2u104_40 0D04                      i2u120_40 0980                      i2u104_41 0D00  
                    i2u120_41 097C                      i2u105_40 0D3A                      i2u121_40 09A4  
                    i2u105_41 0D36                      i2u121_41 09A0                      i2u106_40 0D56  
                    i2u122_40 0A4A                      i2u130_40 1710                      i2u106_41 0D52  
                    i2u122_41 0A46                      i2u130_41 170C                      i2u107_40 0E0C  
                    i2u115_40 0860                      i2u123_40 178A                      i2u131_40 1AC6  
                    i2u107_41 0E06                      i2u115_41 085C                      i2u123_41 1786  
                    i2u131_41 1AC2                      i2u108_40 0E0E                      i2u116_40 08A8  
                    i2u124_40 17A0                      i2u140_40 1698                      i2u116_41 08A4  
                    i2u124_41 179C                      i2u140_41 1694                      i2u109_40 0E24  
                    i2u117_40 08EC                      i2u125_40 17B6                      i2u141_40 1448  
                    i2u109_41 0E20                      i2u117_41 08E8                      i2u125_41 17B2  
                    i2u141_47 143E                      i2u118_40 0968                      i2u126_40 17CC  
                    i2u142_40 147C                      i2u118_41 0962                      i2u126_41 17C8  
                    i2u142_47 1472                      i2u119_40 096A                      i2u143_40 148C  
                    i2u143_41 1488                      i2u144_40 1632                      i2u144_47 1628  
                    i2u145_40 1650                      i2u145_41 164C                      i2u146_40 0E94  
                    i2u146_41 0E90                      Lcd_Cmd@a 00E3                      i2u139_40 1664  
                    i2u147_40 0EA6                      i2u139_41 1660                      i2u147_41 0EA2  
                    i2u171_47 19B8                      i2u172_47 19CA                      i2u173_47 1A6A  
          ??i2_Lcd_Write_Char 0002                 ??_serial_send 00E1                   ??_Lcd_Clear 00E4  
                   _vfpfcnvrt 083C             ___wmul@multiplier 0001              ??_Lcd_Write_Char 00E2  
               ??_setup_RS232 00E1                      _Lcd_Init 148E                     _tx_string 0091  
                    _Lcd_Port 171A                      i2_strlen 18CC      __end_of_Lcd_Write_String 1410  
            __size_of_Lcd_Cmd 0026                      __Hrparam 0000                    vfprintf@ap 0054  
                    __Lrparam 0000                    vfprintf@fp 0050              __size_of___lodiv 00F0  
            __size_of___lomod 00D0                    ?_vfpfcnvrt 003C          serial_send@character 00E1  
         __end_of_serial_send 1AB0                    sprintf@fmt 005A                      _caracter 0070  
                    _atoi$710 0014                      _atoi$711 0012                      _atoi$709 0010  
            __size_of_isdigit 0038              __size_of_isspace 0052                      __ptext10 1ADC  
                    __ptext11 1A0C                      __ptext20 177A                      __ptext12 171A  
                    __ptext21 1828                      __ptext30 108E                      __ptext22 16B8  
                    __ptext14 15E6                      __ptext31 0F9E                      __ptext23 083C  
                    __ptext15 1AB0                      __ptext32 0CCC                      __ptext24 0ACA  
                    __ptext16 1410                      __ptext33 187A                      __ptext25 1228  
                    __ptext17 199C                      __ptext34 19D4                      __ptext26 18CC  
                    __ptext18 1652                      __ptext35 1A32                      __ptext27 191A  
                    __ptext19 1A58                      __ptext28 115E                      __ptext29 1AF2  
            __size_of_sprintf 0052           __end_of_setup_RS232 1ADC                 __size_of_atoi 0190  
               __size_of_main 009E                 __size_of_utoa 0202                      isa$xinst 000000  
                    int$flags 005E                   i2Lcd_Port@a 0001                      _vfprintf 16B8  
                 _isspace$727 0007            i2_Lcd_Write_String 1410                      isdigit@c 0001  
           _serial_sendString 1506            Lcd_Write_Char@temp 00E2                      intlevel2 0000  
                   sprintf@ap 00CF           ?i2_Lcd_Write_String 0005            ?_serial_sendString 00E5  
           i2Lcd_Set_Cursor@a 0005             i2Lcd_Set_Cursor@b 0004             i2Lcd_Set_Cursor@y 0007  
           i2Lcd_Set_Cursor@z 0006                      isspace@c 0001     __size_ofi2_Lcd_Set_Cursor 0066  
         ??_serial_sendString 00E7                    i2Lcd_Cmd@a 0003                   _serial_send 1A96  
        ??i2_Lcd_Write_String 0007                   ??_vfpfcnvrt 0042     i2serial_sendString@phrase 0005  
               _vfpfcnvrt$691 004E            Lcd_Set_Cursor@temp 00E8                      sprintf@f 00D1  
                    sprintf@s 0058                   _setup_RS232 1AC8     __end_of_serial_sendString 1578  
                  i2_Lcd_Port 177A  
